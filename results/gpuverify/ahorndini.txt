#################
Wed Jan 30 15:35:12 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/BinarySearch/kernel2/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/BinarySearch/kernel2/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 4
Generating VC of $binarySearch_mulkeys
Verifying $binarySearch_mulkeys: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1: positive
Prover Time taken = 0.075326
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/BinarySearch/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:01
Verifying $binarySearch_mulkeys: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool) : bool
{
  b0000 && b0001 && b0002 && b0003
}
Prover Time taken = 0.100934
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/BinarySearch/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $binarySearch_mulkeys: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool) : bool
{
  b0001 && b0003
}
Prover Time taken = 0.086972
Prover time = 0.26
Number of prover queries = 3
Learner time = 1.00
Number of learner queries = 2
Total time: 0.30
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.79user 0.08system 0:01.31elapsed 66%CPU (0avgtext+0avgdata 53808maxresident)k
0inputs+0outputs (0major+14899minor)pagefaults 0swaps
FILE:AMD_SDK/BinarySearch/kernel2/kernel.bpl.ice2.bpl
#################
Wed Jan 30 15:35:13 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/BinomialOption/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/BinomialOption/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 11
Generating VC of $binomial_options
Verifying $binomial_options: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 7.62416
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/BinomialOption/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $binomial_options: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010
}
Added: my_inv:0,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 102.266692
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/BinomialOption/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $binomial_options: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010
}
Prover Time taken = 18.024238
Added Horn clause: 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/BinomialOption/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $binomial_options: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010
}
Prover Time taken = 45.703934
Added Horn clause: 2 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/BinomialOption/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $binomial_options: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0001 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010
}
Prover Time taken = 1.024826
Prover time = 174.64
Number of prover queries = 5
Learner time = 0.00
Number of learner queries = 4
Total time: 174.73
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
1.13user 0.23system 2:55.67elapsed 0%CPU (0avgtext+0avgdata 76400maxresident)k
0inputs+0outputs (0major+27777minor)pagefaults 0swaps
FILE:AMD_SDK/BinomialOption/kernel.bpl.ice2.bpl
#################
Wed Jan 30 15:38:09 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/BinomialOptionMultiGPU/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/BinomialOptionMultiGPU/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 11
Generating VC of $binomial_options
Verifying $binomial_options: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 7.533287
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/BinomialOptionMultiGPU/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $binomial_options: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010
}
Added: my_inv:0,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 98.597706
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/BinomialOptionMultiGPU/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $binomial_options: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010
}
Prover Time taken = 18.073122
Added Horn clause: 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/BinomialOptionMultiGPU/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $binomial_options: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010
}
Prover Time taken = 46.235184
Added Horn clause: 2 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/BinomialOptionMultiGPU/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $binomial_options: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0001 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010
}
Prover Time taken = 1.051894
Prover time = 171.49
Number of prover queries = 5
Learner time = 0.00
Number of learner queries = 4
Total time: 171.57
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
1.10user 0.21system 2:52.41elapsed 0%CPU (0avgtext+0avgdata 74564maxresident)k
0inputs+0outputs (0major+29960minor)pagefaults 0swaps
FILE:AMD_SDK/BinomialOptionMultiGPU/kernel.bpl.ice2.bpl
#################
Wed Jan 30 15:41:01 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/BoxFilter/kernel7/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/BoxFilter/kernel7/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 9
Generating VC of $box_filter_horizontal_local
Verifying $box_filter_horizontal_local: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.836817
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/BoxFilter/kernel7/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $box_filter_horizontal_local: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008
}
Added: my_inv:0,1,1,1,1,1,1,1,1: positive
Prover Time taken = 2.608769
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/BoxFilter/kernel7/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $box_filter_horizontal_local: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 1.962347
Added Horn clause: 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/BoxFilter/kernel7/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $box_filter_horizontal_local: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0002 && b0004 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 13.334876
Added Horn clause: 2 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/BoxFilter/kernel7/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $box_filter_horizontal_local: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0002 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 0.879012
Prover time = 19.62
Number of prover queries = 5
Learner time = 0.00
Number of learner queries = 4
Total time: 19.69
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
0.70user 0.09system 0:20.30elapsed 3%CPU (0avgtext+0avgdata 57252maxresident)k
0inputs+0outputs (0major+17598minor)pagefaults 0swaps
FILE:AMD_SDK/BoxFilter/kernel7/kernel.bpl.ice2.bpl
#################
Wed Jan 30 15:41:22 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/BoxFilterGL/kernel7/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/BoxFilterGL/kernel7/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 9
Generating VC of $box_filter_horizontal_local
Verifying $box_filter_horizontal_local: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.846631
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/BoxFilterGL/kernel7/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $box_filter_horizontal_local: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008
}
Added: my_inv:0,1,1,1,1,1,1,1,1: positive
Prover Time taken = 2.579509
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/BoxFilterGL/kernel7/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $box_filter_horizontal_local: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 1.954784
Added Horn clause: 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/BoxFilterGL/kernel7/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $box_filter_horizontal_local: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0002 && b0004 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 13.221035
Added Horn clause: 2 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/BoxFilterGL/kernel7/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $box_filter_horizontal_local: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0002 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 0.881688
Prover time = 19.48
Number of prover queries = 5
Learner time = 0.00
Number of learner queries = 4
Total time: 19.55
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
0.70user 0.11system 0:20.31elapsed 4%CPU (0avgtext+0avgdata 58776maxresident)k
0inputs+0outputs (0major+17476minor)pagefaults 0swaps
FILE:AMD_SDK/BoxFilterGL/kernel7/kernel.bpl.ice2.bpl
#################
Wed Jan 30 15:41:42 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/BufferBandwidth/kernel2/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/BufferBandwidth/kernel2/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 11
Generating VC of $write_kernel
Verifying $write_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.061324
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/BufferBandwidth/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $write_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010
}
Prover Time taken = 0.28257
Added Horn clause: 0 && 0 => 1
Added Horn clause: 0 && 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/BufferBandwidth/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $write_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0001 && b0003 && b0004 && b0006 && b0008 && b0009 && b0010
}
Prover Time taken = 0.529206
Added Horn clause: 1 && 0 => 3
Added Horn clause: 0 && 2 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/BufferBandwidth/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $write_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0003 && b0004 && b0008 && b0009 && b0010
}
Prover Time taken = 0.340278
Prover time = 1.21
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 1.27
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:4
verified

Boogie program verifier finished with 1 verified, 0 errors
1.69user 0.09system 0:01.77elapsed 100%CPU (0avgtext+0avgdata 53188maxresident)k
0inputs+0outputs (0major+18070minor)pagefaults 0swaps
FILE:AMD_SDK/BufferBandwidth/kernel2/kernel.bpl.ice2.bpl
#################
Wed Jan 30 15:41:44 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/DCT/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/DCT/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 4
Generating VC of $DCT
Verifying $DCT: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1: positive
Prover Time taken = 0.073965
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/DCT/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $DCT: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool) : bool
{
  b0000 && b0001 && b0002 && b0003
}
Prover Time taken = 0.035596
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/DCT/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $DCT: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool) : bool
{
  b0001 && b0003
}
Prover Time taken = 0.04513
Prover time = 0.15
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.19
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.60user 0.08system 0:00.76elapsed 90%CPU (0avgtext+0avgdata 52440maxresident)k
0inputs+0outputs (0major+15639minor)pagefaults 0swaps
FILE:AMD_SDK/DCT/kernel.bpl.ice2.bpl
#################
Wed Jan 30 15:41:45 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/DwtHaar1D/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/DwtHaar1D/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 23
Generating VC of $dwtHaar1D
Verifying $dwtHaar1D: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1: positive
Prover Time taken = 0.107017
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/DwtHaar1D/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $dwtHaar1D: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0016 && b0018 && b0019 && b0020 && b0021 && b0022
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1: positive
Prover Time taken = 0.414402
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/DwtHaar1D/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $dwtHaar1D: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0018 && b0019 && b0020 && b0021 && b0022
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1: positive
Prover Time taken = 0.856445
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/DwtHaar1D/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $dwtHaar1D: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0018 && b0019 && b0020 && b0021 && b0022
}
Prover Time taken = 0.345709
Added Horn clause: 0 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/DwtHaar1D/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $dwtHaar1D: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0001 && b0003 && b0004 && b0006 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0018 && b0019 && b0020 && b0021 && b0022
}
Prover Time taken = 0.369565
Added Horn clause: 4 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/DwtHaar1D/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $dwtHaar1D: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0001 && b0003 && b0004 && b0006 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0019 && b0020 && b0021 && b0022
}
Prover Time taken = 0.890517
Added Horn clause: 6 => 7
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/DwtHaar1D/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $dwtHaar1D: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0001 && b0003 && b0004 && b0006 && b0008 && b0010 && b0011 && b0012 && b0013 && b0019 && b0020 && b0021 && b0022
}
Prover Time taken = 0.959034
Prover time = 3.94
Number of prover queries = 7
Learner time = 0.00
Number of learner queries = 6
Total time: 4.03
Number of positive examples:3
Number of negative examples:0
Number of Horn clauses:3
verified

Boogie program verifier finished with 1 verified, 0 errors
0.78user 0.11system 0:04.83elapsed 18%CPU (0avgtext+0avgdata 58660maxresident)k
0inputs+0outputs (0major+17639minor)pagefaults 0swaps
FILE:AMD_SDK/DwtHaar1D/kernel.bpl.ice2.bpl
#################
Wed Jan 30 15:41:49 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/Histogram/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/Histogram/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 23
Generating VC of $histogram256
Verifying $histogram256: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.070918
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/Histogram/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $histogram256: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022
}
Prover Time taken = 0.072621
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/Histogram/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $histogram256: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022
}
Prover Time taken = 0.086972
Added Horn clause: 1 && 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/Histogram/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $histogram256: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022
}
Prover Time taken = 0.096902
Added Horn clause: 1 && 2 && 0 && 0 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/Histogram/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $histogram256: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0011 && b0012 && b0013 && b0015 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022
}
Prover Time taken = 0.203039
Added Horn clause: 1 && 2 && 0 && 3 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/Histogram/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $histogram256: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0011 && b0013 && b0015 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022
}
Prover Time taken = 0.09022
Prover time = 0.62
Number of prover queries = 6
Learner time = 0.00
Number of learner queries = 5
Total time: 0.70
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:4
verified

Boogie program verifier finished with 1 verified, 0 errors
1.23user 0.10system 0:01.31elapsed 101%CPU (0avgtext+0avgdata 54568maxresident)k
0inputs+0outputs (0major+19641minor)pagefaults 0swaps
FILE:AMD_SDK/Histogram/kernel.bpl.ice2.bpl
#################
Wed Jan 30 15:41:51 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/HistogramAtomics/kernel1/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/HistogramAtomics/kernel1/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 69
Generating VC of $histogramKernel
Verifying $histogramKernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.090308
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/HistogramAtomics/kernel1/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $histogramKernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068
}
Command exited with non-zero status 124
1.89user 0.37system 20:00.00elapsed 0%CPU (0avgtext+0avgdata 62500maxresident)k
0inputs+0outputs (0major+14156minor)pagefaults 0swaps
FILE:AMD_SDK/HistogramAtomics/kernel1/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:01:51 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/HistogramAtomics/kernel2/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/HistogramAtomics/kernel2/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 8
Generating VC of $reduceKernel
Verifying $reduceKernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.068973
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/HistogramAtomics/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $reduceKernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007
}
Prover Time taken = 0.04872
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/HistogramAtomics/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $reduceKernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0001 && b0003 && b0004 && b0005 && b0006 && b0007
}
Prover Time taken = 0.060619
Added Horn clause: 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/HistogramAtomics/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $reduceKernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0003 && b0004 && b0005 && b0006 && b0007
}
Prover Time taken = 0.078052
Added Horn clause: 1 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/HistogramAtomics/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $reduceKernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0003 && b0004 && b0006
}
Prover Time taken = 0.037456
Added Horn clause: 1 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/HistogramAtomics/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $reduceKernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0003 && b0006
}
Prover Time taken = 0.039631
Prover time = 0.33
Number of prover queries = 6
Learner time = 0.00
Number of learner queries = 5
Total time: 0.40
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:4
verified

Boogie program verifier finished with 1 verified, 0 errors
0.85user 0.12system 0:01.29elapsed 75%CPU (0avgtext+0avgdata 51768maxresident)k
0inputs+0outputs (0major+17166minor)pagefaults 0swaps
FILE:AMD_SDK/HistogramAtomics/kernel2/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:01:52 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/ImageBandwidth/kernel2/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/ImageBandwidth/kernel2/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 9
Generating VC of $write_kernel
Verifying $write_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.071968
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/ImageBandwidth/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $write_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 0.839632
Added Horn clause: 0 && 0 => 1
Added Horn clause: 0 && 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/ImageBandwidth/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $write_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0001 && b0003 && b0004 && b0006 && b0008
}
Prover Time taken = 1.139928
Added Horn clause: 1 && 2 => 3
Added Horn clause: 1 && 2 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/ImageBandwidth/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $write_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0003 && b0004 && b0008
}
Prover Time taken = 0.624397
Prover time = 2.68
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 2.73
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:4
verified

Boogie program verifier finished with 1 verified, 0 errors
3.23user 0.07system 0:03.30elapsed 100%CPU (0avgtext+0avgdata 54644maxresident)k
0inputs+0outputs (0major+18266minor)pagefaults 0swaps
FILE:AMD_SDK/ImageBandwidth/kernel2/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:01:55 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/KernelLaunch/kernel2/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/KernelLaunch/kernel2/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 16
Generating VC of $write_kernel
Verifying $write_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.061988
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/KernelLaunch/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $write_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015
}
Prover Time taken = 0.403148
Added Horn clause: 0 && 0 => 1
Added Horn clause: 0 && 0 && 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/KernelLaunch/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $write_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool) : bool
{
  b0001 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0015
}
Prover Time taken = 0.421219
Added Horn clause: 1 && 0 => 3
Added Horn clause: 1 && 0 && 2 => 4
Added Horn clause: 1 && 0 && 2 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/KernelLaunch/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $write_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool) : bool
{
  b0003 && b0004 && b0005 && b0008 && b0012 && b0013 && b0014 && b0015
}
Prover Time taken = 0.146028
Added Horn clause: 0 && 0 && 2 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/KernelLaunch/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $write_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool) : bool
{
  b0003 && b0004 && b0008 && b0012 && b0013 && b0014 && b0015
}
Prover Time taken = 0.147728
Prover time = 1.18
Number of prover queries = 5
Learner time = 0.00
Number of learner queries = 4
Total time: 1.24
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:6
verified

Boogie program verifier finished with 1 verified, 0 errors
1.67user 0.10system 0:01.77elapsed 100%CPU (0avgtext+0avgdata 54460maxresident)k
0inputs+0outputs (0major+19087minor)pagefaults 0swaps
FILE:AMD_SDK/KernelLaunch/kernel2/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:01:57 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/MatrixMultiplication/kernel2/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/MatrixMultiplication/kernel2/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 11
Generating VC of $mmmKernel_local
Verifying $mmmKernel_local: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.085534
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/MatrixMultiplication/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $mmmKernel_local: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010
}
Prover Time taken = 93.69314
Added Horn clause: 0 && 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/MatrixMultiplication/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $mmmKernel_local: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0006 && b0008 && b0009 && b0010
}
Prover Time taken = 19.633255
Added Horn clause: 0 && 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/MatrixMultiplication/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $mmmKernel_local: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0001 && b0003 && b0004 && b0006 && b0008 && b0009 && b0010
}
Prover Time taken = 4.676999
Prover time = 118.09
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 118.15
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
0.91user 0.09system 1:58.79elapsed 0%CPU (0avgtext+0avgdata 70068maxresident)k
0inputs+0outputs (0major+19884minor)pagefaults 0swaps
FILE:AMD_SDK/MatrixMultiplication/kernel2/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:03:56 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/MersenneTwister/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/MersenneTwister/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 5
Generating VC of $gaussianRand
Verifying $gaussianRand: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1: positive
Prover Time taken = 0.380713
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/MersenneTwister/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $gaussianRand: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004
}
Prover Time taken = 3.186824
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/MersenneTwister/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $gaussianRand: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool) : bool
{
  b0001 && b0003 && b0004
}
Prover Time taken = 1.019097
Prover time = 4.59
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 4.63
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.61user 0.07system 0:05.30elapsed 12%CPU (0avgtext+0avgdata 59828maxresident)k
0inputs+0outputs (0major+15226minor)pagefaults 0swaps
FILE:AMD_SDK/MersenneTwister/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:04:01 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/NBody/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/NBody/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 10
Generating VC of $nbody_sim
Verifying $nbody_sim: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.067918
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/NBody/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $nbody_sim: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009
}
Prover Time taken = 1.103144
Added Horn clause: 0 && 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/NBody/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $nbody_sim: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009
}
Prover Time taken = 1.958778
Added Horn clause: 0 && 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/NBody/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $nbody_sim: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0001 && b0003 && b0005 && b0007 && b0008 && b0009
}
Prover Time taken = 0.270091
Prover time = 3.40
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 3.45
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
3.87user 0.15system 0:04.30elapsed 93%CPU (0avgtext+0avgdata 58196maxresident)k
0inputs+0outputs (0major+25136minor)pagefaults 0swaps
FILE:AMD_SDK/NBody/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:04:06 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/PrefixSum/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/PrefixSum/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 88
Generating VC of $prefixSum
Verifying $prefixSum: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.083126
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/PrefixSum/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $prefixSum: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0025 && b0026 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 4.465669
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/PrefixSum/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $prefixSum: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0025 && b0026 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087
}
Prover Time taken = 2.594622
Added Horn clause: 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/PrefixSum/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $prefixSum: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0025 && b0026 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087
}
Prover Time taken = 1.749432
Added Horn clause: 2 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/PrefixSum/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $prefixSum: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0026 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087
}
Prover Time taken = 6.466555
Added Horn clause: 3 => 4
Added Horn clause: 2 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/PrefixSum/kernel.bpl.ice2.bpl
Total learner time was 00:00:01
Verifying $prefixSum: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0026 && b0047 && b0048 && b0049 && b0050 && b0051 && b0053 && b0064 && b0065 && b0086 && b0087
}
Prover Time taken = 4.697474
Added Horn clause: 0 => 6
Added Horn clause: 3 => 7
Added Horn clause: 3 && 8 => 9
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/PrefixSum/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $prefixSum: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0003 && b0006 && b0008 && b0009 && b0010 && b0011 && b0026 && b0048 && b0049 && b0050 && b0051 && b0064 && b0065 && b0086 && b0087
}
Prover Time taken = 2.117082
Added Horn clause: 3 => 10
Added Horn clause: 3 && 7 => 11
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/PrefixSum/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $prefixSum: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0003 && b0006 && b0008 && b0009 && b0010 && b0011 && b0026 && b0048 && b0049 && b0050 && b0051 && b0064 && b0065
}
Prover Time taken = 1.268175
Prover time = 23.44
Number of prover queries = 8
Learner time = 1.00
Number of learner queries = 7
Total time: 23.56
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:9
verified

Boogie program verifier finished with 1 verified, 0 errors
0.90user 0.16system 0:24.30elapsed 4%CPU (0avgtext+0avgdata 64668maxresident)k
0inputs+0outputs (0major+19806minor)pagefaults 0swaps
FILE:AMD_SDK/PrefixSum/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:04:30 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/QuasiRandomSequence/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/QuasiRandomSequence/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 15
Generating VC of $QuasiRandomSequence
Verifying $QuasiRandomSequence: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.066324
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/QuasiRandomSequence/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $QuasiRandomSequence: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014
}
Prover Time taken = 2.220654
Added Horn clause: 0 && 0 => 1
Added Horn clause: 0 && 0 && 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/QuasiRandomSequence/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $QuasiRandomSequence: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014
}
Prover Time taken = 1.076064
Prover time = 3.36
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 3.40
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
0.61user 0.07system 0:04.29elapsed 16%CPU (0avgtext+0avgdata 57776maxresident)k
0inputs+0outputs (0major+15614minor)pagefaults 0swaps
FILE:AMD_SDK/QuasiRandomSequence/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:04:34 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/RecursiveGaussian/kernel2/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/RecursiveGaussian/kernel2/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 30
Generating VC of $RecursiveGaussian_kernel
Verifying $RecursiveGaussian_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.076305
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/RecursiveGaussian/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $RecursiveGaussian_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029
}
Prover Time taken = 5.15875
Added Horn clause: 0 && 0 => 1
Added Horn clause: 0 && 0 => 2
Added Horn clause: 0 && 0 && 0 && 0 => 3
Added Horn clause: 0 && 0 && 0 && 0 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/RecursiveGaussian/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $RecursiveGaussian_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0012 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0028 && b0029
}
Prover Time taken = 3.311098
Added Horn clause: 0 && 0 && 0 && 3 => 5
Added Horn clause: 0 && 1 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/RecursiveGaussian/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $RecursiveGaussian_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0009 && b0010 && b0012 && b0014 && b0015 && b0016 && b0017 && b0018 && b0021 && b0022 && b0028 && b0029
}
Prover Time taken = 4.308382
Added Horn clause: 0 && 0 && 0 && 5 => 7
Added Horn clause: 0 && 0 && 0 && 5 => 8
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/RecursiveGaussian/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $RecursiveGaussian_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0010 && b0014 && b0015 && b0016 && b0017 && b0018 && b0021 && b0028 && b0029
}
Prover Time taken = 0.821381
Prover time = 13.68
Number of prover queries = 5
Learner time = 0.00
Number of learner queries = 4
Total time: 13.76
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:8
verified

Boogie program verifier finished with 1 verified, 0 errors
0.91user 0.14system 0:14.29elapsed 7%CPU (0avgtext+0avgdata 68872maxresident)k
0inputs+0outputs (0major+20457minor)pagefaults 0swaps
FILE:AMD_SDK/RecursiveGaussian/kernel2/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:04:48 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/Reduction/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/Reduction/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 10
Generating VC of $reduce
Verifying $reduce: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.147474
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/Reduction/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $reduce: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009
}
Prover Time taken = 3.731495
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/Reduction/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $reduce: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009
}
Prover Time taken = 3.687418
Added Horn clause: 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/Reduction/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $reduce: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0002 && b0004 && b0006 && b0007 && b0008 && b0009
}
Prover Time taken = 0.376045
Prover time = 7.94
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 8.00
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
0.72user 0.09system 0:08.84elapsed 9%CPU (0avgtext+0avgdata 58068maxresident)k
0inputs+0outputs (0major+14939minor)pagefaults 0swaps
FILE:AMD_SDK/Reduction/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:04:57 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/ScanLargeArrays/kernel2/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/ScanLargeArrays/kernel2/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 88
Generating VC of $prefixSum
Verifying $prefixSum: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.095104
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/ScanLargeArrays/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $prefixSum: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0025 && b0026 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.77267
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/ScanLargeArrays/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $prefixSum: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0025 && b0026 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087
}
Prover Time taken = 2.323475
Added Horn clause: 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/ScanLargeArrays/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $prefixSum: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0025 && b0026 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087
}
Prover Time taken = 1.357714
Added Horn clause: 0 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/ScanLargeArrays/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $prefixSum: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0025 && b0026 && b0045 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087
}
Prover Time taken = 1.572085
Added Horn clause: 2 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/ScanLargeArrays/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $prefixSum: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0026 && b0045 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087
}
Prover Time taken = 2.315763
Added Horn clause: 4 => 5
Added Horn clause: 0 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/ScanLargeArrays/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $prefixSum: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0026 && b0048 && b0049 && b0050 && b0051 && b0053 && b0064 && b0065 && b0086 && b0087
}
Prover Time taken = 3.862202
Added Horn clause: 4 => 7
Added Horn clause: 4 && 8 => 9
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/ScanLargeArrays/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $prefixSum: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0003 && b0006 && b0008 && b0009 && b0010 && b0011 && b0026 && b0048 && b0049 && b0050 && b0051 && b0064 && b0065 && b0086 && b0087
}
Prover Time taken = 6.130352
Added Horn clause: 10 => 11
Added Horn clause: 4 && 12 => 13
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/ScanLargeArrays/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $prefixSum: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0003 && b0006 && b0008 && b0009 && b0010 && b0011 && b0026 && b0048 && b0049 && b0050 && b0051 && b0064 && b0065 && b0086
}
Prover Time taken = 2.375669
Added Horn clause: 14 => 15
Added Horn clause: 4 && 12 => 16
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/ScanLargeArrays/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $prefixSum: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0003 && b0006 && b0008 && b0009 && b0010 && b0011 && b0026 && b0048 && b0049 && b0050 && b0051 && b0064 && b0065
}
Prover Time taken = 1.484066
Prover time = 23.29
Number of prover queries = 10
Learner time = 0.00
Number of learner queries = 9
Total time: 23.45
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:11
verified

Boogie program verifier finished with 1 verified, 0 errors
1.02user 0.23system 0:24.33elapsed 5%CPU (0avgtext+0avgdata 63860maxresident)k
0inputs+0outputs (0major+24865minor)pagefaults 0swaps
FILE:AMD_SDK/ScanLargeArrays/kernel2/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:05:22 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/ScanLargeArrays/kernel3/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/ScanLargeArrays/kernel3/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 88
Generating VC of $ScanLargeArrays
Verifying $ScanLargeArrays: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.090931
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/ScanLargeArrays/kernel3/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $ScanLargeArrays: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0029 && b0030 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 6.664702
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/ScanLargeArrays/kernel3/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $ScanLargeArrays: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0029 && b0030 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087
}
Prover Time taken = 1.943748
Added Horn clause: 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/ScanLargeArrays/kernel3/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $ScanLargeArrays: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0029 && b0030 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087
}
Prover Time taken = 3.153365
Added Horn clause: 2 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/ScanLargeArrays/kernel3/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $ScanLargeArrays: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0030 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087
}
Prover Time taken = 2.192449
Added Horn clause: 3 => 4
Added Horn clause: 2 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/ScanLargeArrays/kernel3/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $ScanLargeArrays: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0030 && b0047 && b0048 && b0049 && b0050 && b0051 && b0053 && b0068 && b0069 && b0086 && b0087
}
Prover Time taken = 8.350084
Added Horn clause: 3 => 6
Added Horn clause: 3 && 7 => 8
Added Horn clause: 2 => 9
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/ScanLargeArrays/kernel3/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $ScanLargeArrays: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0003 && b0006 && b0008 && b0009 && b0010 && b0011 && b0030 && b0048 && b0049 && b0050 && b0051 && b0068 && b0069 && b0086 && b0087
}
Prover Time taken = 5.246536
Added Horn clause: 3 && 10 => 11
Added Horn clause: 3 => 12
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/ScanLargeArrays/kernel3/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $ScanLargeArrays: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0003 && b0006 && b0008 && b0009 && b0010 && b0011 && b0030 && b0048 && b0049 && b0050 && b0051 && b0068 && b0069
}
Prover Time taken = 1.056078
Prover time = 28.70
Number of prover queries = 8
Learner time = 0.00
Number of learner queries = 7
Total time: 28.81
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:9
verified

Boogie program verifier finished with 1 verified, 0 errors
0.99user 0.12system 0:29.81elapsed 3%CPU (0avgtext+0avgdata 62956maxresident)k
0inputs+0outputs (0major+20781minor)pagefaults 0swaps
FILE:AMD_SDK/ScanLargeArrays/kernel3/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:05:51 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/TransferOverlap/kernel2/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/TransferOverlap/kernel2/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 11
Generating VC of $writeKernel
Verifying $writeKernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.077246
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/TransferOverlap/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $writeKernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010
}
Prover Time taken = 0.689754
Added Horn clause: 0 && 0 => 1
Added Horn clause: 0 && 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/TransferOverlap/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $writeKernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0001 && b0003 && b0004 && b0006 && b0008 && b0009 && b0010
}
Prover Time taken = 0.547808
Added Horn clause: 1 && 0 => 3
Added Horn clause: 1 && 2 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/TransferOverlap/kernel2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $writeKernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0003 && b0004 && b0008 && b0009 && b0010
}
Prover Time taken = 0.205253
Prover time = 1.52
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 1.58
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:4
verified

Boogie program verifier finished with 1 verified, 0 errors
2.08user 0.09system 0:02.30elapsed 94%CPU (0avgtext+0avgdata 52652maxresident)k
0inputs+0outputs (0major+18765minor)pagefaults 0swaps
FILE:AMD_SDK/TransferOverlap/kernel2/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:05:54 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/URNG/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/URNG/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 12
Generating VC of $noise_uniform
Verifying $noise_uniform: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.081123
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/URNG/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $noise_uniform: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011
}
Prover Time taken = 0.187778
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/URNG/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $noise_uniform: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  b0001 && b0002 && b0004 && b0008 && b0010 && b0011
}
Prover Time taken = 0.297014
Added Horn clause: 2 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/URNG/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $noise_uniform: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  b0001 && b0002 && b0004 && b0010 && b0011
}
Prover Time taken = 0.183009
Added Horn clause: 3 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/URNG/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $noise_uniform: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  b0001 && b0002 && b0004 && b0011
}
Prover Time taken = 0.145801
Added Horn clause: 5 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/URNG/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $noise_uniform: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  b0002 && b0011
}
Prover Time taken = 0.265011
Prover time = 1.16
Number of prover queries = 6
Learner time = 0.00
Number of learner queries = 5
Total time: 1.23
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:4
verified

Boogie program verifier finished with 1 verified, 0 errors
1.74user 0.09system 0:01.80elapsed 102%CPU (0avgtext+0avgdata 52508maxresident)k
0inputs+0outputs (0major+23250minor)pagefaults 0swaps
FILE:AMD_SDK/URNG/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:05:56 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/URNGNoiseGL/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/URNGNoiseGL/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 12
Generating VC of $noise_uniform
Verifying $noise_uniform: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.080319
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/URNGNoiseGL/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $noise_uniform: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011
}
Prover Time taken = 0.179459
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/URNGNoiseGL/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $noise_uniform: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  b0001 && b0002 && b0004 && b0007 && b0009 && b0010 && b0011
}
Prover Time taken = 0.170027
Added Horn clause: 2 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/URNGNoiseGL/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $noise_uniform: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  b0001 && b0002 && b0004 && b0010 && b0011
}
Prover Time taken = 0.130394
Added Horn clause: 4 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/URNGNoiseGL/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $noise_uniform: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  b0002 && b0010 && b0011
}
Prover Time taken = 0.300885
Added Horn clause: 4 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/AMD_SDK/URNGNoiseGL/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $noise_uniform: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  b0002 && b0011
}
Prover Time taken = 0.280954
Prover time = 1.14
Number of prover queries = 6
Learner time = 0.00
Number of learner queries = 5
Total time: 1.21
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:4
verified

Boogie program verifier finished with 1 verified, 0 errors
1.70user 0.12system 0:01.81elapsed 100%CPU (0avgtext+0avgdata 54144maxresident)k
0inputs+0outputs (0major+22449minor)pagefaults 0swaps
FILE:AMD_SDK/URNGNoiseGL/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:05:57 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/BinomialOptions/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/BinomialOptions/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 68
Generating VC of $_Z23binomial_options_kernelPKfS0_S0_S0_S0_PfS1_
Verifying $_Z23binomial_options_kernelPKfS0_S0_S0_S0_PfS1_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.073771
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/BinomialOptions/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z23binomial_options_kernelPKfS0_S0_S0_S0_PfS1_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067
}
Prover Time taken = 1.145722
Added Horn clause: 0 && 0 && 0 && 0 => 1
Added Horn clause: 0 => 2
Added Horn clause: 0 => 3
Added Horn clause: 0 && 0 && 0 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/BinomialOptions/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z23binomial_options_kernelPKfS0_S0_S0_S0_PfS1_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0022 && b0024 && b0025 && b0026 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0063 && b0064 && b0065 && b0066 && b0067
}
Prover Time taken = 3.340644
Added Horn clause: 0 && 0 && 0 && 1 => 5
Added Horn clause: 3 && 2 => 6
Added Horn clause: 0 => 7
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/BinomialOptions/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z23binomial_options_kernelPKfS0_S0_S0_S0_PfS1_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0019 && b0020 && b0022 && b0024 && b0025 && b0026 && b0028 && b0029 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0063 && b0064 && b0065 && b0066 && b0067
}
Prover Time taken = 3.539774
Added Horn clause: 0 && 0 && 0 && 5 => 8
Added Horn clause: 0 && 0 && 0 && 5 => 9
Added Horn clause: 0 && 7 => 10
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/BinomialOptions/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z23binomial_options_kernelPKfS0_S0_S0_S0_PfS1_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0013 && b0015 && b0017 && b0019 && b0020 && b0022 && b0024 && b0025 && b0026 && b0028 && b0029 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0046 && b0047 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0063 && b0065 && b0066 && b0067
}
Prover Time taken = 5.63626
Added Horn clause: 0 && 0 && 8 => 11
Added Horn clause: 0 && 0 && 12 && 5 => 13
Added Horn clause: 0 && 0 && 8 && 5 => 14
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/BinomialOptions/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z23binomial_options_kernelPKfS0_S0_S0_S0_PfS1_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0013 && b0015 && b0017 && b0020 && b0024 && b0025 && b0026 && b0028 && b0029 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0046 && b0047 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0063 && b0065 && b0066 && b0067
}
Prover Time taken = 6.255714
Added Horn clause: 0 && 11 && 8 => 15
Added Horn clause: 0 && 11 && 0 && 5 => 16
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/BinomialOptions/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z23binomial_options_kernelPKfS0_S0_S0_S0_PfS1_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0008 && b0013 && b0015 && b0017 && b0020 && b0024 && b0025 && b0026 && b0028 && b0029 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0046 && b0047 && b0049 && b0050 && b0051 && b0052 && b0053 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0063 && b0065 && b0066 && b0067
}
Prover Time taken = 5.453792
Added Horn clause: 0 && 0 && 13 => 17
Added Horn clause: 0 && 11 && 8 && 14 => 18
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/BinomialOptions/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z23binomial_options_kernelPKfS0_S0_S0_S0_PfS1_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0008 && b0013 && b0015 && b0017 && b0020 && b0024 && b0025 && b0028 && b0029 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0046 && b0047 && b0049 && b0051 && b0052 && b0053 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0063 && b0065 && b0066 && b0067
}
Prover Time taken = 5.065411
Added Horn clause: 0 && 0 && 18 => 19
Added Horn clause: 0 && 11 && 8 && 5 => 20
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/BinomialOptions/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z23binomial_options_kernelPKfS0_S0_S0_S0_PfS1_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0008 && b0013 && b0015 && b0017 && b0020 && b0024 && b0025 && b0028 && b0029 && b0031 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0046 && b0047 && b0049 && b0052 && b0053 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0063 && b0065 && b0066 && b0067
}
Prover Time taken = 7.604736
Added Horn clause: 3 && 0 && 21 => 22
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/BinomialOptions/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z23binomial_options_kernelPKfS0_S0_S0_S0_PfS1_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0008 && b0013 && b0015 && b0017 && b0020 && b0024 && b0025 && b0028 && b0029 && b0031 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0046 && b0047 && b0049 && b0052 && b0053 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0063 && b0065 && b0066 && b0067
}
Prover Time taken = 6.247415
Added Horn clause: 0 && 11 && 23 => 24
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/BinomialOptions/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z23binomial_options_kernelPKfS0_S0_S0_S0_PfS1_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0008 && b0013 && b0015 && b0017 && b0020 && b0024 && b0025 && b0028 && b0029 && b0031 && b0034 && b0035 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0046 && b0047 && b0049 && b0052 && b0053 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0063 && b0065 && b0066 && b0067
}
Prover Time taken = 6.766909
Prover time = 51.13
Number of prover queries = 11
Learner time = 0.00
Number of learner queries = 10
Total time: 51.33
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:21
verified

Boogie program verifier finished with 1 verified, 0 errors
51.96user 0.25system 0:52.35elapsed 99%CPU (0avgtext+0avgdata 70548maxresident)k
0inputs+0outputs (0major+42986minor)pagefaults 0swaps
FILE:C++AMP/BinomialOptions/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:06:50 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/BitonicSort/bitonic_sort_kernel/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/BitonicSort/bitonic_sort_kernel/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 10
Generating VC of $_Z19bitonic_sort_kernelPfjj
Verifying $_Z19bitonic_sort_kernelPfjj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,0,1,1,1,1: positive
Prover Time taken = 0.067801
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/BitonicSort/bitonic_sort_kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z19bitonic_sort_kernelPfjj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0006 && b0007 && b0008 && b0009
}
Added: my_inv:1,1,1,1,0,1,1,1,1,1: positive
Prover Time taken = 0.138461
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/BitonicSort/bitonic_sort_kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z19bitonic_sort_kernelPfjj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0006 && b0007 && b0008 && b0009
}
Prover Time taken = 0.085514
Added Horn clause: 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/BitonicSort/bitonic_sort_kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z19bitonic_sort_kernelPfjj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0002 && b0006 && b0007 && b0008 && b0009
}
Prover Time taken = 0.063937
Prover time = 0.36
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 0.40
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.83user 0.10system 0:01.27elapsed 73%CPU (0avgtext+0avgdata 53552maxresident)k
0inputs+0outputs (0major+18040minor)pagefaults 0swaps
FILE:C++AMP/BitonicSort/bitonic_sort_kernel/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:06:51 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/Convolution/convolution_tiling/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/Convolution/convolution_tiling/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 10
Generating VC of $_Z18convolution_tilingPKfS0_Pf
Verifying $_Z18convolution_tilingPKfS0_Pf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.087257
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/Convolution/convolution_tiling/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18convolution_tilingPKfS0_Pf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009
}
Added: my_inv:0,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.061771
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/Convolution/convolution_tiling/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18convolution_tilingPKfS0_Pf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009
}
Prover Time taken = 0.134011
Added Horn clause: 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/Convolution/convolution_tiling/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18convolution_tilingPKfS0_Pf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009
}
Prover Time taken = 0.12405
Added Horn clause: 2 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/Convolution/convolution_tiling/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18convolution_tilingPKfS0_Pf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0002 && b0005 && b0006 && b0007 && b0008 && b0009
}
Prover Time taken = 0.119149
Prover time = 0.53
Number of prover queries = 5
Learner time = 0.00
Number of learner queries = 4
Total time: 0.59
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
1.07user 0.11system 0:01.29elapsed 90%CPU (0avgtext+0avgdata 55332maxresident)k
0inputs+0outputs (0major+18298minor)pagefaults 0swaps
FILE:C++AMP/Convolution/convolution_tiling/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:06:52 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/Histogram/histo_merge_kernel/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/Histogram/histo_merge_kernel/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 11
Generating VC of $_Z18histo_merge_kernelPjS_
Verifying $_Z18histo_merge_kernelPjS_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.08097
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/Histogram/histo_merge_kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18histo_merge_kernelPjS_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010
}
Added: my_inv:1,1,1,1,1,1,1,1,0,1,1: positive
Prover Time taken = 0.115606
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/Histogram/histo_merge_kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18histo_merge_kernelPjS_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0009 && b0010
}
Prover Time taken = 0.045085
Added Horn clause: 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/Histogram/histo_merge_kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18histo_merge_kernelPjS_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0009 && b0010
}
Prover Time taken = 0.051442
Added Horn clause: 0 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/Histogram/histo_merge_kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18histo_merge_kernelPjS_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0009 && b0010
}
Prover Time taken = 0.055131
Added Horn clause: 2 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/Histogram/histo_merge_kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18histo_merge_kernelPjS_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0009 && b0010
}
Prover Time taken = 0.063197
Added Horn clause: 2 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/Histogram/histo_merge_kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18histo_merge_kernelPjS_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0010
}
Prover Time taken = 0.031575
Prover time = 0.44
Number of prover queries = 7
Learner time = 0.00
Number of learner queries = 6
Total time: 0.53
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:4
verified

Boogie program verifier finished with 1 verified, 0 errors
1.00user 0.13system 0:01.30elapsed 87%CPU (0avgtext+0avgdata 57720maxresident)k
0inputs+0outputs (0major+19511minor)pagefaults 0swaps
FILE:C++AMP/Histogram/histo_merge_kernel/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:06:54 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/MatrixMultiplication/mxm_amp_tiled/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/MatrixMultiplication/mxm_amp_tiled/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 14
Generating VC of $_Z13mxm_amp_tiledPKfS0_Pf
Verifying $_Z13mxm_amp_tiledPKfS0_Pf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.073602
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/MatrixMultiplication/mxm_amp_tiled/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13mxm_amp_tiledPKfS0_Pf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013
}
Prover Time taken = 0.060645
Added Horn clause: 0 && 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/MatrixMultiplication/mxm_amp_tiled/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13mxm_amp_tiledPKfS0_Pf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0007 && b0009 && b0010 && b0011 && b0012 && b0013
}
Prover Time taken = 0.057447
Added Horn clause: 0 && 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/MatrixMultiplication/mxm_amp_tiled/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13mxm_amp_tiledPKfS0_Pf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0007 && b0009 && b0010 && b0011 && b0012 && b0013
}
Prover Time taken = 0.059234
Prover time = 0.25
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 0.30
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
0.79user 0.10system 0:01.30elapsed 68%CPU (0avgtext+0avgdata 51680maxresident)k
0inputs+0outputs (0major+17606minor)pagefaults 0swaps
FILE:C++AMP/MatrixMultiplication/mxm_amp_tiled/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:06:55 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/MersenneTwister/box_muller_kernel/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/MersenneTwister/box_muller_kernel/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 11
Generating VC of $_Z17box_muller_kernelPfS_i
Verifying $_Z17box_muller_kernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.069562
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/MersenneTwister/box_muller_kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17box_muller_kernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010
}
Prover Time taken = 0.099579
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/MersenneTwister/box_muller_kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17box_muller_kernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010
}
Prover Time taken = 0.088325
Added Horn clause: 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/MersenneTwister/box_muller_kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17box_muller_kernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0000 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010
}
Prover Time taken = 0.08501
Added Horn clause: 1 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/MersenneTwister/box_muller_kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17box_muller_kernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0000 && b0005 && b0007 && b0009 && b0010
}
Prover Time taken = 0.09555
Added Horn clause: 0 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/MersenneTwister/box_muller_kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17box_muller_kernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0000 && b0005 && b0010
}
Prover Time taken = 0.031604
Prover time = 0.47
Number of prover queries = 6
Learner time = 0.00
Number of learner queries = 5
Total time: 0.54
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:4
verified

Boogie program verifier finished with 1 verified, 0 errors
1.02user 0.09system 0:01.29elapsed 86%CPU (0avgtext+0avgdata 54432maxresident)k
0inputs+0outputs (0major+17106minor)pagefaults 0swaps
FILE:C++AMP/MersenneTwister/box_muller_kernel/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:06:56 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/MersenneTwister/rand_MT_kernel/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/MersenneTwister/rand_MT_kernel/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 17
Generating VC of $_Z14rand_MT_kernelPfjjjji
Verifying $_Z14rand_MT_kernelPfjjjji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.074773
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/MersenneTwister/rand_MT_kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z14rand_MT_kernelPfjjjji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016
}
Prover Time taken = 0.099308
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/MersenneTwister/rand_MT_kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z14rand_MT_kernelPfjjjji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0010 && b0012 && b0013 && b0014 && b0015 && b0016
}
Prover Time taken = 0.070404
Added Horn clause: 2 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/MersenneTwister/rand_MT_kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z14rand_MT_kernelPfjjjji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  b0000 && b0002 && b0004 && b0010 && b0012 && b0013 && b0014 && b0015 && b0016
}
Prover Time taken = 0.067421
Added Horn clause: 4 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/MersenneTwister/rand_MT_kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z14rand_MT_kernelPfjjjji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  b0000 && b0002 && b0004 && b0012 && b0013 && b0014 && b0015 && b0016
}
Prover Time taken = 0.097672
Added Horn clause: 6 => 7
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/MersenneTwister/rand_MT_kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z14rand_MT_kernelPfjjjji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  b0000 && b0002 && b0004 && b0012 && b0014 && b0015
}
Prover Time taken = 0.051911
Added Horn clause: 8 => 9
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/MersenneTwister/rand_MT_kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z14rand_MT_kernelPfjjjji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  b0000 && b0002 && b0004 && b0012 && b0015
}
Prover Time taken = 0.040357
Prover time = 0.50
Number of prover queries = 7
Learner time = 0.00
Number of learner queries = 6
Total time: 0.59
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:5
verified

Boogie program verifier finished with 1 verified, 0 errors
1.06user 0.10system 0:01.29elapsed 90%CPU (0avgtext+0avgdata 56312maxresident)k
0inputs+0outputs (0major+19061minor)pagefaults 0swaps
FILE:C++AMP/MersenneTwister/rand_MT_kernel/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:06:58 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/NBody_Simulation/tiling_implementation/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/NBody_Simulation/tiling_implementation/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 12
Generating VC of $_Z21tiling_implementationP6float4S0_S0_S0_iii
Verifying $_Z21tiling_implementationP6float4S0_S0_S0_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.070044
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/NBody_Simulation/tiling_implementation/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21tiling_implementationP6float4S0_S0_S0_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011
}
Prover Time taken = 2.346277
Added Horn clause: 0 && 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/NBody_Simulation/tiling_implementation/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21tiling_implementationP6float4S0_S0_S0_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0007 && b0009 && b0010 && b0011
}
Prover Time taken = 1.14193
Added Horn clause: 0 && 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/NBody_Simulation/tiling_implementation/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21tiling_implementationP6float4S0_S0_S0_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0011
}
Prover Time taken = 2.389117
Added Horn clause: 2 && 1 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/NBody_Simulation/tiling_implementation/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21tiling_implementationP6float4S0_S0_S0_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  b0000 && b0004 && b0005 && b0007 && b0009 && b0010 && b0011
}
Prover Time taken = 0.641314
Prover time = 6.59
Number of prover queries = 5
Learner time = 0.00
Number of learner queries = 4
Total time: 6.65
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:3
verified

Boogie program verifier finished with 1 verified, 0 errors
7.33user 0.13system 0:07.86elapsed 94%CPU (0avgtext+0avgdata 71908maxresident)k
0inputs+0outputs (0major+35161minor)pagefaults 0swaps
FILE:C++AMP/NBody_Simulation/tiling_implementation/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:07:05 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/TransitiveClosure/stage1/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/TransitiveClosure/stage1/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 8
Generating VC of $_Z32transitive_closure_stage1_kernelPji
Verifying $_Z32transitive_closure_stage1_kernelPji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.082941
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/TransitiveClosure/stage1/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z32transitive_closure_stage1_kernelPji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007
}
Prover Time taken = 0.096383
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/TransitiveClosure/stage1/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z32transitive_closure_stage1_kernelPji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0001 && b0003 && b0004 && b0005 && b0006 && b0007
}
Prover Time taken = 0.052557
Prover time = 0.23
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.27
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.77user 0.07system 0:00.79elapsed 106%CPU (0avgtext+0avgdata 55796maxresident)k
0inputs+0outputs (0major+17127minor)pagefaults 0swaps
FILE:C++AMP/TransitiveClosure/stage1/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:07:06 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/TransitiveClosure/stage2/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/TransitiveClosure/stage2/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 8
Generating VC of $_Z32transitive_closure_stage2_kernelPji
Verifying $_Z32transitive_closure_stage2_kernelPji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.10615
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/TransitiveClosure/stage2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z32transitive_closure_stage2_kernelPji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007
}
Prover Time taken = 0.186542
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/TransitiveClosure/stage2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z32transitive_closure_stage2_kernelPji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0001 && b0003 && b0004 && b0005 && b0006 && b0007
}
Prover Time taken = 0.077058
Prover time = 0.37
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.41
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.93user 0.07system 0:01.30elapsed 77%CPU (0avgtext+0avgdata 54904maxresident)k
0inputs+0outputs (0major+19663minor)pagefaults 0swaps
FILE:C++AMP/TransitiveClosure/stage2/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:07:08 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/TransitiveClosure/stage3/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/TransitiveClosure/stage3/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 8
Generating VC of $_Z32transitive_closure_stage3_kernelPji
Verifying $_Z32transitive_closure_stage3_kernelPji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.141701
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/TransitiveClosure/stage3/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z32transitive_closure_stage3_kernelPji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007
}
Prover Time taken = 0.1238
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/C++AMP/TransitiveClosure/stage3/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z32transitive_closure_stage3_kernelPji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0001 && b0003 && b0004 && b0005 && b0006 && b0007
}
Prover Time taken = 0.065647
Prover time = 0.33
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.37
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.89user 0.08system 0:01.30elapsed 74%CPU (0avgtext+0avgdata 54756maxresident)k
0inputs+0outputs (0major+19602minor)pagefaults 0swaps
FILE:C++AMP/TransitiveClosure/stage3/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:07:09 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/bitonicsort/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/bitonicsort/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 18
Generating VC of $_Z13BitonicKernelPi
Verifying $_Z13BitonicKernelPi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.067036
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/bitonicsort/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13BitonicKernelPi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017
}
Prover Time taken = 0.401795
Added Horn clause: 0 && 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/bitonicsort/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13BitonicKernelPi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0006 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017
}
Prover Time taken = 0.407971
Added Horn clause: 0 && 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/bitonicsort/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13BitonicKernelPi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool) : bool
{
  b0001 && b0003 && b0004 && b0006 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017
}
Prover Time taken = 0.058527
Prover time = 0.94
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 0.99
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
1.45user 0.10system 0:01.79elapsed 86%CPU (0avgtext+0avgdata 55756maxresident)k
0inputs+0outputs (0major+22286minor)pagefaults 0swaps
FILE:CUDA20/bitonicsort/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:07:11 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/histogram64/histogram64Kernel/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/histogram64/histogram64Kernel/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 25
Generating VC of $_Z17histogram64KernelPjS_i
Verifying $_Z17histogram64KernelPjS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.066787
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/histogram64/histogram64Kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17histogram64KernelPjS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024
}
Prover Time taken = 0.170362
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/histogram64/histogram64Kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17histogram64KernelPjS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024
}
Prover Time taken = 0.740515
Added Horn clause: 1 && 0 && 0 => 2
Added Horn clause: 1 && 0 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/histogram64/histogram64Kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17histogram64KernelPjS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0014 && b0016 && b0018 && b0020 && b0021 && b0022 && b0023 && b0024
}
Prover Time taken = 0.780094
Added Horn clause: 1 && 0 && 4 => 5
Added Horn clause: 1 && 3 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/histogram64/histogram64Kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17histogram64KernelPjS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0010 && b0011 && b0012 && b0014 && b0016 && b0020 && b0021 && b0022 && b0023 && b0024
}
Prover Time taken = 3.939445
Added Horn clause: 1 && 0 && 7 => 8
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/histogram64/histogram64Kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17histogram64KernelPjS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0010 && b0011 && b0012 && b0014 && b0016 && b0021 && b0022 && b0023 && b0024
}
Prover Time taken = 0.412085
Prover time = 6.11
Number of prover queries = 6
Learner time = 0.00
Number of learner queries = 5
Total time: 6.19
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:6
verified

Boogie program verifier finished with 1 verified, 0 errors
6.67user 0.11system 0:06.80elapsed 99%CPU (0avgtext+0avgdata 58256maxresident)k
0inputs+0outputs (0major+25556minor)pagefaults 0swaps
FILE:CUDA20/histogram64/histogram64Kernel/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:07:17 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/histogram64/mergeHistogram64Kernel/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/histogram64/mergeHistogram64Kernel/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 10
Generating VC of $_Z22mergeHistogram64KernelPjS_j
Verifying $_Z22mergeHistogram64KernelPjS_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.078746
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/histogram64/mergeHistogram64Kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z22mergeHistogram64KernelPjS_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009
}
Added: my_inv:1,1,1,1,1,1,1,0,1,1: positive
Prover Time taken = 0.094069
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/histogram64/mergeHistogram64Kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z22mergeHistogram64KernelPjS_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0008 && b0009
}
Prover Time taken = 0.047722
Added Horn clause: 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/histogram64/mergeHistogram64Kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z22mergeHistogram64KernelPjS_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0008 && b0009
}
Prover Time taken = 0.048
Added Horn clause: 0 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/histogram64/mergeHistogram64Kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z22mergeHistogram64KernelPjS_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0008 && b0009
}
Prover Time taken = 0.059536
Added Horn clause: 2 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/histogram64/mergeHistogram64Kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z22mergeHistogram64KernelPjS_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0002 && b0004 && b0008 && b0009
}
Prover Time taken = 0.065687
Added Horn clause: 2 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/histogram64/mergeHistogram64Kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z22mergeHistogram64KernelPjS_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0002 && b0004 && b0009
}
Prover Time taken = 0.024329
Prover time = 0.42
Number of prover queries = 7
Learner time = 0.00
Number of learner queries = 6
Total time: 0.50
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:4
verified

Boogie program verifier finished with 1 verified, 0 errors
0.97user 0.12system 0:01.29elapsed 85%CPU (0avgtext+0avgdata 57840maxresident)k
0inputs+0outputs (0major+19358minor)pagefaults 0swaps
FILE:CUDA20/histogram64/mergeHistogram64Kernel/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:07:19 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scan/best/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scan/best/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 90
Generating VC of $_Z14scanBestKernelPfS_i
Verifying $_Z14scanBestKernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.113519
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scan/best/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z14scanBestKernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0036 && b0037 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 2.246862
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scan/best/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z14scanBestKernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0036 && b0037 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089
}
Prover Time taken = 1.734876
Added Horn clause: 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scan/best/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z14scanBestKernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0036 && b0037 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089
}
Prover Time taken = 2.75257
Added Horn clause: 3 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scan/best/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z14scanBestKernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0037 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089
}
Prover Time taken = 3.625279
Added Horn clause: 5 => 6
Added Horn clause: 3 => 7
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scan/best/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z14scanBestKernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0037 && b0049 && b0050 && b0051 && b0052 && b0053 && b0055 && b0074 && b0075 && b0088 && b0089
}
Prover Time taken = 4.353355
Added Horn clause: 5 => 8
Added Horn clause: 5 && 9 => 10
Added Horn clause: 0 => 11
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scan/best/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z14scanBestKernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0007 && b0009 && b0010 && b0011 && b0012 && b0037 && b0050 && b0051 && b0052 && b0053 && b0074 && b0075 && b0088 && b0089
}
Prover Time taken = 6.836359
Added Horn clause: 12 => 13
Added Horn clause: 5 && 14 => 15
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scan/best/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z14scanBestKernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0007 && b0009 && b0010 && b0011 && b0012 && b0037 && b0050 && b0051 && b0052 && b0053 && b0074 && b0075
}
Prover Time taken = 2.100571
Prover time = 23.76
Number of prover queries = 8
Learner time = 0.00
Number of learner queries = 7
Total time: 23.89
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:9
verified

Boogie program verifier finished with 1 verified, 0 errors
1.00user 0.19system 0:24.82elapsed 4%CPU (0avgtext+0avgdata 67840maxresident)k
0inputs+0outputs (0major+21958minor)pagefaults 0swaps
FILE:CUDA20/scan/best/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:07:44 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scan/naive/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scan/naive/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 11
Generating VC of $_Z6kernelPfS_i
Verifying $_Z6kernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.075757
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scan/naive/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z6kernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010
}
Added: my_inv:1,1,1,1,1,1,1,1,0,1,1: positive
Prover Time taken = 0.305022
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scan/naive/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z6kernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0009 && b0010
}
Prover Time taken = 0.097114
Added Horn clause: 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scan/naive/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z6kernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0009 && b0010
}
Prover Time taken = 0.150261
Added Horn clause: 2 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scan/naive/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z6kernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0010
}
Prover Time taken = 0.053746
Prover time = 0.68
Number of prover queries = 5
Learner time = 0.00
Number of learner queries = 4
Total time: 0.74
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
1.27user 0.09system 0:01.30elapsed 104%CPU (0avgtext+0avgdata 58328maxresident)k
0inputs+0outputs (0major+20491minor)pagefaults 0swaps
FILE:CUDA20/scan/naive/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:07:45 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scan/workefficient/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scan/workefficient/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 90
Generating VC of $_Z25scan_workefficient_kernelPfS_i
Verifying $_Z25scan_workefficient_kernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.099125
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scan/workefficient/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z25scan_workefficient_kernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0036 && b0037 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 3.283897
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scan/workefficient/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z25scan_workefficient_kernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0036 && b0037 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 2.927315
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scan/workefficient/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z25scan_workefficient_kernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0036 && b0037 && b0048 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089
}
Prover Time taken = 0.952624
Added Horn clause: 0 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scan/workefficient/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z25scan_workefficient_kernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0036 && b0037 && b0048 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089
}
Prover Time taken = 0.815533
Added Horn clause: 0 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scan/workefficient/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z25scan_workefficient_kernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0036 && b0037 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089
}
Prover Time taken = 3.745506
Added Horn clause: 5 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scan/workefficient/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z25scan_workefficient_kernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0037 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089
}
Prover Time taken = 3.622459
Added Horn clause: 7 => 8
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scan/workefficient/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z25scan_workefficient_kernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0037 && b0050 && b0051 && b0052 && b0053 && b0055 && b0074 && b0075 && b0088 && b0089
}
Prover Time taken = 3.271518
Added Horn clause: 7 => 9
Added Horn clause: 7 && 8 => 10
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scan/workefficient/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z25scan_workefficient_kernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0007 && b0009 && b0010 && b0011 && b0012 && b0037 && b0050 && b0051 && b0052 && b0053 && b0074 && b0075 && b0088 && b0089
}
Prover Time taken = 2.342227
Added Horn clause: 11 => 12
Added Horn clause: 7 && 13 => 14
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scan/workefficient/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z25scan_workefficient_kernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0007 && b0009 && b0010 && b0011 && b0012 && b0037 && b0050 && b0051 && b0052 && b0053 && b0074 && b0075
}
Prover Time taken = 1.186252
Prover time = 22.25
Number of prover queries = 10
Learner time = 0.00
Number of learner queries = 9
Total time: 22.40
Number of positive examples:3
Number of negative examples:0
Number of Horn clauses:8
verified

Boogie program verifier finished with 1 verified, 0 errors
1.00user 0.23system 0:23.33elapsed 5%CPU (0avgtext+0avgdata 67608maxresident)k
0inputs+0outputs (0major+29869minor)pagefaults 0swaps
FILE:CUDA20/scan/workefficient/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:08:08 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scanlarge/inline/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scanlarge/inline/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 91
Generating VC of $_Z1kPfPKfS_iiiii
Verifying $_Z1kPfPKfS_iiiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.205262
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scanlarge/inline/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z1kPfPKfS_iiiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0035 && b0036 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 6.569089
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scanlarge/inline/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z1kPfPKfS_iiiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0035 && b0036 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 5.814217
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scanlarge/inline/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z1kPfPKfS_iiiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0035 && b0036 && b0047 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090
}
Prover Time taken = 2.57582
Added Horn clause: 0 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scanlarge/inline/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z1kPfPKfS_iiiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0035 && b0036 && b0047 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090
}
Prover Time taken = 3.515405
Added Horn clause: 4 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scanlarge/inline/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z1kPfPKfS_iiiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0036 && b0047 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090
}
Prover Time taken = 3.54454
Added Horn clause: 6 => 7
Added Horn clause: 4 => 8
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scanlarge/inline/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z1kPfPKfS_iiiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0036 && b0051 && b0052 && b0053 && b0054 && b0056 && b0075 && b0076 && b0089 && b0090
}
Prover Time taken = 2.728841
Added Horn clause: 6 && 9 => 10
Added Horn clause: 6 => 11
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scanlarge/inline/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z1kPfPKfS_iiiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool) : bool
{
  b0000 && b0001 && b0003 && b0006 && b0008 && b0009 && b0010 && b0011 && b0036 && b0051 && b0052 && b0053 && b0054 && b0075 && b0076 && b0089 && b0090
}
Prover Time taken = 4.674227
Added Horn clause: 12 => 13
Added Horn clause: 6 && 14 => 15
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scanlarge/inline/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z1kPfPKfS_iiiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool) : bool
{
  b0000 && b0001 && b0003 && b0006 && b0008 && b0009 && b0010 && b0011 && b0036 && b0051 && b0052 && b0053 && b0054 && b0075 && b0076 && b0089
}
Prover Time taken = 5.331011
Added Horn clause: 16 => 17
Added Horn clause: 6 && 14 => 18
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA20/scanlarge/inline/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z1kPfPKfS_iiiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool) : bool
{
  b0000 && b0001 && b0003 && b0006 && b0008 && b0009 && b0010 && b0011 && b0036 && b0051 && b0052 && b0053 && b0054 && b0075 && b0076
}
Prover Time taken = 3.094527
Prover time = 38.05
Number of prover queries = 10
Learner time = 0.00
Number of learner queries = 9
Total time: 38.22
Number of positive examples:3
Number of negative examples:0
Number of Horn clauses:10
verified

Boogie program verifier finished with 1 verified, 0 errors
1.18user 0.21system 0:38.83elapsed 3%CPU (0avgtext+0avgdata 68944maxresident)k
0inputs+0outputs (0major+32089minor)pagefaults 0swaps
FILE:CUDA20/scanlarge/inline/kernel.bpl.ice2.bpl
#################
Wed Jan 30 16:08:47 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/0_Simple/matrixMul/matrixMul.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/0_Simple/matrixMul/matrixMul.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 44
Generating VC of $_Z13matrixMulCUDAILi32EEvPfS0_S0_ii
Verifying $_Z13matrixMulCUDAILi32EEvPfS0_S0_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.069424
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/0_Simple/matrixMul/matrixMul.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13matrixMulCUDAILi32EEvPfS0_S0_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.495012
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/0_Simple/matrixMul/matrixMul.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13matrixMulCUDAILi32EEvPfS0_S0_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0026 && b0028 && b0029 && b0030 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.444018
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/0_Simple/matrixMul/matrixMul.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13matrixMulCUDAILi32EEvPfS0_S0_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0026 && b0028 && b0029 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.477857
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/0_Simple/matrixMul/matrixMul.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13matrixMulCUDAILi32EEvPfS0_S0_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0026 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.478724
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/0_Simple/matrixMul/matrixMul.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13matrixMulCUDAILi32EEvPfS0_S0_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.376862
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/0_Simple/matrixMul/matrixMul.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13matrixMulCUDAILi32EEvPfS0_S0_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043
}
Prover Time taken = 0.326616
Added Horn clause: 5 && 0 && 0 => 6
Added Horn clause: 7 && 0 && 0 => 8
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/0_Simple/matrixMul/matrixMul.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13matrixMulCUDAILi32EEvPfS0_S0_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0000 && b0002 && b0003 && b0004 && b0006 && b0008 && b0009 && b0010 && b0012 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043
}
Prover Time taken = 0.472809
Prover time = 3.14
Number of prover queries = 8
Learner time = 0.00
Number of learner queries = 7
Total time: 3.26
Number of positive examples:6
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
0.93user 0.16system 0:03.79elapsed 28%CPU (0avgtext+0avgdata 61536maxresident)k
0inputs+0outputs (0major+21739minor)pagefaults 0swaps
FILE:CUDA50/0_Simple/matrixMul/matrixMul.bpl.ice2.bpl
#################
Wed Jan 30 16:08:51 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/0_Simple/simpleCubemapTexture/simpleCubemapTexture.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/0_Simple/simpleCubemapTexture/simpleCubemapTexture.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 10
Generating VC of $_Z15transformKernelPfi
Verifying $_Z15transformKernelPfi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.075799
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/0_Simple/simpleCubemapTexture/simpleCubemapTexture.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15transformKernelPfi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009
}
Prover Time taken = 0.181465
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/0_Simple/simpleCubemapTexture/simpleCubemapTexture.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15transformKernelPfi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0001 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009
}
Prover Time taken = 0.17609
Added Horn clause: 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/0_Simple/simpleCubemapTexture/simpleCubemapTexture.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15transformKernelPfi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0001 && b0003 && b0004 && b0006
}
Prover Time taken = 0.268874
Prover time = 0.70
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 0.75
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
1.22user 0.10system 0:01.30elapsed 102%CPU (0avgtext+0avgdata 54572maxresident)k
0inputs+0outputs (0major+23442minor)pagefaults 0swaps
FILE:CUDA50/0_Simple/simpleCubemapTexture/simpleCubemapTexture.bpl.ice2.bpl
#################
Wed Jan 30 16:08:52 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/0_Simple/simpleMultiCopy/simpleMultiCopy.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/0_Simple/simpleMultiCopy/simpleMultiCopy.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 10
Generating VC of $_Z9incKernelPiS_ii
Verifying $_Z9incKernelPiS_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.083388
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/0_Simple/simpleMultiCopy/simpleMultiCopy.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z9incKernelPiS_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009
}
Prover Time taken = 0.046843
Added Horn clause: 0 && 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/0_Simple/simpleMultiCopy/simpleMultiCopy.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z9incKernelPiS_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009
}
Prover Time taken = 0.053579
Prover time = 0.18
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.22
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.70user 0.06system 0:00.80elapsed 95%CPU (0avgtext+0avgdata 49908maxresident)k
0inputs+0outputs (0major+14870minor)pagefaults 0swaps
FILE:CUDA50/0_Simple/simpleMultiCopy/simpleMultiCopy.bpl.ice2.bpl
#################
Wed Jan 30 16:08:53 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/0_Simple/simpleStreams/simpleStreams.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/0_Simple/simpleStreams/simpleStreams.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 7
Generating VC of $_Z10init_arrayPiS_i
Verifying $_Z10init_arrayPiS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1: positive
Prover Time taken = 0.068938
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/0_Simple/simpleStreams/simpleStreams.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z10init_arrayPiS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006
}
Prover Time taken = 0.031898
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/0_Simple/simpleStreams/simpleStreams.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z10init_arrayPiS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006
}
Prover Time taken = 0.025595
Prover time = 0.13
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.16
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.64user 0.06system 0:00.80elapsed 88%CPU (0avgtext+0avgdata 51076maxresident)k
0inputs+0outputs (0major+13994minor)pagefaults 0swaps
FILE:CUDA50/0_Simple/simpleStreams/simpleStreams.bpl.ice2.bpl
#################
Wed Jan 30 16:08:54 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/Mandelbrot/_Mandelbrot0.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/Mandelbrot/_Mandelbrot0.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 176
Generating VC of $_Z11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib
Verifying $_Z11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool) : bool
{
  false
}
Added: my_inv:1,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.079593
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/Mandelbrot/_Mandelbrot0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0007 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175
}
Added: my_inv:1,0,1,0,1,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 26.461284
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/Mandelbrot/_Mandelbrot0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool) : bool
{
  b0000 && b0009 && b0010 && b0040 && b0045 && b0061 && b0125 && b0134 && b0136 && b0137 && b0140 && b0147 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175
}
Added: my_inv:1,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 47.135187
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/Mandelbrot/_Mandelbrot0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool) : bool
{
  b0000 && b0009 && b0010 && b0040 && b0125 && b0136 && b0140 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175
}
Added: my_inv:1,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 18.720816
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/Mandelbrot/_Mandelbrot0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool) : bool
{
  b0000 && b0009 && b0010 && b0136 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175
}
Added: my_inv:1,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 26.739912
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/Mandelbrot/_Mandelbrot0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool) : bool
{
  b0000 && b0009 && b0010 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175
}
Prover Time taken = 13.885111
Added Horn clause: 5 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/Mandelbrot/_Mandelbrot0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool) : bool
{
  b0000 && b0009 && b0010 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175
}
Prover Time taken = 5.100685
Added Horn clause: 7 => 8
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/Mandelbrot/_Mandelbrot0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool) : bool
{
  b0000 && b0009 && b0010 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0169 && b0170 && b0171 && b0173 && b0174 && b0175
}
Prover Time taken = 23.147255
Added Horn clause: 9 => 10
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/Mandelbrot/_Mandelbrot0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool) : bool
{
  b0000 && b0009 && b0010 && b0160 && b0161 && b0162 && b0163 && b0165 && b0166 && b0167 && b0169 && b0170 && b0171 && b0173 && b0174 && b0175
}
Prover Time taken = 12.546064
Added Horn clause: 11 => 12
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/Mandelbrot/_Mandelbrot0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool) : bool
{
  b0000 && b0009 && b0010 && b0160 && b0162 && b0163 && b0165 && b0166 && b0167 && b0169 && b0170 && b0171 && b0173 && b0174 && b0175
}
Prover Time taken = 22.678138
Added Horn clause: 13 => 14
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/Mandelbrot/_Mandelbrot0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool) : bool
{
  b0000 && b0009 && b0010 && b0162 && b0163 && b0165 && b0166 && b0167 && b0169 && b0170 && b0171 && b0173 && b0174 && b0175
}
Prover Time taken = 0.758838
Prover time = 197.25
Number of prover queries = 11
Learner time = 0.00
Number of learner queries = 10
Total time: 197.44
Number of positive examples:5
Number of negative examples:0
Number of Horn clauses:5
verified

Boogie program verifier finished with 1 verified, 0 errors
1.73user 0.42system 3:18.52elapsed 1%CPU (0avgtext+0avgdata 77640maxresident)k
0inputs+0outputs (0major+37176minor)pagefaults 0swaps
FILE:CUDA50/2_Graphics/Mandelbrot/_Mandelbrot0.bpl.ice2.bpl
#################
Wed Jan 30 16:12:12 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/Mandelbrot/_Mandelbrot1.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/Mandelbrot/_Mandelbrot1.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 256
Generating VC of $_Z11Mandelbrot1IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib
Verifying $_Z11Mandelbrot1IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool) : bool
{
  false
}
Added: my_inv:1,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.09089
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/Mandelbrot/_Mandelbrot1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z11Mandelbrot1IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0007 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227 && b0228 && b0229 && b0230 && b0231 && b0232 && b0233 && b0234 && b0235 && b0236 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242 && b0243 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255
}
Added: my_inv:1,1,1,0,1,0,1,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Overwrote: my_inv:1,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: negative
Added: my_inv:1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: negative
Overwrote: my_inv:1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: negative
Prover Time taken = 75.363148
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/Mandelbrot/_Mandelbrot1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z11Mandelbrot1IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool) : bool
{
  b0000 && b0001 && b0002 && b0004 && b0006 && b0008 && b0009 && b0010 && b0013 && b0023 && b0028 && b0043 && b0047 && b0051 && b0074 && b0095 && b0103 && b0106 && b0121 && b0127 && b0138 && b0140 && b0145 && b0147 && b0176 && b0198 && b0211 && b0240 && b0241 && b0242 && b0243 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255
}
Added: my_inv:1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Added: my_inv:1,1,1,1,1,1,1,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,1,0,0,0,1,0,1,0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,1,0,0,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: negative
Added: my_inv:1,1,1,1,1,0,1,0,1,1,1,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,0,1,1,1,0,0,0,1,0,1,0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,0,0,1,0,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: negative
Overwrote: my_inv:1,1,1,1,1,0,1,0,1,1,1,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,0,1,1,1,0,0,0,1,0,1,0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,0,0,1,0,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: negative
Prover Time taken = 55.250094
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/Mandelbrot/_Mandelbrot1.bpl.ice2.bpl
[0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] -> 0 not consistent!
sorcar: sorcar.cpp:202: int main(int, char* const*): Assertion `sorcar::is_consistent(X, datapoints, horn_constraints)' failed.
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
Command exited with non-zero status 1
1.63user 0.28system 2:11.44elapsed 1%CPU (0avgtext+0avgdata 85228maxresident)k
0inputs+0outputs (0major+29386minor)pagefaults 0swaps
FILE:CUDA50/2_Graphics/Mandelbrot/_Mandelbrot1.bpl.ice2.bpl
#################
Wed Jan 30 16:14:24 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS0.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS0.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 190
Generating VC of $_Z13MandelbrotDS0P6uchar4iiifffffffS_iiiib
Verifying $_Z13MandelbrotDS0P6uchar4iiifffffffS_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool) : bool
{
  false
}
Added: my_inv:1,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.088804
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13MandelbrotDS0P6uchar4iiifffffffS_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0007 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189
}
Added: my_inv:1,1,1,0,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 26.203001
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13MandelbrotDS0P6uchar4iiifffffffS_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool) : bool
{
  b0000 && b0001 && b0005 && b0009 && b0010 && b0025 && b0034 && b0036 && b0042 && b0057 && b0074 && b0077 && b0091 && b0098 && b0104 && b0116 && b0140 && b0142 && b0144 && b0145 && b0155 && b0168 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189
}
Added: my_inv:1,0,1,1,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 11.70288
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13MandelbrotDS0P6uchar4iiifffffffS_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool) : bool
{
  b0000 && b0009 && b0010 && b0025 && b0034 && b0042 && b0155 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189
}
Added: my_inv:1,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 21.062312
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13MandelbrotDS0P6uchar4iiifffffffS_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool) : bool
{
  b0000 && b0009 && b0010 && b0034 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189
}
Added: my_inv:1,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 14.084343
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13MandelbrotDS0P6uchar4iiifffffffS_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool) : bool
{
  b0000 && b0009 && b0010 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189
}
Prover Time taken = 15.384059
Added Horn clause: 5 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13MandelbrotDS0P6uchar4iiifffffffS_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool) : bool
{
  b0000 && b0009 && b0010 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0187 && b0188 && b0189
}
Prover Time taken = 17.230933
Added Horn clause: 7 => 8
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13MandelbrotDS0P6uchar4iiifffffffS_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool) : bool
{
  b0000 && b0009 && b0010 && b0174 && b0175 && b0176 && b0177 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0187 && b0188 && b0189
}
Prover Time taken = 4.101782
Added Horn clause: 9 => 10
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13MandelbrotDS0P6uchar4iiifffffffS_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool) : bool
{
  b0000 && b0009 && b0010 && b0174 && b0175 && b0176 && b0177 && b0179 && b0180 && b0181 && b0183 && b0184 && b0185 && b0187 && b0188 && b0189
}
Prover Time taken = 13.627554
Added Horn clause: 11 => 12
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13MandelbrotDS0P6uchar4iiifffffffS_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool) : bool
{
  b0000 && b0009 && b0010 && b0175 && b0176 && b0177 && b0179 && b0180 && b0181 && b0183 && b0184 && b0185 && b0187 && b0188 && b0189
}
Prover Time taken = 7.818835
Added Horn clause: 13 => 14
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13MandelbrotDS0P6uchar4iiifffffffS_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool) : bool
{
  b0000 && b0009 && b0010 && b0176 && b0177 && b0179 && b0180 && b0181 && b0183 && b0184 && b0185 && b0187 && b0188 && b0189
}
Prover Time taken = 0.380585
Prover time = 131.69
Number of prover queries = 11
Learner time = 0.00
Number of learner queries = 10
Total time: 131.87
Number of positive examples:5
Number of negative examples:0
Number of Horn clauses:5
verified

Boogie program verifier finished with 1 verified, 0 errors
1.80user 0.29system 2:12.84elapsed 1%CPU (0avgtext+0avgdata 77172maxresident)k
0inputs+0outputs (0major+36928minor)pagefaults 0swaps
FILE:CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS0.bpl.ice2.bpl
#################
Wed Jan 30 16:16:37 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS1.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS1.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 270
Generating VC of $_Z13MandelbrotDS1P6uchar4iiifffffffS_iiiib
Verifying $_Z13MandelbrotDS1P6uchar4iiifffffffS_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool) : bool
{
  false
}
Added: my_inv:1,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.08999
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13MandelbrotDS1P6uchar4iiifffffffS_iiiib: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0007 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227 && b0228 && b0229 && b0230 && b0231 && b0232 && b0233 && b0234 && b0235 && b0236 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242 && b0243 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269
}
Added: my_inv:1,0,1,0,1,0,1,0,1,1,1,0,0,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,1,0,0,1,1,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,0,1,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: negative
Overwrote: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: negative
Overwrote: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: negative
Prover Time taken = 92.585845
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS1.bpl.ice2.bpl
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] -> 0 not consistent!
sorcar: sorcar.cpp:202: int main(int, char* const*): Assertion `sorcar::is_consistent(X, datapoints, horn_constraints)' failed.
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
Command exited with non-zero status 1
1.24user 0.26system 1:33.45elapsed 1%CPU (0avgtext+0avgdata 81768maxresident)k
0inputs+0outputs (0major+25514minor)pagefaults 0swaps
FILE:CUDA50/2_Graphics/Mandelbrot/_MandelbrotDS1.bpl.ice2.bpl
#################
Wed Jan 30 16:18:10 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/marchingCubes/_generateTriangles.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/marchingCubes/_generateTriangles.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 5
Generating VC of $_Z17generateTrianglesP6float4S0_PjS1_5uint3S2_S2_6float3fjj
Verifying $_Z17generateTrianglesP6float4S0_PjS1_5uint3S2_S2_6float3fjj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool) : bool
{
  false
}
Command exited with non-zero status 124
0.96user 0.20system 20:00.01elapsed 0%CPU (0avgtext+0avgdata 76412maxresident)k
0inputs+0outputs (0major+15877minor)pagefaults 0swaps
FILE:CUDA50/2_Graphics/marchingCubes/_generateTriangles.bpl.ice2.bpl
#################
Wed Jan 30 16:38:10 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/marchingCubes/_generateTriangles2.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/marchingCubes/_generateTriangles2.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 6
Generating VC of $_Z18generateTriangles2P6float4S0_PjS1_Ph5uint3S3_S3_6float3fjj
Verifying $_Z18generateTriangles2P6float4S0_PjS1_Ph5uint3S3_S3_6float3fjj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1: positive
Prover Time taken = 298.76596
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/marchingCubes/_generateTriangles2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18generateTriangles2P6float4S0_PjS1_Ph5uint3S3_S3_6float3fjj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005
}
Overwrote: my_inv:1,1,1,1,1,1: negative
Overwrote: my_inv:1,1,1,1,1,1: negative
Overwrote: my_inv:1,1,1,1,1,1: negative
Overwrote: my_inv:1,1,1,1,1,1: negative
Overwrote: my_inv:1,1,1,1,1,1: negative
Prover Time taken = 613.132721
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/2_Graphics/marchingCubes/_generateTriangles2.bpl.ice2.bpl
[0, 1, 1, 1, 1, 1, 1] -> 0 not consistent!
sorcar: sorcar.cpp:202: int main(int, char* const*): Assertion `sorcar::is_consistent(X, datapoints, horn_constraints)' failed.
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
Command exited with non-zero status 1
1.83user 0.32system 15:12.77elapsed 0%CPU (0avgtext+0avgdata 92876maxresident)k
0inputs+0outputs (0major+26473minor)pagefaults 0swaps
FILE:CUDA50/2_Graphics/marchingCubes/_generateTriangles2.bpl.ice2.bpl
#################
Wed Jan 30 16:53:23 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/boxFilter/d_boxfilter_rgba_x.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/boxFilter/d_boxfilter_rgba_x.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 13
Generating VC of $_Z18d_boxfilter_rgba_xPjiii
Verifying $_Z18d_boxfilter_rgba_xPjiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.221137
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/boxFilter/d_boxfilter_rgba_x.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18d_boxfilter_rgba_xPjiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012
}
Prover Time taken = 1.123935
Added Horn clause: 0 && 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/boxFilter/d_boxfilter_rgba_x.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18d_boxfilter_rgba_xPjiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012
}
Prover Time taken = 0.773084
Prover time = 2.12
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 2.16
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.62user 0.08system 0:03.01elapsed 23%CPU (0avgtext+0avgdata 59460maxresident)k
0inputs+0outputs (0major+15039minor)pagefaults 0swaps
FILE:CUDA50/3_Imaging/boxFilter/d_boxfilter_rgba_x.bpl.ice2.bpl
#################
Wed Jan 30 16:53:26 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/boxFilter/d_boxfilter_rgba_y.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/boxFilter/d_boxfilter_rgba_y.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 27
Generating VC of $_Z18d_boxfilter_rgba_yPjS_iii
Verifying $_Z18d_boxfilter_rgba_yPjS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.093512
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/boxFilter/d_boxfilter_rgba_y.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18d_boxfilter_rgba_yPjS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026
}
Prover Time taken = 3.319429
Added Horn clause: 0 => 1
Added Horn clause: 0 => 2
Added Horn clause: 0 && 0 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/boxFilter/d_boxfilter_rgba_y.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18d_boxfilter_rgba_yPjS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool) : bool
{
  b0000 && b0002 && b0004 && b0007 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026
}
Prover Time taken = 4.460523
Added Horn clause: 2 && 4 => 5
Added Horn clause: 2 && 4 => 6
Added Horn clause: 2 && 3 && 0 => 7
Added Horn clause: 2 => 8
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/boxFilter/d_boxfilter_rgba_y.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18d_boxfilter_rgba_yPjS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool) : bool
{
  b0000 && b0002 && b0004 && b0007 && b0012 && b0014 && b0016 && b0017 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026
}
Prover Time taken = 4.031489
Added Horn clause: 8 => 9
Added Horn clause: 2 && 4 => 10
Added Horn clause: 2 && 3 && 11 => 12
Added Horn clause: 2 => 13
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/boxFilter/d_boxfilter_rgba_y.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18d_boxfilter_rgba_yPjS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool) : bool
{
  b0000 && b0002 && b0004 && b0007 && b0012 && b0014 && b0017 && b0020 && b0021 && b0023 && b0025
}
Prover Time taken = 3.051572
Added Horn clause: 2 && 3 && 11 => 14
Added Horn clause: 2 && 15 => 16
Added Horn clause: 13 => 17
Added Horn clause: 2 && 5 => 18
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/boxFilter/d_boxfilter_rgba_y.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18d_boxfilter_rgba_yPjS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool) : bool
{
  b0000 && b0002 && b0004 && b0007 && b0012 && b0017 && b0021 && b0025
}
Prover Time taken = 0.462365
Prover time = 15.42
Number of prover queries = 6
Learner time = 0.00
Number of learner queries = 5
Total time: 15.50
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:15
verified

Boogie program verifier finished with 1 verified, 0 errors
0.85user 0.14system 0:16.32elapsed 6%CPU (0avgtext+0avgdata 74092maxresident)k
0inputs+0outputs (0major+19412minor)pagefaults 0swaps
FILE:CUDA50/3_Imaging/boxFilter/d_boxfilter_rgba_y.bpl.ice2.bpl
#################
Wed Jan 30 16:53:42 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/boxFilter/d_boxfilter_x_global.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/boxFilter/d_boxfilter_x_global.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 27
Generating VC of $_Z20d_boxfilter_x_globalPfS_iii
Verifying $_Z20d_boxfilter_x_globalPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.082201
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/boxFilter/d_boxfilter_x_global.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z20d_boxfilter_x_globalPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026
}
Prover Time taken = 0.259697
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/boxFilter/d_boxfilter_x_global.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z20d_boxfilter_x_globalPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026
}
Prover Time taken = 0.397738
Added Horn clause: 1 && 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/boxFilter/d_boxfilter_x_global.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z20d_boxfilter_x_globalPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026
}
Prover Time taken = 0.447089
Added Horn clause: 1 && 2 && 0 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/boxFilter/d_boxfilter_x_global.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z20d_boxfilter_x_globalPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0012 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026
}
Prover Time taken = 0.498409
Prover time = 1.69
Number of prover queries = 5
Learner time = 0.00
Number of learner queries = 4
Total time: 1.76
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:3
verified

Boogie program verifier finished with 1 verified, 0 errors
2.26user 0.11system 0:02.30elapsed 103%CPU (0avgtext+0avgdata 57540maxresident)k
0inputs+0outputs (0major+20472minor)pagefaults 0swaps
FILE:CUDA50/3_Imaging/boxFilter/d_boxfilter_x_global.bpl.ice2.bpl
#################
Wed Jan 30 16:53:45 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/boxFilter/d_boxfilter_x_tex.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/boxFilter/d_boxfilter_x_tex.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 9
Generating VC of $_Z17d_boxfilter_x_texPfiii
Verifying $_Z17d_boxfilter_x_texPfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.085529
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/boxFilter/d_boxfilter_x_tex.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17d_boxfilter_x_texPfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 0.173055
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/boxFilter/d_boxfilter_x_tex.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17d_boxfilter_x_texPfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 0.126425
Prover time = 0.39
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.43
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.93user 0.08system 0:01.31elapsed 77%CPU (0avgtext+0avgdata 52408maxresident)k
0inputs+0outputs (0major+17295minor)pagefaults 0swaps
FILE:CUDA50/3_Imaging/boxFilter/d_boxfilter_x_tex.bpl.ice2.bpl
#################
Wed Jan 30 16:53:46 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/boxFilter/d_boxfilter_y_global.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/boxFilter/d_boxfilter_y_global.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 27
Generating VC of $_Z20d_boxfilter_y_globalPfS_iii
Verifying $_Z20d_boxfilter_y_globalPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.080951
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/boxFilter/d_boxfilter_y_global.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z20d_boxfilter_y_globalPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026
}
Prover Time taken = 0.120919
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/boxFilter/d_boxfilter_y_global.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z20d_boxfilter_y_globalPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026
}
Prover Time taken = 0.354441
Added Horn clause: 1 && 0 => 2
Added Horn clause: 1 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/boxFilter/d_boxfilter_y_global.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z20d_boxfilter_y_globalPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0017 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026
}
Prover Time taken = 0.294437
Added Horn clause: 1 && 2 && 0 => 4
Added Horn clause: 1 && 2 => 5
Added Horn clause: 3 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/boxFilter/d_boxfilter_y_global.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z20d_boxfilter_y_globalPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0012 && b0014 && b0015 && b0017 && b0019 && b0021 && b0023 && b0024 && b0025 && b0026
}
Prover Time taken = 0.218062
Added Horn clause: 1 && 5 => 7
Added Horn clause: 1 && 2 && 4 => 8
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/boxFilter/d_boxfilter_y_global.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z20d_boxfilter_y_globalPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0012 && b0014 && b0015 && b0017 && b0019 && b0021 && b0023 && b0025
}
Prover Time taken = 0.134091
Prover time = 1.20
Number of prover queries = 6
Learner time = 0.00
Number of learner queries = 5
Total time: 1.29
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:8
verified

Boogie program verifier finished with 1 verified, 0 errors
1.80user 0.13system 0:02.30elapsed 83%CPU (0avgtext+0avgdata 54528maxresident)k
0inputs+0outputs (0major+20952minor)pagefaults 0swaps
FILE:CUDA50/3_Imaging/boxFilter/d_boxfilter_y_global.bpl.ice2.bpl
#################
Wed Jan 30 16:53:48 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/boxFilter/d_boxfilter_y_tex.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/boxFilter/d_boxfilter_y_tex.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 9
Generating VC of $_Z17d_boxfilter_y_texPfiii
Verifying $_Z17d_boxfilter_y_texPfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.081966
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/boxFilter/d_boxfilter_y_tex.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17d_boxfilter_y_texPfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 0.172404
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/boxFilter/d_boxfilter_y_tex.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17d_boxfilter_y_texPfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 0.154054
Added Horn clause: 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/boxFilter/d_boxfilter_y_tex.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17d_boxfilter_y_texPfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007
}
Prover Time taken = 0.121269
Prover time = 0.53
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 0.58
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
1.08user 0.07system 0:01.31elapsed 88%CPU (0avgtext+0avgdata 50048maxresident)k
0inputs+0outputs (0major+16767minor)pagefaults 0swaps
FILE:CUDA50/3_Imaging/boxFilter/d_boxfilter_y_tex.bpl.ice2.bpl
#################
Wed Jan 30 16:53:49 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/convolutionSeparable/convolutionColumnsKernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/convolutionSeparable/convolutionColumnsKernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 31
Generating VC of $_Z24convolutionColumnsKernelPfS_iii
Verifying $_Z24convolutionColumnsKernelPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.077107
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/convolutionSeparable/convolutionColumnsKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z24convolutionColumnsKernelPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 0.197722
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/convolutionSeparable/convolutionColumnsKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z24convolutionColumnsKernelPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 0.354034
Added Horn clause: 1 && 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/convolutionSeparable/convolutionColumnsKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z24convolutionColumnsKernelPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 0.547503
Added Horn clause: 1 && 2 && 0 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/convolutionSeparable/convolutionColumnsKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z24convolutionColumnsKernelPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0012 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 0.724059
Added Horn clause: 1 && 2 && 3 && 0 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/convolutionSeparable/convolutionColumnsKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z24convolutionColumnsKernelPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0012 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 0.672877
Added Horn clause: 1 && 2 && 3 && 0 && 4 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/convolutionSeparable/convolutionColumnsKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z24convolutionColumnsKernelPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0012 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0022 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 0.692876
Added Horn clause: 1 && 2 && 3 && 0 && 5 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/convolutionSeparable/convolutionColumnsKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z24convolutionColumnsKernelPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0012 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0022 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 2.045432
Added Horn clause: 1 && 2 && 3 && 0 && 6 => 7
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/convolutionSeparable/convolutionColumnsKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z24convolutionColumnsKernelPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0012 && b0014 && b0015 && b0017 && b0019 && b0022 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 5.887429
Prover time = 11.20
Number of prover queries = 9
Learner time = 0.00
Number of learner queries = 8
Total time: 11.32
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:7
verified

Boogie program verifier finished with 1 verified, 0 errors
11.87user 0.15system 0:12.31elapsed 97%CPU (0avgtext+0avgdata 60340maxresident)k
0inputs+0outputs (0major+27078minor)pagefaults 0swaps
FILE:CUDA50/3_Imaging/convolutionSeparable/convolutionColumnsKernel.bpl.ice2.bpl
#################
Wed Jan 30 16:54:02 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/convolutionSeparable/convolutionRowsKernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/convolutionSeparable/convolutionRowsKernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 31
Generating VC of $_Z21convolutionRowsKernelPfS_iii
Verifying $_Z21convolutionRowsKernelPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.079367
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/convolutionSeparable/convolutionRowsKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21convolutionRowsKernelPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 0.206765
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/convolutionSeparable/convolutionRowsKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21convolutionRowsKernelPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 0.189161
Added Horn clause: 1 && 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/convolutionSeparable/convolutionRowsKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21convolutionRowsKernelPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 0.301069
Added Horn clause: 1 && 2 && 0 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/convolutionSeparable/convolutionRowsKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21convolutionRowsKernelPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0012 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 0.313681
Added Horn clause: 1 && 2 && 3 && 0 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/convolutionSeparable/convolutionRowsKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21convolutionRowsKernelPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0012 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 0.382037
Added Horn clause: 1 && 2 && 3 && 0 && 4 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/convolutionSeparable/convolutionRowsKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21convolutionRowsKernelPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0012 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0022 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 0.354977
Added Horn clause: 1 && 2 && 3 && 0 && 5 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/convolutionSeparable/convolutionRowsKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21convolutionRowsKernelPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0012 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0022 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 2.571447
Added Horn clause: 1 && 2 && 3 && 0 && 6 => 7
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/convolutionSeparable/convolutionRowsKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21convolutionRowsKernelPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0012 && b0014 && b0015 && b0017 && b0019 && b0022 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 4.97374
Prover time = 9.37
Number of prover queries = 9
Learner time = 0.00
Number of learner queries = 8
Total time: 9.49
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:7
verified

Boogie program verifier finished with 1 verified, 0 errors
10.01user 0.18system 0:10.30elapsed 98%CPU (0avgtext+0avgdata 57780maxresident)k
0inputs+0outputs (0major+30474minor)pagefaults 0swaps
FILE:CUDA50/3_Imaging/convolutionSeparable/convolutionRowsKernel.bpl.ice2.bpl
#################
Wed Jan 30 16:54:12 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dct8x8/CUDAkernel1DCT.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dct8x8/CUDAkernel1DCT.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 17
Generating VC of $_Z14CUDAkernel1DCTPfiii
Verifying $_Z14CUDAkernel1DCTPfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.080755
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dct8x8/CUDAkernel1DCT.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z14CUDAkernel1DCTPfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016
}
Prover Time taken = 0.110093
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dct8x8/CUDAkernel1DCT.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z14CUDAkernel1DCTPfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  b0000 && b0001 && b0002 && b0004 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016
}
Prover Time taken = 0.252104
Added Horn clause: 1 && 0 => 2
Added Horn clause: 1 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dct8x8/CUDAkernel1DCT.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z14CUDAkernel1DCTPfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  b0000 && b0001 && b0002 && b0004 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0016
}
Prover Time taken = 0.338005
Added Horn clause: 1 => 4
Added Horn clause: 1 && 5 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dct8x8/CUDAkernel1DCT.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z14CUDAkernel1DCTPfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  b0000 && b0001 && b0002 && b0004 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013
}
Prover Time taken = 0.270086
Added Horn clause: 1 => 7
Added Horn clause: 1 && 8 => 9
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dct8x8/CUDAkernel1DCT.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z14CUDAkernel1DCTPfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  b0000 && b0001 && b0002 && b0004 && b0006 && b0007 && b0008 && b0010 && b0012
}
Prover Time taken = 0.117741
Prover time = 1.17
Number of prover queries = 6
Learner time = 0.00
Number of learner queries = 5
Total time: 1.24
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:7
verified

Boogie program verifier finished with 1 verified, 0 errors
1.71user 0.08system 0:01.77elapsed 101%CPU (0avgtext+0avgdata 58140maxresident)k
0inputs+0outputs (0major+22328minor)pagefaults 0swaps
FILE:CUDA50/3_Imaging/dct8x8/CUDAkernel1DCT.bpl.ice2.bpl
#################
Wed Jan 30 16:54:14 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dct8x8/CUDAkernel1IDCT.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dct8x8/CUDAkernel1IDCT.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 23
Generating VC of $_Z15CUDAkernel1IDCTPfiii
Verifying $_Z15CUDAkernel1IDCTPfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.095596
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dct8x8/CUDAkernel1IDCT.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15CUDAkernel1IDCTPfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0013 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.248286
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dct8x8/CUDAkernel1IDCT.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15CUDAkernel1IDCTPfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.21756
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dct8x8/CUDAkernel1IDCT.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15CUDAkernel1IDCTPfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022
}
Prover Time taken = 0.12035
Added Horn clause: 0 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dct8x8/CUDAkernel1IDCT.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15CUDAkernel1IDCTPfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022
}
Prover Time taken = 0.317922
Added Horn clause: 4 && 5 => 6
Added Horn clause: 4 => 7
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dct8x8/CUDAkernel1IDCT.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15CUDAkernel1IDCTPfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0008 && b0010 && b0016 && b0022
}
Prover Time taken = 0.29761
Added Horn clause: 8 => 9
Added Horn clause: 8 && 10 => 11
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dct8x8/CUDAkernel1IDCT.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15CUDAkernel1IDCTPfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0008 && b0010 && b0022
}
Prover Time taken = 0.358899
Added Horn clause: 4 => 12
Added Horn clause: 3 && 13 => 14
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dct8x8/CUDAkernel1IDCT.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15CUDAkernel1IDCTPfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0008 && b0010
}
Prover Time taken = 0.186703
Prover time = 1.84
Number of prover queries = 8
Learner time = 0.00
Number of learner queries = 7
Total time: 1.93
Number of positive examples:3
Number of negative examples:0
Number of Horn clauses:7
verified

Boogie program verifier finished with 1 verified, 0 errors
2.43user 0.18system 0:02.81elapsed 92%CPU (0avgtext+0avgdata 59976maxresident)k
0inputs+0outputs (0major+24039minor)pagefaults 0swaps
FILE:CUDA50/3_Imaging/dct8x8/CUDAkernel1IDCT.bpl.ice2.bpl
#################
Wed Jan 30 16:54:17 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dct8x8/CUDAkernel2DCT.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dct8x8/CUDAkernel2DCT.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 31
Generating VC of $_Z14CUDAkernel2DCTPfS_i
Verifying $_Z14CUDAkernel2DCTPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.079399
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dct8x8/CUDAkernel2DCT.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z14CUDAkernel2DCTPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 128.508096
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dct8x8/CUDAkernel2DCT.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z14CUDAkernel2DCTPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0001 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Command exited with non-zero status 124
1.85user 0.35system 20:00.00elapsed 0%CPU (0avgtext+0avgdata 82164maxresident)k
0inputs+0outputs (0major+26554minor)pagefaults 0swaps
FILE:CUDA50/3_Imaging/dct8x8/CUDAkernel2DCT.bpl.ice2.bpl
#################
Wed Jan 30 17:14:17 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dct8x8/CUDAkernel2IDCT.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dct8x8/CUDAkernel2IDCT.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 31
Generating VC of $_Z15CUDAkernel2IDCTPfS_i
Verifying $_Z15CUDAkernel2IDCTPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.080162
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dct8x8/CUDAkernel2IDCT.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15CUDAkernel2IDCTPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 203.728903
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dct8x8/CUDAkernel2IDCT.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15CUDAkernel2IDCTPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0001 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Command exited with non-zero status 124
2.10user 0.42system 20:00.01elapsed 0%CPU (0avgtext+0avgdata 93016maxresident)k
0inputs+0outputs (0major+26043minor)pagefaults 0swaps
FILE:CUDA50/3_Imaging/dct8x8/CUDAkernel2IDCT.bpl.ice2.bpl
#################
Wed Jan 30 17:34:17 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dct8x8/CUDAkernelShortDCT.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dct8x8/CUDAkernelShortDCT.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 24
Generating VC of $_Z18CUDAkernelShortDCTPsi
Verifying $_Z18CUDAkernelShortDCTPsi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.078835
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dct8x8/CUDAkernelShortDCT.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18CUDAkernelShortDCTPsi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023
}
Command exited with non-zero status 124
1.66user 0.43system 20:00.01elapsed 0%CPU (0avgtext+0avgdata 83164maxresident)k
0inputs+0outputs (0major+19189minor)pagefaults 0swaps
FILE:CUDA50/3_Imaging/dct8x8/CUDAkernelShortDCT.bpl.ice2.bpl
#################
Wed Jan 30 17:54:17 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dct8x8/CUDAkernelShortIDCT.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dct8x8/CUDAkernelShortIDCT.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 24
Generating VC of $_Z19CUDAkernelShortIDCTPsi
Verifying $_Z19CUDAkernelShortIDCTPsi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.079066
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dct8x8/CUDAkernelShortIDCT.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z19CUDAkernelShortIDCTPsi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023
}
Command exited with non-zero status 124
1.73user 0.32system 20:00.01elapsed 0%CPU (0avgtext+0avgdata 82472maxresident)k
0inputs+0outputs (0major+19211minor)pagefaults 0swaps
FILE:CUDA50/3_Imaging/dct8x8/CUDAkernelShortIDCT.bpl.ice2.bpl
#################
Wed Jan 30 18:14:17 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dwtHaar1D/dwtHaar1D.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dwtHaar1D/dwtHaar1D.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 35
Generating VC of $_Z9dwtHaar1DPfS_S_jji
Verifying $_Z9dwtHaar1DPfS_S_jji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1: positive
Prover Time taken = 0.14945
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dwtHaar1D/dwtHaar1D.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z9dwtHaar1DPfS_S_jji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0020 && b0022 && b0024 && b0026 && b0028 && b0030 && b0032 && b0033 && b0034
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,0,1,0,1,0,1,1,0,1,1,1: positive
Prover Time taken = 1.770866
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dwtHaar1D/dwtHaar1D.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z9dwtHaar1DPfS_S_jji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0030 && b0032 && b0033 && b0034
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,0,0,1,1,1,1: positive
Prover Time taken = 1.391161
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dwtHaar1D/dwtHaar1D.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z9dwtHaar1DPfS_S_jji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0032 && b0033 && b0034
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1: positive
Prover Time taken = 0.962289
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dwtHaar1D/dwtHaar1D.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z9dwtHaar1DPfS_S_jji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0032 && b0033 && b0034
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1: positive
Prover Time taken = 0.948911
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dwtHaar1D/dwtHaar1D.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z9dwtHaar1DPfS_S_jji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0017 && b0032 && b0033 && b0034
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1: positive
Prover Time taken = 1.432924
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dwtHaar1D/dwtHaar1D.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z9dwtHaar1DPfS_S_jji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0032 && b0033 && b0034
}
Prover Time taken = 0.69145
Added Horn clause: 6 => 7
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dwtHaar1D/dwtHaar1D.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z9dwtHaar1DPfS_S_jji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool) : bool
{
  b0001 && b0003 && b0004 && b0006 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0032 && b0033 && b0034
}
Prover Time taken = 1.755118
Added Horn clause: 8 => 9
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dwtHaar1D/dwtHaar1D.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z9dwtHaar1DPfS_S_jji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool) : bool
{
  b0001 && b0003 && b0004 && b0006 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0032 && b0033 && b0034
}
Prover Time taken = 1.254252
Added Horn clause: 10 => 11
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dwtHaar1D/dwtHaar1D.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z9dwtHaar1DPfS_S_jji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool) : bool
{
  b0001 && b0003 && b0004 && b0006 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0032 && b0033 && b0034
}
Prover Time taken = 1.034576
Added Horn clause: 12 => 13
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/dwtHaar1D/dwtHaar1D.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z9dwtHaar1DPfS_S_jji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool) : bool
{
  b0003 && b0004 && b0006 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0032 && b0033 && b0034
}
Prover Time taken = 0.815151
Prover time = 12.21
Number of prover queries = 11
Learner time = 0.00
Number of learner queries = 10
Total time: 12.35
Number of positive examples:6
Number of negative examples:0
Number of Horn clauses:4
verified

Boogie program verifier finished with 1 verified, 0 errors
12.91user 0.23system 0:13.56elapsed 96%CPU (0avgtext+0avgdata 67376maxresident)k
0inputs+0outputs (0major+35882minor)pagefaults 0swaps
FILE:CUDA50/3_Imaging/dwtHaar1D/dwtHaar1D.bpl.ice2.bpl
#################
Wed Jan 30 18:14:30 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/histogram/histogram256.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/histogram/histogram256.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 28
Generating VC of $_Z18histogram256KernelPjS_j
Verifying $_Z18histogram256KernelPjS_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.063018
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/histogram/histogram256.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18histogram256KernelPjS_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027
}
Prover Time taken = 0.348719
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/histogram/histogram256.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18histogram256KernelPjS_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool) : bool
{
  b0001 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027
}
Prover Time taken = 2.247598
Added Horn clause: 1 => 2
Added Horn clause: 1 && 0 && 0 && 0 => 3
Added Horn clause: 1 && 0 => 4
Added Horn clause: 1 && 0 && 0 && 0 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/histogram/histogram256.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18histogram256KernelPjS_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool) : bool
{
  b0001 && b0003 && b0006 && b0008 && b0009 && b0012 && b0014 && b0015 && b0017 && b0019 && b0020 && b0021 && b0022 && b0024 && b0025 && b0026 && b0027
}
Prover Time taken = 2.399044
Added Horn clause: 1 && 4 => 6
Added Horn clause: 1 && 0 && 5 && 0 => 7
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/histogram/histogram256.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18histogram256KernelPjS_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool) : bool
{
  b0001 && b0003 && b0008 && b0009 && b0012 && b0014 && b0015 && b0017 && b0019 && b0020 && b0021 && b0022 && b0024 && b0025 && b0027
}
Prover Time taken = 3.090286
Added Horn clause: 1 && 6 => 8
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/histogram/histogram256.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18histogram256KernelPjS_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool) : bool
{
  b0001 && b0003 && b0009 && b0012 && b0014 && b0015 && b0017 && b0019 && b0020 && b0021 && b0022 && b0024 && b0025 && b0027
}
Prover Time taken = 2.122466
Prover time = 10.27
Number of prover queries = 6
Learner time = 0.00
Number of learner queries = 5
Total time: 10.35
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:8
verified

Boogie program verifier finished with 1 verified, 0 errors
0.70user 0.08system 0:11.26elapsed 7%CPU (0avgtext+0avgdata 55872maxresident)k
0inputs+0outputs (0major+17515minor)pagefaults 0swaps
FILE:CUDA50/3_Imaging/histogram/histogram256.bpl.ice2.bpl
#################
Wed Jan 30 18:14:42 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/histogram/histogram64.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/histogram/histogram64.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 18
Generating VC of $_Z17histogram64KernelPjP5uint4j
Verifying $_Z17histogram64KernelPjP5uint4j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.073092
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/histogram/histogram64.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17histogram64KernelPjP5uint4j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017
}
Prover Time taken = 91.367077
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/histogram/histogram64.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17histogram64KernelPjP5uint4j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool) : bool
{
  b0001 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017
}
Prover Time taken = 255.987957
Added Horn clause: 1 && 0 && 0 => 2
Added Horn clause: 1 && 0 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/histogram/histogram64.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17histogram64KernelPjP5uint4j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool) : bool
{
  b0001 && b0003 && b0006 && b0008 && b0009 && b0011 && b0013 && b0014 && b0015 && b0016 && b0017
}
Prover Time taken = 238.212621
Added Horn clause: 1 && 3 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/histogram/histogram64.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17histogram64KernelPjP5uint4j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool) : bool
{
  b0001 && b0003 && b0008 && b0009 && b0011 && b0013 && b0014 && b0015 && b0016 && b0017
}
Prover Time taken = 171.257405
Added Horn clause: 1 && 4 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/histogram/histogram64.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17histogram64KernelPjP5uint4j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool) : bool
{
  b0001 && b0003 && b0009 && b0011 && b0013 && b0014 && b0015 && b0016 && b0017
}
Prover Time taken = 3.052043
Prover time = 759.95
Number of prover queries = 6
Learner time = 0.00
Number of learner queries = 5
Total time: 760.04
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:5
verified

Boogie program verifier finished with 1 verified, 0 errors
1.56user 0.38system 12:40.85elapsed 0%CPU (0avgtext+0avgdata 65564maxresident)k
0inputs+0outputs (0major+27878minor)pagefaults 0swaps
FILE:CUDA50/3_Imaging/histogram/histogram64.bpl.ice2.bpl
#################
Wed Jan 30 18:27:22 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/histogram/mergeHistogram256Kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/histogram/mergeHistogram256Kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 10
Generating VC of $_Z23mergeHistogram256KernelPjS_j
Verifying $_Z23mergeHistogram256KernelPjS_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.081115
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/histogram/mergeHistogram256Kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z23mergeHistogram256KernelPjS_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009
}
Added: my_inv:1,1,1,1,1,1,1,0,1,1: positive
Prover Time taken = 0.131683
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/histogram/mergeHistogram256Kernel.bpl.ice2.bpl
Total learner time was 00:00:01
Verifying $_Z23mergeHistogram256KernelPjS_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0008 && b0009
}
Prover Time taken = 0.036868
Added Horn clause: 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/histogram/mergeHistogram256Kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z23mergeHistogram256KernelPjS_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0008 && b0009
}
Prover Time taken = 0.051493
Added Horn clause: 2 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/histogram/mergeHistogram256Kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z23mergeHistogram256KernelPjS_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0008 && b0009
}
Prover Time taken = 0.066798
Added Horn clause: 2 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/histogram/mergeHistogram256Kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z23mergeHistogram256KernelPjS_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0002 && b0004 && b0008 && b0009
}
Prover Time taken = 0.066302
Added Horn clause: 2 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/histogram/mergeHistogram256Kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z23mergeHistogram256KernelPjS_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0002 && b0004 && b0009
}
Prover Time taken = 0.02027
Prover time = 0.45
Number of prover queries = 7
Learner time = 1.00
Number of learner queries = 6
Total time: 0.54
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:4
verified

Boogie program verifier finished with 1 verified, 0 errors
1.06user 0.10system 0:01.58elapsed 73%CPU (0avgtext+0avgdata 57912maxresident)k
0inputs+0outputs (0major+19518minor)pagefaults 0swaps
FILE:CUDA50/3_Imaging/histogram/mergeHistogram256Kernel.bpl.ice2.bpl
#################
Wed Jan 30 18:27:24 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/histogram/mergeHistogram64Kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/histogram/mergeHistogram64Kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 10
Generating VC of $_Z22mergeHistogram64KernelPjS_j
Verifying $_Z22mergeHistogram64KernelPjS_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.079426
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/histogram/mergeHistogram64Kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z22mergeHistogram64KernelPjS_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009
}
Added: my_inv:1,1,1,1,1,1,1,0,1,1: positive
Prover Time taken = 0.082919
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/histogram/mergeHistogram64Kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z22mergeHistogram64KernelPjS_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0008 && b0009
}
Prover Time taken = 0.042804
Added Horn clause: 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/histogram/mergeHistogram64Kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z22mergeHistogram64KernelPjS_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0008 && b0009
}
Prover Time taken = 0.055225
Added Horn clause: 2 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/histogram/mergeHistogram64Kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z22mergeHistogram64KernelPjS_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0008 && b0009
}
Prover Time taken = 0.062684
Added Horn clause: 2 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/histogram/mergeHistogram64Kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z22mergeHistogram64KernelPjS_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0002 && b0004 && b0008 && b0009
}
Prover Time taken = 0.064535
Added Horn clause: 2 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/histogram/mergeHistogram64Kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z22mergeHistogram64KernelPjS_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0002 && b0004 && b0009
}
Prover Time taken = 0.026998
Prover time = 0.41
Number of prover queries = 7
Learner time = 0.00
Number of learner queries = 6
Total time: 0.50
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:4
verified

Boogie program verifier finished with 1 verified, 0 errors
0.97user 0.14system 0:01.30elapsed 85%CPU (0avgtext+0avgdata 53584maxresident)k
0inputs+0outputs (0major+19162minor)pagefaults 0swaps
FILE:CUDA50/3_Imaging/histogram/mergeHistogram64Kernel.bpl.ice2.bpl
#################
Wed Jan 30 18:27:25 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/imageDenoising/imageDenoising_nlm2_kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/imageDenoising/imageDenoising_nlm2_kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 8
Generating VC of $_Z4NLM2Pjiiff
Verifying $_Z4NLM2Pjiiff: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.259131
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/imageDenoising/imageDenoising_nlm2_kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z4NLM2Pjiiff: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007
}
Prover Time taken = 0.473397
Prover time = 0.73
Number of prover queries = 2
Learner time = 0.00
Number of learner queries = 1
Total time: 0.76
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:0
verified

Boogie program verifier finished with 1 verified, 0 errors
1.34user 0.08system 0:01.82elapsed 78%CPU (0avgtext+0avgdata 59080maxresident)k
0inputs+0outputs (0major+25668minor)pagefaults 0swaps
FILE:CUDA50/3_Imaging/imageDenoising/imageDenoising_nlm2_kernel.bpl.ice2.bpl
#################
Wed Jan 30 18:27:27 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/postProcessGL/postProcessGL.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/postProcessGL/postProcessGL.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 10
Generating VC of $_Z11cudaProcessPjiiiiff
Verifying $_Z11cudaProcessPjiiiiff: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  false
}
Added: my_inv:0,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 976.096627
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/postProcessGL/postProcessGL.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z11cudaProcessPjiiiiff: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009
}
Command exited with non-zero status 124
1.74user 0.32system 20:00.01elapsed 0%CPU (0avgtext+0avgdata 86948maxresident)k
0inputs+0outputs (0major+26398minor)pagefaults 0swaps
FILE:CUDA50/3_Imaging/postProcessGL/postProcessGL.bpl.ice2.bpl
#################
Wed Jan 30 18:47:27 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/recursiveGaussian/d_recursiveGaussian_rgba.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/recursiveGaussian/d_recursiveGaussian_rgba.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 28
Generating VC of $_Z24d_recursiveGaussian_rgbaPjS_iiffffffff
Verifying $_Z24d_recursiveGaussian_rgbaPjS_iiffffffff: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.167829
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/recursiveGaussian/d_recursiveGaussian_rgba.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z24d_recursiveGaussian_rgbaPjS_iiffffffff: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027
}
Prover Time taken = 238.322348
Added Horn clause: 0 && 0 => 1
Added Horn clause: 0 && 0 && 0 && 0 => 2
Added Horn clause: 0 && 0 => 3
Added Horn clause: 0 && 0 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/recursiveGaussian/d_recursiveGaussian_rgba.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z24d_recursiveGaussian_rgbaPjS_iiffffffff: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool) : bool
{
  b0000 && b0001 && b0002 && b0004 && b0006 && b0007 && b0008 && b0009 && b0014 && b0016 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0026 && b0027
}
Prover Time taken = 87.086525
Added Horn clause: 0 && 0 && 0 && 2 => 5
Added Horn clause: 0 && 0 && 0 && 2 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/recursiveGaussian/d_recursiveGaussian_rgba.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z24d_recursiveGaussian_rgbaPjS_iiffffffff: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool) : bool
{
  b0000 && b0001 && b0002 && b0004 && b0006 && b0007 && b0008 && b0009 && b0014 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0026 && b0027
}
Prover Time taken = 13.138867
Prover time = 338.72
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 338.79
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:6
verified

Boogie program verifier finished with 1 verified, 0 errors
1.64user 0.16system 5:39.65elapsed 0%CPU (0avgtext+0avgdata 83868maxresident)k
0inputs+0outputs (0major+33706minor)pagefaults 0swaps
FILE:CUDA50/3_Imaging/recursiveGaussian/d_recursiveGaussian_rgba.bpl.ice2.bpl
#################
Wed Jan 30 18:53:07 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/recursiveGaussian/d_simpleRecursive_rgba.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/recursiveGaussian/d_simpleRecursive_rgba.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 28
Generating VC of $_Z22d_simpleRecursive_rgbaPjS_iif
Verifying $_Z22d_simpleRecursive_rgbaPjS_iif: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.090668
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/recursiveGaussian/d_simpleRecursive_rgba.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z22d_simpleRecursive_rgbaPjS_iif: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027
}
Prover Time taken = 46.818843
Added Horn clause: 0 && 0 => 1
Added Horn clause: 0 && 0 => 2
Added Horn clause: 0 && 0 && 0 && 0 => 3
Added Horn clause: 0 && 0 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/recursiveGaussian/d_simpleRecursive_rgba.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z22d_simpleRecursive_rgbaPjS_iif: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool) : bool
{
  b0000 && b0001 && b0002 && b0004 && b0006 && b0007 && b0008 && b0009 && b0012 && b0014 && b0016 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0026 && b0027
}
Prover Time taken = 11.301124
Added Horn clause: 0 && 0 && 0 && 3 => 5
Added Horn clause: 0 && 0 && 4 && 3 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/recursiveGaussian/d_simpleRecursive_rgba.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z22d_simpleRecursive_rgbaPjS_iif: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool) : bool
{
  b0000 && b0001 && b0002 && b0004 && b0006 && b0007 && b0008 && b0009 && b0014 && b0016 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0026 && b0027
}
Prover Time taken = 25.639276
Added Horn clause: 0 && 0 && 0 && 7 => 8
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/recursiveGaussian/d_simpleRecursive_rgba.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z22d_simpleRecursive_rgbaPjS_iif: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool) : bool
{
  b0000 && b0001 && b0002 && b0004 && b0006 && b0007 && b0008 && b0009 && b0014 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0026 && b0027
}
Prover Time taken = 4.977544
Prover time = 88.83
Number of prover queries = 5
Learner time = 0.00
Number of learner queries = 4
Total time: 88.90
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:7
verified

Boogie program verifier finished with 1 verified, 0 errors
1.05user 0.20system 1:29.61elapsed 1%CPU (0avgtext+0avgdata 71580maxresident)k
0inputs+0outputs (0major+26016minor)pagefaults 0swaps
FILE:CUDA50/3_Imaging/recursiveGaussian/d_simpleRecursive_rgba.bpl.ice2.bpl
#################
Wed Jan 30 18:54:37 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/SobelFilter/SobelCopyImage.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/SobelFilter/SobelCopyImage.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 11
Generating VC of $_Z14SobelCopyImagePhjiif
Verifying $_Z14SobelCopyImagePhjiif: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.06173
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/SobelFilter/SobelCopyImage.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z14SobelCopyImagePhjiif: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010
}
Prover Time taken = 0.189098
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/SobelFilter/SobelCopyImage.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z14SobelCopyImagePhjiif: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010
}
Prover Time taken = 1.320938
Added Horn clause: 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/SobelFilter/SobelCopyImage.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z14SobelCopyImagePhjiif: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010
}
Prover Time taken = 1.925642
Prover time = 3.50
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 3.55
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
4.00user 0.08system 0:04.28elapsed 95%CPU (0avgtext+0avgdata 54084maxresident)k
0inputs+0outputs (0major+24006minor)pagefaults 0swaps
FILE:CUDA50/3_Imaging/SobelFilter/SobelCopyImage.bpl.ice2.bpl
#################
Wed Jan 30 18:54:41 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/SobelFilter/SobelShared.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/SobelFilter/SobelShared.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 23
Generating VC of $_Z11SobelSharedP6uchar4tssssf
Verifying $_Z11SobelSharedP6uchar4tssssf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.074323
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/SobelFilter/SobelShared.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z11SobelSharedP6uchar4tssssf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022
}
Prover Time taken = 22.500759
Added Horn clause: 0 => 1
Added Horn clause: 0 && 0 && 0 && 0 => 2
Added Horn clause: 0 && 0 && 0 => 3
Added Horn clause: 0 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/SobelFilter/SobelShared.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z11SobelSharedP6uchar4tssssf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0020 && b0021 && b0022
}
Prover Time taken = 10.965164
Prover time = 33.54
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 33.59
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:4
verified

Boogie program verifier finished with 1 verified, 0 errors
0.92user 0.08system 0:34.37elapsed 2%CPU (0avgtext+0avgdata 70180maxresident)k
0inputs+0outputs (0major+19379minor)pagefaults 0swaps
FILE:CUDA50/3_Imaging/SobelFilter/SobelShared.bpl.ice2.bpl
#################
Wed Jan 30 18:55:15 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/SobelFilter/SobelTex.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/SobelFilter/SobelTex.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 11
Generating VC of $_Z8SobelTexPhjiif
Verifying $_Z8SobelTexPhjiif: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.071538
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/SobelFilter/SobelTex.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z8SobelTexPhjiif: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010
}
Prover Time taken = 0.321449
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/SobelFilter/SobelTex.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z8SobelTexPhjiif: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010
}
Prover Time taken = 1.327453
Added Horn clause: 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/SobelFilter/SobelTex.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z8SobelTexPhjiif: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010
}
Prover Time taken = 1.226891
Prover time = 2.95
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 3.00
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
3.54user 0.13system 0:03.83elapsed 96%CPU (0avgtext+0avgdata 60252maxresident)k
0inputs+0outputs (0major+30071minor)pagefaults 0swaps
FILE:CUDA50/3_Imaging/SobelFilter/SobelTex.bpl.ice2.bpl
#################
Wed Jan 30 18:55:19 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/stereoDisparity/_stereoDisparity.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/stereoDisparity/_stereoDisparity.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 48
Generating VC of $_Z21stereoDisparityKernelPjS_S_iiii
Verifying $_Z21stereoDisparityKernelPjS_S_iiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.075291
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/stereoDisparity/_stereoDisparity.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21stereoDisparityKernelPjS_S_iiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047
}
Added: my_inv:0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.684786
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/stereoDisparity/_stereoDisparity.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21stereoDisparityKernelPjS_S_iiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool) : bool
{
  b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047
}
Prover Time taken = 0.708124
Added Horn clause: 0 && 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/stereoDisparity/_stereoDisparity.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21stereoDisparityKernelPjS_S_iiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool) : bool
{
  b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0011 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047
}
Prover Time taken = 1.086731
Added Horn clause: 0 && 2 && 0 => 3
Added Horn clause: 0 && 2 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/stereoDisparity/_stereoDisparity.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21stereoDisparityKernelPjS_S_iiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool) : bool
{
  b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0011 && b0013 && b0014 && b0016 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047
}
Prover Time taken = 1.840326
Added Horn clause: 0 && 2 && 3 && 0 => 5
Added Horn clause: 0 && 2 && 3 => 6
Added Horn clause: 0 && 4 => 7
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/stereoDisparity/_stereoDisparity.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21stereoDisparityKernelPjS_S_iiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool) : bool
{
  b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0011 && b0013 && b0014 && b0016 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047
}
Prover Time taken = 1.734557
Added Horn clause: 0 && 2 && 3 && 0 && 5 => 8
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/stereoDisparity/_stereoDisparity.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21stereoDisparityKernelPjS_S_iiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool) : bool
{
  b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0011 && b0013 && b0014 && b0016 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0031 && b0033 && b0034 && b0035 && b0036 && b0037 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047
}
Prover Time taken = 1.878093
Added Horn clause: 0 && 2 && 3 && 0 && 8 => 9
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/stereoDisparity/_stereoDisparity.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21stereoDisparityKernelPjS_S_iiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool) : bool
{
  b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0011 && b0013 && b0014 && b0016 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0031 && b0034 && b0035 && b0036 && b0037 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047
}
Prover Time taken = 2.327853
Added Horn clause: 0 && 2 && 3 && 0 && 9 => 10
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/stereoDisparity/_stereoDisparity.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21stereoDisparityKernelPjS_S_iiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool) : bool
{
  b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0011 && b0013 && b0014 && b0016 && b0018 && b0019 && b0021 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0031 && b0034 && b0035 && b0036 && b0037 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047
}
Prover Time taken = 2.918284
Added Horn clause: 0 && 2 && 3 && 10 => 11
Added Horn clause: 0 && 2 && 3 && 10 && 9 => 12
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/stereoDisparity/_stereoDisparity.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21stereoDisparityKernelPjS_S_iiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool) : bool
{
  b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0011 && b0013 && b0014 && b0016 && b0018 && b0019 && b0021 && b0023 && b0025 && b0026 && b0027 && b0028 && b0031 && b0034 && b0035 && b0036 && b0037 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046
}
Prover Time taken = 1.812438
Added Horn clause: 0 && 2 && 3 && 10 && 11 => 13
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/stereoDisparity/_stereoDisparity.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21stereoDisparityKernelPjS_S_iiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool) : bool
{
  b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0011 && b0013 && b0014 && b0016 && b0018 && b0019 && b0021 && b0023 && b0026 && b0028 && b0031 && b0034 && b0035 && b0036 && b0037 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046
}
Prover Time taken = 1.793136
Added Horn clause: 0 && 2 && 3 && 10 && 13 => 14
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/stereoDisparity/_stereoDisparity.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21stereoDisparityKernelPjS_S_iiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool) : bool
{
  b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0011 && b0013 && b0014 && b0016 && b0018 && b0019 && b0021 && b0023 && b0026 && b0031 && b0034 && b0035 && b0036 && b0037 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046
}
Prover Time taken = 2.032547
Added Horn clause: 0 && 2 && 3 && 10 && 14 => 15
Added Horn clause: 0 && 2 && 3 && 10 && 14 => 16
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/stereoDisparity/_stereoDisparity.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21stereoDisparityKernelPjS_S_iiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool) : bool
{
  b0002 && b0004 && b0005 && b0007 && b0009 && b0011 && b0013 && b0014 && b0016 && b0018 && b0019 && b0021 && b0023 && b0026 && b0031 && b0034 && b0035 && b0036 && b0037 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045
}
Prover Time taken = 2.440013
Added Horn clause: 17 && 2 && 3 && 10 && 14 => 18
Added Horn clause: 17 && 2 && 3 && 10 && 14 => 19
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/stereoDisparity/_stereoDisparity.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21stereoDisparityKernelPjS_S_iiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool) : bool
{
  b0002 && b0005 && b0007 && b0009 && b0011 && b0013 && b0014 && b0016 && b0018 && b0019 && b0021 && b0023 && b0026 && b0031 && b0034 && b0035 && b0036 && b0037 && b0040 && b0041 && b0042 && b0043 && b0044
}
Prover Time taken = 2.343894
Added Horn clause: 15 && 2 && 3 && 10 && 14 => 20
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/3_Imaging/stereoDisparity/_stereoDisparity.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21stereoDisparityKernelPjS_S_iiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool) : bool
{
  b0005 && b0007 && b0009 && b0011 && b0013 && b0014 && b0016 && b0018 && b0019 && b0021 && b0023 && b0026 && b0031 && b0034 && b0035 && b0036 && b0037 && b0040 && b0041 && b0042 && b0043 && b0044
}
Prover Time taken = 1.807483
Prover time = 25.48
Number of prover queries = 15
Learner time = 0.00
Number of learner queries = 14
Total time: 25.74
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:18
verified

Boogie program verifier finished with 1 verified, 0 errors
1.18user 0.25system 0:26.33elapsed 5%CPU (0avgtext+0avgdata 67092maxresident)k
0inputs+0outputs (0major+32010minor)pagefaults 0swaps
FILE:CUDA50/3_Imaging/stereoDisparity/_stereoDisparity.bpl.ice2.bpl
#################
Wed Jan 30 18:55:45 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/binomialOptions/binomialOptions.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/binomialOptions/binomialOptions.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 70
Generating VC of $_Z21binomialOptionsKernelP13__TOptionDataPfS1_
Verifying $_Z21binomialOptionsKernelP13__TOptionDataPfS1_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.075614
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/binomialOptions/binomialOptions.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21binomialOptionsKernelP13__TOptionDataPfS1_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069
}
Prover Time taken = 1.036739
Added Horn clause: 0 && 0 && 0 && 0 => 1
Added Horn clause: 0 => 2
Added Horn clause: 0 => 3
Added Horn clause: 0 && 0 && 0 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/binomialOptions/binomialOptions.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21binomialOptionsKernelP13__TOptionDataPfS1_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0022 && b0024 && b0025 && b0026 && b0027 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0065 && b0066 && b0067 && b0068 && b0069
}
Prover Time taken = 2.471104
Added Horn clause: 0 && 0 && 0 && 1 => 5
Added Horn clause: 0 && 2 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/binomialOptions/binomialOptions.bpl.ice2.bpl
Total learner time was 00:00:01
Verifying $_Z21binomialOptionsKernelP13__TOptionDataPfS1_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0019 && b0020 && b0022 && b0024 && b0025 && b0026 && b0027 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0065 && b0066 && b0067 && b0068 && b0069
}
Prover Time taken = 6.640917
Added Horn clause: 0 && 0 && 0 && 5 => 7
Added Horn clause: 3 && 0 && 0 && 5 => 8
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/binomialOptions/binomialOptions.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21binomialOptionsKernelP13__TOptionDataPfS1_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0013 && b0015 && b0017 && b0019 && b0020 && b0022 && b0024 && b0025 && b0026 && b0027 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0065 && b0067 && b0068 && b0069
}
Prover Time taken = 7.479744
Added Horn clause: 3 && 0 && 7 => 9
Added Horn clause: 0 && 0 && 7 && 5 => 10
Added Horn clause: 0 && 0 && 7 && 5 => 11
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/binomialOptions/binomialOptions.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21binomialOptionsKernelP13__TOptionDataPfS1_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0013 && b0015 && b0017 && b0020 && b0024 && b0025 && b0026 && b0027 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0065 && b0067 && b0068 && b0069
}
Prover Time taken = 6.735437
Added Horn clause: 0 && 9 && 7 => 12
Added Horn clause: 0 && 9 && 0 && 5 => 13
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/binomialOptions/binomialOptions.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21binomialOptionsKernelP13__TOptionDataPfS1_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0008 && b0013 && b0015 && b0017 && b0020 && b0024 && b0025 && b0026 && b0027 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0065 && b0067 && b0068 && b0069
}
Prover Time taken = 7.877156
Added Horn clause: 0 && 0 && 13 => 14
Added Horn clause: 0 && 0 && 7 && 5 => 15
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/binomialOptions/binomialOptions.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21binomialOptionsKernelP13__TOptionDataPfS1_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0008 && b0013 && b0015 && b0017 && b0020 && b0024 && b0025 && b0026 && b0027 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0048 && b0049 && b0050 && b0051 && b0052 && b0054 && b0055 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0065 && b0067 && b0068 && b0069
}
Prover Time taken = 7.052078
Added Horn clause: 0 && 0 && 15 => 16
Added Horn clause: 0 && 9 && 7 && 10 => 17
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/binomialOptions/binomialOptions.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21binomialOptionsKernelP13__TOptionDataPfS1_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0008 && b0013 && b0015 && b0017 && b0020 && b0024 && b0025 && b0026 && b0027 && b0030 && b0031 && b0032 && b0033 && b0034 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0048 && b0049 && b0050 && b0051 && b0054 && b0055 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0065 && b0067 && b0068 && b0069
}
Prover Time taken = 7.379408
Added Horn clause: 0 && 0 && 17 => 18
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/binomialOptions/binomialOptions.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21binomialOptionsKernelP13__TOptionDataPfS1_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0008 && b0013 && b0015 && b0017 && b0020 && b0024 && b0025 && b0026 && b0027 && b0030 && b0031 && b0032 && b0033 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0048 && b0049 && b0050 && b0051 && b0054 && b0055 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0065 && b0067 && b0068 && b0069
}
Prover Time taken = 8.489497
Added Horn clause: 0 && 9 && 11 => 19
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/binomialOptions/binomialOptions.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21binomialOptionsKernelP13__TOptionDataPfS1_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0008 && b0013 && b0015 && b0017 && b0020 && b0024 && b0025 && b0026 && b0027 && b0030 && b0031 && b0032 && b0033 && b0036 && b0037 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0048 && b0049 && b0050 && b0051 && b0054 && b0055 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0065 && b0067 && b0068 && b0069
}
Prover Time taken = 7.240152
Prover time = 62.48
Number of prover queries = 11
Learner time = 1.00
Number of learner queries = 10
Total time: 62.66
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:19
verified

Boogie program verifier finished with 1 verified, 0 errors
1.18user 0.24system 1:03.72elapsed 2%CPU (0avgtext+0avgdata 66380maxresident)k
0inputs+0outputs (0major+30440minor)pagefaults 0swaps
FILE:CUDA50/4_Finance/binomialOptions/binomialOptions.bpl.ice2.bpl
#################
Wed Jan 30 18:56:49 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/BlackScholes/BlackScholes.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/BlackScholes/BlackScholes.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 9
Generating VC of $_Z15BlackScholesGPUPfS_S_S_S_ffi
Verifying $_Z15BlackScholesGPUPfS_S_S_S_ffi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.063797
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/BlackScholes/BlackScholes.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15BlackScholesGPUPfS_S_S_S_ffi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 0.176898
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/BlackScholes/BlackScholes.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15BlackScholesGPUPfS_S_S_S_ffi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0001 && b0003 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 0.919171
Added Horn clause: 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/BlackScholes/BlackScholes.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15BlackScholesGPUPfS_S_S_S_ffi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0001 && b0003 && b0005 && b0006
}
Prover Time taken = 1.228501
Prover time = 2.39
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 2.44
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
2.91user 0.10system 0:03.31elapsed 91%CPU (0avgtext+0avgdata 53124maxresident)k
0inputs+0outputs (0major+21530minor)pagefaults 0swaps
FILE:CUDA50/4_Finance/BlackScholes/BlackScholes.bpl.ice2.bpl
#################
Wed Jan 30 18:56:52 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/MonteCarloMultiGPU/MonteCarloOneBlockPerOption.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/MonteCarloMultiGPU/MonteCarloOneBlockPerOption.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 101
Generating VC of $_Z27MonteCarloOneBlockPerOptionP13__TOptionDataP14__TOptionValueP17curandStateXORWOWi
Verifying $_Z27MonteCarloOneBlockPerOptionP13__TOptionDataP14__TOptionValueP17curandStateXORWOWi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.096845
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/MonteCarloMultiGPU/MonteCarloOneBlockPerOption.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z27MonteCarloOneBlockPerOptionP13__TOptionDataP14__TOptionValueP17curandStateXORWOWi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 305.175626
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/MonteCarloMultiGPU/MonteCarloOneBlockPerOption.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z27MonteCarloOneBlockPerOptionP13__TOptionDataP14__TOptionValueP17curandStateXORWOWi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100
}
Prover Time taken = 133.569643
Added Horn clause: 2 => 3
Added Horn clause: 0 => 4
Added Horn clause: 2 && 2 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/MonteCarloMultiGPU/MonteCarloOneBlockPerOption.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z27MonteCarloOneBlockPerOptionP13__TOptionDataP14__TOptionValueP17curandStateXORWOWi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0058 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100
}
Prover Time taken = 159.790456
Added Horn clause: 2 => 6
Added Horn clause: 2 && 7 => 8
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/MonteCarloMultiGPU/MonteCarloOneBlockPerOption.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z27MonteCarloOneBlockPerOptionP13__TOptionDataP14__TOptionValueP17curandStateXORWOWi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100
}
Prover Time taken = 343.711296
Added Horn clause: 2 => 9
Added Horn clause: 2 && 10 => 11
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/MonteCarloMultiGPU/MonteCarloOneBlockPerOption.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z27MonteCarloOneBlockPerOptionP13__TOptionDataP14__TOptionValueP17curandStateXORWOWi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100
}
Prover Time taken = 139.377252
Added Horn clause: 2 => 12
Added Horn clause: 2 && 13 => 14
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/MonteCarloMultiGPU/MonteCarloOneBlockPerOption.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z27MonteCarloOneBlockPerOptionP13__TOptionDataP14__TOptionValueP17curandStateXORWOWi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0091 && b0092 && b0093 && b0094 && b0095 && b0097 && b0098 && b0099 && b0100
}
Prover Time taken = 62.666627
Added Horn clause: 2 && 15 => 16
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/MonteCarloMultiGPU/MonteCarloOneBlockPerOption.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z27MonteCarloOneBlockPerOptionP13__TOptionDataP14__TOptionValueP17curandStateXORWOWi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0091 && b0092 && b0093 && b0094 && b0097 && b0098 && b0099 && b0100
}
Command exited with non-zero status 124
3.33user 0.81system 20:00.00elapsed 0%CPU (0avgtext+0avgdata 96412maxresident)k
0inputs+0outputs (0major+61019minor)pagefaults 0swaps
FILE:CUDA50/4_Finance/MonteCarloMultiGPU/MonteCarloOneBlockPerOption.bpl.ice2.bpl
#################
Wed Jan 30 19:16:52 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/quasirandomGenerator/inverseCNDKernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/quasirandomGenerator/inverseCNDKernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 18
Generating VC of $_Z16inverseCNDKernelPfPjj
Verifying $_Z16inverseCNDKernelPfPjj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.071817
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/quasirandomGenerator/inverseCNDKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z16inverseCNDKernelPfPjj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017
}
Prover Time taken = 0.180276
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/quasirandomGenerator/inverseCNDKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z16inverseCNDKernelPfPjj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017
}
Prover Time taken = 0.206786
Added Horn clause: 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/quasirandomGenerator/inverseCNDKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z16inverseCNDKernelPfPjj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool) : bool
{
  b0000 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017
}
Prover Time taken = 0.288167
Prover time = 0.75
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 0.81
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
1.31user 0.11system 0:02.09elapsed 68%CPU (0avgtext+0avgdata 53940maxresident)k
0inputs+0outputs (0major+20508minor)pagefaults 0swaps
FILE:CUDA50/4_Finance/quasirandomGenerator/inverseCNDKernel.bpl.ice2.bpl
#################
Wed Jan 30 19:16:54 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/quasirandomGenerator/quasirandomGeneratorKernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/quasirandomGenerator/quasirandomGeneratorKernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 12
Generating VC of $_Z26quasirandomGeneratorKernelPfjj
Verifying $_Z26quasirandomGeneratorKernelPfjj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,0,1,0,1,1: positive
Prover Time taken = 0.0706
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/quasirandomGenerator/quasirandomGeneratorKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z26quasirandomGeneratorKernelPfjj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011
}
Added: my_inv:1,1,1,1,1,1,0,1,0,1,1,1: positive
Prover Time taken = 0.173975
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/quasirandomGenerator/quasirandomGeneratorKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z26quasirandomGeneratorKernelPfjj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0010 && b0011
}
Prover Time taken = 0.129479
Added Horn clause: 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/quasirandomGenerator/quasirandomGeneratorKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z26quasirandomGeneratorKernelPfjj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0010 && b0011
}
Prover Time taken = 0.234214
Prover time = 0.61
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 0.66
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
1.14user 0.08system 0:01.29elapsed 95%CPU (0avgtext+0avgdata 50256maxresident)k
0inputs+0outputs (0major+17641minor)pagefaults 0swaps
FILE:CUDA50/4_Finance/quasirandomGenerator/quasirandomGeneratorKernel.bpl.ice2.bpl
#################
Wed Jan 30 19:16:56 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/SobolQRNG/sobol.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/SobolQRNG/sobol.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 19
Generating VC of $_Z15sobolGPU_kerneljjPjPf
Verifying $_Z15sobolGPU_kerneljjPjPf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1: positive
Prover Time taken = 0.083991
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/SobolQRNG/sobol.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15sobolGPU_kerneljjPjPf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0013 && b0015 && b0016 && b0017 && b0018
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1: positive
Prover Time taken = 3.884926
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/SobolQRNG/sobol.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15sobolGPU_kerneljjPjPf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0015 && b0016 && b0017 && b0018
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1: positive
Prover Time taken = 3.704264
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/SobolQRNG/sobol.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15sobolGPU_kerneljjPjPf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0015 && b0016 && b0017 && b0018
}
Prover Time taken = 2.442072
Added Horn clause: 3 && 3 => 4
Added Horn clause: 3 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/4_Finance/SobolQRNG/sobol.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15sobolGPU_kerneljjPjPf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool) : bool
{
  b0001 && b0003 && b0005 && b0007 && b0009 && b0010 && b0015 && b0016 && b0017 && b0018
}
Prover Time taken = 3.729424
Prover time = 13.84
Number of prover queries = 5
Learner time = 0.00
Number of learner queries = 4
Total time: 13.91
Number of positive examples:3
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
14.45user 0.13system 0:14.81elapsed 98%CPU (0avgtext+0avgdata 54972maxresident)k
0inputs+0outputs (0major+30492minor)pagefaults 0swaps
FILE:CUDA50/4_Finance/SobolQRNG/sobol.bpl.ice2.bpl
#################
Wed Jan 30 19:17:11 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/5_Simulations/fluidsGL/advectParticles_k.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/5_Simulations/fluidsGL/advectParticles_k.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 21
Generating VC of $_Z17advectParticles_kP6float2S0_iifij
Verifying $_Z17advectParticles_kP6float2S0_iifij: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.068402
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/5_Simulations/fluidsGL/advectParticles_k.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17advectParticles_kP6float2S0_iifij: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020
}
Prover Time taken = 1.645126
Added Horn clause: 0 && 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/5_Simulations/fluidsGL/advectParticles_k.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17advectParticles_kP6float2S0_iifij: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020
}
Prover Time taken = 0.88698
Added Horn clause: 0 && 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/5_Simulations/fluidsGL/advectParticles_k.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17advectParticles_kP6float2S0_iifij: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0015 && b0016 && b0019 && b0020
}
Prover Time taken = 0.530107
Prover time = 3.13
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 3.19
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
0.60user 0.07system 0:03.78elapsed 17%CPU (0avgtext+0avgdata 56748maxresident)k
0inputs+0outputs (0major+14780minor)pagefaults 0swaps
FILE:CUDA50/5_Simulations/fluidsGL/advectParticles_k.bpl.ice2.bpl
#################
Wed Jan 30 19:17:14 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/5_Simulations/fluidsGL/advectVelocity_k.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/5_Simulations/fluidsGL/advectVelocity_k.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 19
Generating VC of $_Z16advectVelocity_kP6float2PfS1_iiifi
Verifying $_Z16advectVelocity_kP6float2PfS1_iiifi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.076151
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/5_Simulations/fluidsGL/advectVelocity_k.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z16advectVelocity_kP6float2PfS1_iiifi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018
}
Prover Time taken = 1.476855
Added Horn clause: 0 && 0 => 1
Added Horn clause: 0 && 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/5_Simulations/fluidsGL/advectVelocity_k.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z16advectVelocity_kP6float2PfS1_iiifi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0013 && b0014 && b0015 && b0016 && b0018
}
Prover Time taken = 10.615505
Added Horn clause: 0 && 1 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/5_Simulations/fluidsGL/advectVelocity_k.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z16advectVelocity_kP6float2PfS1_iiifi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0010 && b0011 && b0013 && b0015 && b0016 && b0018
}
Prover Time taken = 15.249589
Prover time = 27.42
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 27.48
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:3
verified

Boogie program verifier finished with 1 verified, 0 errors
0.67user 0.11system 0:28.33elapsed 2%CPU (0avgtext+0avgdata 55576maxresident)k
0inputs+0outputs (0major+13739minor)pagefaults 0swaps
FILE:CUDA50/5_Simulations/fluidsGL/advectVelocity_k.bpl.ice2.bpl
#################
Wed Jan 30 19:17:43 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/5_Simulations/fluidsGL/diffuseProject_k.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/5_Simulations/fluidsGL/diffuseProject_k.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 35
Generating VC of $_Z16diffuseProject_kP6float2S0_iiffi
Verifying $_Z16diffuseProject_kP6float2S0_iiffi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.068242
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/5_Simulations/fluidsGL/diffuseProject_k.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z16diffuseProject_kP6float2S0_iiffi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034
}
Prover Time taken = 1.464362
Added Horn clause: 0 && 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/5_Simulations/fluidsGL/diffuseProject_k.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z16diffuseProject_kP6float2S0_iiffi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034
}
Prover Time taken = 1.385596
Added Horn clause: 0 && 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/5_Simulations/fluidsGL/diffuseProject_k.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z16diffuseProject_kP6float2S0_iiffi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0029 && b0030 && b0033 && b0034
}
Prover Time taken = 1.121079
Added Horn clause: 0 && 1 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/5_Simulations/fluidsGL/diffuseProject_k.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z16diffuseProject_kP6float2S0_iiffi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0017 && b0018 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0029 && b0030 && b0033 && b0034
}
Prover Time taken = 0.754979
Prover time = 4.79
Number of prover queries = 5
Learner time = 0.00
Number of learner queries = 4
Total time: 4.87
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:3
verified

Boogie program verifier finished with 1 verified, 0 errors
0.70user 0.09system 0:05.82elapsed 13%CPU (0avgtext+0avgdata 58916maxresident)k
0inputs+0outputs (0major+15604minor)pagefaults 0swaps
FILE:CUDA50/5_Simulations/fluidsGL/diffuseProject_k.bpl.ice2.bpl
#################
Wed Jan 30 19:17:49 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/5_Simulations/fluidsGL/updateVelocity_k.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/5_Simulations/fluidsGL/updateVelocity_k.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 12
Generating VC of $_Z16updateVelocity_kP6float2PfS1_iiiij
Verifying $_Z16updateVelocity_kP6float2PfS1_iiiij: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.065397
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/5_Simulations/fluidsGL/updateVelocity_k.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z16updateVelocity_kP6float2PfS1_iiiij: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011
}
Prover Time taken = 1.041323
Added Horn clause: 0 && 0 => 1
Added Horn clause: 0 && 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/5_Simulations/fluidsGL/updateVelocity_k.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z16updateVelocity_kP6float2PfS1_iiiij: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0010 && b0011
}
Prover Time taken = 0.644142
Prover time = 1.75
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 1.79
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
2.25user 0.07system 0:02.28elapsed 101%CPU (0avgtext+0avgdata 54472maxresident)k
0inputs+0outputs (0major+20701minor)pagefaults 0swaps
FILE:CUDA50/5_Simulations/fluidsGL/updateVelocity_k.bpl.ice2.bpl
#################
Wed Jan 30 19:17:51 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/5_Simulations/nbody/nbody.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/5_Simulations/nbody/nbody.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 114
Generating VC of $_Z15integrateBodiesIfLb0EEvPN4vec4IT_E4TypeES4_S4_jjffi
Verifying $_Z15integrateBodiesIfLb0EEvPN4vec4IT_E4TypeES4_S4_jjffi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.097574
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/5_Simulations/nbody/nbody.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15integrateBodiesIfLb0EEvPN4vec4IT_E4TypeES4_S4_jjffi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,0,0,0,0,1,1,0,1,0,1,0,1,1,0,0,0,0,1,1,1,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,0,1,0,0,1,0,0,1,1,1,0,0,1,1,0,0,0,0,0,0,1,0,1,1,1,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 29.986874
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/5_Simulations/nbody/nbody.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15integrateBodiesIfLb0EEvPN4vec4IT_E4TypeES4_S4_jjffi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0023 && b0024 && b0025 && b0032 && b0033 && b0035 && b0037 && b0039 && b0040 && b0045 && b0046 && b0047 && b0052 && b0053 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0065 && b0068 && b0071 && b0072 && b0073 && b0076 && b0077 && b0084 && b0086 && b0087 && b0088 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,0,1,0,1,0,1,1,0,1,1,1,1,0,0,1,1,1,1,1,1,0,1,0,0,1,1,0,1,0,0,0,1,0,1,1,0,1,1,1,0,0,1,1,0,0,1,1,1,1,1,1,0,1,0,0,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,1,0,0,1,1,1,1,1,1,1,1: positive
Prover Time taken = 22.243592
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/5_Simulations/nbody/nbody.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15integrateBodiesIfLb0EEvPN4vec4IT_E4TypeES4_S4_jjffi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0024 && b0025 && b0039 && b0047 && b0052 && b0057 && b0058 && b0060 && b0071 && b0088 && b0090 && b0091 && b0098 && b0099 && b0100 && b0101 && b0103 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 13.758315
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/5_Simulations/nbody/nbody.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15integrateBodiesIfLb0EEvPN4vec4IT_E4TypeES4_S4_jjffi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0025 && b0058 && b0091 && b0098 && b0101 && b0103 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 14.159505
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/5_Simulations/nbody/nbody.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15integrateBodiesIfLb0EEvPN4vec4IT_E4TypeES4_S4_jjffi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0103 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 15.121023
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/5_Simulations/nbody/nbody.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15integrateBodiesIfLb0EEvPN4vec4IT_E4TypeES4_S4_jjffi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0019 && b0020 && b0103 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1: positive
Added: my_inv:0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 18.372502
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/5_Simulations/nbody/nbody.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15integrateBodiesIfLb0EEvPN4vec4IT_E4TypeES4_S4_jjffi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool) : bool
{
  b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0019 && b0020 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113
}
Prover Time taken = 8.095973
Added Horn clause: 5 && 7 && 0 && 0 => 8
Added Horn clause: 5 && 7 && 0 && 0 => 9
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/5_Simulations/nbody/nbody.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15integrateBodiesIfLb0EEvPN4vec4IT_E4TypeES4_S4_jjffi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool) : bool
{
  b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0011 && b0013 && b0014 && b0015 && b0016 && b0017 && b0019 && b0020 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113
}
Prover Time taken = 3.068055
Added Horn clause: 5 && 8 && 0 && 0 => 10
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/5_Simulations/nbody/nbody.bpl.ice2.bpl
Total learner time was 00:00:01
Verifying $_Z15integrateBodiesIfLb0EEvPN4vec4IT_E4TypeES4_S4_jjffi: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool) : bool
{
  b0001 && b0005 && b0006 && b0007 && b0008 && b0009 && b0011 && b0013 && b0014 && b0015 && b0016 && b0017 && b0019 && b0020 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113
}
Prover Time taken = 0.920074
Prover time = 125.82
Number of prover queries = 10
Learner time = 1.00
Number of learner queries = 9
Total time: 126.01
Number of positive examples:8
Number of negative examples:0
Number of Horn clauses:3
verified

Boogie program verifier finished with 1 verified, 0 errors
2.29user 0.37system 2:06.65elapsed 2%CPU (0avgtext+0avgdata 78388maxresident)k
0inputs+0outputs (0major+45414minor)pagefaults 0swaps
FILE:CUDA50/5_Simulations/nbody/nbody.bpl.ice2.bpl
#################
Wed Jan 30 19:19:58 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/alignedTypes/alignedTypes.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/alignedTypes/alignedTypes.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 8
Generating VC of $_Z10testKernelIiEvPT_S1_i
Verifying $_Z10testKernelIiEvPT_S1_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.060037
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/alignedTypes/alignedTypes.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z10testKernelIiEvPT_S1_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007
}
Prover Time taken = 0.085256
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/alignedTypes/alignedTypes.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z10testKernelIiEvPT_S1_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007
}
Prover Time taken = 0.063059
Added Horn clause: 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/alignedTypes/alignedTypes.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z10testKernelIiEvPT_S1_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0005 && b0006 && b0007
}
Prover Time taken = 0.115463
Prover time = 0.32
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 0.37
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
0.78user 0.07system 0:01.26elapsed 68%CPU (0avgtext+0avgdata 49984maxresident)k
0inputs+0outputs (0major+15426minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/alignedTypes/alignedTypes.bpl.ice2.bpl
#################
Wed Jan 30 19:19:59 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/concurrentKernels/sum.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/concurrentKernels/sum.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 19
Generating VC of $_Z3sumPji
Verifying $_Z3sumPji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.069356
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/concurrentKernels/sum.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z3sumPji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018
}
Prover Time taken = 0.140758
Added Horn clause: 0 && 0 => 1
Added Horn clause: 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/concurrentKernels/sum.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z3sumPji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018
}
Prover Time taken = 0.144263
Added Horn clause: 0 && 1 => 3
Added Horn clause: 2 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/concurrentKernels/sum.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z3sumPji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool) : bool
{
  b0000 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0015 && b0016 && b0017 && b0018
}
Prover Time taken = 0.078625
Prover time = 0.43
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 0.49
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:4
verified

Boogie program verifier finished with 1 verified, 0 errors
1.01user 0.07system 0:01.31elapsed 83%CPU (0avgtext+0avgdata 53600maxresident)k
0inputs+0outputs (0major+19073minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/concurrentKernels/sum.bpl.ice2.bpl
#################
Wed Jan 30 19:20:00 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/eigenvalues/_bisect_kernel_large.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/eigenvalues/_bisect_kernel_large.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 529
Generating VC of $_Z17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_
Verifying $_Z17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool, b0466: bool, b0467: bool, b0468: bool, b0469: bool, b0470: bool, b0471: bool, b0472: bool, b0473: bool, b0474: bool, b0475: bool, b0476: bool, b0477: bool, b0478: bool, b0479: bool, b0480: bool, b0481: bool, b0482: bool, b0483: bool, b0484: bool, b0485: bool, b0486: bool, b0487: bool, b0488: bool, b0489: bool, b0490: bool, b0491: bool, b0492: bool, b0493: bool, b0494: bool, b0495: bool, b0496: bool, b0497: bool, b0498: bool, b0499: bool, b0500: bool, b0501: bool, b0502: bool, b0503: bool, b0504: bool, b0505: bool, b0506: bool, b0507: bool, b0508: bool, b0509: bool, b0510: bool, b0511: bool, b0512: bool, b0513: bool, b0514: bool, b0515: bool, b0516: bool, b0517: bool, b0518: bool, b0519: bool, b0520: bool, b0521: bool, b0522: bool, b0523: bool, b0524: bool, b0525: bool, b0526: bool, b0527: bool, b0528: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.693283
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/eigenvalues/_bisect_kernel_large.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool, b0466: bool, b0467: bool, b0468: bool, b0469: bool, b0470: bool, b0471: bool, b0472: bool, b0473: bool, b0474: bool, b0475: bool, b0476: bool, b0477: bool, b0478: bool, b0479: bool, b0480: bool, b0481: bool, b0482: bool, b0483: bool, b0484: bool, b0485: bool, b0486: bool, b0487: bool, b0488: bool, b0489: bool, b0490: bool, b0491: bool, b0492: bool, b0493: bool, b0494: bool, b0495: bool, b0496: bool, b0497: bool, b0498: bool, b0499: bool, b0500: bool, b0501: bool, b0502: bool, b0503: bool, b0504: bool, b0505: bool, b0506: bool, b0507: bool, b0508: bool, b0509: bool, b0510: bool, b0511: bool, b0512: bool, b0513: bool, b0514: bool, b0515: bool, b0516: bool, b0517: bool, b0518: bool, b0519: bool, b0520: bool, b0521: bool, b0522: bool, b0523: bool, b0524: bool, b0525: bool, b0526: bool, b0527: bool, b0528: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0102 && b0104 && b0106 && b0108 && b0110 && b0112 && b0114 && b0116 && b0118 && b0120 && b0122 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227 && b0228 && b0229 && b0230 && b0231 && b0232 && b0233 && b0234 && b0235 && b0236 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242 && b0243 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273 && b0274 && b0275 && b0276 && b0277 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0290 && b0291 && b0292 && b0293 && b0294 && b0295 && b0296 && b0297 && b0298 && b0299 && b0300 && b0301 && b0302 && b0303 && b0304 && b0305 && b0306 && b0307 && b0308 && b0309 && b0310 && b0311 && b0312 && b0313 && b0314 && b0315 && b0316 && b0317 && b0318 && b0319 && b0320 && b0321 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0342 && b0343 && b0344 && b0345 && b0346 && b0347 && b0348 && b0349 && b0350 && b0351 && b0352 && b0353 && b0354 && b0355 && b0356 && b0357 && b0358 && b0359 && b0360 && b0361 && b0362 && b0363 && b0364 && b0365 && b0366 && b0367 && b0368 && b0369 && b0370 && b0371 && b0372 && b0373 && b0374 && b0375 && b0376 && b0377 && b0378 && b0379 && b0380 && b0381 && b0382 && b0383 && b0384 && b0385 && b0386 && b0387 && b0388 && b0389 && b0390 && b0391 && b0392 && b0393 && b0394 && b0395 && b0396 && b0397 && b0398 && b0399 && b0400 && b0401 && b0402 && b0403 && b0404 && b0405 && b0406 && b0407 && b0408 && b0409 && b0410 && b0411 && b0412 && b0413 && b0414 && b0415 && b0416 && b0417 && b0418 && b0419 && b0420 && b0421 && b0422 && b0423 && b0424 && b0425 && b0426 && b0427 && b0428 && b0429 && b0430 && b0431 && b0432 && b0433 && b0434 && b0435 && b0436 && b0437 && b0438 && b0439 && b0440 && b0441 && b0442 && b0443 && b0444 && b0445 && b0446 && b0447 && b0448 && b0449 && b0450 && b0451 && b0452 && b0453 && b0454 && b0455 && b0456 && b0457 && b0458 && b0459 && b0460 && b0461 && b0462 && b0463 && b0464 && b0465 && b0466 && b0467 && b0468 && b0469 && b0470 && b0471 && b0472 && b0473 && b0474 && b0475 && b0476 && b0477 && b0478 && b0479 && b0480 && b0481 && b0482 && b0483 && b0484 && b0485 && b0486 && b0487 && b0488 && b0489 && b0490 && b0491 && b0492 && b0493 && b0494 && b0495 && b0496 && b0497 && b0498 && b0499 && b0500 && b0501 && b0502 && b0503 && b0504 && b0505 && b0506 && b0507 && b0508 && b0509 && b0510 && b0511 && b0512 && b0513 && b0514 && b0515 && b0516 && b0517 && b0518 && b0519 && b0520 && b0521 && b0522 && b0523 && b0524 && b0525 && b0526 && b0527 && b0528
}
Command exited with non-zero status 124
4.28user 0.43system 20:00.01elapsed 0%CPU (0avgtext+0avgdata 279840maxresident)k
0inputs+0outputs (0major+96372minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/eigenvalues/_bisect_kernel_large.bpl.ice2.bpl
#################
Wed Jan 30 19:40:00 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/eigenvalues/_bisect_kernel_large_multi.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/eigenvalues/_bisect_kernel_large_multi.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 327
Generating VC of $_Z31bisectKernelLarge_MultIntervalsPfS_jPjS0_S_S_S0_S0_S_S0_f
Verifying $_Z31bisectKernelLarge_MultIntervalsPfS_jPjS0_S_S_S0_S0_S_S0_f: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.28828
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/eigenvalues/_bisect_kernel_large_multi.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z31bisectKernelLarge_MultIntervalsPfS_jPjS0_S_S_S0_S0_S_S0_f: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0057 && b0059 && b0061 && b0063 && b0065 && b0067 && b0069 && b0071 && b0073 && b0075 && b0077 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227 && b0228 && b0229 && b0230 && b0231 && b0232 && b0233 && b0234 && b0235 && b0236 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242 && b0243 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273 && b0274 && b0275 && b0276 && b0277 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0290 && b0291 && b0292 && b0293 && b0294 && b0295 && b0296 && b0297 && b0298 && b0299 && b0300 && b0301 && b0302 && b0303 && b0304 && b0305 && b0306 && b0307 && b0308 && b0309 && b0310 && b0311 && b0312 && b0313 && b0314 && b0315 && b0316 && b0317 && b0318 && b0319 && b0320 && b0321 && b0322 && b0323 && b0324 && b0325 && b0326
}
Command exited with non-zero status 124
2.38user 0.49system 20:00.01elapsed 0%CPU (0avgtext+0avgdata 133996maxresident)k
0inputs+0outputs (0major+55524minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/eigenvalues/_bisect_kernel_large_multi.bpl.ice2.bpl
#################
Wed Jan 30 20:00:00 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/eigenvalues/_bisect_kernel_small.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/eigenvalues/_bisect_kernel_small.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 267
Generating VC of $_Z12bisectKernelPfS_jS_S_PjS0_ffjjf
Verifying $_Z12bisectKernelPfS_jS_S_PjS0_ffjjf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.427052
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/eigenvalues/_bisect_kernel_small.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z12bisectKernelPfS_jS_S_PjS0_ffjjf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0038 && b0040 && b0042 && b0044 && b0046 && b0048 && b0050 && b0052 && b0054 && b0056 && b0058 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227 && b0228 && b0229 && b0230 && b0231 && b0232 && b0233 && b0234 && b0235 && b0236 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242 && b0243 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266
}
Command exited with non-zero status 124
2.31user 0.37system 20:00.01elapsed 0%CPU (0avgtext+0avgdata 120024maxresident)k
0inputs+0outputs (0major+48460minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/eigenvalues/_bisect_kernel_small.bpl.ice2.bpl
#################
Wed Jan 30 20:20:00 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/eigenvalues/bisect_kernel_large_onei.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/eigenvalues/bisect_kernel_large_onei.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 124
Generating VC of $_Z30bisectKernelLarge_OneIntervalsPfS_jjS_S_Pjf
Verifying $_Z30bisectKernelLarge_OneIntervalsPfS_jjS_S_Pjf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.096096
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/eigenvalues/bisect_kernel_large_onei.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z30bisectKernelLarge_OneIntervalsPfS_jjS_S_Pjf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 3.474493
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/eigenvalues/bisect_kernel_large_onei.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z30bisectKernelLarge_OneIntervalsPfS_jjS_S_Pjf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0043 && b0044 && b0055 && b0056 && b0058 && b0059 && b0061 && b0062 && b0064 && b0065 && b0066 && b0067 && b0069 && b0070 && b0071 && b0072 && b0074 && b0075 && b0076 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,1,1,1,1,1,1,0,0,1,1,1,0,0,1,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 3.356678
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/eigenvalues/bisect_kernel_large_onei.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z30bisectKernelLarge_OneIntervalsPfS_jjS_S_Pjf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0061 && b0062 && b0064 && b0065 && b0069 && b0070 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 3.866638
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/eigenvalues/bisect_kernel_large_onei.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z30bisectKernelLarge_OneIntervalsPfS_jjS_S_Pjf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0030 && b0031 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123
}
Prover Time taken = 2.842601
Added Horn clause: 4 => 5
Added Horn clause: 0 => 6
Added Horn clause: 7 && 0 && 0 && 0 && 0 => 8
Added Horn clause: 9 && 0 && 0 && 0 && 0 => 10
Added Horn clause: 11 && 0 && 0 && 0 && 0 => 12
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/eigenvalues/bisect_kernel_large_onei.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z30bisectKernelLarge_OneIntervalsPfS_jjS_S_Pjf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0008 && b0010 && b0012 && b0013 && b0017 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0030 && b0031 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0093 && b0094 && b0101 && b0107 && b0113 && b0114 && b0115 && b0116 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123
}
Prover Time taken = 4.19492
Added Horn clause: 0 && 0 && 6 => 13
Added Horn clause: 14 => 15
Added Horn clause: 16 && 0 && 6 && 0 && 0 => 17
Added Horn clause: 18 && 19 && 20 && 0 && 0 => 21
Added Horn clause: 18 && 19 && 12 && 0 && 0 => 22
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/eigenvalues/bisect_kernel_large_onei.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z30bisectKernelLarge_OneIntervalsPfS_jjS_S_Pjf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  b0001 && b0003 && b0004 && b0005 && b0006 && b0010 && b0012 && b0013 && b0017 && b0019 && b0020 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0093 && b0094 && b0113 && b0114 && b0115 && b0116 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123
}
Prover Time taken = 2.589861
Added Horn clause: 23 && 24 && 25 && 0 && 0 => 26
Added Horn clause: 27 && 28 && 6 => 29
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/eigenvalues/bisect_kernel_large_onei.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z30bisectKernelLarge_OneIntervalsPfS_jjS_S_Pjf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  b0001 && b0003 && b0004 && b0005 && b0006 && b0010 && b0013 && b0017 && b0019 && b0020 && b0022 && b0024 && b0025 && b0026 && b0027 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0093 && b0094 && b0113 && b0114 && b0115 && b0116 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123
}
Prover Time taken = 1.885729
Added Horn clause: 30 && 31 && 6 => 32
Added Horn clause: 33 && 34 && 26 && 0 && 13 => 35
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/eigenvalues/bisect_kernel_large_onei.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z30bisectKernelLarge_OneIntervalsPfS_jjS_S_Pjf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  b0001 && b0003 && b0004 && b0005 && b0006 && b0010 && b0017 && b0019 && b0020 && b0022 && b0026 && b0027 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0093 && b0094 && b0113 && b0114 && b0115 && b0116 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123
}
Prover Time taken = 1.759149
Added Horn clause: 36 && 28 && 6 => 37
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/eigenvalues/bisect_kernel_large_onei.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z30bisectKernelLarge_OneIntervalsPfS_jjS_S_Pjf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  b0001 && b0003 && b0004 && b0005 && b0006 && b0010 && b0017 && b0019 && b0020 && b0026 && b0027 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0093 && b0094 && b0113 && b0114 && b0115 && b0116 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123
}
Prover Time taken = 0.298291
Prover time = 24.36
Number of prover queries = 10
Learner time = 0.00
Number of learner queries = 9
Total time: 24.60
Number of positive examples:4
Number of negative examples:0
Number of Horn clauses:15
verified

Boogie program verifier finished with 1 verified, 0 errors
2.11user 0.32system 0:25.55elapsed 9%CPU (0avgtext+0avgdata 76860maxresident)k
0inputs+0outputs (0major+47346minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/eigenvalues/bisect_kernel_large_onei.bpl.ice2.bpl
#################
Wed Jan 30 20:20:26 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/fastWalshTransform/fwtBatch1Kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/fastWalshTransform/fwtBatch1Kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 44
Generating VC of $_Z15fwtBatch1KernelPfS_i
Verifying $_Z15fwtBatch1KernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.077375
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/fastWalshTransform/fwtBatch1Kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15fwtBatch1KernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043
}
Prover Time taken = 2.887475
Added Horn clause: 0 && 0 => 1
Added Horn clause: 0 => 2
Added Horn clause: 0 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/fastWalshTransform/fwtBatch1Kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15fwtBatch1KernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043
}
Prover Time taken = 3.390916
Added Horn clause: 0 && 1 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/fastWalshTransform/fwtBatch1Kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15fwtBatch1KernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0032 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043
}
Prover Time taken = 15.254621
Added Horn clause: 0 && 4 && 0 => 5
Added Horn clause: 0 && 4 => 6
Added Horn clause: 0 && 1 => 7
Added Horn clause: 0 && 4 && 0 && 0 => 8
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/fastWalshTransform/fwtBatch1Kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15fwtBatch1KernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0015 && b0017 && b0018 && b0019 && b0020 && b0022 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0034 && b0035 && b0036 && b0037 && b0039 && b0041 && b0042 && b0043
}
Prover Time taken = 6.973446
Added Horn clause: 0 && 4 => 9
Added Horn clause: 0 && 4 && 0 => 10
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/fastWalshTransform/fwtBatch1Kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15fwtBatch1KernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0015 && b0017 && b0018 && b0019 && b0020 && b0022 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0034 && b0035 && b0041 && b0042 && b0043
}
Prover Time taken = 6.85236
Added Horn clause: 3 && 4 => 11
Added Horn clause: 0 && 4 && 12 => 13
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/fastWalshTransform/fwtBatch1Kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15fwtBatch1KernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0015 && b0017 && b0018 && b0019 && b0020 && b0022 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0034 && b0035 && b0041 && b0042
}
Prover Time taken = 8.474798
Added Horn clause: 0 && 4 => 14
Added Horn clause: 0 && 4 && 15 => 16
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/fastWalshTransform/fwtBatch1Kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15fwtBatch1KernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0015 && b0017 && b0018 && b0019 && b0020 && b0022 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0034 && b0035
}
Prover Time taken = 2.028975
Prover time = 45.94
Number of prover queries = 8
Learner time = 0.00
Number of learner queries = 7
Total time: 46.08
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:14
verified

Boogie program verifier finished with 1 verified, 0 errors
1.07user 0.21system 0:46.84elapsed 2%CPU (0avgtext+0avgdata 68904maxresident)k
0inputs+0outputs (0major+29412minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/fastWalshTransform/fwtBatch1Kernel.bpl.ice2.bpl
#################
Wed Jan 30 20:21:13 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/fastWalshTransform/modulateKernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/fastWalshTransform/modulateKernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 9
Generating VC of $_Z14modulateKernelPfS_i
Verifying $_Z14modulateKernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.062847
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/fastWalshTransform/modulateKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z14modulateKernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 0.086315
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/fastWalshTransform/modulateKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z14modulateKernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 0.137033
Added Horn clause: 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/fastWalshTransform/modulateKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z14modulateKernelPfS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 0.131804
Prover time = 0.42
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 0.46
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
0.88user 0.07system 0:01.26elapsed 76%CPU (0avgtext+0avgdata 54188maxresident)k
0inputs+0outputs (0major+15761minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/fastWalshTransform/modulateKernel.bpl.ice2.bpl
#################
Wed Jan 30 20:21:14 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FDTD3d/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FDTD3d/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 26
Generating VC of $_Z23FiniteDifferencesKernelPfPKfiii
Verifying $_Z23FiniteDifferencesKernelPfPKfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.08834
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FDTD3d/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z23FiniteDifferencesKernelPfPKfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025
}
Prover Time taken = 0.986993
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FDTD3d/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z23FiniteDifferencesKernelPfPKfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool) : bool
{
  b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025
}
Prover Time taken = 7.317103
Added Horn clause: 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FDTD3d/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z23FiniteDifferencesKernelPfPKfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool) : bool
{
  b0003 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025
}
Prover Time taken = 18.808196
Added Horn clause: 2 && 0 && 0 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FDTD3d/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z23FiniteDifferencesKernelPfPKfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool) : bool
{
  b0003 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0016 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025
}
Prover Time taken = 33.125739
Added Horn clause: 4 && 0 && 3 => 5
Added Horn clause: 4 && 0 && 3 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FDTD3d/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z23FiniteDifferencesKernelPfPKfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool) : bool
{
  b0003 && b0009 && b0011 && b0013 && b0014 && b0016 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024
}
Prover Time taken = 96.397034
Added Horn clause: 4 && 7 && 3 => 8
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FDTD3d/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z23FiniteDifferencesKernelPfPKfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool) : bool
{
  b0003 && b0009 && b0011 && b0013 && b0014 && b0016 && b0018 && b0020 && b0021 && b0022 && b0023 && b0024
}
Prover Time taken = 271.827635
Added Horn clause: 4 && 5 && 3 => 9
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FDTD3d/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z23FiniteDifferencesKernelPfPKfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool) : bool
{
  b0003 && b0009 && b0011 && b0013 && b0014 && b0016 && b0018 && b0021 && b0022 && b0023 && b0024
}
Prover Time taken = 234.203291
Added Horn clause: 2 && 0 && 6 => 10
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FDTD3d/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z23FiniteDifferencesKernelPfPKfiii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool) : bool
{
  b0003 && b0009 && b0011 && b0013 && b0014 && b0016 && b0018 && b0022 && b0024
}
Prover Time taken = 322.689581
Prover time = 985.44
Number of prover queries = 9
Learner time = 0.00
Number of learner queries = 8
Total time: 985.58
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:8
verified

Boogie program verifier finished with 1 verified, 0 errors
1.16user 0.34system 16:26.68elapsed 0%CPU (0avgtext+0avgdata 68716maxresident)k
0inputs+0outputs (0major+23729minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/FDTD3d/kernel.bpl.ice2.bpl
#################
Wed Jan 30 20:37:41 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelCopyImage.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelCopyImage.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 11
Generating VC of $_Z14SobelCopyImagePhjiif
Verifying $_Z14SobelCopyImagePhjiif: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.069535
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelCopyImage.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z14SobelCopyImagePhjiif: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010
}
Prover Time taken = 0.21043
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelCopyImage.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z14SobelCopyImagePhjiif: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010
}
Prover Time taken = 1.360696
Added Horn clause: 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelCopyImage.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z14SobelCopyImagePhjiif: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010
}
Prover Time taken = 1.519894
Prover time = 3.16
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 3.22
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
3.73user 0.09system 0:04.03elapsed 95%CPU (0avgtext+0avgdata 56040maxresident)k
0inputs+0outputs (0major+23917minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/FunctionPointers/SobelCopyImage.bpl.ice2.bpl
#################
Wed Jan 30 20:37:45 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(557,11): Error: undeclared identifier: _b20
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(558,11): Error: undeclared identifier: _b21
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(559,11): Error: undeclared identifier: _b22
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(560,11): Error: undeclared identifier: _b23
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(561,11): Error: undeclared identifier: _b24
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(562,11): Error: undeclared identifier: _b25
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(563,11): Error: undeclared identifier: _b26
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(564,11): Error: undeclared identifier: _b27
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(565,11): Error: undeclared identifier: _b28
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(566,11): Error: undeclared identifier: _b29
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(567,11): Error: undeclared identifier: _b30
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(568,11): Error: undeclared identifier: _b31
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(569,11): Error: undeclared identifier: _b32
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(570,11): Error: undeclared identifier: _b33
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(571,11): Error: undeclared identifier: _b34
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(572,11): Error: undeclared identifier: _b35
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(573,11): Error: undeclared identifier: _b36
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(574,11): Error: undeclared identifier: _b37
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(575,11): Error: undeclared identifier: _b38
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(576,11): Error: undeclared identifier: _b39
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(577,11): Error: undeclared identifier: _b40
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(578,11): Error: undeclared identifier: _b41
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(579,11): Error: undeclared identifier: _b42
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(580,11): Error: undeclared identifier: _b43
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(581,11): Error: undeclared identifier: _b44
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(582,11): Error: undeclared identifier: _b45
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(583,11): Error: undeclared identifier: _b46
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(584,11): Error: undeclared identifier: _b47
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(585,11): Error: undeclared identifier: _b48
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(586,11): Error: undeclared identifier: _b49
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(587,11): Error: undeclared identifier: _b50
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(588,11): Error: undeclared identifier: _b51
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(589,11): Error: undeclared identifier: _b52
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(590,11): Error: undeclared identifier: _b53
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(591,11): Error: undeclared identifier: _b54
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(592,11): Error: undeclared identifier: _b55
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(593,11): Error: undeclared identifier: _b56
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(594,11): Error: undeclared identifier: _b57
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(595,11): Error: undeclared identifier: _b58
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(596,11): Error: undeclared identifier: _b59
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(597,11): Error: undeclared identifier: _b60
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(598,11): Error: undeclared identifier: _b61
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(599,11): Error: undeclared identifier: _b62
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(600,11): Error: undeclared identifier: _b63
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(601,11): Error: undeclared identifier: _b64
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(602,11): Error: undeclared identifier: _b65
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(603,11): Error: undeclared identifier: _b66
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(604,11): Error: undeclared identifier: _b67
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(605,11): Error: undeclared identifier: _b68
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(606,11): Error: undeclared identifier: _b69
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(607,11): Error: undeclared identifier: _b70
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(611,10): Error: undeclared identifier: _b71
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(612,10): Error: undeclared identifier: _b72
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(613,10): Error: undeclared identifier: _b73
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(614,10): Error: undeclared identifier: _b74
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(615,10): Error: undeclared identifier: _b75
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(616,10): Error: undeclared identifier: _b76
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(617,10): Error: undeclared identifier: _b77
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(618,10): Error: undeclared identifier: _b78
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(619,10): Error: undeclared identifier: _b79
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(620,10): Error: undeclared identifier: _b80
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(621,10): Error: undeclared identifier: _b81
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(622,10): Error: undeclared identifier: _b82
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(623,10): Error: undeclared identifier: _b83
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(624,10): Error: undeclared identifier: _b84
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(625,10): Error: undeclared identifier: _b85
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(626,10): Error: undeclared identifier: _b86
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(627,10): Error: undeclared identifier: _b87
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(628,10): Error: undeclared identifier: _b88
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(629,10): Error: undeclared identifier: _b89
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(630,10): Error: undeclared identifier: _b90
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(631,10): Error: undeclared identifier: _b91
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(632,10): Error: undeclared identifier: _b92
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(633,10): Error: undeclared identifier: _b93
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(634,10): Error: undeclared identifier: _b94
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(635,10): Error: undeclared identifier: _b95
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(636,10): Error: undeclared identifier: _b96
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(637,10): Error: undeclared identifier: _b97
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(638,10): Error: undeclared identifier: _b98
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(639,10): Error: undeclared identifier: _b99
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(640,10): Error: undeclared identifier: _b100
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(641,10): Error: undeclared identifier: _b101
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(752,11): Error: undeclared identifier: _b102
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(753,11): Error: undeclared identifier: _b103
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(754,11): Error: undeclared identifier: _b104
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(755,11): Error: undeclared identifier: _b105
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(756,11): Error: undeclared identifier: _b106
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(757,11): Error: undeclared identifier: _b107
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(758,11): Error: undeclared identifier: _b108
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(759,11): Error: undeclared identifier: _b109
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(760,11): Error: undeclared identifier: _b110
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(761,11): Error: undeclared identifier: _b111
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(762,11): Error: undeclared identifier: _b112
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(763,11): Error: undeclared identifier: _b113
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(764,11): Error: undeclared identifier: _b114
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(765,11): Error: undeclared identifier: _b115
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(766,11): Error: undeclared identifier: _b116
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(767,11): Error: undeclared identifier: _b117
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(768,11): Error: undeclared identifier: _b118
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(769,11): Error: undeclared identifier: _b119
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(770,11): Error: undeclared identifier: _b120
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(771,11): Error: undeclared identifier: _b121
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(772,11): Error: undeclared identifier: _b122
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(773,11): Error: undeclared identifier: _b123
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(774,11): Error: undeclared identifier: _b124
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(775,11): Error: undeclared identifier: _b125
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(776,11): Error: undeclared identifier: _b126
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(777,11): Error: undeclared identifier: _b127
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(778,11): Error: undeclared identifier: _b128
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(779,11): Error: undeclared identifier: _b129
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(780,11): Error: undeclared identifier: _b130
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(781,11): Error: undeclared identifier: _b131
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(782,11): Error: undeclared identifier: _b132
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(783,11): Error: undeclared identifier: _b133
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(784,11): Error: undeclared identifier: _b134
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(785,11): Error: undeclared identifier: _b135
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(786,11): Error: undeclared identifier: _b136
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(787,11): Error: undeclared identifier: _b137
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(788,11): Error: undeclared identifier: _b138
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(789,11): Error: undeclared identifier: _b139
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(790,11): Error: undeclared identifier: _b140
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(791,11): Error: undeclared identifier: _b141
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(792,11): Error: undeclared identifier: _b142
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(793,11): Error: undeclared identifier: _b143
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(794,11): Error: undeclared identifier: _b144
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(795,11): Error: undeclared identifier: _b145
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(796,11): Error: undeclared identifier: _b146
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(797,11): Error: undeclared identifier: _b147
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(798,11): Error: undeclared identifier: _b148
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(799,11): Error: undeclared identifier: _b149
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(800,11): Error: undeclared identifier: _b150
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(801,11): Error: undeclared identifier: _b151
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(802,11): Error: undeclared identifier: _b152
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(806,10): Error: undeclared identifier: _b153
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(807,10): Error: undeclared identifier: _b154
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(808,10): Error: undeclared identifier: _b155
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(809,10): Error: undeclared identifier: _b156
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(810,10): Error: undeclared identifier: _b157
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(811,10): Error: undeclared identifier: _b158
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(812,10): Error: undeclared identifier: _b159
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(813,10): Error: undeclared identifier: _b160
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(814,10): Error: undeclared identifier: _b161
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(815,10): Error: undeclared identifier: _b162
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(816,10): Error: undeclared identifier: _b163
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(817,10): Error: undeclared identifier: _b164
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(818,10): Error: undeclared identifier: _b165
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(819,10): Error: undeclared identifier: _b166
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(820,10): Error: undeclared identifier: _b167
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(821,10): Error: undeclared identifier: _b168
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(822,10): Error: undeclared identifier: _b169
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(823,10): Error: undeclared identifier: _b170
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(824,10): Error: undeclared identifier: _b171
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(825,10): Error: undeclared identifier: _b172
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(826,10): Error: undeclared identifier: _b173
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(827,10): Error: undeclared identifier: _b174
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(828,10): Error: undeclared identifier: _b175
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(829,10): Error: undeclared identifier: _b176
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(830,10): Error: undeclared identifier: _b177
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(831,10): Error: undeclared identifier: _b178
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(832,10): Error: undeclared identifier: _b179
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(833,10): Error: undeclared identifier: _b180
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(834,10): Error: undeclared identifier: _b181
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(835,10): Error: undeclared identifier: _b182
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(836,10): Error: undeclared identifier: _b183
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(937,11): Error: undeclared identifier: _b184
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(938,11): Error: undeclared identifier: _b185
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(939,11): Error: undeclared identifier: _b186
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(940,11): Error: undeclared identifier: _b187
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(941,11): Error: undeclared identifier: _b188
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(942,11): Error: undeclared identifier: _b189
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(943,11): Error: undeclared identifier: _b190
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(944,11): Error: undeclared identifier: _b191
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(945,11): Error: undeclared identifier: _b192
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(946,11): Error: undeclared identifier: _b193
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(947,11): Error: undeclared identifier: _b194
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(948,11): Error: undeclared identifier: _b195
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(949,11): Error: undeclared identifier: _b196
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(950,11): Error: undeclared identifier: _b197
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(951,11): Error: undeclared identifier: _b198
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(952,11): Error: undeclared identifier: _b199
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(953,11): Error: undeclared identifier: _b200
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(954,11): Error: undeclared identifier: _b201
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(955,11): Error: undeclared identifier: _b202
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(956,11): Error: undeclared identifier: _b203
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(957,11): Error: undeclared identifier: _b204
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(958,11): Error: undeclared identifier: _b205
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(959,11): Error: undeclared identifier: _b206
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(960,11): Error: undeclared identifier: _b207
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(961,11): Error: undeclared identifier: _b208
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(962,11): Error: undeclared identifier: _b209
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(963,11): Error: undeclared identifier: _b210
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(964,11): Error: undeclared identifier: _b211
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(965,11): Error: undeclared identifier: _b212
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(966,11): Error: undeclared identifier: _b213
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(967,11): Error: undeclared identifier: _b214
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(968,11): Error: undeclared identifier: _b215
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(969,11): Error: undeclared identifier: _b216
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(970,11): Error: undeclared identifier: _b217
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(971,11): Error: undeclared identifier: _b218
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(975,10): Error: undeclared identifier: _b219
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(976,10): Error: undeclared identifier: _b220
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(977,10): Error: undeclared identifier: _b221
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(978,10): Error: undeclared identifier: _b222
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(979,10): Error: undeclared identifier: _b223
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(980,10): Error: undeclared identifier: _b224
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(981,10): Error: undeclared identifier: _b225
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(982,10): Error: undeclared identifier: _b226
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(983,10): Error: undeclared identifier: _b227
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(984,10): Error: undeclared identifier: _b228
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(985,10): Error: undeclared identifier: _b229
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(986,10): Error: undeclared identifier: _b230
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(987,10): Error: undeclared identifier: _b231
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(988,10): Error: undeclared identifier: _b232
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(989,10): Error: undeclared identifier: _b233
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(990,10): Error: undeclared identifier: _b234
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(991,10): Error: undeclared identifier: _b235
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(992,10): Error: undeclared identifier: _b236
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(993,10): Error: undeclared identifier: _b237
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(994,10): Error: undeclared identifier: _b238
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(995,10): Error: undeclared identifier: _b239
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(996,10): Error: undeclared identifier: _b240
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(997,10): Error: undeclared identifier: _b241
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(998,10): Error: undeclared identifier: _b242
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(999,10): Error: undeclared identifier: _b243
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(1000,10): Error: undeclared identifier: _b244
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(1001,10): Error: undeclared identifier: _b245
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(1002,10): Error: undeclared identifier: _b246
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(1003,10): Error: undeclared identifier: _b247
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(1004,10): Error: undeclared identifier: _b248
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl(1005,10): Error: undeclared identifier: _b249
230 name resolution errors detected in /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl
0.16user 0.03system 0:00.19elapsed 102%CPU (0avgtext+0avgdata 40844maxresident)k
0inputs+0outputs (0major+4331minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/FunctionPointers/SobelShared.bpl.ice2.bpl
#################
Wed Jan 30 20:37:45 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(423,11): Error: undeclared identifier: _b7
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(424,11): Error: undeclared identifier: _b8
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(425,11): Error: undeclared identifier: _b9
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(426,11): Error: undeclared identifier: _b10
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(427,11): Error: undeclared identifier: _b11
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(428,11): Error: undeclared identifier: _b12
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(429,11): Error: undeclared identifier: _b13
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(430,11): Error: undeclared identifier: _b14
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(431,11): Error: undeclared identifier: _b15
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(432,11): Error: undeclared identifier: _b16
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(433,11): Error: undeclared identifier: _b17
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(434,11): Error: undeclared identifier: _b18
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(435,11): Error: undeclared identifier: _b19
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(436,11): Error: undeclared identifier: _b20
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(437,11): Error: undeclared identifier: _b21
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(438,11): Error: undeclared identifier: _b22
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(439,11): Error: undeclared identifier: _b23
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(440,11): Error: undeclared identifier: _b24
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(441,11): Error: undeclared identifier: _b25
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(442,11): Error: undeclared identifier: _b26
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(443,11): Error: undeclared identifier: _b27
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(444,11): Error: undeclared identifier: _b28
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(445,11): Error: undeclared identifier: _b29
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(446,11): Error: undeclared identifier: _b30
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(447,11): Error: undeclared identifier: _b31
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(448,11): Error: undeclared identifier: _b32
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(449,11): Error: undeclared identifier: _b33
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(450,11): Error: undeclared identifier: _b34
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(451,11): Error: undeclared identifier: _b35
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(452,11): Error: undeclared identifier: _b36
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(453,11): Error: undeclared identifier: _b37
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(454,11): Error: undeclared identifier: _b38
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(455,11): Error: undeclared identifier: _b39
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(456,11): Error: undeclared identifier: _b40
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(457,11): Error: undeclared identifier: _b41
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(458,11): Error: undeclared identifier: _b42
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(459,11): Error: undeclared identifier: _b43
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(460,11): Error: undeclared identifier: _b44
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(461,11): Error: undeclared identifier: _b45
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(462,10): Error: undeclared identifier: _b46
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(463,10): Error: undeclared identifier: _b47
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(464,10): Error: undeclared identifier: _b48
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(465,10): Error: undeclared identifier: _b49
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(466,10): Error: undeclared identifier: _b50
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(467,10): Error: undeclared identifier: _b51
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(468,10): Error: undeclared identifier: _b52
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(469,10): Error: undeclared identifier: _b53
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(470,10): Error: undeclared identifier: _b54
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(471,10): Error: undeclared identifier: _b55
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(472,10): Error: undeclared identifier: _b56
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(473,10): Error: undeclared identifier: _b57
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(474,10): Error: undeclared identifier: _b58
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(475,10): Error: undeclared identifier: _b59
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(476,10): Error: undeclared identifier: _b60
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(477,10): Error: undeclared identifier: _b61
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(478,10): Error: undeclared identifier: _b62
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(479,10): Error: undeclared identifier: _b63
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(480,10): Error: undeclared identifier: _b64
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(588,11): Error: undeclared identifier: _b65
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(589,11): Error: undeclared identifier: _b66
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(590,11): Error: undeclared identifier: _b67
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(591,11): Error: undeclared identifier: _b68
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(592,11): Error: undeclared identifier: _b69
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(593,11): Error: undeclared identifier: _b70
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(594,11): Error: undeclared identifier: _b71
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(595,11): Error: undeclared identifier: _b72
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(596,11): Error: undeclared identifier: _b73
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(597,11): Error: undeclared identifier: _b74
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(598,11): Error: undeclared identifier: _b75
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(599,11): Error: undeclared identifier: _b76
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(600,11): Error: undeclared identifier: _b77
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(601,11): Error: undeclared identifier: _b78
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(602,11): Error: undeclared identifier: _b79
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(603,11): Error: undeclared identifier: _b80
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(604,11): Error: undeclared identifier: _b81
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(605,11): Error: undeclared identifier: _b82
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(606,11): Error: undeclared identifier: _b83
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(607,11): Error: undeclared identifier: _b84
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(608,11): Error: undeclared identifier: _b85
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(609,11): Error: undeclared identifier: _b86
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(610,11): Error: undeclared identifier: _b87
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(611,11): Error: undeclared identifier: _b88
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(612,11): Error: undeclared identifier: _b89
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(613,11): Error: undeclared identifier: _b90
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(614,11): Error: undeclared identifier: _b91
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(615,11): Error: undeclared identifier: _b92
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(616,11): Error: undeclared identifier: _b93
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(617,11): Error: undeclared identifier: _b94
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(618,11): Error: undeclared identifier: _b95
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(619,11): Error: undeclared identifier: _b96
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(620,11): Error: undeclared identifier: _b97
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(621,11): Error: undeclared identifier: _b98
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(622,11): Error: undeclared identifier: _b99
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(623,11): Error: undeclared identifier: _b100
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(624,11): Error: undeclared identifier: _b101
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(625,11): Error: undeclared identifier: _b102
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(626,11): Error: undeclared identifier: _b103
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(627,10): Error: undeclared identifier: _b104
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(628,10): Error: undeclared identifier: _b105
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(629,10): Error: undeclared identifier: _b106
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(630,10): Error: undeclared identifier: _b107
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(631,10): Error: undeclared identifier: _b108
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(632,10): Error: undeclared identifier: _b109
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(633,10): Error: undeclared identifier: _b110
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(634,10): Error: undeclared identifier: _b111
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(635,10): Error: undeclared identifier: _b112
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(636,10): Error: undeclared identifier: _b113
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(637,10): Error: undeclared identifier: _b114
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(638,10): Error: undeclared identifier: _b115
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(639,10): Error: undeclared identifier: _b116
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(640,10): Error: undeclared identifier: _b117
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(641,10): Error: undeclared identifier: _b118
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(642,10): Error: undeclared identifier: _b119
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(643,10): Error: undeclared identifier: _b120
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(644,10): Error: undeclared identifier: _b121
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(645,10): Error: undeclared identifier: _b122
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(743,11): Error: undeclared identifier: _b123
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(744,11): Error: undeclared identifier: _b124
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(745,11): Error: undeclared identifier: _b125
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(746,11): Error: undeclared identifier: _b126
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(747,11): Error: undeclared identifier: _b127
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(748,11): Error: undeclared identifier: _b128
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(749,11): Error: undeclared identifier: _b129
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(750,11): Error: undeclared identifier: _b130
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(751,11): Error: undeclared identifier: _b131
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(752,11): Error: undeclared identifier: _b132
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(753,11): Error: undeclared identifier: _b133
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(754,11): Error: undeclared identifier: _b134
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(755,11): Error: undeclared identifier: _b135
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(756,11): Error: undeclared identifier: _b136
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(757,11): Error: undeclared identifier: _b137
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(758,11): Error: undeclared identifier: _b138
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(759,11): Error: undeclared identifier: _b139
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(760,11): Error: undeclared identifier: _b140
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(761,11): Error: undeclared identifier: _b141
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(762,11): Error: undeclared identifier: _b142
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(763,11): Error: undeclared identifier: _b143
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(764,11): Error: undeclared identifier: _b144
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(765,11): Error: undeclared identifier: _b145
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(766,10): Error: undeclared identifier: _b146
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(767,10): Error: undeclared identifier: _b147
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(768,10): Error: undeclared identifier: _b148
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(769,10): Error: undeclared identifier: _b149
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(770,10): Error: undeclared identifier: _b150
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(771,10): Error: undeclared identifier: _b151
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(772,10): Error: undeclared identifier: _b152
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(773,10): Error: undeclared identifier: _b153
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(774,10): Error: undeclared identifier: _b154
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(775,10): Error: undeclared identifier: _b155
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(776,10): Error: undeclared identifier: _b156
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(777,10): Error: undeclared identifier: _b157
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(778,10): Error: undeclared identifier: _b158
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(779,10): Error: undeclared identifier: _b159
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(780,10): Error: undeclared identifier: _b160
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(781,10): Error: undeclared identifier: _b161
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(782,10): Error: undeclared identifier: _b162
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(783,10): Error: undeclared identifier: _b163
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl(784,10): Error: undeclared identifier: _b164
158 name resolution errors detected in /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl
0.12user 0.01system 0:00.14elapsed 101%CPU (0avgtext+0avgdata 38704maxresident)k
0inputs+0outputs (0major+3819minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/FunctionPointers/SobelTex.bpl.ice2.bpl
#################
Wed Jan 30 20:37:45 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/mergeSort/_bitonicMergeElementaryIntervalsKernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/mergeSort/_bitonicMergeElementaryIntervalsKernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 12
Generating VC of $_Z37bitonicMergeElementaryIntervalsKernelILj1EEvPjS0_S0_S0_S0_S0_jj
Verifying $_Z37bitonicMergeElementaryIntervalsKernelILj1EEvPjS0_S0_S0_S0_S0_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 7.920416
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/mergeSort/_bitonicMergeElementaryIntervalsKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z37bitonicMergeElementaryIntervalsKernelILj1EEvPjS0_S0_S0_S0_S0_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011
}
Added: my_inv:1,1,1,1,1,1,1,0,1,1,1,1: positive
Prover Time taken = 89.555958
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/mergeSort/_bitonicMergeElementaryIntervalsKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z37bitonicMergeElementaryIntervalsKernelILj1EEvPjS0_S0_S0_S0_S0_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0008 && b0009 && b0010 && b0011
}
Added: my_inv:1,1,1,1,1,1,1,0,1,0,1,0: positive
Prover Time taken = 45.624976
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/mergeSort/_bitonicMergeElementaryIntervalsKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z37bitonicMergeElementaryIntervalsKernelILj1EEvPjS0_S0_S0_S0_S0_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0008 && b0010
}
Prover Time taken = 75.046662
Added Horn clause: 0 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/mergeSort/_bitonicMergeElementaryIntervalsKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z37bitonicMergeElementaryIntervalsKernelILj1EEvPjS0_S0_S0_S0_S0_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0008 && b0010
}
Prover Time taken = 126.652597
Added Horn clause: 3 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/mergeSort/_bitonicMergeElementaryIntervalsKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z37bitonicMergeElementaryIntervalsKernelILj1EEvPjS0_S0_S0_S0_S0_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool) : bool
{
  b0000 && b0002 && b0004 && b0006 && b0008 && b0010
}
Overwrote: my_inv:1,0,1,0,1,0,1,1,1,1,1,1: negative
Overwrote: my_inv:1,0,1,0,1,0,1,1,1,1,1,1: negative
Overwrote: my_inv:1,0,1,0,1,0,1,1,1,1,1,1: negative
Overwrote: my_inv:1,0,1,0,1,0,1,1,1,1,1,1: negative
Prover Time taken = 145.4315
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/mergeSort/_bitonicMergeElementaryIntervalsKernel.bpl.ice2.bpl
[0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1] -> 0 not consistent!
sorcar: sorcar.cpp:202: int main(int, char* const*): Assertion `sorcar::is_consistent(X, datapoints, horn_constraints)' failed.
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
Command exited with non-zero status 1
1.71user 0.30system 8:10.96elapsed 0%CPU (0avgtext+0avgdata 79104maxresident)k
0inputs+0outputs (0major+30667minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/mergeSort/_bitonicMergeElementaryIntervalsKernel.bpl.ice2.bpl
#################
Wed Jan 30 20:45:56 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/mergeSort/_mergeElementaryIntervalsKernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/mergeSort/_mergeElementaryIntervalsKernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 32
Generating VC of $_Z30mergeElementaryIntervalsKernelILj1EEvPjS0_S0_S0_S0_S0_jj
Verifying $_Z30mergeElementaryIntervalsKernelILj1EEvPjS0_S0_S0_S0_S0_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1: positive
Prover Time taken = 10.20997
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/mergeSort/_mergeElementaryIntervalsKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z30mergeElementaryIntervalsKernelILj1EEvPjS0_S0_S0_S0_S0_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0026 && b0028 && b0029 && b0030 && b0031
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1: positive
Added Horn clause: 2 && 3 && 3 && 3 => 
Prover Time taken = 52.482163
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/mergeSort/_mergeElementaryIntervalsKernel.bpl.ice2.bpl
terminate called after throwing an instance of 'std::runtime_error'
  what():  No consistent conjunction exists
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
Command exited with non-zero status 1
1.02user 0.11system 1:03.41elapsed 1%CPU (0avgtext+0avgdata 73648maxresident)k
0inputs+0outputs (0major+20263minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/mergeSort/_mergeElementaryIntervalsKernel.bpl.ice2.bpl
#################
Wed Jan 30 20:46:59 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/mergeSort/_mergeSortSharedKernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/mergeSort/_mergeSortSharedKernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 32
Generating VC of $_Z21mergeSortSharedKernelILj1EEvPjS0_S0_S0_j
Verifying $_Z21mergeSortSharedKernelILj1EEvPjS0_S0_S0_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1: positive
Prover Time taken = 0.104749
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/mergeSort/_mergeSortSharedKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21mergeSortSharedKernelILj1EEvPjS0_S0_S0_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0024 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1: positive
Prover Time taken = 6.287306
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/mergeSort/_mergeSortSharedKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21mergeSortSharedKernelILj1EEvPjS0_S0_S0_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,1,1,1,1,1: positive
Prover Time taken = 10.796877
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/mergeSort/_mergeSortSharedKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21mergeSortSharedKernelILj1EEvPjS0_S0_S0_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0027 && b0028 && b0029 && b0030 && b0031
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,1,1,1,1: positive
Prover Time taken = 6.491627
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/mergeSort/_mergeSortSharedKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21mergeSortSharedKernelILj1EEvPjS0_S0_S0_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0028 && b0029 && b0030 && b0031
}
Prover Time taken = 1.367747
Added Horn clause: 0 && 4 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/mergeSort/_mergeSortSharedKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21mergeSortSharedKernelILj1EEvPjS0_S0_S0_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0006 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0028 && b0030 && b0031
}
Prover Time taken = 1.4761
Added Horn clause: 4 && 4 => 6
Added Horn clause: 4 && 5 && 4 => 7
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/mergeSort/_mergeSortSharedKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z21mergeSortSharedKernelILj1EEvPjS0_S0_S0_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0006 && b0009 && b0011 && b0012 && b0014 && b0017 && b0019 && b0020 && b0021 && b0028 && b0030
}
Added Horn clause: 4 && 6 && 7 => 
Added Horn clause: 4 && 6 && 7 => 
Added Horn clause: 4 && 6 && 7 => 
Added Horn clause: 4 && 6 && 7 => 
Prover Time taken = 4.794512
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/mergeSort/_mergeSortSharedKernel.bpl.ice2.bpl
terminate called after throwing an instance of 'std::runtime_error'
  what():  No consistent conjunction exists
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
Command exited with non-zero status 1
0.94user 0.17system 0:31.94elapsed 3%CPU (0avgtext+0avgdata 72920maxresident)k
0inputs+0outputs (0major+17873minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/mergeSort/_mergeSortSharedKernel.bpl.ice2.bpl
#################
Wed Jan 30 20:47:31 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/mergeSort/bitonicSortSharedKernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/mergeSort/bitonicSortSharedKernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 64
Generating VC of $_Z23bitonicSortSharedKernelPjS_S_S_jj
Verifying $_Z23bitonicSortSharedKernelPjS_S_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.110028
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/mergeSort/bitonicSortSharedKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z23bitonicSortSharedKernelPjS_S_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 13.119644
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/mergeSort/bitonicSortSharedKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z23bitonicSortSharedKernelPjS_S_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 17.352624
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/mergeSort/bitonicSortSharedKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z23bitonicSortSharedKernelPjS_S_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0048 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 21.810238
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/mergeSort/bitonicSortSharedKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z23bitonicSortSharedKernelPjS_S_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0048 && b0050 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063
}
Prover Time taken = 8.010508
Added Horn clause: 0 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/mergeSort/bitonicSortSharedKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z23bitonicSortSharedKernelPjS_S_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0048 && b0050 && b0052 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063
}
Prover Time taken = 17.753127
Added Horn clause: 3 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/mergeSort/bitonicSortSharedKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z23bitonicSortSharedKernelPjS_S_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0048 && b0050 && b0052 && b0054 && b0055 && b0056 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063
}
Prover Time taken = 13.182846
Added Horn clause: 2 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/mergeSort/bitonicSortSharedKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z23bitonicSortSharedKernelPjS_S_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0048 && b0050 && b0052 && b0054 && b0056 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063
}
Prover Time taken = 0.115068
Prover time = 91.45
Number of prover queries = 8
Learner time = 0.00
Number of learner queries = 7
Total time: 91.57
Number of positive examples:4
Number of negative examples:0
Number of Horn clauses:3
verified

Boogie program verifier finished with 1 verified, 0 errors
1.01user 0.19system 1:32.21elapsed 1%CPU (0avgtext+0avgdata 66808maxresident)k
0inputs+0outputs (0major+31361minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/mergeSort/bitonicSortSharedKernel.bpl.ice2.bpl
#################
Wed Jan 30 20:49:03 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/reduction/reduce0.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/reduction/reduce0.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 10
Generating VC of $_Z7reduce0IiEvPT_S1_j
Verifying $_Z7reduce0IiEvPT_S1_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.067679
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/reduction/reduce0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z7reduce0IiEvPT_S1_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009
}
Prover Time taken = 0.066288
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/reduction/reduce0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z7reduce0IiEvPT_S1_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0001 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009
}
Prover Time taken = 0.059241
Prover time = 0.19
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.23
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.66user 0.09system 0:00.77elapsed 97%CPU (0avgtext+0avgdata 51176maxresident)k
0inputs+0outputs (0major+18641minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/reduction/reduce0.bpl.ice2.bpl
#################
Wed Jan 30 20:49:04 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/reduction/reduce1.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/reduction/reduce1.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 11
Generating VC of $_Z7reduce1IiEvPT_S1_j
Verifying $_Z7reduce1IiEvPT_S1_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.077623
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/reduction/reduce1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z7reduce1IiEvPT_S1_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010
}
Prover Time taken = 0.126923
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/reduction/reduce1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z7reduce1IiEvPT_S1_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0001 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010
}
Prover Time taken = 0.10835
Prover time = 0.31
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.35
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.61user 0.05system 0:01.30elapsed 51%CPU (0avgtext+0avgdata 55424maxresident)k
0inputs+0outputs (0major+13399minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/reduction/reduce1.bpl.ice2.bpl
#################
Wed Jan 30 20:49:06 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/reduction/reduce2.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/reduction/reduce2.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 10
Generating VC of $_Z7reduce2IiEvPT_S1_j
Verifying $_Z7reduce2IiEvPT_S1_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.076503
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/reduction/reduce2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z7reduce2IiEvPT_S1_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009
}
Prover Time taken = 0.051006
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/reduction/reduce2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z7reduce2IiEvPT_S1_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009
}
Prover Time taken = 0.057244
Added Horn clause: 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/reduction/reduce2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z7reduce2IiEvPT_S1_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0002 && b0004 && b0006 && b0007 && b0008 && b0009
}
Prover Time taken = 0.022966
Prover time = 0.21
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 0.26
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
0.75user 0.07system 0:00.79elapsed 104%CPU (0avgtext+0avgdata 53032maxresident)k
0inputs+0outputs (0major+17523minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/reduction/reduce2.bpl.ice2.bpl
#################
Wed Jan 30 20:49:06 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/reduction/reduce3.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/reduction/reduce3.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 9
Generating VC of $_Z7reduce3IiEvPT_S1_j
Verifying $_Z7reduce3IiEvPT_S1_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.091168
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/reduction/reduce3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z7reduce3IiEvPT_S1_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 0.056668
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/reduction/reduce3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z7reduce3IiEvPT_S1_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 0.085097
Added Horn clause: 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/reduction/reduce3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z7reduce3IiEvPT_S1_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0002 && b0004 && b0006 && b0007 && b0008
}
Prover Time taken = 0.027695
Prover time = 0.26
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 0.31
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
0.81user 0.08system 0:01.29elapsed 69%CPU (0avgtext+0avgdata 51020maxresident)k
0inputs+0outputs (0major+17816minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/reduction/reduce3.bpl.ice2.bpl
#################
Wed Jan 30 20:49:08 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/reduction/reduce4.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/reduction/reduce4.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 15
Generating VC of $_Z7reduce4IiLj256EEvPT_S1_j
Verifying $_Z7reduce4IiLj256EEvPT_S1_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.102768
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/reduction/reduce4.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z7reduce4IiLj256EEvPT_S1_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014
}
Prover Time taken = 2.674233
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/reduction/reduce4.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z7reduce4IiLj256EEvPT_S1_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014
}
Prover Time taken = 0.097801
Prover time = 2.87
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 2.92
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.69user 0.06system 0:03.82elapsed 19%CPU (0avgtext+0avgdata 64320maxresident)k
0inputs+0outputs (0major+16944minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/reduction/reduce4.bpl.ice2.bpl
#################
Wed Jan 30 20:49:11 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/scalarProd/scalarProd.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/scalarProd/scalarProd.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 146
Generating VC of $_Z13scalarProdGPUPfS_S_ii
Verifying $_Z13scalarProdGPUPfS_S_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.074861
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/scalarProd/scalarProd.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13scalarProdGPUPfS_S_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0047 && b0049 && b0050 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.84988
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/scalarProd/scalarProd.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13scalarProdGPUPfS_S_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0049 && b0050 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145
}
Prover Time taken = 1.155829
Added Horn clause: 2 && 3 && 3 => 4
Added Horn clause: 5 => 6
Added Horn clause: 7 && 3 && 3 => 8
Added Horn clause: 7 && 3 && 3 => 9
Added Horn clause: 10 && 3 && 3 && 3 && 3 && 3 && 3 => 11
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/scalarProd/scalarProd.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13scalarProdGPUPfS_S_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0049 && b0050 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0104 && b0105 && b0106 && b0107 && b0108 && b0110 && b0111 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145
}
Prover Time taken = 1.362596
Added Horn clause: 12 && 3 && 3 => 13
Added Horn clause: 14 && 3 && 3 && 11 && 3 => 15
Added Horn clause: 16 && 3 && 3 && 3 && 3 && 3 && 3 => 17
Added Horn clause: 16 && 3 && 3 && 3 && 3 && 3 && 3 => 18
Added Horn clause: 16 && 3 && 3 && 3 && 3 && 3 && 3 => 19
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/scalarProd/scalarProd.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13scalarProdGPUPfS_S_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0025 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0036 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0049 && b0050 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0105 && b0106 && b0107 && b0108 && b0110 && b0111 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0131 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145
}
Prover Time taken = 398.684576
Added Horn clause: 20 && 3 && 3 => 21
Added Horn clause: 22 && 3 && 3 && 23 && 19 && 24 && 18 => 25
Added Horn clause: 22 && 3 && 3 && 23 && 19 && 15 && 3 => 26
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/scalarProd/scalarProd.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13scalarProdGPUPfS_S_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0025 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0036 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0049 && b0050 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0106 && b0107 && b0108 && b0110 && b0111 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0131 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145
}
Prover Time taken = 1.8969
Added Horn clause: 27 && 3 && 3 => 28
Added Horn clause: 29 && 3 && 3 && 30 && 3 && 3 && 3 => 31
Added Horn clause: 32 && 3 && 3 && 23 && 3 && 3 && 3 => 33
Added Horn clause: 29 && 3 && 3 && 23 && 19 && 34 && 3 => 35
Added Horn clause: 32 && 3 && 3 && 23 && 19 && 26 && 3 => 36
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/scalarProd/scalarProd.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13scalarProdGPUPfS_S_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0025 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0034 && b0036 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0049 && b0050 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0106 && b0107 && b0108 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0131 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0142 && b0143 && b0144 && b0145
}
Prover Time taken = 2.483187
Added Horn clause: 37 && 38 && 9 && 39 && 3 => 40
Added Horn clause: 32 && 3 && 3 => 41
Added Horn clause: 42 && 3 && 3 && 43 && 19 && 15 && 3 => 44
Added Horn clause: 45 && 3 && 3 && 23 && 19 && 26 && 3 => 46
Added Horn clause: 47 && 3 && 3 && 23 && 19 && 26 && 18 => 48
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/scalarProd/scalarProd.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13scalarProdGPUPfS_S_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0025 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0036 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0049 && b0050 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0106 && b0107 && b0108 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0143 && b0144 && b0145
}
Prover Time taken = 4.296287
Added Horn clause: 49 && 3 && 3 && 50 && 3 => 51
Added Horn clause: 52 && 3 && 3 && 30 && 3 && 3 && 3 => 53
Added Horn clause: 54 && 3 && 3 && 23 && 19 && 55 && 3 => 56
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/scalarProd/scalarProd.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13scalarProdGPUPfS_S_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0025 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0036 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0049 && b0050 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0106 && b0107 && b0108 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0122 && b0123 && b0125 && b0126 && b0127 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0143 && b0144 && b0145
}
Prover Time taken = 10.907525
Added Horn clause: 57 && 3 && 3 && 30 && 3 && 3 && 3 => 58
Added Horn clause: 57 && 3 && 3 && 59 && 3 => 60
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/scalarProd/scalarProd.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13scalarProdGPUPfS_S_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0025 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0036 && b0038 && b0039 && b0040 && b0041 && b0043 && b0049 && b0050 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0078 && b0080 && b0081 && b0082 && b0083 && b0084 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0106 && b0107 && b0108 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0122 && b0123 && b0125 && b0126 && b0127 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0143 && b0144 && b0145
}
Prover Time taken = 12.161059
Added Horn clause: 61 && 3 && 3 => 62
Added Horn clause: 63 => 64
Added Horn clause: 65 && 3 && 3 && 50 && 3 && 3 && 51 => 66
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/scalarProd/scalarProd.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13scalarProdGPUPfS_S_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0025 && b0027 && b0028 && b0030 && b0031 && b0032 && b0036 && b0038 && b0039 && b0040 && b0041 && b0043 && b0049 && b0050 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0080 && b0081 && b0082 && b0083 && b0084 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0099 && b0100 && b0101 && b0106 && b0107 && b0108 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0122 && b0123 && b0125 && b0126 && b0127 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0143 && b0144 && b0145
}
Prover Time taken = 4.433277
Added Horn clause: 67 => 68
Added Horn clause: 69 && 3 && 3 && 70 && 62 => 71
Added Horn clause: 65 && 3 && 3 && 30 && 3 && 3 && 3 => 72
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/scalarProd/scalarProd.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13scalarProdGPUPfS_S_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0020 && b0021 && b0022 && b0023 && b0025 && b0027 && b0028 && b0030 && b0031 && b0032 && b0036 && b0038 && b0039 && b0040 && b0043 && b0049 && b0050 && b0070 && b0072 && b0073 && b0074 && b0075 && b0076 && b0080 && b0081 && b0082 && b0083 && b0084 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0099 && b0100 && b0101 && b0106 && b0107 && b0108 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0122 && b0123 && b0125 && b0126 && b0127 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0143 && b0144 && b0145
}
Prover Time taken = 10.258711
Added Horn clause: 73 && 3 && 68 => 74
Added Horn clause: 75 => 76
Added Horn clause: 77 && 3 && 3 && 78 && 3 && 55 && 60 => 79
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/scalarProd/scalarProd.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13scalarProdGPUPfS_S_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0020 && b0021 && b0022 && b0023 && b0025 && b0027 && b0028 && b0031 && b0032 && b0036 && b0038 && b0039 && b0040 && b0043 && b0049 && b0050 && b0070 && b0072 && b0073 && b0074 && b0075 && b0076 && b0080 && b0082 && b0083 && b0084 && b0092 && b0094 && b0095 && b0096 && b0097 && b0099 && b0100 && b0101 && b0106 && b0107 && b0108 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0122 && b0123 && b0125 && b0126 && b0127 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0143 && b0144 && b0145
}
Prover Time taken = 6.365123
Added Horn clause: 80 && 3 && 68 && 81 && 74 => 82
Added Horn clause: 83 && 84 && 3 => 85
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/scalarProd/scalarProd.bpl.ice2.bpl
Total learner time was 00:00:01
Verifying $_Z13scalarProdGPUPfS_S_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0020 && b0021 && b0022 && b0023 && b0025 && b0027 && b0028 && b0031 && b0032 && b0036 && b0038 && b0039 && b0040 && b0049 && b0050 && b0070 && b0072 && b0073 && b0074 && b0075 && b0076 && b0080 && b0082 && b0083 && b0084 && b0092 && b0094 && b0095 && b0096 && b0097 && b0099 && b0100 && b0101 && b0106 && b0107 && b0108 && b0114 && b0116 && b0117 && b0118 && b0119 && b0122 && b0123 && b0125 && b0126 && b0127 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0143 && b0144 && b0145
}
Prover Time taken = 11.914832
Added Horn clause: 83 && 84 && 3 && 86 && 3 => 87
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/scalarProd/scalarProd.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13scalarProdGPUPfS_S_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0020 && b0021 && b0022 && b0023 && b0025 && b0027 && b0028 && b0031 && b0032 && b0036 && b0038 && b0039 && b0040 && b0049 && b0050 && b0070 && b0072 && b0073 && b0074 && b0075 && b0076 && b0080 && b0082 && b0083 && b0084 && b0092 && b0094 && b0095 && b0096 && b0097 && b0099 && b0100 && b0101 && b0106 && b0107 && b0108 && b0114 && b0116 && b0117 && b0118 && b0119 && b0122 && b0123 && b0125 && b0126 && b0127 && b0134 && b0136 && b0137 && b0138 && b0139 && b0143 && b0144 && b0145
}
Prover Time taken = 6.490287
Prover time = 474.33
Number of prover queries = 15
Learner time = 1.00
Number of learner queries = 14
Total time: 474.92
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:40
verified

Boogie program verifier finished with 1 verified, 0 errors
2.99user 0.60system 7:55.99elapsed 0%CPU (0avgtext+0avgdata 78784maxresident)k
0inputs+0outputs (0major+55696minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/scalarProd/scalarProd.bpl.ice2.bpl
#################
Wed Jan 30 20:57:07 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/scan/scanExclusiveShared.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/scan/scanExclusiveShared.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 8
Generating VC of $_Z19scanExclusiveSharedP5uint4S0_j
Verifying $_Z19scanExclusiveSharedP5uint4S0_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.171747
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/scan/scanExclusiveShared.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z19scanExclusiveSharedP5uint4S0_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007
}
Added: my_inv:1,1,1,1,1,1,0,0: positive
Prover Time taken = 0.939839
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/scan/scanExclusiveShared.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z19scanExclusiveSharedP5uint4S0_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005
}
Prover Time taken = 1.600037
Added Horn clause: 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/scan/scanExclusiveShared.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z19scanExclusiveSharedP5uint4S0_j: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0001 && b0003 && b0004 && b0005
}
Prover Time taken = 1.737309
Prover time = 4.45
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 4.50
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
5.00user 0.12system 0:05.33elapsed 96%CPU (0avgtext+0avgdata 54468maxresident)k
0inputs+0outputs (0major+22529minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/scan/scanExclusiveShared.bpl.ice2.bpl
#################
Wed Jan 30 20:57:13 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/scan/scanExclusiveShared2.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/scan/scanExclusiveShared2.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 8
Generating VC of $_Z20scanExclusiveShared2PjS_S_jj
Verifying $_Z20scanExclusiveShared2PjS_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.192572
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/scan/scanExclusiveShared2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z20scanExclusiveShared2PjS_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007
}
Added: my_inv:1,1,1,1,1,1,0,0: positive
Prover Time taken = 0.441328
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/scan/scanExclusiveShared2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z20scanExclusiveShared2PjS_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005
}
Prover Time taken = 0.877629
Added Horn clause: 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/scan/scanExclusiveShared2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z20scanExclusiveShared2PjS_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0001 && b0003 && b0004 && b0005
}
Prover Time taken = 0.689883
Added Horn clause: 2 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/scan/scanExclusiveShared2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z20scanExclusiveShared2PjS_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0003 && b0004 && b0005
}
Prover Time taken = 0.633085
Prover time = 2.83
Number of prover queries = 5
Learner time = 0.00
Number of learner queries = 4
Total time: 2.89
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
3.39user 0.10system 0:03.80elapsed 92%CPU (0avgtext+0avgdata 55412maxresident)k
0inputs+0outputs (0major+19521minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/scan/scanExclusiveShared2.bpl.ice2.bpl
#################
Wed Jan 30 20:57:17 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/shfl_scan/shfl_vertical_shfl.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/shfl_scan/shfl_vertical_shfl.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 23
Generating VC of $_Z18shfl_vertical_shflPjii
Verifying $_Z18shfl_vertical_shflPjii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.069768
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/shfl_scan/shfl_vertical_shfl.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18shfl_vertical_shflPjii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022
}
Added: my_inv:1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.815981
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/shfl_scan/shfl_vertical_shfl.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18shfl_vertical_shflPjii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022
}
Prover Time taken = 1.093874
Added Horn clause: 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/shfl_scan/shfl_vertical_shfl.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18shfl_vertical_shflPjii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0002 && b0004 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022
}
Prover Time taken = 0.816865
Added Horn clause: 0 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/shfl_scan/shfl_vertical_shfl.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18shfl_vertical_shflPjii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0002 && b0004 && b0007 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022
}
Prover Time taken = 1.346726
Added Horn clause: 0 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/shfl_scan/shfl_vertical_shfl.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18shfl_vertical_shflPjii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0002 && b0004 && b0007 && b0009 && b0010 && b0011 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022
}
Prover Time taken = 2.083607
Added Horn clause: 5 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/shfl_scan/shfl_vertical_shfl.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18shfl_vertical_shflPjii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0002 && b0004 && b0007 && b0009 && b0010 && b0011 && b0013 && b0015 && b0016 && b0019 && b0020 && b0021 && b0022
}
Prover Time taken = 29.148437
Added Horn clause: 0 => 7
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/shfl_scan/shfl_vertical_shfl.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18shfl_vertical_shflPjii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0002 && b0004 && b0009 && b0010 && b0011 && b0013 && b0015 && b0016 && b0019 && b0020 && b0021 && b0022
}
Prover Time taken = 28.261782
Added Horn clause: 0 => 8
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/shfl_scan/shfl_vertical_shfl.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18shfl_vertical_shflPjii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0002 && b0004 && b0009 && b0011 && b0013 && b0015 && b0016 && b0019 && b0020 && b0021 && b0022
}
Prover Time taken = 27.246669
Added Horn clause: 5 => 9
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/shfl_scan/shfl_vertical_shfl.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18shfl_vertical_shflPjii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0002 && b0004 && b0009 && b0011 && b0019 && b0020 && b0021 && b0022
}
Prover Time taken = 13.975756
Prover time = 104.86
Number of prover queries = 10
Learner time = 0.00
Number of learner queries = 9
Total time: 104.97
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:7
verified

Boogie program verifier finished with 1 verified, 0 errors
0.75user 0.18system 1:45.73elapsed 0%CPU (0avgtext+0avgdata 57776maxresident)k
0inputs+0outputs (0major+17500minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/shfl_scan/shfl_vertical_shfl.bpl.ice2.bpl
#################
Wed Jan 30 20:59:02 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/simpleHyperQ/sum.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/simpleHyperQ/sum.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 19
Generating VC of $_Z3sumPji
Verifying $_Z3sumPji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.06278
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/simpleHyperQ/sum.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z3sumPji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018
}
Prover Time taken = 0.129456
Added Horn clause: 0 && 0 => 1
Added Horn clause: 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/simpleHyperQ/sum.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z3sumPji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018
}
Prover Time taken = 0.135725
Added Horn clause: 0 && 1 => 3
Added Horn clause: 2 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/simpleHyperQ/sum.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z3sumPji: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool) : bool
{
  b0000 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0015 && b0016 && b0017 && b0018
}
Prover Time taken = 0.072224
Prover time = 0.40
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 0.45
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:4
verified

Boogie program verifier finished with 1 verified, 0 errors
0.88user 0.11system 0:01.27elapsed 78%CPU (0avgtext+0avgdata 55680maxresident)k
0inputs+0outputs (0major+19050minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/simpleHyperQ/sum.bpl.ice2.bpl
#################
Wed Jan 30 20:59:04 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/bitonicMergeShared.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/bitonicMergeShared.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 10
Generating VC of $_Z18bitonicMergeSharedPjS_S_S_jjj
Verifying $_Z18bitonicMergeSharedPjS_S_S_jjj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.11342
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/bitonicMergeShared.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18bitonicMergeSharedPjS_S_S_jjj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009
}
Added: my_inv:1,1,1,1,1,1,1,1,1,0: positive
Prover Time taken = 3.180463
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/bitonicMergeShared.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18bitonicMergeSharedPjS_S_S_jjj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008
}
Added: my_inv:1,1,1,1,1,1,1,0,1,1: positive
Prover Time taken = 3.465507
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/bitonicMergeShared.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18bitonicMergeSharedPjS_S_S_jjj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0008
}
Prover Time taken = 0.502124
Added Horn clause: 0 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/bitonicMergeShared.bpl.ice2.bpl
Total learner time was 00:00:01
Verifying $_Z18bitonicMergeSharedPjS_S_S_jjj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0008
}
Prover Time taken = 2.261998
Added Horn clause: 3 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/bitonicMergeShared.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18bitonicMergeSharedPjS_S_S_jjj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0002 && b0004 && b0006 && b0008
}
Prover Time taken = 1.243539
Added Horn clause: 3 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/bitonicMergeShared.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18bitonicMergeSharedPjS_S_S_jjj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0002 && b0004
}
Prover Time taken = 0.474549
Prover time = 11.24
Number of prover queries = 7
Learner time = 1.00
Number of learner queries = 6
Total time: 11.33
Number of positive examples:3
Number of negative examples:0
Number of Horn clauses:3
verified

Boogie program verifier finished with 1 verified, 0 errors
11.83user 0.18system 0:12.32elapsed 97%CPU (0avgtext+0avgdata 65712maxresident)k
0inputs+0outputs (0major+34670minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/sortingNetworks/bitonicMergeShared.bpl.ice2.bpl
#################
Wed Jan 30 20:59:16 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/bitonicSortShared.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/bitonicSortShared.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 64
Generating VC of $_Z17bitonicSortSharedPjS_S_S_jj
Verifying $_Z17bitonicSortSharedPjS_S_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.13178
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/bitonicSortShared.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17bitonicSortSharedPjS_S_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 13.428012
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/bitonicSortShared.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17bitonicSortSharedPjS_S_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 9.162402
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/bitonicSortShared.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17bitonicSortSharedPjS_S_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0048 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 29.761254
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/bitonicSortShared.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17bitonicSortSharedPjS_S_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0048 && b0050 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063
}
Prover Time taken = 12.569177
Added Horn clause: 2 => 4
Added Horn clause: 0 && 5 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/bitonicSortShared.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17bitonicSortSharedPjS_S_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0048 && b0050 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0060 && b0062 && b0063
}
Prover Time taken = 25.317905
Added Horn clause: 7 => 8
Added Horn clause: 0 && 6 => 9
Added Horn clause: 0 && 5 => 10
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/bitonicSortShared.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17bitonicSortSharedPjS_S_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool) : bool
{
  b0001 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0048 && b0050 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0060
}
Prover Time taken = 34.576345
Added Horn clause: 11 => 12
Added Horn clause: 13 && 14 => 15
Added Horn clause: 16 && 5 => 17
Added Horn clause: 13 && 18 => 19
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/bitonicSortShared.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17bitonicSortSharedPjS_S_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool) : bool
{
  b0001 && b0003 && b0004 && b0006 && b0008 && b0010 && b0012 && b0013 && b0048 && b0052 && b0053 && b0054 && b0055 && b0056 && b0058
}
Prover Time taken = 11.76559
Added Horn clause: 20 && 17 => 21
Added Horn clause: 22 => 23
Added Horn clause: 24 && 25 => 26
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/bitonicSortShared.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17bitonicSortSharedPjS_S_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool) : bool
{
  b0001 && b0003 && b0004 && b0006 && b0008 && b0010 && b0012 && b0013 && b0052 && b0054 && b0055 && b0058
}
Prover Time taken = 37.392951
Added Horn clause: 27 => 28
Added Horn clause: 20 && 17 => 29
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/bitonicSortShared.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17bitonicSortSharedPjS_S_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool) : bool
{
  b0001 && b0003 && b0004 && b0006 && b0008 && b0010 && b0012 && b0013 && b0052 && b0058
}
Prover Time taken = 0.980621
Prover time = 175.09
Number of prover queries = 10
Learner time = 0.00
Number of learner queries = 9
Total time: 175.23
Number of positive examples:4
Number of negative examples:0
Number of Horn clauses:14
verified

Boogie program verifier finished with 1 verified, 0 errors
1.63user 0.27system 2:56.13elapsed 1%CPU (0avgtext+0avgdata 75748maxresident)k
0inputs+0outputs (0major+36473minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/sortingNetworks/bitonicSortShared.bpl.ice2.bpl
#################
Wed Jan 30 21:02:12 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/bitonicSortShared1.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/bitonicSortShared1.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 64
Generating VC of $_Z18bitonicSortShared1PjS_S_S_
Verifying $_Z18bitonicSortShared1PjS_S_S_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.140509
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/bitonicSortShared1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18bitonicSortShared1PjS_S_S_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 5.975428
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/bitonicSortShared1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18bitonicSortShared1PjS_S_S_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 15.626276
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/bitonicSortShared1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18bitonicSortShared1PjS_S_S_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0048 && b0049 && b0050 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 10.03947
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/bitonicSortShared1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18bitonicSortShared1PjS_S_S_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0048 && b0050 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063
}
Prover Time taken = 14.780925
Added Horn clause: 0 && 4 => 5
Added Horn clause: 3 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/bitonicSortShared1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18bitonicSortShared1PjS_S_S_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0048 && b0050 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0060 && b0062 && b0063
}
Prover Time taken = 40.333677
Added Horn clause: 0 && 5 => 7
Added Horn clause: 2 => 8
Added Horn clause: 0 && 4 => 9
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/bitonicSortShared1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18bitonicSortShared1PjS_S_S_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool) : bool
{
  b0001 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0048 && b0050 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0060
}
Prover Time taken = 6.334887
Added Horn clause: 10 && 4 => 11
Added Horn clause: 12 => 13
Added Horn clause: 14 && 15 => 16
Added Horn clause: 17 && 18 => 19
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/bitonicSortShared1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18bitonicSortShared1PjS_S_S_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool) : bool
{
  b0001 && b0003 && b0004 && b0006 && b0008 && b0010 && b0012 && b0013 && b0048 && b0052 && b0053 && b0054 && b0056 && b0057 && b0058
}
Prover Time taken = 18.17353
Added Horn clause: 10 && 11 => 20
Added Horn clause: 0 && 21 => 22
Added Horn clause: 23 => 24
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/bitonicSortShared1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18bitonicSortShared1PjS_S_S_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool) : bool
{
  b0001 && b0003 && b0004 && b0006 && b0008 && b0010 && b0012 && b0013 && b0052 && b0054 && b0057 && b0058
}
Prover Time taken = 23.466635
Added Horn clause: 25 => 26
Added Horn clause: 27 && 11 => 28
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/bitonicSortShared1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18bitonicSortShared1PjS_S_S_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool) : bool
{
  b0001 && b0003 && b0004 && b0006 && b0008 && b0010 && b0012 && b0013 && b0052 && b0057 && b0058
}
Prover Time taken = 22.157404
Added Horn clause: 29 => 30
Added Horn clause: 10 && 11 => 31
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/bitonicSortShared1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18bitonicSortShared1PjS_S_S_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool) : bool
{
  b0001 && b0003 && b0004 && b0006 && b0008 && b0010 && b0012 && b0013 && b0052 && b0058
}
Prover Time taken = 2.563298
Prover time = 159.59
Number of prover queries = 11
Learner time = 0.00
Number of learner queries = 10
Total time: 159.76
Number of positive examples:4
Number of negative examples:0
Number of Horn clauses:16
verified

Boogie program verifier finished with 1 verified, 0 errors
1.54user 0.25system 2:40.42elapsed 1%CPU (0avgtext+0avgdata 76108maxresident)k
0inputs+0outputs (0major+36722minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/sortingNetworks/bitonicSortShared1.bpl.ice2.bpl
#################
Wed Jan 30 21:04:53 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/oddEvenMergeSortShared.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/oddEvenMergeSortShared.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 56
Generating VC of $_Z22oddEvenMergeSortSharedPjS_S_S_jj
Verifying $_Z22oddEvenMergeSortSharedPjS_S_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.115356
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/oddEvenMergeSortShared.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z22oddEvenMergeSortSharedPjS_S_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0012 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 7.601844
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/oddEvenMergeSortShared.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z22oddEvenMergeSortSharedPjS_S_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0012 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 24.046881
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/oddEvenMergeSortShared.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z22oddEvenMergeSortSharedPjS_S_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1: positive
Prover Time taken = 24.621522
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/oddEvenMergeSortShared.bpl.ice2.bpl
Total learner time was 00:00:01
Verifying $_Z22oddEvenMergeSortSharedPjS_S_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0046 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,1,1,1,1,1: positive
Prover Time taken = 9.368465
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/oddEvenMergeSortShared.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z22oddEvenMergeSortSharedPjS_S_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0046 && b0048 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055
}
Prover Time taken = 9.167016
Added Horn clause: 0 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/oddEvenMergeSortShared.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z22oddEvenMergeSortSharedPjS_S_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0046 && b0048 && b0050 && b0052 && b0053 && b0054 && b0055
}
Prover Time taken = 15.536179
Added Horn clause: 0 && 5 => 6
Added Horn clause: 0 => 7
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/oddEvenMergeSortShared.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z22oddEvenMergeSortSharedPjS_S_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  b0001 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0046 && b0048 && b0050 && b0052 && b0053 && b0054
}
Prover Time taken = 14.361694
Added Horn clause: 8 && 9 => 10
Added Horn clause: 8 => 11
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/oddEvenMergeSortShared.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z22oddEvenMergeSortSharedPjS_S_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  b0001 && b0003 && b0004 && b0006 && b0008 && b0009 && b0046 && b0048 && b0050 && b0052 && b0054
}
Prover Time taken = 14.14724
Added Horn clause: 12 && 10 => 13
Added Horn clause: 8 && 14 => 15
Added Horn clause: 16 => 17
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/oddEvenMergeSortShared.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z22oddEvenMergeSortSharedPjS_S_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  b0003 && b0004 && b0006 && b0008 && b0009 && b0046 && b0048 && b0050
}
Prover Time taken = 10.00307
Added Horn clause: 18 && 14 => 19
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/oddEvenMergeSortShared.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z22oddEvenMergeSortSharedPjS_S_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  b0004 && b0006 && b0008 && b0046 && b0048 && b0050
}
Prover Time taken = 5.147606
Added Horn clause: 20 && 21 => 22
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/oddEvenMergeSortShared.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z22oddEvenMergeSortSharedPjS_S_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  b0004 && b0006 && b0008 && b0046 && b0050
}
Prover Time taken = 6.231208
Added Horn clause: 8 && 23 => 24
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/sortingNetworks/oddEvenMergeSortShared.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z22oddEvenMergeSortSharedPjS_S_S_jj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  b0004 && b0006 && b0008 && b0050
}
Prover Time taken = 1.839689
Prover time = 142.19
Number of prover queries = 13
Learner time = 1.00
Number of learner queries = 12
Total time: 142.36
Number of positive examples:5
Number of negative examples:0
Number of Horn clauses:11
verified

Boogie program verifier finished with 1 verified, 0 errors
1.43user 0.29system 2:22.94elapsed 1%CPU (0avgtext+0avgdata 67048maxresident)k
0inputs+0outputs (0major+35437minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/sortingNetworks/oddEvenMergeSortShared.bpl.ice2.bpl
#################
Wed Jan 30 21:07:15 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 11
Generating VC of $_Z16reduceSinglePassILj128ELb1EEvPKfPfj
Verifying $_Z16reduceSinglePassILj128ELb1EEvPKfPfj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.898175
Prover time = 1.90
Number of prover queries = 1
Learner time = 0.00
Number of learner queries = 0
Total time: 1.91
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:0
errors
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(440,5): Error BP5002: A precondition for this call might not hold.
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1196,3): Related location: This is the precondition that might not hold.
Execution trace:
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(310,3): $0
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(322,3): $1
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1208,28): inline$_LOG_WRITE_$$sdata$0$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1211,3): inline$_LOG_WRITE_$$sdata$0$log_access_entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1255,3): inline$_UPDATE_WRITE_READ_BENIGN_FLAG_$$sdata$0$_UPDATE_BENIGN_FLAG
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$2
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1432,28): inline$$bugle_barrier_duplicated_0$0$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1438,3): inline$$bugle_barrier_duplicated_0$0$anon12_Else
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1495,3): inline$$bugle_barrier_duplicated_0$0$anon13_Then
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1467,3): inline$$bugle_barrier_duplicated_0$0$anon7
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1490,3): inline$$bugle_barrier_duplicated_0$0$anon14_Then
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$3
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1185,28): inline$_LOG_READ_$$sdata$0$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1188,3): inline$_LOG_READ_$$sdata$0$log_access_entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$4
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1208,28): inline$_LOG_WRITE_$$sdata$1$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1211,3): inline$_LOG_WRITE_$$sdata$1$log_access_entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1255,3): inline$_UPDATE_WRITE_READ_BENIGN_FLAG_$$sdata$1$_UPDATE_BENIGN_FLAG
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$6
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1518,28): inline$$bugle_barrier_duplicated_1$0$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1524,3): inline$$bugle_barrier_duplicated_1$0$anon12_Else
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1581,3): inline$$bugle_barrier_duplicated_1$0$anon13_Then
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1553,3): inline$$bugle_barrier_duplicated_1$0$anon7
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1576,3): inline$$bugle_barrier_duplicated_1$0$anon14_Then
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$7
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1185,28): inline$_LOG_READ_$$sdata$1$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1188,3): inline$_LOG_READ_$$sdata$1$log_access_entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$8
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1208,28): inline$_LOG_WRITE_$$sdata$2$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1211,3): inline$_LOG_WRITE_$$sdata$2$log_access_entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1255,3): inline$_UPDATE_WRITE_READ_BENIGN_FLAG_$$sdata$2$_UPDATE_BENIGN_FLAG
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$10
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1185,28): inline$_LOG_READ_$$sdata$2$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1188,3): inline$_LOG_READ_$$sdata$2$log_access_entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$11
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(449,5): Error BP5002: A precondition for this call might not hold.
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1221,3): Related location: This is the precondition that might not hold.
Execution trace:
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(310,3): $0
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(322,3): $1
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1208,28): inline$_LOG_WRITE_$$sdata$0$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1211,3): inline$_LOG_WRITE_$$sdata$0$log_access_entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1255,3): inline$_UPDATE_WRITE_READ_BENIGN_FLAG_$$sdata$0$_UPDATE_BENIGN_FLAG
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$2
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1432,28): inline$$bugle_barrier_duplicated_0$0$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1438,3): inline$$bugle_barrier_duplicated_0$0$anon12_Else
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1495,3): inline$$bugle_barrier_duplicated_0$0$anon13_Then
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1467,3): inline$$bugle_barrier_duplicated_0$0$anon7
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1490,3): inline$$bugle_barrier_duplicated_0$0$anon14_Then
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$3
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1185,28): inline$_LOG_READ_$$sdata$0$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1188,3): inline$_LOG_READ_$$sdata$0$log_access_entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$4
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1208,28): inline$_LOG_WRITE_$$sdata$1$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1211,3): inline$_LOG_WRITE_$$sdata$1$log_access_entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1255,3): inline$_UPDATE_WRITE_READ_BENIGN_FLAG_$$sdata$1$_UPDATE_BENIGN_FLAG
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$6
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1518,28): inline$$bugle_barrier_duplicated_1$0$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1524,3): inline$$bugle_barrier_duplicated_1$0$anon12_Else
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1581,3): inline$$bugle_barrier_duplicated_1$0$anon13_Then
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1553,3): inline$$bugle_barrier_duplicated_1$0$anon7
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1576,3): inline$$bugle_barrier_duplicated_1$0$anon14_Then
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$7
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1185,28): inline$_LOG_READ_$$sdata$1$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1188,3): inline$_LOG_READ_$$sdata$1$log_access_entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$8
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1208,28): inline$_LOG_WRITE_$$sdata$2$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1211,3): inline$_LOG_WRITE_$$sdata$2$log_access_entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1255,3): inline$_UPDATE_WRITE_READ_BENIGN_FLAG_$$sdata$2$_UPDATE_BENIGN_FLAG
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$10
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1185,28): inline$_LOG_READ_$$sdata$2$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1188,3): inline$_LOG_READ_$$sdata$2$log_access_entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$11
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1208,28): inline$_LOG_WRITE_$$sdata$3$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1211,3): inline$_LOG_WRITE_$$sdata$3$log_access_entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1255,3): inline$_UPDATE_WRITE_READ_BENIGN_FLAG_$$sdata$3$_UPDATE_BENIGN_FLAG
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$13
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(464,5): Error BP5002: A precondition for this call might not hold.
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1221,3): Related location: This is the precondition that might not hold.
Execution trace:
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(310,3): $0
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(322,3): $1
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1208,28): inline$_LOG_WRITE_$$sdata$0$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1211,3): inline$_LOG_WRITE_$$sdata$0$log_access_entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1255,3): inline$_UPDATE_WRITE_READ_BENIGN_FLAG_$$sdata$0$_UPDATE_BENIGN_FLAG
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$2
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1432,28): inline$$bugle_barrier_duplicated_0$0$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1438,3): inline$$bugle_barrier_duplicated_0$0$anon12_Else
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1495,3): inline$$bugle_barrier_duplicated_0$0$anon13_Then
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1467,3): inline$$bugle_barrier_duplicated_0$0$anon7
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1490,3): inline$$bugle_barrier_duplicated_0$0$anon14_Then
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$3
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1185,28): inline$_LOG_READ_$$sdata$0$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1188,3): inline$_LOG_READ_$$sdata$0$log_access_entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$4
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1208,28): inline$_LOG_WRITE_$$sdata$1$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1211,3): inline$_LOG_WRITE_$$sdata$1$log_access_entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1255,3): inline$_UPDATE_WRITE_READ_BENIGN_FLAG_$$sdata$1$_UPDATE_BENIGN_FLAG
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$6
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1518,28): inline$$bugle_barrier_duplicated_1$0$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1524,3): inline$$bugle_barrier_duplicated_1$0$anon12_Else
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1581,3): inline$$bugle_barrier_duplicated_1$0$anon13_Then
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1553,3): inline$$bugle_barrier_duplicated_1$0$anon7
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1576,3): inline$$bugle_barrier_duplicated_1$0$anon14_Then
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$7
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1185,28): inline$_LOG_READ_$$sdata$1$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1188,3): inline$_LOG_READ_$$sdata$1$log_access_entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$8
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1208,28): inline$_LOG_WRITE_$$sdata$2$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1211,3): inline$_LOG_WRITE_$$sdata$2$log_access_entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1255,3): inline$_UPDATE_WRITE_READ_BENIGN_FLAG_$$sdata$2$_UPDATE_BENIGN_FLAG
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$10
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1185,28): inline$_LOG_READ_$$sdata$2$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1188,3): inline$_LOG_READ_$$sdata$2$log_access_entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$11
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1208,28): inline$_LOG_WRITE_$$sdata$3$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1211,3): inline$_LOG_WRITE_$$sdata$3$log_access_entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1255,3): inline$_UPDATE_WRITE_READ_BENIGN_FLAG_$$sdata$3$_UPDATE_BENIGN_FLAG
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$13
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1185,28): inline$_LOG_READ_$$sdata$3$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1188,3): inline$_LOG_READ_$$sdata$3$log_access_entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$14
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1208,28): inline$_LOG_WRITE_$$sdata$4$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1211,3): inline$_LOG_WRITE_$$sdata$4$log_access_entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1255,3): inline$_UPDATE_WRITE_READ_BENIGN_FLAG_$$sdata$4$_UPDATE_BENIGN_FLAG
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$16
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(479,5): Error BP5002: A precondition for this call might not hold.
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1221,3): Related location: This is the precondition that might not hold.
Execution trace:
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(310,3): $0
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(322,3): $1
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1208,28): inline$_LOG_WRITE_$$sdata$0$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1211,3): inline$_LOG_WRITE_$$sdata$0$log_access_entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1255,3): inline$_UPDATE_WRITE_READ_BENIGN_FLAG_$$sdata$0$_UPDATE_BENIGN_FLAG
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$2
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1432,28): inline$$bugle_barrier_duplicated_0$0$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1438,3): inline$$bugle_barrier_duplicated_0$0$anon12_Else
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1495,3): inline$$bugle_barrier_duplicated_0$0$anon13_Then
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1467,3): inline$$bugle_barrier_duplicated_0$0$anon7
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1490,3): inline$$bugle_barrier_duplicated_0$0$anon14_Then
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$3
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1185,28): inline$_LOG_READ_$$sdata$0$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1188,3): inline$_LOG_READ_$$sdata$0$log_access_entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$4
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1208,28): inline$_LOG_WRITE_$$sdata$1$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1211,3): inline$_LOG_WRITE_$$sdata$1$log_access_entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1255,3): inline$_UPDATE_WRITE_READ_BENIGN_FLAG_$$sdata$1$_UPDATE_BENIGN_FLAG
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$6
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1518,28): inline$$bugle_barrier_duplicated_1$0$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1524,3): inline$$bugle_barrier_duplicated_1$0$anon12_Else
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1581,3): inline$$bugle_barrier_duplicated_1$0$anon13_Then
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1553,3): inline$$bugle_barrier_duplicated_1$0$anon7
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1576,3): inline$$bugle_barrier_duplicated_1$0$anon14_Then
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$7
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1185,28): inline$_LOG_READ_$$sdata$1$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1188,3): inline$_LOG_READ_$$sdata$1$log_access_entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$8
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1208,28): inline$_LOG_WRITE_$$sdata$2$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1211,3): inline$_LOG_WRITE_$$sdata$2$log_access_entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1255,3): inline$_UPDATE_WRITE_READ_BENIGN_FLAG_$$sdata$2$_UPDATE_BENIGN_FLAG
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$10
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1185,28): inline$_LOG_READ_$$sdata$2$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1188,3): inline$_LOG_READ_$$sdata$2$log_access_entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$11
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1208,28): inline$_LOG_WRITE_$$sdata$3$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1211,3): inline$_LOG_WRITE_$$sdata$3$log_access_entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1255,3): inline$_UPDATE_WRITE_READ_BENIGN_FLAG_$$sdata$3$_UPDATE_BENIGN_FLAG
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$13
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1185,28): inline$_LOG_READ_$$sdata$3$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1188,3): inline$_LOG_READ_$$sdata$3$log_access_entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$14
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1208,28): inline$_LOG_WRITE_$$sdata$4$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1211,3): inline$_LOG_WRITE_$$sdata$4$log_access_entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1255,3): inline$_UPDATE_WRITE_READ_BENIGN_FLAG_$$sdata$4$_UPDATE_BENIGN_FLAG
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$16
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1185,28): inline$_LOG_READ_$$sdata$4$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1188,3): inline$_LOG_READ_$$sdata$4$log_access_entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$17
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1208,28): inline$_LOG_WRITE_$$sdata$5$Entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1211,3): inline$_LOG_WRITE_$$sdata$5$log_access_entry
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(1255,3): inline$_UPDATE_WRITE_READ_BENIGN_FLAG_$$sdata$5$_UPDATE_BENIGN_FLAG
    /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl(377,3): __partitioned_block_$1.tail_0$19

Boogie program verifier finished with 0 verified, 4 errors
0.80user 0.05system 0:02.85elapsed 29%CPU (0avgtext+0avgdata 61784maxresident)k
0inputs+0outputs (0major+11853minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/threadFenceReduction/_reduceSinglePass.bpl.ice2.bpl
#################
Wed Jan 30 21:07:18 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/copy.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/copy.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 19
Generating VC of $_Z4copyPfS_iii
Verifying $_Z4copyPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.075205
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/copy.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z4copyPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018
}
Prover Time taken = 0.192955
Added Horn clause: 0 && 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/copy.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z4copyPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018
}
Prover Time taken = 0.619464
Added Horn clause: 0 && 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/copy.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z4copyPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018
}
Prover Time taken = 0.358514
Prover time = 1.25
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 1.30
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
1.81user 0.07system 0:02.30elapsed 82%CPU (0avgtext+0avgdata 52320maxresident)k
0inputs+0outputs (0major+22092minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/transpose/copy.bpl.ice2.bpl
#################
Wed Jan 30 21:07:21 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/copySharedMem.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/copySharedMem.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 26
Generating VC of $_Z13copySharedMemPfS_iii
Verifying $_Z13copySharedMemPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.074892
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/copySharedMem.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13copySharedMemPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025
}
Prover Time taken = 0.093304
Added Horn clause: 0 && 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/copySharedMem.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13copySharedMemPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025
}
Prover Time taken = 0.076222
Added Horn clause: 0 && 1 && 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/copySharedMem.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13copySharedMemPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025
}
Prover Time taken = 0.170389
Added Horn clause: 0 && 1 && 2 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/copySharedMem.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13copySharedMemPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025
}
Prover Time taken = 0.131146
Added Horn clause: 0 && 1 && 2 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/copySharedMem.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13copySharedMemPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025
}
Prover Time taken = 0.181532
Added Horn clause: 0 && 1 && 2 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/copySharedMem.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13copySharedMemPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0014 && b0016 && b0018 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025
}
Prover Time taken = 0.091055
Prover time = 0.82
Number of prover queries = 7
Learner time = 0.00
Number of learner queries = 6
Total time: 0.90
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:5
verified

Boogie program verifier finished with 1 verified, 0 errors
1.42user 0.09system 0:01.79elapsed 84%CPU (0avgtext+0avgdata 56292maxresident)k
0inputs+0outputs (0major+19473minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/transpose/copySharedMem.bpl.ice2.bpl
#################
Wed Jan 30 21:07:22 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeCoalesced.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeCoalesced.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 31
Generating VC of $_Z18transposeCoalescedPfS_iii
Verifying $_Z18transposeCoalescedPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.070811
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeCoalesced.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18transposeCoalescedPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 0.140946
Added Horn clause: 0 && 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeCoalesced.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18transposeCoalescedPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 0.311479
Added Horn clause: 0 && 1 && 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeCoalesced.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18transposeCoalescedPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 1.029639
Added Horn clause: 0 && 1 && 2 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeCoalesced.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18transposeCoalescedPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 0.849086
Added Horn clause: 0 && 1 && 2 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeCoalesced.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z18transposeCoalescedPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0014 && b0016 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 0.618983
Prover time = 3.02
Number of prover queries = 6
Learner time = 0.00
Number of learner queries = 5
Total time: 3.11
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:4
verified

Boogie program verifier finished with 1 verified, 0 errors
3.61user 0.14system 0:03.80elapsed 98%CPU (0avgtext+0avgdata 59576maxresident)k
0inputs+0outputs (0major+26199minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/transpose/transposeCoalesced.bpl.ice2.bpl
#################
Wed Jan 30 21:07:26 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeCoarseGrained.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeCoarseGrained.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 31
Generating VC of $_Z22transposeCoarseGrainedPfS_iii
Verifying $_Z22transposeCoarseGrainedPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.073447
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeCoarseGrained.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z22transposeCoarseGrainedPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 0.293513
Added Horn clause: 0 && 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeCoarseGrained.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z22transposeCoarseGrainedPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 0.691169
Added Horn clause: 0 && 1 && 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeCoarseGrained.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z22transposeCoarseGrainedPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 1.740308
Added Horn clause: 0 && 1 && 2 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeCoarseGrained.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z22transposeCoarseGrainedPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 1.417348
Added Horn clause: 0 && 1 && 2 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeCoarseGrained.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z22transposeCoarseGrainedPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0014 && b0016 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 1.352021
Prover time = 5.57
Number of prover queries = 6
Learner time = 0.00
Number of learner queries = 5
Total time: 5.65
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:4
verified

Boogie program verifier finished with 1 verified, 0 errors
6.20user 0.12system 0:06.31elapsed 100%CPU (0avgtext+0avgdata 59856maxresident)k
0inputs+0outputs (0major+27805minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/transpose/transposeCoarseGrained.bpl.ice2.bpl
#################
Wed Jan 30 21:07:33 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeDiagonal.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeDiagonal.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 23
Generating VC of $_Z17transposeDiagonalPfS_iii
Verifying $_Z17transposeDiagonalPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.077226
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeDiagonal.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17transposeDiagonalPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022
}
Prover Time taken = 0.246937
Added Horn clause: 0 && 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeDiagonal.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17transposeDiagonalPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022
}
Prover Time taken = 0.4094
Added Horn clause: 0 && 1 && 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeDiagonal.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17transposeDiagonalPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022
}
Prover Time taken = 0.71221
Added Horn clause: 0 && 1 && 2 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeDiagonal.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17transposeDiagonalPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022
}
Prover Time taken = 0.547053
Added Horn clause: 0 && 1 && 2 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeDiagonal.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17transposeDiagonalPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0014 && b0016 && b0018 && b0019 && b0020 && b0021 && b0022
}
Prover Time taken = 0.605381
Prover time = 2.60
Number of prover queries = 6
Learner time = 0.00
Number of learner queries = 5
Total time: 2.68
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:4
verified

Boogie program verifier finished with 1 verified, 0 errors
3.18user 0.12system 0:03.30elapsed 99%CPU (0avgtext+0avgdata 56716maxresident)k
0inputs+0outputs (0major+20580minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/transpose/transposeDiagonal.bpl.ice2.bpl
#################
Wed Jan 30 21:07:36 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeFineGrained.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeFineGrained.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 31
Generating VC of $_Z20transposeFineGrainedPfS_iii
Verifying $_Z20transposeFineGrainedPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.074028
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeFineGrained.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z20transposeFineGrainedPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 0.296063
Added Horn clause: 0 && 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeFineGrained.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z20transposeFineGrainedPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 0.66427
Added Horn clause: 0 && 1 && 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeFineGrained.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z20transposeFineGrainedPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 1.879371
Added Horn clause: 0 && 1 && 2 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeFineGrained.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z20transposeFineGrainedPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 1.293688
Added Horn clause: 0 && 1 && 2 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeFineGrained.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z20transposeFineGrainedPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0014 && b0016 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 1.416847
Prover time = 5.62
Number of prover queries = 6
Learner time = 0.00
Number of learner queries = 5
Total time: 5.71
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:4
verified

Boogie program verifier finished with 1 verified, 0 errors
6.24user 0.10system 0:06.29elapsed 100%CPU (0avgtext+0avgdata 56680maxresident)k
0inputs+0outputs (0major+27643minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/transpose/transposeFineGrained.bpl.ice2.bpl
#################
Wed Jan 30 21:07:42 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeNaive.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeNaive.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 19
Generating VC of $_Z14transposeNaivePfS_iii
Verifying $_Z14transposeNaivePfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.073252
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeNaive.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z14transposeNaivePfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018
}
Prover Time taken = 0.523518
Added Horn clause: 0 && 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeNaive.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z14transposeNaivePfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018
}
Prover Time taken = 0.388847
Added Horn clause: 0 && 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeNaive.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z14transposeNaivePfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018
}
Prover Time taken = 0.590353
Prover time = 1.58
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 1.63
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
2.11user 0.11system 0:02.29elapsed 97%CPU (0avgtext+0avgdata 52336maxresident)k
0inputs+0outputs (0major+21449minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/transpose/transposeNaive.bpl.ice2.bpl
#################
Wed Jan 30 21:07:44 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeNoBankConflicts.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeNoBankConflicts.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 31
Generating VC of $_Z24transposeNoBankConflictsPfS_iii
Verifying $_Z24transposeNoBankConflictsPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.070822
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeNoBankConflicts.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z24transposeNoBankConflictsPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 0.273374
Added Horn clause: 0 && 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeNoBankConflicts.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z24transposeNoBankConflictsPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 0.495501
Added Horn clause: 0 && 1 && 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeNoBankConflicts.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z24transposeNoBankConflictsPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 1.603467
Added Horn clause: 0 && 1 && 2 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeNoBankConflicts.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z24transposeNoBankConflictsPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 1.303524
Added Horn clause: 0 && 1 && 2 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/6_Advanced/transpose/transposeNoBankConflicts.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z24transposeNoBankConflictsPfS_iii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0014 && b0016 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Prover Time taken = 1.277268
Prover time = 5.02
Number of prover queries = 6
Learner time = 0.00
Number of learner queries = 5
Total time: 5.11
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:4
verified

Boogie program verifier finished with 1 verified, 0 errors
5.66user 0.11system 0:05.79elapsed 99%CPU (0avgtext+0avgdata 57872maxresident)k
0inputs+0outputs (0major+27880minor)pagefaults 0swaps
FILE:CUDA50/6_Advanced/transpose/transposeNoBankConflicts.bpl.ice2.bpl
#################
Wed Jan 30 21:07:50 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/7_CUDALibraries/MC_EstimatePiInlineP/computeValue.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/7_CUDALibraries/MC_EstimatePiInlineP/computeValue.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 10
Generating VC of $_Z12computeValueIfEvPjP17curandStateXORWOWj
Verifying $_Z12computeValueIfEvPjP17curandStateXORWOWj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.08761
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/7_CUDALibraries/MC_EstimatePiInlineP/computeValue.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z12computeValueIfEvPjP17curandStateXORWOWj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009
}
Prover Time taken = 0.083194
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/7_CUDALibraries/MC_EstimatePiInlineP/computeValue.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z12computeValueIfEvPjP17curandStateXORWOWj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009
}
Prover Time taken = 0.083778
Added Horn clause: 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/7_CUDALibraries/MC_EstimatePiInlineP/computeValue.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z12computeValueIfEvPjP17curandStateXORWOWj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0002 && b0004 && b0006 && b0007 && b0008 && b0009
}
Prover Time taken = 0.027332
Prover time = 0.28
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 0.33
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
0.85user 0.08system 0:01.31elapsed 71%CPU (0avgtext+0avgdata 55508maxresident)k
0inputs+0outputs (0major+18303minor)pagefaults 0swaps
FILE:CUDA50/7_CUDALibraries/MC_EstimatePiInlineP/computeValue.bpl.ice2.bpl
#################
Wed Jan 30 21:07:52 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/7_CUDALibraries/MC_SingleAsianOptionP/generatePaths.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/7_CUDALibraries/MC_SingleAsianOptionP/generatePaths.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 17
Generating VC of $_Z13generatePathsIfEvPT_P17curandStateXORWOWPK11AsianOptionIS0_Ejj
Verifying $_Z13generatePathsIfEvPT_P17curandStateXORWOWPK11AsianOptionIS0_Ejj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.073203
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/7_CUDALibraries/MC_SingleAsianOptionP/generatePaths.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13generatePathsIfEvPT_P17curandStateXORWOWPK11AsianOptionIS0_Ejj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016
}
Prover Time taken = 0.853071
Added Horn clause: 0 && 0 && 0 => 1
Added Horn clause: 0 && 0 && 0 => 2
Added Horn clause: 0 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/7_CUDALibraries/MC_SingleAsianOptionP/generatePaths.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13generatePathsIfEvPT_P17curandStateXORWOWPK11AsianOptionIS0_Ejj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  b0002 && b0004 && b0005 && b0008 && b0010 && b0011 && b0012 && b0014 && b0015 && b0016
}
Prover Time taken = 625.998986
Added Horn clause: 0 && 0 && 0 => 4
Added Horn clause: 0 && 0 && 2 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/CUDA50/7_CUDALibraries/MC_SingleAsianOptionP/generatePaths.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13generatePathsIfEvPT_P17curandStateXORWOWPK11AsianOptionIS0_Ejj: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  b0002 && b0004 && b0005 && b0008 && b0010 && b0011 && b0012 && b0016
}
Command exited with non-zero status 124
0.83user 0.25system 20:00.00elapsed 0%CPU (0avgtext+0avgdata 55764maxresident)k
0inputs+0outputs (0major+11382minor)pagefaults 0swaps
FILE:CUDA50/7_CUDALibraries/MC_SingleAsianOptionP/generatePaths.bpl.ice2.bpl
#################
Wed Jan 30 21:27:52 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/AES/aesEncrypt128_kernel/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/AES/aesEncrypt128_kernel/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 5
Generating VC of $_Z13aesEncrypt128PjS_i
Verifying $_Z13aesEncrypt128PjS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1: positive
Prover Time taken = 0.176825
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/AES/aesEncrypt128_kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13aesEncrypt128PjS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004
}
Command exited with non-zero status 124
1.90user 0.38system 20:00.01elapsed 0%CPU (0avgtext+0avgdata 88748maxresident)k
0inputs+0outputs (0major+20404minor)pagefaults 0swaps
FILE:gpgpu-sim_ispass2009/AES/aesEncrypt128_kernel/kernel.bpl.ice2.bpl
#################
Wed Jan 30 21:47:52 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/AES/aesEncrypt256_kernel/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/AES/aesEncrypt256_kernel/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 5
Generating VC of $_Z13aesEncrypt256PjS_i
Verifying $_Z13aesEncrypt256PjS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1: positive
Prover Time taken = 0.159904
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/AES/aesEncrypt256_kernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13aesEncrypt256PjS_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004
}
Command exited with non-zero status 124
1.94user 0.34system 20:00.01elapsed 0%CPU (0avgtext+0avgdata 98800maxresident)k
0inputs+0outputs (0major+29040minor)pagefaults 0swaps
FILE:gpgpu-sim_ispass2009/AES/aesEncrypt256_kernel/kernel.bpl.ice2.bpl
#################
Wed Jan 30 22:07:52 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/DG/MaxwellsGPU_SURF_Kernel3D/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/DG/MaxwellsGPU_SURF_Kernel3D/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 9
Generating VC of $_Z25MaxwellsGPU_SURF_Kernel3DPfS_
Verifying $_Z25MaxwellsGPU_SURF_Kernel3DPfS_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 3.671082
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/DG/MaxwellsGPU_SURF_Kernel3D/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z25MaxwellsGPU_SURF_Kernel3DPfS_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 33.252747
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/DG/MaxwellsGPU_SURF_Kernel3D/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z25MaxwellsGPU_SURF_Kernel3DPfS_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0003 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 8.439226
Added Horn clause: 2 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/DG/MaxwellsGPU_SURF_Kernel3D/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z25MaxwellsGPU_SURF_Kernel3DPfS_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 1.116162
Prover time = 46.48
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 46.54
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
1.18user 0.17system 0:47.64elapsed 2%CPU (0avgtext+0avgdata 85992maxresident)k
0inputs+0outputs (0major+36745minor)pagefaults 0swaps
FILE:gpgpu-sim_ispass2009/DG/MaxwellsGPU_SURF_Kernel3D/kernel.bpl.ice2.bpl
#################
Wed Jan 30 22:08:39 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/DG/MaxwellsGPU_VOL_Kernel3D/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/DG/MaxwellsGPU_VOL_Kernel3D/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 5
Generating VC of $_Z24MaxwellsGPU_VOL_Kernel3DPf
Verifying $_Z24MaxwellsGPU_VOL_Kernel3DPf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1: positive
Prover Time taken = 0.858441
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/DG/MaxwellsGPU_VOL_Kernel3D/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z24MaxwellsGPU_VOL_Kernel3DPf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004
}
Prover Time taken = 9.467816
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/DG/MaxwellsGPU_VOL_Kernel3D/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z24MaxwellsGPU_VOL_Kernel3DPf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool) : bool
{
  b0002 && b0004
}
Prover Time taken = 29.442337
Added Horn clause: 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/DG/MaxwellsGPU_VOL_Kernel3D/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z24MaxwellsGPU_VOL_Kernel3DPf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool) : bool
{
  b0004
}
Prover Time taken = 0.660422
Prover time = 40.43
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 40.48
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
0.73user 0.09system 0:41.32elapsed 2%CPU (0avgtext+0avgdata 71140maxresident)k
0inputs+0outputs (0major+18585minor)pagefaults 0swaps
FILE:gpgpu-sim_ispass2009/DG/MaxwellsGPU_VOL_Kernel3D/kernel.bpl.ice2.bpl
#################
Wed Jan 30 22:09:21 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/LIB/Pathcalc_Portfolio_KernelGPU/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/LIB/Pathcalc_Portfolio_KernelGPU/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 9
Generating VC of $_Z28Pathcalc_Portfolio_KernelGPUPfS_
Verifying $_Z28Pathcalc_Portfolio_KernelGPUPfS_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.075519
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/LIB/Pathcalc_Portfolio_KernelGPU/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z28Pathcalc_Portfolio_KernelGPUPfS_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 2.277387
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/LIB/Pathcalc_Portfolio_KernelGPU/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z28Pathcalc_Portfolio_KernelGPUPfS_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 0.992983
Prover time = 3.35
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 3.39
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.69user 0.07system 0:04.32elapsed 17%CPU (0avgtext+0avgdata 61900maxresident)k
0inputs+0outputs (0major+14750minor)pagefaults 0swaps
FILE:gpgpu-sim_ispass2009/LIB/Pathcalc_Portfolio_KernelGPU/kernel.bpl.ice2.bpl
#################
Wed Jan 30 22:09:25 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/LIB/Pathcalc_Portfolio_KernelGPU2/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/LIB/Pathcalc_Portfolio_KernelGPU2/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 8
Generating VC of $_Z29Pathcalc_Portfolio_KernelGPU2Pf
Verifying $_Z29Pathcalc_Portfolio_KernelGPU2Pf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.072089
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/LIB/Pathcalc_Portfolio_KernelGPU2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z29Pathcalc_Portfolio_KernelGPU2Pf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007
}
Prover Time taken = 0.70785
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/LIB/Pathcalc_Portfolio_KernelGPU2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z29Pathcalc_Portfolio_KernelGPU2Pf: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007
}
Prover Time taken = 0.283564
Prover time = 1.06
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 1.11
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.63user 0.06system 0:01.80elapsed 38%CPU (0avgtext+0avgdata 54124maxresident)k
0inputs+0outputs (0major+13749minor)pagefaults 0swaps
FILE:gpgpu-sim_ispass2009/LIB/Pathcalc_Portfolio_KernelGPU2/kernel.bpl.ice2.bpl
#################
Wed Jan 30 22:09:27 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/LPS/laplace3d_kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/LPS/laplace3d_kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 10
Generating VC of $_Z13GPU_laplace3diiiiPfS_
Verifying $_Z13GPU_laplace3diiiiPfS_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.555826
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/LPS/laplace3d_kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13GPU_laplace3diiiiPfS_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009
}
Added: my_inv:1,1,1,1,1,1,1,0,1,0: positive
Prover Time taken = 17.416605
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/LPS/laplace3d_kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13GPU_laplace3diiiiPfS_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0008
}
Prover Time taken = 20.002974
Added Horn clause: 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/LPS/laplace3d_kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13GPU_laplace3diiiiPfS_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0008
}
Prover Time taken = 12.455815
Added Horn clause: 2 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/LPS/laplace3d_kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z13GPU_laplace3diiiiPfS_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0002 && b0004 && b0006 && b0008
}
Prover Time taken = 22.014359
Prover time = 72.45
Number of prover queries = 5
Learner time = 0.00
Number of learner queries = 4
Total time: 72.51
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
0.69user 0.12system 1:13.52elapsed 1%CPU (0avgtext+0avgdata 61068maxresident)k
0inputs+0outputs (0major+16831minor)pagefaults 0swaps
FILE:gpgpu-sim_ispass2009/LPS/laplace3d_kernel.bpl.ice2.bpl
#################
Wed Jan 30 22:10:40 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/MUM/_mummergpuKernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/MUM/_mummergpuKernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 31
Generating VC of $_Z15mummergpuKernelP10MatchCoordPcPKiS3_ii
Verifying $_Z15mummergpuKernelP10MatchCoordPcPKiS3_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.11387
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/MUM/_mummergpuKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z15mummergpuKernelP10MatchCoordPcPKiS3_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030
}
Added Horn clause: 0 && 0 => 
Added Horn clause: 0 && 0 => 
Added Horn clause: 0 && 0 => 
Added Horn clause: 0 && 0 => 
Prover Time taken = 13.134958
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/MUM/_mummergpuKernel.bpl.ice2.bpl
terminate called after throwing an instance of 'std::runtime_error'
  what():  No consistent conjunction exists
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
Command exited with non-zero status 1
1.03user 0.10system 0:13.95elapsed 8%CPU (0avgtext+0avgdata 77124maxresident)k
0inputs+0outputs (0major+19000minor)pagefaults 0swaps
FILE:gpgpu-sim_ispass2009/MUM/_mummergpuKernel.bpl.ice2.bpl
#################
Wed Jan 30 22:10:54 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/MUM/_mummergpuRCKernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/MUM/_mummergpuRCKernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 16
Generating VC of $_Z17mummergpuRCKernelP10MatchCoordPcPKiS3_ii
Verifying $_Z17mummergpuRCKernelP10MatchCoordPcPKiS3_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.102582
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/MUM/_mummergpuRCKernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z17mummergpuRCKernelP10MatchCoordPcPKiS3_ii: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015
}
Added: my_inv:1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Added Horn clause: 0 && 0 => 
Added Horn clause: 0 && 0 => 
Added Horn clause: 0 && 0 => 
Prover Time taken = 17.981049
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/MUM/_mummergpuRCKernel.bpl.ice2.bpl
terminate called after throwing an instance of 'std::runtime_error'
  what():  No consistent conjunction exists
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
Command exited with non-zero status 1
1.08user 0.12system 0:18.84elapsed 6%CPU (0avgtext+0avgdata 75512maxresident)k
0inputs+0outputs (0major+21069minor)pagefaults 0swaps
FILE:gpgpu-sim_ispass2009/MUM/_mummergpuRCKernel.bpl.ice2.bpl
#################
Wed Jan 30 22:11:13 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/NQU/_nqueen.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/NQU/_nqueen.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 23
Generating VC of $_Z24solve_nqueen_cuda_kerneliiPjS_S_S_i
Verifying $_Z24solve_nqueen_cuda_kerneliiPjS_S_S_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.138794
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/NQU/_nqueen.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z24solve_nqueen_cuda_kerneliiPjS_S_S_i: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022
}
Added Horn clause: 0 && 0 => 
Added Horn clause: 0 && 0 => 
Added Horn clause: 0 && 0 => 
Added Horn clause: 0 && 0 => 
Prover Time taken = 132.905374
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/NQU/_nqueen.bpl.ice2.bpl
terminate called after throwing an instance of 'std::runtime_error'
  what():  No consistent conjunction exists
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
Command exited with non-zero status 1
1.04user 0.14system 2:13.71elapsed 0%CPU (0avgtext+0avgdata 80536maxresident)k
0inputs+0outputs (0major+20231minor)pagefaults 0swaps
FILE:gpgpu-sim_ispass2009/NQU/_nqueen.bpl.ice2.bpl
#################
Wed Jan 30 22:13:27 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/RAY/renderPixel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/RAY/renderPixel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 18
Generating VC of $_Z11renderPixelPjP4Nodejjff
Verifying $_Z11renderPixelPjP4Nodejjff: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 3.557469
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/RAY/renderPixel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z11renderPixelPjP4Nodejjff: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017
}
Prover Time taken = 39.669954
Added Horn clause: 0 && 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/RAY/renderPixel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z11renderPixelPjP4Nodejjff: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017
}
Prover Time taken = 4.497976
Prover time = 47.73
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 47.78
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
1.19user 0.13system 0:48.96elapsed 2%CPU (0avgtext+0avgdata 91524maxresident)k
0inputs+0outputs (0major+41721minor)pagefaults 0swaps
FILE:gpgpu-sim_ispass2009/RAY/renderPixel.bpl.ice2.bpl
#################
Wed Jan 30 22:14:16 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/STO/md5.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/STO/md5.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 71
Generating VC of $_Z3md5PhiiiS_
Linearising   [0.500167 s]
Verifying $_Z3md5PhiiiS_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.128277
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/STO/md5.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z3md5PhiiiS_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070
}
Command exited with non-zero status 124
6.74user 0.57system 20:00.03elapsed 0%CPU (0avgtext+0avgdata 468644maxresident)k
0inputs+0outputs (0major+160395minor)pagefaults 0swaps
FILE:gpgpu-sim_ispass2009/STO/md5.bpl.ice2.bpl
#################
Wed Jan 30 22:34:16 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/STO/md5_overlap.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/STO/md5_overlap.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 43
Generating VC of $_Z11md5_overlapPhiiiiS_
Verifying $_Z11md5_overlapPhiiiiS_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,1: positive
Prover Time taken = 0.202375
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/STO/md5_overlap.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z11md5_overlapPhiiiiS_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0031 && b0033 && b0035 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042
}
Command exited with non-zero status 124
6.58user 0.56system 20:00.03elapsed 0%CPU (0avgtext+0avgdata 433256maxresident)k
0inputs+0outputs (0major+184172minor)pagefaults 0swaps
FILE:gpgpu-sim_ispass2009/STO/md5_overlap.bpl.ice2.bpl
#################
Wed Jan 30 22:54:16 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/STO/sha1.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/STO/sha1.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 63
Generating VC of $_Z4sha1PhiiiS_
Linearising   [1.319809 s]
Verifying $_Z4sha1PhiiiS_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.219983
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/STO/sha1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z4sha1PhiiiS_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062
}
Command exited with non-zero status 124
37.31user 2.47system 20:00.09elapsed 3%CPU (0avgtext+0avgdata 3216860maxresident)k
0inputs+0outputs (0major+1365612minor)pagefaults 0swaps
FILE:gpgpu-sim_ispass2009/STO/sha1.bpl.ice2.bpl
#################
Wed Jan 30 23:14:16 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/STO/sha1_overlap.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/STO/sha1_overlap.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 35
Generating VC of $_Z12sha1_overlapPhiiiiS_
Linearising   [1.280775 s]
Verifying $_Z12sha1_overlapPhiiiiS_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.395237
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/gpgpu-sim_ispass2009/STO/sha1_overlap.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $_Z12sha1_overlapPhiiiiS_: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034
}
Command exited with non-zero status 124
39.81user 2.36system 20:00.12elapsed 3%CPU (0avgtext+0avgdata 3181760maxresident)k
0inputs+0outputs (0major+1346210minor)pagefaults 0swaps
FILE:gpgpu-sim_ispass2009/STO/sha1_overlap.bpl.ice2.bpl
#################
Wed Jan 30 23:34:16 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/cutcp/opencl_cutoff_potential_lattice/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/cutcp/opencl_cutoff_potential_lattice/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 111
Generating VC of $opencl_cutoff_potential_lattice
Verifying $opencl_cutoff_potential_lattice: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.170999
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/cutcp/opencl_cutoff_potential_lattice/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $opencl_cutoff_potential_lattice: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0037 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 9.823124
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/cutcp/opencl_cutoff_potential_lattice/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $opencl_cutoff_potential_lattice: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0037 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,0,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 9.757464
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/cutcp/opencl_cutoff_potential_lattice/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $opencl_cutoff_potential_lattice: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0037 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0049 && b0059 && b0061 && b0062 && b0064 && b0081 && b0084 && b0085 && b0087 && b0088 && b0089 && b0097 && b0098 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,1,1,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 15.364558
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/cutcp/opencl_cutoff_potential_lattice/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $opencl_cutoff_potential_lattice: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0037 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0059 && b0087 && b0098 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 9.298053
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/cutcp/opencl_cutoff_potential_lattice/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $opencl_cutoff_potential_lattice: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0037 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 9.728777
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/cutcp/opencl_cutoff_potential_lattice/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $opencl_cutoff_potential_lattice: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0039 && b0040 && b0042 && b0043 && b0044 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110
}
Prover Time taken = 6.001197
Added Horn clause: 6 && 7 && 7 && 7 && 7 && 7 && 7 => 8
Added Horn clause: 6 && 7 && 7 && 7 && 7 => 9
Added Horn clause: 6 && 7 && 7 => 10
Added Horn clause: 11 && 7 && 7 && 7 && 7 && 7 && 7 => 12
Added Horn clause: 11 && 7 && 7 && 7 && 7 && 7 && 7 => 13
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/cutcp/opencl_cutoff_potential_lattice/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $opencl_cutoff_potential_lattice: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool) : bool
{
  b0001 && b0002 && b0003 && b0006 && b0007 && b0008 && b0009 && b0011 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0020 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0039 && b0040 && b0042 && b0043 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110
}
Prover Time taken = 4.116466
Added Horn clause: 14 && 7 && 7 && 7 && 7 && 7 && 7 => 15
Added Horn clause: 16 && 7 && 7 && 7 && 7 && 7 && 8 => 17
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/cutcp/opencl_cutoff_potential_lattice/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $opencl_cutoff_potential_lattice: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool) : bool
{
  b0001 && b0002 && b0006 && b0007 && b0008 && b0009 && b0011 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0020 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0033 && b0039 && b0040 && b0042 && b0043 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110
}
Prover Time taken = 2.28317
Prover time = 66.54
Number of prover queries = 9
Learner time = 0.00
Number of learner queries = 8
Total time: 66.74
Number of positive examples:6
Number of negative examples:0
Number of Horn clauses:7
verified

Boogie program verifier finished with 1 verified, 0 errors
2.22user 0.38system 1:07.68elapsed 3%CPU (0avgtext+0avgdata 80304maxresident)k
0inputs+0outputs (0major+43837minor)pagefaults 0swaps
FILE:parboil/cutcp/opencl_cutoff_potential_lattice/kernel.bpl.ice2.bpl
#################
Wed Jan 30 23:35:24 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/histo/histo_final/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/histo/histo_final/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 27
Generating VC of $histo_final_kernel
Verifying $histo_final_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.075887
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/histo/histo_final/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $histo_final_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026
}
Prover Time taken = 37.439666
Added Horn clause: 0 && 0 => 1
Added Horn clause: 0 => 2
Added Horn clause: 0 => 3
Added Horn clause: 0 && 0 && 0 => 4
Added Horn clause: 0 && 0 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/histo/histo_final/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $histo_final_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool) : bool
{
  b0002 && b0004 && b0005 && b0008 && b0010 && b0011 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0024 && b0025
}
Prover Time taken = 349.634761
Added Horn clause: 0 && 0 => 6
Added Horn clause: 0 && 0 && 4 => 7
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/histo/histo_final/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $histo_final_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool) : bool
{
  b0002 && b0004 && b0005 && b0008 && b0010 && b0011 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022
}
Prover Time taken = 389.011111
Prover time = 776.16
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 776.24
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:7
verified

Boogie program verifier finished with 1 verified, 0 errors
1.59user 0.30system 12:57.43elapsed 0%CPU (0avgtext+0avgdata 79856maxresident)k
0inputs+0outputs (0major+29057minor)pagefaults 0swaps
FILE:parboil/histo/histo_final/kernel.bpl.ice2.bpl
#################
Wed Jan 30 23:48:21 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/histo/histo_intermediates/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/histo/histo_intermediates/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 8
Generating VC of $histo_intermediates_kernel
Verifying $histo_intermediates_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.088019
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/histo/histo_intermediates/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $histo_intermediates_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007
}
Prover Time taken = 15.087177
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/histo/histo_intermediates/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $histo_intermediates_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0002 && b0004 && b0006 && b0007
}
Prover Time taken = 55.653858
Added Horn clause: 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/histo/histo_intermediates/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $histo_intermediates_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0002 && b0004 && b0006
}
Prover Time taken = 115.608857
Prover time = 186.44
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 186.49
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
0.67user 0.12system 3:07.73elapsed 0%CPU (0avgtext+0avgdata 54400maxresident)k
0inputs+0outputs (0major+13107minor)pagefaults 0swaps
FILE:parboil/histo/histo_intermediates/kernel.bpl.ice2.bpl
#################
Wed Jan 30 23:51:29 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/histo/histo_main/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/histo/histo_main/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 34
Generating VC of $histo_main_kernel
Verifying $histo_main_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.073152
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/histo/histo_main/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $histo_main_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033
}
Prover Time taken = 4.627061
Added Horn clause: 0 => 1
Added Horn clause: 0 && 0 && 0 && 0 && 0 && 0 => 2
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 3
Added Horn clause: 0 && 0 && 0 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/histo/histo_main/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $histo_main_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0009 && b0011 && b0012 && b0013 && b0015 && b0017 && b0019 && b0020 && b0023 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033
}
Prover Time taken = 7.419943
Added Horn clause: 0 => 5
Added Horn clause: 0 && 0 && 4 => 6
Added Horn clause: 0 && 0 && 0 && 0 && 3 => 7
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/histo/histo_main/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $histo_main_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool) : bool
{
  b0001 && b0003 && b0005 && b0006 && b0011 && b0012 && b0013 && b0015 && b0017 && b0019 && b0020 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033
}
Prover Time taken = 6.110218
Added Horn clause: 5 => 8
Added Horn clause: 0 && 0 && 6 => 9
Added Horn clause: 0 && 0 && 0 && 0 && 7 => 10
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/histo/histo_main/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $histo_main_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool) : bool
{
  b0001 && b0003 && b0005 && b0006 && b0012 && b0013 && b0015 && b0017 && b0019 && b0020 && b0026 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033
}
Prover Time taken = 2.447522
Prover time = 20.68
Number of prover queries = 5
Learner time = 0.00
Number of learner queries = 4
Total time: 20.75
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:10
verified

Boogie program verifier finished with 1 verified, 0 errors
0.94user 0.09system 0:21.29elapsed 4%CPU (0avgtext+0avgdata 70820maxresident)k
0inputs+0outputs (0major+21088minor)pagefaults 0swaps
FILE:parboil/histo/histo_main/kernel.bpl.ice2.bpl
#################
Wed Jan 30 23:51:50 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/histo/histo_prescan/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/histo/histo_prescan/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 23
Generating VC of $histo_prescan_kernel
Verifying $histo_prescan_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.153383
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/histo/histo_prescan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $histo_prescan_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1: positive
Prover Time taken = 13.383011
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/histo/histo_prescan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $histo_prescan_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0019 && b0020 && b0021 && b0022
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 9.983845
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/histo/histo_prescan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $histo_prescan_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0013 && b0014 && b0015 && b0016 && b0017 && b0019 && b0020 && b0021 && b0022
}
Prover Time taken = 24.990081
Added Horn clause: 0 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/histo/histo_prescan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $histo_prescan_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0013 && b0014 && b0015 && b0016 && b0017 && b0019 && b0020 && b0021 && b0022
}
Prover Time taken = 5.76709
Added Horn clause: 0 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/histo/histo_prescan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $histo_prescan_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0013 && b0014 && b0016 && b0019 && b0020 && b0022
}
Prover Time taken = 0.30578
Prover time = 54.58
Number of prover queries = 6
Learner time = 0.00
Number of learner queries = 5
Total time: 54.67
Number of positive examples:3
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
1.11user 0.17system 0:55.89elapsed 2%CPU (0avgtext+0avgdata 79016maxresident)k
0inputs+0outputs (0major+32809minor)pagefaults 0swaps
FILE:parboil/histo/histo_prescan/kernel.bpl.ice2.bpl
#################
Wed Jan 30 23:52:46 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 204
Generating VC of $gridding_GPU
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.114665
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 34.38649
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203
}
Prover Time taken = 39.546244
Added Horn clause: 2 => 3
Added Horn clause: 4 && 0 && 0 && 0 && 0 && 0 && 0 => 5
Added Horn clause: 6 && 0 && 0 => 7
Added Horn clause: 6 && 0 && 0 && 0 && 0 && 0 && 0 => 8
Added Horn clause: 9 && 0 && 0 && 0 && 0 && 0 && 0 => 7
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  b0000 && b0001 && b0002 && b0004 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0095 && b0096 && b0097 && b0098 && b0100 && b0101 && b0103 && b0104 && b0113 && b0115 && b0116 && b0117 && b0121 && b0123 && b0131 && b0134 && b0135 && b0136 && b0138 && b0140 && b0144 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203
}
Prover Time taken = 29.628143
Added Horn clause: 10 => 11
Added Horn clause: 12 && 8 && 0 => 13
Added Horn clause: 12 => 14
Added Horn clause: 15 && 0 && 0 && 0 && 0 && 0 && 0 => 16
Added Horn clause: 17 && 3 && 0 && 0 && 0 && 0 && 0 => 18
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  b0000 && b0002 && b0004 && b0006 && b0007 && b0008 && b0010 && b0012 && b0014 && b0015 && b0016 && b0017 && b0018 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0042 && b0095 && b0096 && b0097 && b0098 && b0100 && b0101 && b0104 && b0113 && b0115 && b0116 && b0117 && b0121 && b0123 && b0131 && b0134 && b0135 && b0136 && b0138 && b0140 && b0144 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203
}
Prover Time taken = 39.589699
Added Horn clause: 19 => 20
Added Horn clause: 21 && 22 && 18 => 23
Added Horn clause: 16 && 3 && 18 && 7 && 13 && 0 && 0 => 24
Added Horn clause: 16 && 3 && 18 && 7 && 13 && 0 && 0 => 25
Added Horn clause: 21 && 26 && 18 && 0 && 0 && 0 && 0 => 27
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  b0000 && b0002 && b0004 && b0006 && b0007 && b0008 && b0010 && b0012 && b0014 && b0015 && b0016 && b0017 && b0018 && b0020 && b0022 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0033 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0042 && b0095 && b0096 && b0097 && b0098 && b0100 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0156 && b0159 && b0168 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203
}
Prover Time taken = 30.593305
Added Horn clause: 28 && 29 && 30 => 31
Added Horn clause: 32 && 33 && 30 && 34 && 35 && 0 && 0 => 36
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  b0000 && b0002 && b0004 && b0006 && b0007 && b0008 && b0010 && b0012 && b0014 && b0015 && b0016 && b0017 && b0018 && b0020 && b0022 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0033 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0042 && b0095 && b0096 && b0097 && b0098 && b0100 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0156 && b0159 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203
}
Prover Time taken = 32.698306
Added Horn clause: 32 && 37 && 0 && 38 && 0 => 39
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  b0000 && b0002 && b0004 && b0006 && b0007 && b0008 && b0010 && b0012 && b0014 && b0015 && b0016 && b0017 && b0018 && b0020 && b0022 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0033 && b0035 && b0036 && b0037 && b0038 && b0039 && b0042 && b0095 && b0096 && b0097 && b0098 && b0100 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0156 && b0159 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203
}
Prover Time taken = 22.046784
Added Horn clause: 40 && 41 && 30 && 38 && 0 && 0 && 39 => 42
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  b0000 && b0002 && b0004 && b0006 && b0007 && b0008 && b0010 && b0012 && b0014 && b0015 && b0016 && b0017 && b0018 && b0020 && b0022 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0033 && b0035 && b0036 && b0037 && b0038 && b0039 && b0042 && b0095 && b0096 && b0097 && b0098 && b0100 && b0150 && b0151 && b0152 && b0153 && b0154 && b0156 && b0159 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203
}
Prover Time taken = 19.805256
Added Horn clause: 43 && 44 && 0 => 45
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  b0000 && b0002 && b0004 && b0006 && b0007 && b0008 && b0010 && b0012 && b0014 && b0015 && b0016 && b0017 && b0018 && b0020 && b0022 && b0024 && b0025 && b0026 && b0027 && b0029 && b0030 && b0031 && b0033 && b0035 && b0036 && b0037 && b0038 && b0039 && b0042 && b0095 && b0096 && b0097 && b0098 && b0100 && b0150 && b0151 && b0152 && b0153 && b0154 && b0156 && b0159 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203
}
Prover Time taken = 33.999696
Added Horn clause: 32 && 44 && 0 && 38 && 45 => 46
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  b0000 && b0002 && b0004 && b0006 && b0007 && b0008 && b0010 && b0012 && b0014 && b0015 && b0016 && b0017 && b0018 && b0020 && b0022 && b0024 && b0025 && b0026 && b0027 && b0029 && b0030 && b0031 && b0033 && b0035 && b0036 && b0037 && b0038 && b0042 && b0095 && b0096 && b0097 && b0098 && b0100 && b0150 && b0151 && b0152 && b0153 && b0154 && b0156 && b0159 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203
}
Prover Time taken = 20.374294
Added Horn clause: 47 && 44 && 0 && 38 && 45 && 0 && 46 => 48
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  b0000 && b0002 && b0004 && b0006 && b0007 && b0008 && b0010 && b0012 && b0014 && b0015 && b0016 && b0017 && b0018 && b0020 && b0022 && b0024 && b0025 && b0026 && b0027 && b0029 && b0030 && b0031 && b0033 && b0035 && b0036 && b0037 && b0038 && b0042 && b0096 && b0097 && b0098 && b0100 && b0150 && b0151 && b0152 && b0153 && b0154 && b0156 && b0159 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203
}
Prover Time taken = 24.386625
Added Horn clause: 49 => 50
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:01
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  b0000 && b0002 && b0004 && b0006 && b0007 && b0008 && b0010 && b0012 && b0014 && b0015 && b0016 && b0018 && b0020 && b0022 && b0024 && b0025 && b0026 && b0027 && b0029 && b0030 && b0031 && b0033 && b0035 && b0036 && b0037 && b0038 && b0042 && b0096 && b0097 && b0098 && b0100 && b0150 && b0151 && b0152 && b0153 && b0154 && b0156 && b0159 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203
}
Prover Time taken = 18.785696
Added Horn clause: 51 && 44 && 50 => 52
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  b0000 && b0002 && b0004 && b0006 && b0007 && b0008 && b0010 && b0012 && b0014 && b0015 && b0016 && b0018 && b0020 && b0022 && b0024 && b0025 && b0026 && b0029 && b0030 && b0031 && b0033 && b0035 && b0036 && b0037 && b0038 && b0042 && b0096 && b0097 && b0098 && b0100 && b0150 && b0151 && b0152 && b0153 && b0154 && b0156 && b0159 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203
}
Prover Time taken = 26.066571
Added Horn clause: 53 && 44 && 50 && 38 && 54 => 55
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $gridding_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool) : bool
{
  b0000 && b0002 && b0004 && b0006 && b0007 && b0008 && b0010 && b0012 && b0014 && b0015 && b0016 && b0018 && b0020 && b0022 && b0024 && b0025 && b0026 && b0029 && b0030 && b0031 && b0033 && b0035 && b0036 && b0037 && b0042 && b0096 && b0097 && b0098 && b0100 && b0150 && b0151 && b0152 && b0153 && b0154 && b0156 && b0159 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203
}
Prover Time taken = 9.111697
Prover time = 381.13
Number of prover queries = 15
Learner time = 1.00
Number of learner queries = 14
Total time: 381.73
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:25
verified

Boogie program verifier finished with 1 verified, 0 errors
3.30user 0.55system 6:22.53elapsed 1%CPU (0avgtext+0avgdata 85640maxresident)k
0inputs+0outputs (0major+66123minor)pagefaults 0swaps
FILE:parboil/mri-gridding/gridding/kernel.bpl.ice2.bpl
#################
Wed Jan 30 23:59:09 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/scan_inter1/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/scan_inter1/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 46
Generating VC of $scan_inter1_kernel
Verifying $scan_inter1_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1: positive
Prover Time taken = 0.315682
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/scan_inter1/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $scan_inter1_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0024 && b0025 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045
}
Added: my_inv:1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0: positive
Prover Time taken = 1.517741
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/scan_inter1/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $scan_inter1_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0024 && b0025 && b0040
}
Prover Time taken = 0.90453
Added Horn clause: 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/scan_inter1/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $scan_inter1_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0024 && b0025 && b0040
}
Prover Time taken = 1.639487
Added Horn clause: 2 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/scan_inter1/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $scan_inter1_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0024 && b0025
}
Prover Time taken = 1.510146
Added Horn clause: 2 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/scan_inter1/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $scan_inter1_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0025
}
Prover Time taken = 1.789368
Prover time = 7.68
Number of prover queries = 6
Learner time = 0.00
Number of learner queries = 5
Total time: 7.76
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:3
verified

Boogie program verifier finished with 1 verified, 0 errors
0.70user 0.13system 0:08.32elapsed 10%CPU (0avgtext+0avgdata 59128maxresident)k
0inputs+0outputs (0major+15930minor)pagefaults 0swaps
FILE:parboil/mri-gridding/scan_inter1/kernel.bpl.ice2.bpl
#################
Wed Jan 30 23:59:17 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/scan_inter2/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/scan_inter2/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 44
Generating VC of $scan_inter2_kernel
Verifying $scan_inter2_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1: positive
Prover Time taken = 0.29284
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/scan_inter2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $scan_inter2_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0024 && b0025 && b0042 && b0043
}
Added: my_inv:1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1: positive
Prover Time taken = 1.153599
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/scan_inter2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $scan_inter2_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0024 && b0025 && b0042 && b0043
}
Added: my_inv:1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0: positive
Prover Time taken = 1.187784
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/scan_inter2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $scan_inter2_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0024 && b0025 && b0042
}
Prover Time taken = 0.886688
Added Horn clause: 0 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/scan_inter2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $scan_inter2_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0001 && b0003 && b0004 && b0005 && b0006 && b0007 && b0024 && b0025 && b0042
}
Prover Time taken = 2.821705
Added Horn clause: 4 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/scan_inter2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $scan_inter2_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0001 && b0003 && b0004 && b0005 && b0006 && b0007 && b0024 && b0025
}
Prover Time taken = 2.456589
Prover time = 8.80
Number of prover queries = 6
Learner time = 0.00
Number of learner queries = 5
Total time: 8.88
Number of positive examples:3
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
9.37user 0.17system 0:09.81elapsed 97%CPU (0avgtext+0avgdata 57164maxresident)k
0inputs+0outputs (0major+37233minor)pagefaults 0swaps
FILE:parboil/mri-gridding/scan_inter2/kernel.bpl.ice2.bpl
#################
Wed Jan 30 23:59:27 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/scan_L1/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/scan_L1/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 90
Generating VC of $scan_L1_kernel
Verifying $scan_L1_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.215487
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/scan_L1/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $scan_L1_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0024 && b0025 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 8.768831
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/scan_L1/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $scan_L1_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0024 && b0025 && b0044 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089
}
Prover Time taken = 4.469357
Added Horn clause: 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/scan_L1/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $scan_L1_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0024 && b0025 && b0044 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089
}
Prover Time taken = 4.717185
Added Horn clause: 2 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/scan_L1/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $scan_L1_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0025 && b0044 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089
}
Prover Time taken = 9.050875
Added Horn clause: 3 => 4
Added Horn clause: 0 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/scan_L1/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $scan_L1_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0025 && b0050 && b0051 && b0052 && b0053 && b0055 && b0066 && b0067 && b0088 && b0089
}
Prover Time taken = 3.728445
Added Horn clause: 3 && 6 => 7
Added Horn clause: 3 => 8
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/scan_L1/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $scan_L1_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool) : bool
{
  b0000 && b0002 && b0005 && b0007 && b0008 && b0009 && b0010 && b0025 && b0050 && b0051 && b0052 && b0053 && b0066 && b0067 && b0088 && b0089
}
Prover Time taken = 13.850379
Added Horn clause: 3 && 9 => 10
Added Horn clause: 11 => 12
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/scan_L1/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $scan_L1_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool) : bool
{
  b0000 && b0002 && b0005 && b0007 && b0008 && b0009 && b0010 && b0025 && b0050 && b0051 && b0052 && b0053 && b0066 && b0067 && b0089
}
Prover Time taken = 12.783212
Added Horn clause: 13 => 14
Added Horn clause: 3 && 9 => 15
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/scan_L1/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $scan_L1_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool) : bool
{
  b0000 && b0002 && b0005 && b0007 && b0008 && b0009 && b0010 && b0025 && b0050 && b0051 && b0052 && b0053 && b0066 && b0067
}
Prover Time taken = 9.156888
Prover time = 66.74
Number of prover queries = 9
Learner time = 0.00
Number of learner queries = 8
Total time: 66.89
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:10
verified

Boogie program verifier finished with 1 verified, 0 errors
1.09user 0.27system 1:07.97elapsed 2%CPU (0avgtext+0avgdata 68300maxresident)k
0inputs+0outputs (0major+30604minor)pagefaults 0swaps
FILE:parboil/mri-gridding/scan_L1/kernel.bpl.ice2.bpl
#################
Thu Jan 31 00:00:35 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/splitRearrange/_kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/splitRearrange/_kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 7
Generating VC of $splitRearrange
Verifying $splitRearrange: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1: positive
Prover Time taken = 0.416294
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/splitRearrange/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $splitRearrange: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006
}
Added: my_inv:1,0,1,1,1,1,1: positive
Overwrote: my_inv:1,1,1,1,1,1,1: negative
Overwrote: my_inv:1,1,1,1,1,1,1: negative
Overwrote: my_inv:1,1,1,1,1,1,1: negative
Prover Time taken = 3.293254
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/splitRearrange/_kernel.bpl.ice2.bpl
[0, 1, 1, 1, 1, 1, 1, 1] -> 0 not consistent!
sorcar: sorcar.cpp:202: int main(int, char* const*): Assertion `sorcar::is_consistent(X, datapoints, horn_constraints)' failed.
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
Command exited with non-zero status 1
0.66user 0.05system 0:04.22elapsed 17%CPU (0avgtext+0avgdata 56436maxresident)k
0inputs+0outputs (0major+12220minor)pagefaults 0swaps
FILE:parboil/mri-gridding/splitRearrange/_kernel.bpl.ice2.bpl
#################
Thu Jan 31 00:00:39 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/splitSort/_kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/splitSort/_kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 109
Generating VC of $splitSort
Verifying $splitSort: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.308375
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/splitSort/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $splitSort: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0015 && b0017 && b0019 && b0021 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: negative
Overwrote: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: negative
Overwrote: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: negative
Overwrote: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: negative
Prover Time taken = 67.955238
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-gridding/splitSort/_kernel.bpl.ice2.bpl
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] -> 0 not consistent!
sorcar: sorcar.cpp:202: int main(int, char* const*): Assertion `sorcar::is_consistent(X, datapoints, horn_constraints)' failed.
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
Command exited with non-zero status 1
1.05user 0.08system 1:09.00elapsed 1%CPU (0avgtext+0avgdata 85520maxresident)k
0inputs+0outputs (0major+21866minor)pagefaults 0swaps
FILE:parboil/mri-gridding/splitSort/_kernel.bpl.ice2.bpl
#################
Thu Jan 31 00:01:48 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-q/ComputeQ/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-q/ComputeQ/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 18
Generating VC of $ComputeQ_GPU
Verifying $ComputeQ_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.062204
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-q/ComputeQ/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $ComputeQ_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017
}
Prover Time taken = 0.128762
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-q/ComputeQ/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $ComputeQ_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017
}
Prover Time taken = 0.284022
Added Horn clause: 1 && 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/mri-q/ComputeQ/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $ComputeQ_GPU: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017
}
Prover Time taken = 0.324858
Prover time = 0.80
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 0.85
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
1.31user 0.11system 0:01.80elapsed 79%CPU (0avgtext+0avgdata 53472maxresident)k
0inputs+0outputs (0major+21142minor)pagefaults 0swaps
FILE:parboil/mri-q/ComputeQ/kernel.bpl.ice2.bpl
#################
Thu Jan 31 00:01:50 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/sad/larger_sad_calc_16/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/sad/larger_sad_calc_16/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 7
Generating VC of $larger_sad_calc_16
Verifying $larger_sad_calc_16: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1: positive
Prover Time taken = 0.082733
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/sad/larger_sad_calc_16/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $larger_sad_calc_16: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006
}
Prover Time taken = 55.402004
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/sad/larger_sad_calc_16/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $larger_sad_calc_16: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006
}
Prover Time taken = 156.362174
Prover time = 211.85
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 211.89
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.70user 0.10system 3:32.94elapsed 0%CPU (0avgtext+0avgdata 55800maxresident)k
0inputs+0outputs (0major+13030minor)pagefaults 0swaps
FILE:parboil/sad/larger_sad_calc_16/kernel.bpl.ice2.bpl
#################
Thu Jan 31 00:05:23 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/sad/larger_sad_calc_8/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/sad/larger_sad_calc_8/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 8
Generating VC of $larger_sad_calc_8
Verifying $larger_sad_calc_8: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.082515
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/sad/larger_sad_calc_8/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $larger_sad_calc_8: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007
}
Overwrote: my_inv:1,1,1,1,1,1,1,1: negative
Overwrote: my_inv:1,1,1,1,1,1,1,1: negative
Overwrote: my_inv:1,1,1,1,1,1,1,1: negative
Overwrote: my_inv:1,1,1,1,1,1,1,1: negative
Prover Time taken = 119.378247
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/sad/larger_sad_calc_8/kernel.bpl.ice2.bpl
[0, 1, 1, 1, 1, 1, 1, 1, 1] -> 0 not consistent!
sorcar: sorcar.cpp:202: int main(int, char* const*): Assertion `sorcar::is_consistent(X, datapoints, horn_constraints)' failed.
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
Command exited with non-zero status 1
1.04user 0.14system 2:00.15elapsed 0%CPU (0avgtext+0avgdata 74852maxresident)k
0inputs+0outputs (0major+20573minor)pagefaults 0swaps
FILE:parboil/sad/larger_sad_calc_8/kernel.bpl.ice2.bpl
#################
Thu Jan 31 00:07:23 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/sad/mb_sad_calc/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/sad/mb_sad_calc/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 10
Generating VC of $mb_sad_calc
Verifying $mb_sad_calc: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.122021
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/sad/mb_sad_calc/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $mb_sad_calc: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009
}
Prover Time taken = 205.718634
Added Horn clause: 0 && 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/sad/mb_sad_calc/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $mb_sad_calc: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009
}
Prover Time taken = 390.904544
Prover time = 596.75
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 596.79
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
597.27user 0.20system 9:57.81elapsed 99%CPU (0avgtext+0avgdata 74188maxresident)k
0inputs+0outputs (0major+27518minor)pagefaults 0swaps
FILE:parboil/sad/mb_sad_calc/kernel.bpl.ice2.bpl
#################
Thu Jan 31 00:17:21 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/tpacf/gen_hists/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/tpacf/gen_hists/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 89
Generating VC of $gen_hists
Verifying $gen_hists: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.074765
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/tpacf/gen_hists/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $gen_hists: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088
}
Prover Time taken = 0.441885
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/tpacf/gen_hists/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $gen_hists: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088
}
Prover Time taken = 0.99049
Added Horn clause: 1 && 0 && 0 && 0 => 2
Added Horn clause: 1 && 0 => 3
Added Horn clause: 1 && 0 && 0 => 4
Added Horn clause: 1 && 0 && 0 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/tpacf/gen_hists/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $gen_hists: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0016 && b0018 && b0019 && b0020 && b0022 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088
}
Prover Time taken = 1.249961
Added Horn clause: 1 && 4 && 0 && 2 => 6
Added Horn clause: 1 && 4 && 0 && 0 => 7
Added Horn clause: 1 && 4 && 0 => 8
Added Horn clause: 1 && 4 && 9 => 10
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/tpacf/gen_hists/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $gen_hists: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0009 && b0010 && b0012 && b0014 && b0016 && b0018 && b0020 && b0022 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0054 && b0055 && b0056 && b0058 && b0059 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088
}
Prover Time taken = 1.016902
Added Horn clause: 1 && 8 && 6 && 2 => 11
Added Horn clause: 1 && 8 && 10 => 12
Added Horn clause: 1 && 8 && 6 && 0 => 13
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/tpacf/gen_hists/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $gen_hists: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0009 && b0010 && b0012 && b0014 && b0016 && b0018 && b0020 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0055 && b0056 && b0058 && b0059 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088
}
Prover Time taken = 1.436523
Added Horn clause: 1 && 8 && 6 && 0 => 14
Added Horn clause: 1 && 8 && 6 && 15 => 16
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/tpacf/gen_hists/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $gen_hists: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0009 && b0010 && b0012 && b0014 && b0016 && b0018 && b0020 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0041 && b0042 && b0043 && b0044 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0058 && b0059 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088
}
Prover Time taken = 1.140813
Added Horn clause: 1 && 4 && 6 && 14 => 17
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/parboil/tpacf/gen_hists/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $gen_hists: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0009 && b0010 && b0012 && b0014 && b0016 && b0018 && b0020 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0041 && b0042 && b0043 && b0044 && b0049 && b0050 && b0051 && b0052 && b0058 && b0059 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088
}
Prover Time taken = 0.77736
Prover time = 7.13
Number of prover queries = 8
Learner time = 0.00
Number of learner queries = 7
Total time: 7.31
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:15
verified

Boogie program verifier finished with 1 verified, 0 errors
1.26user 0.20system 0:08.36elapsed 17%CPU (0avgtext+0avgdata 69716maxresident)k
0inputs+0outputs (0major+33851minor)pagefaults 0swaps
FILE:parboil/tpacf/gen_hists/kernel.bpl.ice2.bpl
#################
Thu Jan 31 00:17:29 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel0.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel0.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 55
Generating VC of $kernel0
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.082852
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1: positive
Prover Time taken = 0.682158
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0039 && b0053 && b0054
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.536033
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0053 && b0054
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.517541
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0053 && b0054
}
Prover Time taken = 0.577041
Added Horn clause: 4 => 5
Added Horn clause: 4 && 0 => 6
Added Horn clause: 7 && 0 && 0 && 0 => 8
Added Horn clause: 9 && 0 && 0 => 10
Added Horn clause: 9 && 0 && 0 && 0 => 11
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0012 && b0014 && b0015 && b0016 && b0017 && b0018 && b0020 && b0022 && b0023 && b0024 && b0025 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0053 && b0054
}
Prover Time taken = 0.785517
Added Horn clause: 12 && 0 && 11 && 0 => 13
Added Horn clause: 14 && 6 && 0 && 0 => 15
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0012 && b0014 && b0015 && b0016 && b0017 && b0018 && b0020 && b0022 && b0023 && b0024 && b0025 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0054
}
Prover Time taken = 1.290563
Prover time = 4.47
Number of prover queries = 7
Learner time = 0.00
Number of learner queries = 6
Total time: 4.59
Number of positive examples:4
Number of negative examples:0
Number of Horn clauses:7
verified

Boogie program verifier finished with 1 verified, 0 errors
5.22user 0.24system 0:05.33elapsed 102%CPU (0avgtext+0avgdata 65788maxresident)k
0inputs+0outputs (0major+39939minor)pagefaults 0swaps
FILE:polybench/datamining/correlation/kernel0.bpl.ice2.bpl
#################
Thu Jan 31 00:17:35 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel1.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel1.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 8
Generating VC of $kernel1
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.084786
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007
}
Prover Time taken = 0.115862
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007
}
Prover Time taken = 0.253575
Prover time = 0.45
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.49
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.97user 0.08system 0:01.29elapsed 82%CPU (0avgtext+0avgdata 54096maxresident)k
0inputs+0outputs (0major+13685minor)pagefaults 0swaps
FILE:polybench/datamining/correlation/kernel1.bpl.ice2.bpl
#################
Thu Jan 31 00:17:36 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel2.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel2.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 180
Generating VC of $kernel2
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.080727
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel2.bpl.ice2.bpl
Total learner time was 00:00:01
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,1,1,0,0,0,0,1,1,1,0,1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 4.448706
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0068 && b0072 && b0073 && b0078 && b0079 && b0080 && b0082 && b0084 && b0087 && b0088 && b0089 && b0098 && b0099 && b0100 && b0101 && b0103 && b0105 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 4.715483
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0068 && b0073 && b0078 && b0079 && b0080 && b0082 && b0084 && b0087 && b0088 && b0089 && b0098 && b0099 && b0100 && b0101 && b0103 && b0105 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 3.621577
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0068 && b0078 && b0080 && b0082 && b0084 && b0087 && b0088 && b0089 && b0098 && b0099 && b0100 && b0103 && b0107 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 3.933323
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0080 && b0087 && b0088 && b0089 && b0098 && b0099 && b0100 && b0103 && b0107 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 4.073063
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179
}
Prover Time taken = 3.124095
Added Horn clause: 6 => 7
Added Horn clause: 8 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 9
Added Horn clause: 10 && 0 && 0 && 0 && 0 => 11
Added Horn clause: 10 && 0 && 0 => 12
Added Horn clause: 10 && 0 && 0 && 0 && 0 && 0 && 0 => 13
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0054 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179
}
Prover Time taken = 3.805438
Added Horn clause: 14 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 15
Added Horn clause: 16 && 17 && 0 && 0 && 0 => 18
Added Horn clause: 19 && 20 && 0 && 0 && 0 && 0 && 0 => 21
Added Horn clause: 19 && 22 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 23
Added Horn clause: 19 && 22 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 24
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0054 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0156 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179
}
Prover Time taken = 6.059745
Added Horn clause: 25 && 26 && 0 && 0 && 0 && 0 && 0 => 27
Added Horn clause: 28 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 29
Added Horn clause: 30 && 31 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 32
Added Horn clause: 33 && 31 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 34
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0026 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0036 && b0037 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0054 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0109 && b0110 && b0111 && b0112 && b0114 && b0115 && b0116 && b0117 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0156 && b0158 && b0159 && b0160 && b0161 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179
}
Prover Time taken = 5.89956
Added Horn clause: 35 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 36
Added Horn clause: 37 && 38 && 0 && 0 && 0 => 39
Added Horn clause: 40 && 41 && 24 && 0 && 0 && 0 && 21 && 0 && 0 => 42
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0026 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0036 && b0037 && b0040 && b0042 && b0043 && b0044 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0054 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0109 && b0110 && b0111 && b0112 && b0115 && b0116 && b0117 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0158 && b0159 && b0160 && b0161 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179
}
Prover Time taken = 4.916212
Added Horn clause: 43 && 44 && 0 => 45
Added Horn clause: 43 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 46
Added Horn clause: 47 && 38 && 0 && 0 && 0 && 0 && 39 => 48
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0026 && b0028 && b0029 && b0030 && b0031 && b0033 && b0034 && b0036 && b0037 && b0040 && b0042 && b0043 && b0044 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0054 && b0056 && b0057 && b0058 && b0059 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0109 && b0110 && b0111 && b0112 && b0115 && b0116 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0158 && b0159 && b0160 && b0161 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179
}
Prover Time taken = 4.090857
Added Horn clause: 49 && 26 && 0 && 0 && 0 && 0 && 0 && 0 && 27 => 50
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0026 && b0028 && b0029 && b0030 && b0031 && b0033 && b0034 && b0036 && b0037 && b0040 && b0042 && b0043 && b0044 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0054 && b0056 && b0057 && b0058 && b0059 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0109 && b0111 && b0112 && b0115 && b0116 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0158 && b0159 && b0160 && b0161 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179
}
Prover Time taken = 5.366183
Added Horn clause: 51 => 52
Added Horn clause: 53 && 44 && 0 && 0 && 45 && 0 && 0 && 0 && 0 => 54
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0022 && b0023 && b0026 && b0028 && b0029 && b0030 && b0031 && b0033 && b0034 && b0036 && b0037 && b0040 && b0042 && b0043 && b0044 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0054 && b0056 && b0057 && b0058 && b0059 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0111 && b0112 && b0115 && b0116 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0158 && b0159 && b0160 && b0161 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179
}
Prover Time taken = 4.732616
Added Horn clause: 55 => 56
Added Horn clause: 57 && 26 && 52 && 0 && 0 && 0 && 0 => 58
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0022 && b0023 && b0026 && b0028 && b0029 && b0030 && b0031 && b0033 && b0037 && b0040 && b0042 && b0043 && b0044 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0054 && b0056 && b0057 && b0058 && b0059 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0111 && b0112 && b0115 && b0116 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0158 && b0159 && b0160 && b0161 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179
}
Prover Time taken = 4.723309
Added Horn clause: 59 && 60 && 61 => 62
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0022 && b0023 && b0026 && b0028 && b0029 && b0030 && b0031 && b0033 && b0037 && b0040 && b0042 && b0043 && b0044 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0054 && b0056 && b0057 && b0058 && b0062 && b0063 && b0064 && b0065 && b0066 && b0111 && b0112 && b0115 && b0116 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0158 && b0159 && b0160 && b0161 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179
}
Prover Time taken = 3.880693
Prover time = 67.47
Number of prover queries = 16
Learner time = 1.00
Number of learner queries = 15
Total time: 68.20
Number of positive examples:6
Number of negative examples:0
Number of Horn clauses:26
verified

Boogie program verifier finished with 1 verified, 0 errors
4.03user 0.70system 1:09.11elapsed 6%CPU (0avgtext+0avgdata 90732maxresident)k
0inputs+0outputs (0major+87051minor)pagefaults 0swaps
FILE:polybench/datamining/correlation/kernel2.bpl.ice2.bpl
#################
Thu Jan 31 00:18:45 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel3.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel3.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 9
Generating VC of $kernel3
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.066804
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 0.192405
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 0.17139
Prover time = 0.43
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.47
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.93user 0.05system 0:01.28elapsed 76%CPU (0avgtext+0avgdata 50228maxresident)k
0inputs+0outputs (0major+15213minor)pagefaults 0swaps
FILE:polybench/datamining/correlation/kernel3.bpl.ice2.bpl
#################
Thu Jan 31 00:18:46 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel4.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel4.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 9
Generating VC of $kernel4
Verifying $kernel4: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.075213
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel4.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel4: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 0.228184
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel4.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel4: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 0.345419
Prover time = 0.65
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.69
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
1.18user 0.09system 0:01.30elapsed 97%CPU (0avgtext+0avgdata 54496maxresident)k
0inputs+0outputs (0major+18359minor)pagefaults 0swaps
FILE:polybench/datamining/correlation/kernel4.bpl.ice2.bpl
#################
Thu Jan 31 00:18:48 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel5.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel5.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 119
Generating VC of $kernel5
Verifying $kernel5: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.084167
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel5.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel5: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,1,0,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.51868
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel5.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel5: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0056 && b0061 && b0063 && b0064 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,1,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.323164
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel5.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel5: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 1.330685
Added Horn clause: 3 => 4
Added Horn clause: 5 && 0 && 0 && 0 && 0 => 6
Added Horn clause: 5 && 0 && 0 && 0 && 0 && 0 && 0 => 7
Added Horn clause: 5 && 0 && 0 && 0 && 0 && 0 && 0 => 8
Added Horn clause: 5 && 0 && 0 => 9
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel5.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel5: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0089 && b0090 && b0091 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 1.837137
Added Horn clause: 10 => 11
Added Horn clause: 12 && 13 && 0 && 0 && 9 => 14
Added Horn clause: 5 && 15 && 0 && 0 && 0 && 0 && 6 => 16
Added Horn clause: 12 && 17 && 0 && 0 && 0 && 0 && 0 => 18
Added Horn clause: 12 && 19 && 0 && 0 && 0 && 0 && 0 => 20
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel5.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel5: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 2.825615
Added Horn clause: 12 && 21 && 0 && 0 && 0 && 0 && 16 => 22
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel5.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel5: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0099 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 3.108192
Added Horn clause: 5 && 23 && 0 && 0 && 0 => 24
Added Horn clause: 25 && 26 && 0 && 0 && 14 && 0 && 0 => 27
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel5.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel5: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0040 && b0041 && b0042 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 3.068327
Added Horn clause: 5 && 28 && 0 && 0 && 0 => 29
Added Horn clause: 5 && 23 && 0 && 0 && 0 && 0 && 24 => 30
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel5.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel5: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0037 && b0038 && b0040 && b0041 && b0042 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0073 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 2.895227
Added Horn clause: 31 => 32
Added Horn clause: 33 && 28 && 0 && 0 && 0 && 0 && 29 => 34
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel5.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel5: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0022 && b0023 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0037 && b0038 && b0040 && b0041 && b0042 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 3.79206
Added Horn clause: 35 => 36
Added Horn clause: 31 && 23 && 32 && 0 && 0 => 37
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel5.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel5: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0022 && b0023 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0037 && b0041 && b0042 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 2.987275
Added Horn clause: 35 && 28 && 36 && 0 && 0 => 38
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel5.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel5: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0022 && b0023 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0041 && b0042 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 3.605058
Prover time = 28.38
Number of prover queries = 12
Learner time = 0.00
Number of learner queries = 11
Total time: 28.72
Number of positive examples:3
Number of negative examples:0
Number of Horn clauses:20
verified

Boogie program verifier finished with 1 verified, 0 errors
1.91user 0.32system 0:29.84elapsed 7%CPU (0avgtext+0avgdata 76760maxresident)k
0inputs+0outputs (0major+43027minor)pagefaults 0swaps
FILE:polybench/datamining/correlation/kernel5.bpl.ice2.bpl
#################
Thu Jan 31 00:19:17 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel6.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel6.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 217
Generating VC of $kernel6
Verifying $kernel6: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.091028
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel6.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel6: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 4.373433
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel6.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel6: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0068 && b0069 && b0074 && b0078 && b0079 && b0087 && b0094 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 4.02216
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel6.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel6: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0074 && b0078 && b0079 && b0087 && b0094 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 4.658027
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel6.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel6: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0079 && b0087 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 4.709245
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel6.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel6: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216
}
Prover Time taken = 5.227913
Added Horn clause: 5 => 6
Added Horn clause: 7 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 8
Added Horn clause: 9 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 10
Added Horn clause: 9 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 11
Added Horn clause: 9 && 0 && 0 && 0 && 0 => 12
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel6.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel6: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216
}
Prover Time taken = 4.794182
Added Horn clause: 13 && 14 && 0 => 15
Added Horn clause: 0 => 16
Added Horn clause: 17 && 18 && 0 && 0 && 0 && 0 && 0 => 19
Added Horn clause: 20 && 21 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 22
Added Horn clause: 20 && 21 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 23
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel6.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel6: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0054 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216
}
Prover Time taken = 7.463966
Added Horn clause: 13 && 24 && 0 => 25
Added Horn clause: 9 && 26 && 0 && 27 && 23 && 0 && 0 => 28
Added Horn clause: 9 && 29 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 30
Added Horn clause: 9 && 31 && 0 && 32 && 0 && 0 && 19 && 0 && 0 => 33
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel6.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel6: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0039 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0054 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0177 && b0178 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216
}
Prover Time taken = 18.210351
Added Horn clause: 13 && 34 && 0 => 35
Added Horn clause: 9 && 36 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 37
Added Horn clause: 13 && 38 && 0 && 25 && 23 && 0 && 0 && 0 && 0 => 39
Added Horn clause: 13 && 40 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 41
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel6.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel6: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0025 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0039 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0054 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0114 && b0115 && b0116 && b0117 && b0118 && b0120 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0177 && b0178 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216
}
Prover Time taken = 14.681902
Added Horn clause: 42 => 43
Added Horn clause: 13 && 41 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 44
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel6.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel6: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0021 && b0022 && b0023 && b0025 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0039 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0054 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0114 && b0115 && b0116 && b0117 && b0118 && b0120 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0177 && b0178 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216
}
Prover Time taken = 15.188068
Prover time = 83.42
Number of prover queries = 11
Learner time = 0.00
Number of learner queries = 10
Total time: 83.94
Number of positive examples:5
Number of negative examples:0
Number of Horn clauses:20
verified

Boogie program verifier finished with 1 verified, 0 errors
3.45user 0.51system 1:25.04elapsed 4%CPU (0avgtext+0avgdata 91276maxresident)k
0inputs+0outputs (0major+70738minor)pagefaults 0swaps
FILE:polybench/datamining/correlation/kernel6.bpl.ice2.bpl
#################
Thu Jan 31 00:20:42 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel7.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel7.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 128
Generating VC of $kernel7
Verifying $kernel7: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.077871
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel7.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel7: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 7.173245
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel7.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel7: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0067 && b0069 && b0071 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 6.094429
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel7.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel7: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127
}
Prover Time taken = 5.21415
Added Horn clause: 3 => 4
Added Horn clause: 5 && 0 && 0 && 0 && 0 && 0 && 0 => 6
Added Horn clause: 5 && 0 && 0 && 0 && 0 => 7
Added Horn clause: 5 && 0 && 0 => 8
Added Horn clause: 5 && 0 && 0 && 0 && 0 => 9
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel7.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel7: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127
}
Prover Time taken = 33.480195
Added Horn clause: 5 && 10 && 0 && 0 && 0 && 0 && 9 => 11
Added Horn clause: 12 && 13 && 0 && 0 && 0 && 0 && 0 => 14
Added Horn clause: 12 && 15 && 0 && 0 && 0 && 0 && 0 => 16
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel7.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel7: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0086 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127
}
Prover Time taken = 61.670875
Added Horn clause: 17 && 18 && 0 && 0 && 0 && 0 && 0 => 19
Added Horn clause: 20 && 21 && 0 && 0 && 7 && 0 && 0 => 22
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel7.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel7: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0086 && b0110 && b0111 && b0112 && b0113 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127
}
Prover Time taken = 68.713997
Added Horn clause: 5 && 23 && 0 && 0 && 0 => 24
Added Horn clause: 5 && 16 && 25 && 0 && 0 && 0 && 11 => 26
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel7.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel7: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0040 && b0042 && b0043 && b0044 && b0045 && b0048 && b0049 && b0050 && b0051 && b0052 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0086 && b0110 && b0112 && b0113 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127
}
Prover Time taken = 78.671932
Added Horn clause: 27 && 16 && 25 && 0 && 0 && 0 && 11 => 28
Added Horn clause: 12 && 29 && 0 && 0 && 0 => 30
Added Horn clause: 5 && 23 && 0 && 0 && 0 && 0 && 24 => 31
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel7.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel7: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0040 && b0042 && b0043 && b0044 && b0045 && b0048 && b0051 && b0052 && b0078 && b0079 && b0081 && b0082 && b0083 && b0084 && b0086 && b0112 && b0113 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127
}
Prover Time taken = 78.895906
Added Horn clause: 32 => 33
Added Horn clause: 34 && 35 && 0 => 36
Added Horn clause: 34 && 29 && 0 && 0 && 0 && 0 && 30 => 37
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel7.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel7: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0012 && b0014 && b0016 && b0017 && b0018 && b0020 && b0021 && b0022 && b0023 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0034 && b0035 && b0036 && b0037 && b0040 && b0042 && b0043 && b0044 && b0045 && b0048 && b0051 && b0052 && b0078 && b0081 && b0082 && b0083 && b0084 && b0086 && b0112 && b0113 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127
}
Prover Time taken = 94.614775
Added Horn clause: 38 => 39
Added Horn clause: 32 && 23 && 33 && 0 && 0 => 40
Added Horn clause: 12 && 35 && 0 && 0 && 36 && 0 && 0 => 41
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel7.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel7: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0012 && b0014 && b0016 && b0017 && b0018 && b0020 && b0022 && b0023 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0034 && b0035 && b0036 && b0037 && b0040 && b0042 && b0043 && b0044 && b0048 && b0051 && b0052 && b0081 && b0082 && b0083 && b0084 && b0086 && b0112 && b0113 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127
}
Prover Time taken = 79.910086
Added Horn clause: 38 && 29 && 39 && 0 && 0 => 42
Added Horn clause: 43 => 44
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel7.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel7: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0012 && b0014 && b0016 && b0017 && b0018 && b0022 && b0023 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0034 && b0035 && b0036 && b0037 && b0040 && b0042 && b0043 && b0044 && b0051 && b0052 && b0081 && b0082 && b0083 && b0084 && b0086 && b0112 && b0113 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127
}
Prover Time taken = 77.067863
Added Horn clause: 43 && 35 && 44 => 45
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel7.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel7: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0012 && b0014 && b0016 && b0017 && b0018 && b0022 && b0023 && b0024 && b0027 && b0029 && b0030 && b0031 && b0034 && b0035 && b0036 && b0037 && b0040 && b0042 && b0043 && b0044 && b0051 && b0052 && b0081 && b0082 && b0083 && b0084 && b0086 && b0112 && b0113 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127
}
Prover Time taken = 98.487528
Prover time = 690.07
Number of prover queries = 13
Learner time = 0.00
Number of learner queries = 12
Total time: 690.47
Number of positive examples:3
Number of negative examples:0
Number of Horn clauses:24
verified

Boogie program verifier finished with 1 verified, 0 errors
2.67user 0.57system 11:31.56elapsed 0%CPU (0avgtext+0avgdata 78488maxresident)k
0inputs+0outputs (0major+44004minor)pagefaults 0swaps
FILE:polybench/datamining/correlation/kernel7.bpl.ice2.bpl
#################
Thu Jan 31 00:32:14 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel8.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel8.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 7
Generating VC of $kernel8
Verifying $kernel8: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1: positive
Prover Time taken = 0.067118
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel8.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel8: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006
}
Prover Time taken = 0.152175
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/correlation/kernel8.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel8: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006
}
Prover Time taken = 0.303824
Prover time = 0.52
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.56
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.96user 0.09system 0:01.27elapsed 83%CPU (0avgtext+0avgdata 52356maxresident)k
0inputs+0outputs (0major+19105minor)pagefaults 0swaps
FILE:polybench/datamining/correlation/kernel8.bpl.ice2.bpl
#################
Thu Jan 31 00:32:15 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel0.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel0.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 8
Generating VC of $kernel0
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.063901
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007
}
Prover Time taken = 0.118217
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007
}
Prover Time taken = 0.236615
Prover time = 0.42
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.46
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.88user 0.07system 0:01.26elapsed 76%CPU (0avgtext+0avgdata 50016maxresident)k
0inputs+0outputs (0major+16379minor)pagefaults 0swaps
FILE:polybench/datamining/covariance/kernel0.bpl.ice2.bpl
#################
Thu Jan 31 00:32:17 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel1.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel1.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 93
Generating VC of $kernel1
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.075258
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.620319
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0054 && b0055 && b0056 && b0057 && b0059 && b0060 && b0063 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.822838
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0057 && b0059 && b0060 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.626649
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0057 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.828453
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092
}
Prover Time taken = 0.63361
Added Horn clause: 5 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092
}
Prover Time taken = 1.434297
Added Horn clause: 7 && 0 && 0 && 0 && 0 => 8
Added Horn clause: 9 && 0 && 6 && 0 && 0 && 0 && 0 => 10
Added Horn clause: 9 && 0 && 6 && 0 && 0 => 11
Added Horn clause: 12 && 0 && 0 => 13
Added Horn clause: 14 && 0 && 0 && 0 && 0 && 0 && 0 => 15
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0012 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0036 && b0037 && b0039 && b0041 && b0042 && b0043 && b0044 && b0045 && b0048 && b0049 && b0075 && b0076 && b0077 && b0078 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092
}
Prover Time taken = 1.704694
Added Horn clause: 16 && 0 && 0 && 0 && 13 => 17
Added Horn clause: 18 && 0 && 10 && 0 && 0 && 0 && 0 => 19
Added Horn clause: 20 && 0 && 0 && 0 && 0 && 0 && 8 => 21
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0012 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0032 && b0033 && b0034 && b0036 && b0037 && b0039 && b0041 && b0042 && b0043 && b0044 && b0045 && b0048 && b0049 && b0075 && b0077 && b0078 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092
}
Prover Time taken = 1.601035
Added Horn clause: 22 && 0 && 19 && 0 && 0 && 0 && 0 => 23
Added Horn clause: 24 && 0 && 0 && 0 && 13 && 0 && 17 => 25
Added Horn clause: 24 && 0 && 19 && 0 && 0 => 26
Added Horn clause: 27 => 28
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0012 && b0015 && b0016 && b0017 && b0018 && b0021 && b0024 && b0026 && b0027 && b0028 && b0029 && b0030 && b0032 && b0033 && b0034 && b0036 && b0037 && b0039 && b0041 && b0042 && b0043 && b0044 && b0045 && b0048 && b0049 && b0077 && b0078 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092
}
Prover Time taken = 2.638255
Added Horn clause: 29 => 30
Added Horn clause: 31 && 0 && 28 && 0 && 0 => 32
Added Horn clause: 14 && 0 && 0 && 0 && 0 && 0 && 0 => 33
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0012 && b0015 && b0016 && b0021 && b0024 && b0026 && b0027 && b0028 && b0029 && b0030 && b0032 && b0037 && b0039 && b0041 && b0042 && b0043 && b0044 && b0045 && b0048 && b0049 && b0077 && b0078 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092
}
Prover Time taken = 2.202376
Added Horn clause: 34 && 0 && 35 => 36
Added Horn clause: 37 && 0 && 10 && 0 && 0 => 38
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0012 && b0015 && b0016 && b0021 && b0024 && b0026 && b0027 && b0028 && b0029 && b0030 && b0037 && b0039 && b0041 && b0042 && b0043 && b0048 && b0049 && b0077 && b0078 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092
}
Prover Time taken = 2.820897
Added Horn clause: 34 && 0 && 35 && 0 && 39 => 40
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0012 && b0015 && b0016 && b0021 && b0024 && b0026 && b0027 && b0028 && b0037 && b0039 && b0041 && b0042 && b0043 && b0048 && b0049 && b0077 && b0078 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092
}
Prover Time taken = 3.373582
Prover time = 19.38
Number of prover queries = 13
Learner time = 0.00
Number of learner queries = 12
Total time: 19.66
Number of positive examples:5
Number of negative examples:0
Number of Horn clauses:19
verified

Boogie program verifier finished with 1 verified, 0 errors
1.59user 0.34system 0:20.33elapsed 9%CPU (0avgtext+0avgdata 76332maxresident)k
0inputs+0outputs (0major+36960minor)pagefaults 0swaps
FILE:polybench/datamining/covariance/kernel1.bpl.ice2.bpl
#################
Thu Jan 31 00:32:37 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel2.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel2.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 32
Generating VC of $kernel2
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.069307
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031
}
Prover Time taken = 2.321641
Added Horn clause: 0 => 1
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 2
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 3
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 4
Added Horn clause: 0 && 0 && 0 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0016 && b0017 && b0020 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031
}
Prover Time taken = 13.854125
Added Horn clause: 0 && 0 && 1 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0016 && b0017 && b0020 && b0022 && b0023 && b0024 && b0027 && b0028 && b0029 && b0030 && b0031
}
Prover Time taken = 8.587361
Prover time = 24.83
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 24.89
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:6
verified

Boogie program verifier finished with 1 verified, 0 errors
0.67user 0.09system 0:25.78elapsed 2%CPU (0avgtext+0avgdata 56624maxresident)k
0inputs+0outputs (0major+13289minor)pagefaults 0swaps
FILE:polybench/datamining/covariance/kernel2.bpl.ice2.bpl
#################
Thu Jan 31 00:33:03 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 274
Generating VC of $kernel3
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.084312
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:01
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227 && b0228 && b0229 && b0230 && b0231 && b0232 && b0233 && b0234 && b0235 && b0236 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242 && b0243 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 15.971852
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0127 && b0142 && b0143 && b0145 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227 && b0228 && b0229 && b0230 && b0231 && b0232 && b0233 && b0234 && b0235 && b0236 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242 && b0243 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 14.709147
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0127 && b0142 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227 && b0228 && b0229 && b0230 && b0231 && b0232 && b0233 && b0234 && b0235 && b0236 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242 && b0243 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 16.505707
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227 && b0228 && b0229 && b0230 && b0231 && b0232 && b0233 && b0234 && b0235 && b0236 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242 && b0243 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273
}
Prover Time taken = 12.946151
Added Horn clause: 4 => 5
Added Horn clause: 6 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 7
Added Horn clause: 8 && 0 && 0 => 9
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227 && b0228 && b0229 && b0230 && b0231 && b0232 && b0233 && b0234 && b0235 && b0236 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242 && b0243 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273
}
Prover Time taken = 14.515246
Added Horn clause: 6 => 10
Added Horn clause: 6 && 11 && 0 => 12
Added Horn clause: 6 && 13 && 0 && 0 && 9 => 14
Added Horn clause: 6 && 13 && 0 && 0 && 9 && 0 && 0 => 15
Added Horn clause: 8 && 13 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 16
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0095 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0242 && b0243 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273
}
Prover Time taken = 22.937436
Added Horn clause: 17 && 18 && 0 => 19
Added Horn clause: 8 && 20 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 21
Added Horn clause: 8 && 22 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 16 => 23
Added Horn clause: 8 && 22 && 0 && 24 && 9 && 0 && 0 => 25
Added Horn clause: 17 && 26 && 0 && 24 && 9 && 0 && 15 && 0 && 0 => 27
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0091 && b0092 && b0095 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0215 && b0216 && b0242 && b0243 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273
}
Prover Time taken = 25.43387
Added Horn clause: 28 && 29 && 0 => 30
Added Horn clause: 28 && 31 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 32
Added Horn clause: 28 && 33 && 0 && 19 && 9 && 0 && 0 && 0 && 0 && 0 && 0 => 34
Added Horn clause: 28 && 33 && 0 && 19 && 9 && 0 && 0 && 0 && 25 && 0 && 0 => 35
Added Horn clause: 36 && 37 && 0 && 38 && 9 && 0 && 15 && 0 && 25 && 0 && 0 => 39
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0058 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0074 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0091 && b0092 && b0095 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0159 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0215 && b0216 && b0242 && b0243 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273
}
Prover Time taken = 23.959464
Added Horn clause: 28 && 32 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 23 => 40
Added Horn clause: 36 && 41 && 0 && 19 && 34 && 0 && 0 && 0 && 0 && 0 && 0 => 42
Added Horn clause: 28 && 32 && 0 && 19 && 43 && 0 && 0 && 0 && 0 && 0 && 27 => 44
Added Horn clause: 28 && 45 && 0 && 19 && 30 && 0 && 0 && 0 && 0 => 46
Added Horn clause: 28 && 47 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 48
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0026 && b0028 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0058 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0074 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0087 && b0088 && b0089 && b0091 && b0092 && b0095 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0159 && b0201 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0215 && b0216 && b0242 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273
}
Prover Time taken = 30.256327
Added Horn clause: 8 && 49 && 50 => 51
Added Horn clause: 17 && 52 && 0 && 44 && 53 && 0 && 0 => 54
Added Horn clause: 28 && 49 && 50 && 44 && 30 && 0 && 0 && 0 && 0 && 0 && 55 => 56
Added Horn clause: 36 && 57 && 0 && 58 && 43 && 0 && 0 && 0 && 0 => 59
Added Horn clause: 28 && 29 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 60
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0026 && b0028 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0039 && b0040 && b0041 && b0042 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0058 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0072 && b0074 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0083 && b0084 && b0085 && b0087 && b0088 && b0089 && b0091 && b0092 && b0095 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0159 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0215 && b0216 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273
}
Prover Time taken = 136.548637
Added Horn clause: 61 && 62 && 0 && 63 && 64 && 0 && 0 => 65
Added Horn clause: 61 && 66 && 50 => 67
Added Horn clause: 28 && 49 && 50 && 63 && 0 && 0 && 0 && 0 && 54 => 68
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0026 && b0028 && b0031 && b0032 && b0033 && b0034 && b0035 && b0037 && b0039 && b0040 && b0041 && b0042 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0058 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0072 && b0074 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0083 && b0084 && b0085 && b0087 && b0088 && b0091 && b0092 && b0095 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0159 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0215 && b0216 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273
}
Prover Time taken = 189.168821
Added Horn clause: 8 && 32 && 50 && 69 && 0 && 0 && 0 => 70
Added Horn clause: 36 && 62 && 0 && 63 && 64 && 0 && 0 && 0 && 65 => 71
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0026 && b0028 && b0031 && b0032 && b0033 && b0034 && b0035 && b0037 && b0039 && b0040 && b0041 && b0042 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0058 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0069 && b0072 && b0074 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0083 && b0084 && b0085 && b0087 && b0091 && b0092 && b0095 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0159 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0215 && b0216 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273
}
Prover Time taken = 208.363155
Added Horn clause: 36 && 72 && 0 && 73 && 42 && 0 && 0 && 0 && 70 => 74
Added Horn clause: 36 && 75 && 0 && 69 && 76 && 0 && 0 => 77
Added Horn clause: 36 && 62 && 0 && 63 && 64 && 0 && 0 && 0 && 78 && 0 && 79 => 80
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0026 && b0028 && b0031 && b0032 && b0033 && b0034 && b0035 && b0037 && b0039 && b0040 && b0041 && b0042 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0054 && b0055 && b0058 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0069 && b0072 && b0074 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0083 && b0084 && b0087 && b0091 && b0092 && b0095 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0159 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0215 && b0216 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273
}
Prover Time taken = 213.766797
Added Horn clause: 36 && 75 && 0 && 69 && 76 && 0 && 0 && 0 && 81 => 82
Added Horn clause: 28 && 62 && 0 && 63 && 64 && 0 && 0 && 0 && 65 && 0 && 71 && 0 && 80 => 83
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0026 && b0028 && b0031 && b0032 && b0033 && b0034 && b0035 && b0037 && b0039 && b0040 && b0041 && b0042 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0054 && b0055 && b0058 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0069 && b0072 && b0074 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0083 && b0087 && b0091 && b0092 && b0095 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0149 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0159 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0215 && b0216 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273
}
Prover Time taken = 250.776973
Added Horn clause: 84 => 85
Added Horn clause: 61 && 75 && 0 && 69 && 76 && 0 && 0 && 0 && 81 && 0 && 82 => 86
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/datamining/covariance/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0022 && b0023 && b0026 && b0028 && b0031 && b0032 && b0033 && b0034 && b0035 && b0037 && b0039 && b0040 && b0041 && b0042 && b0045 && b0047 && b0048 && b0049 && b0050 && b0052 && b0054 && b0055 && b0058 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0069 && b0072 && b0074 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0083 && b0087 && b0091 && b0092 && b0095 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0149 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0159 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0215 && b0216 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273
}
Command exited with non-zero status 124
6.37user 1.00system 20:00.01elapsed 0%CPU (0avgtext+0avgdata 92828maxresident)k
0inputs+0outputs (0major+106718minor)pagefaults 0swaps
FILE:polybench/datamining/covariance/kernel3.bpl.ice2.bpl
#################
Thu Jan 31 00:53:03 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemm/kernel0.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemm/kernel0.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 216
Generating VC of $kernel0
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.081893
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 3.752801
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0068 && b0088 && b0101 && b0103 && b0104 && b0105 && b0106 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 3.921101
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0088 && b0105 && b0106 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 4.971288
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215
}
Prover Time taken = 3.896176
Added Horn clause: 4 => 5
Added Horn clause: 6 && 0 && 0 && 0 && 0 => 7
Added Horn clause: 8 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 9
Added Horn clause: 8 && 0 && 0 && 0 && 0 && 0 && 0 => 10
Added Horn clause: 8 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 11
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0184 && b0185 && b0187 && b0189 && b0190 && b0191 && b0193 && b0195 && b0196 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215
}
Prover Time taken = 3.229129
Added Horn clause: 0 && 12 && 0 => 13
Added Horn clause: 14 && 15 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 16
Added Horn clause: 14 && 17 && 0 && 18 && 0 && 0 && 0 && 0 && 0 => 19
Added Horn clause: 14 && 17 && 0 && 18 && 0 && 0 && 0 && 0 && 0 => 20
Added Horn clause: 14 && 17 && 0 && 18 && 0 && 0 && 0 && 0 && 0 => 21
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215
}
Prover Time taken = 5.624563
Added Horn clause: 8 && 22 && 0 && 23 && 0 && 0 && 0 => 24
Added Horn clause: 8 && 25 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 26
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0054 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215
}
Prover Time taken = 6.28093
Added Horn clause: 27 && 28 && 16 && 0 && 0 && 0 && 0 && 0 && 0 => 29
Added Horn clause: 8 && 30 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 31
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0054 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215
}
Prover Time taken = 6.368048
Added Horn clause: 32 => 33
Added Horn clause: 14 && 34 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 35
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0054 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215
}
Prover Time taken = 4.540484
Added Horn clause: 36 => 37
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0054 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215
}
Prover Time taken = 6.131007
Prover time = 48.80
Number of prover queries = 11
Learner time = 0.00
Number of learner queries = 10
Total time: 49.28
Number of positive examples:4
Number of negative examples:0
Number of Horn clauses:17
verified

Boogie program verifier finished with 1 verified, 0 errors
3.07user 0.59system 0:50.63elapsed 7%CPU (0avgtext+0avgdata 87884maxresident)k
0inputs+0outputs (0major+59096minor)pagefaults 0swaps
FILE:polybench/linear-algebra/blas/gemm/kernel0.bpl.ice2.bpl
#################
Thu Jan 31 00:53:53 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemver/kernel0.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemver/kernel0.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 227
Generating VC of $kernel0
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.083972
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemver/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 7.233774
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemver/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 9.501895
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemver/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0111 && b0112 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 10.014705
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemver/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226
}
Prover Time taken = 10.77231
Added Horn clause: 4 => 5
Added Horn clause: 6 && 0 && 0 => 7
Added Horn clause: 6 && 0 && 0 => 8
Added Horn clause: 6 && 0 && 0 && 0 && 0 => 9
Added Horn clause: 10 && 0 && 0 && 0 && 0 => 11
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemver/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0082 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0093 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226
}
Prover Time taken = 10.765346
Added Horn clause: 12 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 13
Added Horn clause: 14 && 0 && 0 && 0 && 15 && 16 && 0 => 17
Added Horn clause: 18 && 0 && 0 && 0 && 0 && 19 && 0 && 0 && 0 && 0 && 0 => 20
Added Horn clause: 21 && 0 && 0 && 0 && 0 && 22 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 23
Added Horn clause: 21 && 0 && 8 && 0 && 0 && 24 && 0 && 0 && 0 => 25
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemver/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0031 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0082 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0093 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226
}
Prover Time taken = 12.216677
Added Horn clause: 26 && 0 && 0 && 0 && 0 && 27 && 0 && 0 && 17 => 28
Added Horn clause: 29 && 0 && 0 && 0 && 9 && 30 && 0 && 0 && 0 && 0 && 25 => 31
Added Horn clause: 29 && 0 && 0 && 0 && 0 && 32 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 33
Added Horn clause: 29 && 0 && 0 && 0 && 0 && 34 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 35
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemver/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0031 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0058 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0070 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0082 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0093 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226
}
Prover Time taken = 12.869224
Added Horn clause: 29 && 0 && 0 && 0 && 0 && 36 && 0 && 0 && 0 && 0 && 0 => 37
Added Horn clause: 38 && 0 && 0 && 0 && 0 && 19 && 0 && 0 && 28 && 0 && 0 && 0 && 0 => 39
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemver/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0031 && b0033 && b0034 && b0035 && b0036 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0058 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0070 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0082 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0093 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226
}
Prover Time taken = 9.814254
Added Horn clause: 40 && 0 && 0 && 0 && 0 && 41 && 0 && 0 && 0 && 0 && 0 => 42
Added Horn clause: 38 && 0 && 0 && 0 && 0 && 36 && 0 && 0 && 0 && 0 && 0 && 0 && 37 => 43
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemver/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0031 && b0033 && b0034 && b0035 && b0036 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0053 && b0054 && b0055 && b0058 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0070 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0082 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0093 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226
}
Prover Time taken = 10.480381
Added Horn clause: 44 && 0 && 0 && 0 && 0 => 45
Added Horn clause: 29 && 0 && 0 && 0 && 15 && 46 && 0 && 0 && 0 && 0 && 0 && 0 && 47 => 48
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemver/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0031 && b0033 && b0034 && b0035 && b0036 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0053 && b0054 && b0055 && b0058 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0070 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0082 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0093 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226
}
Prover Time taken = 10.616726
Added Horn clause: 49 && 0 && 0 && 0 && 0 => 50
Added Horn clause: 44 && 0 && 0 && 0 && 0 && 36 && 45 && 0 && 0 && 0 && 0 => 51
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemver/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0020 && b0021 && b0022 && b0023 && b0025 && b0026 && b0027 && b0028 && b0031 && b0033 && b0034 && b0035 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0053 && b0054 && b0055 && b0058 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0070 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0082 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0093 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226
}
Prover Time taken = 11.185549
Added Horn clause: 49 && 0 && 0 && 0 && 0 && 41 && 50 && 0 && 0 && 0 && 0 => 52
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemver/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0020 && b0021 && b0022 && b0023 && b0025 && b0026 && b0027 && b0028 && b0031 && b0033 && b0034 && b0035 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0054 && b0055 && b0058 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0070 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0082 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0093 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226
}
Prover Time taken = 7.30489
Prover time = 122.86
Number of prover queries = 13
Learner time = 0.00
Number of learner queries = 12
Total time: 123.64
Number of positive examples:4
Number of negative examples:0
Number of Horn clauses:23
verified

Boogie program verifier finished with 1 verified, 0 errors
3.81user 0.47system 2:04.97elapsed 3%CPU (0avgtext+0avgdata 88812maxresident)k
0inputs+0outputs (0major+94762minor)pagefaults 0swaps
FILE:polybench/linear-algebra/blas/gemver/kernel0.bpl.ice2.bpl
#################
Thu Jan 31 00:55:58 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemver/kernel1.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemver/kernel1.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 88
Generating VC of $kernel1
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.073379
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemver/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.294654
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemver/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087
}
Prover Time taken = 0.846126
Added Horn clause: 2 => 3
Added Horn clause: 4 && 0 && 0 => 5
Added Horn clause: 4 && 0 && 0 && 0 && 0 => 6
Added Horn clause: 7 && 0 && 0 && 0 && 0 => 8
Added Horn clause: 9 && 0 && 0 && 0 && 0 => 10
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemver/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0024 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087
}
Prover Time taken = 1.505706
Added Horn clause: 11 && 0 && 0 && 0 && 0 => 12
Added Horn clause: 13 && 14 && 0 && 0 && 10 => 15
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemver/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0024 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0055 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087
}
Prover Time taken = 1.374808
Added Horn clause: 16 && 17 && 15 && 0 && 0 => 18
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemver/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0024 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087
}
Prover Time taken = 3.673915
Prover time = 8.77
Number of prover queries = 6
Learner time = 0.00
Number of learner queries = 5
Total time: 8.89
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:8
verified

Boogie program verifier finished with 1 verified, 0 errors
9.52user 0.23system 0:09.84elapsed 99%CPU (0avgtext+0avgdata 70580maxresident)k
0inputs+0outputs (0major+41102minor)pagefaults 0swaps
FILE:polybench/linear-algebra/blas/gemver/kernel1.bpl.ice2.bpl
#################
Thu Jan 31 00:56:08 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemver/kernel2.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemver/kernel2.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 106
Generating VC of $kernel2
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.075301
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemver/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.270358
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemver/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.176096
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemver/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0055 && b0056 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.270432
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemver/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0055 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.2035
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemver/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105
}
Prover Time taken = 1.033935
Added Horn clause: 5 => 6
Added Horn clause: 0 && 0 && 0 => 7
Added Horn clause: 8 && 0 && 0 && 0 && 0 => 9
Added Horn clause: 10 && 0 && 0 && 0 && 0 => 11
Added Horn clause: 12 && 0 && 0 && 0 && 0 && 0 && 0 => 13
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemver/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0024 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0035 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105
}
Prover Time taken = 1.871139
Added Horn clause: 14 && 0 && 0 && 0 && 0 && 0 && 0 => 15
Added Horn clause: 8 && 16 && 0 && 0 && 17 && 0 && 0 => 18
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemver/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0024 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0035 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105
}
Prover Time taken = 1.952228
Added Horn clause: 14 && 19 && 18 && 0 && 0 && 0 && 0 => 20
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemver/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0024 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0035 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0067 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105
}
Prover Time taken = 2.51565
Added Horn clause: 8 && 0 && 0 && 0 && 0 && 0 && 0 => 21
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gemver/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0024 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0035 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105
}
Prover Time taken = 3.593954
Prover time = 15.96
Number of prover queries = 10
Learner time = 0.00
Number of learner queries = 9
Total time: 16.21
Number of positive examples:5
Number of negative examples:0
Number of Horn clauses:9
verified

Boogie program verifier finished with 1 verified, 0 errors
1.66user 0.26system 0:16.83elapsed 11%CPU (0avgtext+0avgdata 77752maxresident)k
0inputs+0outputs (0major+41584minor)pagefaults 0swaps
FILE:polybench/linear-algebra/blas/gemver/kernel2.bpl.ice2.bpl
#################
Thu Jan 31 00:56:25 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gesummv/kernel0.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gesummv/kernel0.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 119
Generating VC of $kernel0
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.076646
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gesummv/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,1,0,1,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.727996
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gesummv/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0049 && b0051 && b0053 && b0054 && b0055 && b0056 && b0058 && b0059 && b0060 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,0,1,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.421488
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gesummv/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 1.135043
Added Horn clause: 3 => 4
Added Horn clause: 5 && 0 && 0 && 0 && 0 => 6
Added Horn clause: 5 && 0 && 0 && 0 && 0 && 0 && 0 => 7
Added Horn clause: 5 && 0 && 0 => 8
Added Horn clause: 5 && 0 && 0 && 0 && 0 => 9
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gesummv/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0024 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0035 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 1.808629
Added Horn clause: 5 && 0 && 0 && 0 && 0 && 0 && 0 => 10
Added Horn clause: 11 && 12 && 0 && 0 && 0 && 0 && 7 => 13
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gesummv/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0024 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0035 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 2.012899
Added Horn clause: 14 && 15 && 13 && 0 && 0 && 0 && 0 => 16
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gesummv/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0024 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0035 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 2.563849
Added Horn clause: 17 && 0 && 0 && 0 && 0 && 0 && 0 => 18
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/gesummv/kernel0.bpl.ice2.bpl
Total learner time was 00:00:01
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0024 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0035 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0074 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 2.872173
Prover time = 13.62
Number of prover queries = 8
Learner time = 1.00
Number of learner queries = 7
Total time: 13.83
Number of positive examples:3
Number of negative examples:0
Number of Horn clauses:9
verified

Boogie program verifier finished with 1 verified, 0 errors
1.43user 0.23system 0:14.83elapsed 11%CPU (0avgtext+0avgdata 75224maxresident)k
0inputs+0outputs (0major+38516minor)pagefaults 0swaps
FILE:polybench/linear-algebra/blas/gesummv/kernel0.bpl.ice2.bpl
#################
Thu Jan 31 00:56:40 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/symm/kernel3.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/symm/kernel3.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 194
Generating VC of $kernel3
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.079285
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/symm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 4.474536
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/symm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0065 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0080 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 4.875257
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/symm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0077 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 4.622393
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/symm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193
}
Prover Time taken = 3.709123
Added Horn clause: 4 => 5
Added Horn clause: 6 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 7
Added Horn clause: 8 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 9
Added Horn clause: 10 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 11
Added Horn clause: 10 && 0 && 0 && 0 && 0 => 12
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/symm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193
}
Prover Time taken = 3.724607
Added Horn clause: 10 && 13 && 0 => 14
Added Horn clause: 15 && 16 && 0 && 0 && 0 && 0 && 0 => 17
Added Horn clause: 6 && 18 && 0 && 0 && 0 && 0 && 0 => 19
Added Horn clause: 20 && 21 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 22
Added Horn clause: 20 && 21 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 23
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/symm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0053 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193
}
Prover Time taken = 7.14386
Added Horn clause: 10 && 24 && 0 && 25 && 0 && 0 && 19 && 0 && 26 => 27
Added Horn clause: 20 && 28 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 29
Added Horn clause: 6 && 30 && 0 && 31 && 0 && 0 && 0 && 0 && 22 => 32
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/symm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:01
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0053 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0193
}
Prover Time taken = 10.140878
Added Horn clause: 0 && 33 && 11 && 0 && 0 && 0 && 0 && 0 && 0 => 34
Added Horn clause: 15 && 35 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 36
Added Horn clause: 10 && 37 && 0 && 38 && 27 && 0 && 0 && 0 && 0 => 39
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/symm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0053 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0159 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0193
}
Prover Time taken = 8.246744
Added Horn clause: 40 => 41
Added Horn clause: 6 && 42 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 43
Added Horn clause: 20 && 44 && 0 && 39 && 27 && 0 && 0 && 0 && 0 => 45
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/symm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0021 && b0022 && b0023 && b0024 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0053 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0159 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0193
}
Prover Time taken = 7.291742
Added Horn clause: 46 => 47
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/symm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0022 && b0023 && b0024 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0053 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0159 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0193
}
Prover Time taken = 8.415962
Prover time = 62.72
Number of prover queries = 11
Learner time = 1.00
Number of learner queries = 10
Total time: 63.18
Number of positive examples:4
Number of negative examples:0
Number of Horn clauses:20
verified

Boogie program verifier finished with 1 verified, 0 errors
2.83user 0.45system 1:04.45elapsed 5%CPU (0avgtext+0avgdata 83196maxresident)k
0inputs+0outputs (0major+55183minor)pagefaults 0swaps
FILE:polybench/linear-algebra/blas/symm/kernel3.bpl.ice2.bpl
#################
Thu Jan 31 00:57:44 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/syr2k/kernel0.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/syr2k/kernel0.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 228
Generating VC of $kernel0
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.091155
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/syr2k/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 4.928604
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/syr2k/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0091 && b0092 && b0093 && b0094 && b0098 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,1,0,1,0,0,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 4.680505
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/syr2k/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0073 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0087 && b0088 && b0092 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,1,1,1,0,1,1,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 5.526132
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/syr2k/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0081 && b0082 && b0083 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 4.826993
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/syr2k/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227
}
Prover Time taken = 6.233172
Added Horn clause: 5 => 6
Added Horn clause: 7 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 8
Added Horn clause: 7 && 0 && 0 && 0 && 0 => 9
Added Horn clause: 10 && 0 && 0 && 0 && 0 && 0 && 0 => 11
Added Horn clause: 12 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 13
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/syr2k/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0054 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227
}
Prover Time taken = 4.842506
Added Horn clause: 10 && 14 && 0 => 15
Added Horn clause: 12 && 16 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 17
Added Horn clause: 10 && 16 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 18
Added Horn clause: 10 && 16 && 0 && 0 && 0 && 0 && 11 && 0 && 0 => 19
Added Horn clause: 12 && 20 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 21
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/syr2k/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0054 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0172 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227
}
Prover Time taken = 6.384874
Added Horn clause: 22 && 23 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 24
Added Horn clause: 10 && 25 && 0 && 26 && 21 && 0 && 0 => 27
Added Horn clause: 10 && 25 && 0 && 26 && 21 && 0 && 28 && 0 && 0 => 29
Added Horn clause: 10 && 30 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 31
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/syr2k/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0054 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0114 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227
}
Prover Time taken = 5.767638
Added Horn clause: 32 => 33
Added Horn clause: 34 && 35 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 36
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/syr2k/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0054 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227
}
Prover Time taken = 5.027088
Added Horn clause: 37 => 38
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/syr2k/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0054 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227
}
Prover Time taken = 4.243513
Prover time = 52.55
Number of prover queries = 11
Learner time = 0.00
Number of learner queries = 10
Total time: 53.08
Number of positive examples:5
Number of negative examples:0
Number of Horn clauses:17
verified

Boogie program verifier finished with 1 verified, 0 errors
3.45user 0.47system 0:54.43elapsed 7%CPU (0avgtext+0avgdata 93412maxresident)k
0inputs+0outputs (0major+76392minor)pagefaults 0swaps
FILE:polybench/linear-algebra/blas/syr2k/kernel0.bpl.ice2.bpl
#################
Thu Jan 31 00:58:39 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/syrk/kernel0.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/syrk/kernel0.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 221
Generating VC of $kernel0
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.082091
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/syrk/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 4.990696
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/syrk/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0069 && b0070 && b0071 && b0072 && b0073 && b0079 && b0080 && b0081 && b0084 && b0085 && b0086 && b0090 && b0092 && b0096 && b0103 && b0104 && b0105 && b0106 && b0107 && b0109 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,0,1,0,1,1,1,0,1,1,1,1,1,1,0,0,0,0,0,1,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 4.2078
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/syrk/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220
}
Prover Time taken = 5.069024
Added Horn clause: 3 => 4
Added Horn clause: 5 => 6
Added Horn clause: 5 && 0 && 0 => 7
Added Horn clause: 5 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 8
Added Horn clause: 9 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 10
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/syrk/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220
}
Prover Time taken = 3.662116
Added Horn clause: 11 && 12 && 6 => 13
Added Horn clause: 14 && 15 && 6 => 16
Added Horn clause: 17 && 18 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 19
Added Horn clause: 14 && 20 && 6 && 7 && 0 => 21
Added Horn clause: 14 && 22 && 6 && 7 && 0 && 0 && 0 => 23
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/syrk/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0012 && b0013 && b0015 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0055 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0183 && b0184 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220
}
Prover Time taken = 5.574239
Added Horn clause: 24 && 25 && 6 && 0 && 0 && 0 && 0 && 0 && 0 => 26
Added Horn clause: 27 && 28 && 6 && 7 && 13 && 0 && 23 => 29
Added Horn clause: 24 && 28 && 6 && 7 && 13 && 0 && 0 && 0 && 0 => 30
Added Horn clause: 24 && 28 && 6 && 7 && 13 && 0 && 0 && 0 && 0 => 31
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/syrk/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0012 && b0013 && b0015 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0027 && b0029 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0041 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0055 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0123 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0183 && b0184 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220
}
Prover Time taken = 6.299994
Added Horn clause: 27 && 26 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 32
Added Horn clause: 27 && 26 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 33
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/syrk/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0013 && b0015 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0027 && b0029 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0041 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0055 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0123 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0183 && b0184 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220
}
Prover Time taken = 6.146654
Added Horn clause: 27 && 34 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 35
Added Horn clause: 27 && 26 && 36 && 0 && 0 && 0 && 0 && 0 && 0 => 37
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/syrk/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0013 && b0015 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0027 && b0029 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0041 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0055 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0123 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0183 && b0184 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220
}
Prover Time taken = 8.348549
Added Horn clause: 38 => 39
Added Horn clause: 5 && 40 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 41
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/syrk/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0013 && b0015 && b0017 && b0018 && b0019 && b0020 && b0022 && b0023 && b0024 && b0025 && b0027 && b0029 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0041 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0055 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0123 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0183 && b0184 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220
}
Prover Time taken = 8.560849
Added Horn clause: 42 => 43
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/syrk/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0013 && b0015 && b0017 && b0018 && b0019 && b0020 && b0023 && b0024 && b0025 && b0027 && b0029 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0041 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0055 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0123 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0183 && b0184 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220
}
Prover Time taken = 5.541401
Prover time = 58.48
Number of prover queries = 11
Learner time = 0.00
Number of learner queries = 10
Total time: 58.97
Number of positive examples:3
Number of negative examples:0
Number of Horn clauses:21
verified

Boogie program verifier finished with 1 verified, 0 errors
2.82user 0.49system 0:59.91elapsed 5%CPU (0avgtext+0avgdata 91096maxresident)k
0inputs+0outputs (0major+57412minor)pagefaults 0swaps
FILE:polybench/linear-algebra/blas/syrk/kernel0.bpl.ice2.bpl
#################
Thu Jan 31 00:59:39 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/trmm/kernel0.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/trmm/kernel0.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 365
Generating VC of $kernel0
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.084868
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/trmm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227 && b0228 && b0229 && b0230 && b0231 && b0232 && b0233 && b0234 && b0235 && b0236 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242 && b0243 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273 && b0274 && b0275 && b0276 && b0277 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0290 && b0291 && b0292 && b0293 && b0294 && b0295 && b0296 && b0297 && b0298 && b0299 && b0300 && b0301 && b0302 && b0303 && b0304 && b0305 && b0306 && b0307 && b0308 && b0309 && b0310 && b0311 && b0312 && b0313 && b0314 && b0315 && b0316 && b0317 && b0318 && b0319 && b0320 && b0321 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0342 && b0343 && b0344 && b0345 && b0346 && b0347 && b0348 && b0349 && b0350 && b0351 && b0352 && b0353 && b0354 && b0355 && b0356 && b0357 && b0358 && b0359 && b0360 && b0361 && b0362 && b0363 && b0364
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,0,1,0,0,1,0,0,0,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 19.903417
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/trmm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0164 && b0167 && b0168 && b0169 && b0174 && b0175 && b0176 && b0177 && b0178 && b0180 && b0181 && b0182 && b0184 && b0185 && b0197 && b0198 && b0199 && b0201 && b0203 && b0206 && b0210 && b0212 && b0213 && b0214 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227 && b0228 && b0229 && b0230 && b0231 && b0232 && b0233 && b0234 && b0235 && b0236 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242 && b0243 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273 && b0274 && b0275 && b0276 && b0277 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0290 && b0291 && b0292 && b0293 && b0294 && b0295 && b0296 && b0297 && b0298 && b0299 && b0300 && b0301 && b0302 && b0303 && b0304 && b0305 && b0306 && b0307 && b0308 && b0309 && b0310 && b0311 && b0312 && b0313 && b0314 && b0315 && b0316 && b0317 && b0318 && b0319 && b0320 && b0321 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0342 && b0343 && b0344 && b0345 && b0346 && b0347 && b0348 && b0349 && b0350 && b0351 && b0352 && b0353 && b0354 && b0355 && b0356 && b0357 && b0358 && b0359 && b0360 && b0361 && b0362 && b0363 && b0364
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,1,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 14.201872
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/trmm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0164 && b0174 && b0198 && b0199 && b0201 && b0203 && b0206 && b0210 && b0213 && b0214 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227 && b0228 && b0229 && b0230 && b0231 && b0232 && b0233 && b0234 && b0235 && b0236 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242 && b0243 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273 && b0274 && b0275 && b0276 && b0277 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0290 && b0291 && b0292 && b0293 && b0294 && b0295 && b0296 && b0297 && b0298 && b0299 && b0300 && b0301 && b0302 && b0303 && b0304 && b0305 && b0306 && b0307 && b0308 && b0309 && b0310 && b0311 && b0312 && b0313 && b0314 && b0315 && b0316 && b0317 && b0318 && b0319 && b0320 && b0321 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0342 && b0343 && b0344 && b0345 && b0346 && b0347 && b0348 && b0349 && b0350 && b0351 && b0352 && b0353 && b0354 && b0355 && b0356 && b0357 && b0358 && b0359 && b0360 && b0361 && b0362 && b0363 && b0364
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 19.383524
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/trmm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0164 && b0198 && b0199 && b0201 && b0203 && b0210 && b0213 && b0214 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227 && b0228 && b0229 && b0230 && b0231 && b0232 && b0233 && b0234 && b0235 && b0236 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242 && b0243 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273 && b0274 && b0275 && b0276 && b0277 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0290 && b0291 && b0292 && b0293 && b0294 && b0295 && b0296 && b0297 && b0298 && b0299 && b0300 && b0301 && b0302 && b0303 && b0304 && b0305 && b0306 && b0307 && b0308 && b0309 && b0310 && b0311 && b0312 && b0313 && b0314 && b0315 && b0316 && b0317 && b0318 && b0319 && b0320 && b0321 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0342 && b0343 && b0344 && b0345 && b0346 && b0347 && b0348 && b0349 && b0350 && b0351 && b0352 && b0353 && b0354 && b0355 && b0356 && b0357 && b0358 && b0359 && b0360 && b0361 && b0362 && b0363 && b0364
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,0,1,1,1,1,1,1,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 12.007767
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/trmm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227 && b0228 && b0229 && b0230 && b0231 && b0232 && b0233 && b0234 && b0235 && b0236 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242 && b0243 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273 && b0274 && b0275 && b0276 && b0277 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0290 && b0291 && b0292 && b0293 && b0294 && b0295 && b0296 && b0297 && b0298 && b0299 && b0300 && b0301 && b0302 && b0303 && b0304 && b0305 && b0306 && b0307 && b0308 && b0309 && b0310 && b0311 && b0312 && b0313 && b0314 && b0315 && b0316 && b0317 && b0318 && b0319 && b0320 && b0321 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0342 && b0343 && b0344 && b0345 && b0346 && b0347 && b0348 && b0349 && b0350 && b0351 && b0352 && b0353 && b0354 && b0355 && b0356 && b0357 && b0358 && b0359 && b0360 && b0361 && b0362 && b0363 && b0364
}
Prover Time taken = 11.990099
Added Horn clause: 5 => 6
Added Horn clause: 7 && 0 && 0 => 8
Added Horn clause: 9 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 10
Added Horn clause: 11 && 0 && 0 && 0 && 0 && 0 && 0 => 12
Added Horn clause: 11 && 0 && 0 && 0 && 0 => 13
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/trmm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0151 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0276 && b0277 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0290 && b0291 && b0292 && b0293 && b0294 && b0295 && b0296 && b0297 && b0298 && b0299 && b0300 && b0301 && b0302 && b0303 && b0304 && b0305 && b0306 && b0307 && b0308 && b0309 && b0310 && b0311 && b0312 && b0313 && b0314 && b0315 && b0316 && b0317 && b0318 && b0319 && b0320 && b0321 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0342 && b0343 && b0344 && b0345 && b0346 && b0347 && b0348 && b0349 && b0350 && b0351 && b0352 && b0353 && b0354 && b0355 && b0356 && b0357 && b0358 && b0359 && b0360 && b0361 && b0362 && b0363 && b0364
}
Prover Time taken = 14.569542
Added Horn clause: 14 && 15 && 0 => 16
Added Horn clause: 14 && 17 && 0 && 0 && 8 && 0 && 12 => 18
Added Horn clause: 14 && 17 && 0 && 0 && 8 && 0 && 12 && 0 && 0 => 19
Added Horn clause: 14 && 17 && 0 && 0 && 8 && 0 && 12 && 0 && 0 && 0 && 0 => 20
Added Horn clause: 14 && 21 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 22
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/trmm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0082 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0151 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0276 && b0277 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0320 && b0321 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0342 && b0343 && b0344 && b0345 && b0346 && b0347 && b0348 && b0349 && b0350 && b0351 && b0352 && b0353 && b0354 && b0355 && b0356 && b0357 && b0358 && b0359 && b0360 && b0361 && b0362 && b0363 && b0364
}
Prover Time taken = 10.152402
Added Horn clause: 23 && 24 && 22 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 25
Added Horn clause: 23 && 26 && 22 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 27
Added Horn clause: 23 && 26 && 22 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 28
Added Horn clause: 29 && 30 && 22 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 31
Added Horn clause: 29 && 32 && 0 && 33 && 8 && 0 && 12 && 0 && 20 && 0 && 19 => 34
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/trmm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0041 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0082 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0125 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0151 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0276 && b0277 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0320 && b0321 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0342 && b0343 && b0344 && b0345 && b0346 && b0347 && b0348 && b0349 && b0355 && b0356 && b0357 && b0358 && b0359 && b0360 && b0361 && b0362 && b0363 && b0364
}
Prover Time taken = 13.430288
Added Horn clause: 14 && 35 && 0 && 36 && 8 && 0 && 0 && 0 && 20 => 37
Added Horn clause: 23 && 38 && 0 && 39 && 8 && 0 && 40 && 0 && 20 && 0 && 0 && 0 && 0 => 41
Added Horn clause: 7 && 42 && 22 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 43 && 0 && 0 && 0 => 44
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/trmm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0041 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0059 && b0060 && b0062 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0082 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0125 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0148 && b0151 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0276 && b0277 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0320 && b0321 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0342 && b0343 && b0344 && b0345 && b0346 && b0347 && b0348 && b0349 && b0356 && b0357 && b0358 && b0359 && b0360 && b0361 && b0362 && b0363 && b0364
}
Prover Time taken = 13.164496
Added Horn clause: 23 && 45 && 22 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 46 && 0 => 47
Added Horn clause: 23 && 48 && 22 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 49 && 28 && 0 && 0 => 50
Added Horn clause: 23 && 51 && 22 && 52 && 53 && 0 && 12 && 0 && 20 => 54
Added Horn clause: 14 && 55 && 22 && 56 && 53 && 0 && 0 && 0 && 0 && 0 && 37 => 57
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/trmm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0041 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0059 && b0060 && b0062 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0082 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0122 && b0125 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0136 && b0137 && b0138 && b0139 && b0140 && b0142 && b0143 && b0144 && b0145 && b0146 && b0148 && b0151 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0276 && b0277 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0320 && b0321 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0342 && b0343 && b0344 && b0345 && b0346 && b0347 && b0348 && b0349 && b0357 && b0358 && b0359 && b0360 && b0361 && b0362 && b0363 && b0364
}
Prover Time taken = 17.3001
Added Horn clause: 23 && 58 && 22 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 59 && 0 => 60
Added Horn clause: 23 && 61 && 0 && 62 && 8 && 0 && 12 && 0 && 63 && 0 && 54 => 64
Added Horn clause: 23 && 65 && 22 && 66 && 41 && 0 && 0 && 0 && 20 && 0 && 67 && 0 && 57 => 68
Added Horn clause: 23 && 69 && 22 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 46 && 0 && 0 && 47 => 70
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/trmm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0041 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0050 && b0051 && b0052 && b0053 && b0055 && b0056 && b0057 && b0059 && b0060 && b0062 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0082 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0116 && b0117 && b0118 && b0119 && b0120 && b0122 && b0125 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0136 && b0137 && b0138 && b0139 && b0140 && b0142 && b0143 && b0144 && b0145 && b0146 && b0148 && b0151 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0277 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0320 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0342 && b0343 && b0344 && b0345 && b0346 && b0347 && b0348 && b0349 && b0357 && b0358 && b0359 && b0360 && b0361 && b0362 && b0363 && b0364
}
Prover Time taken = 14.954768
Added Horn clause: 29 && 71 && 0 => 72
Added Horn clause: 23 && 73 && 0 && 74 && 41 && 0 && 0 => 75
Added Horn clause: 23 && 76 && 22 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 59 && 0 && 0 && 60 => 77
Added Horn clause: 23 && 78 && 22 && 79 && 0 && 0 && 12 && 0 && 0 && 0 && 54 && 0 && 64 => 80
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/trmm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0041 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0050 && b0051 && b0052 && b0053 && b0055 && b0056 && b0057 && b0059 && b0060 && b0062 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0082 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0116 && b0117 && b0118 && b0119 && b0120 && b0122 && b0125 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0136 && b0137 && b0138 && b0139 && b0140 && b0142 && b0143 && b0144 && b0145 && b0146 && b0148 && b0151 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0342 && b0343 && b0344 && b0345 && b0346 && b0347 && b0348 && b0349 && b0357 && b0358 && b0359 && b0360 && b0361 && b0362 && b0363 && b0364
}
Prover Time taken = 10.895446
Added Horn clause: 14 && 71 && 0 => 81
Added Horn clause: 14 && 82 && 0 && 83 && 41 && 0 && 0 => 84
Added Horn clause: 14 && 82 && 0 && 85 && 41 && 0 && 0 && 0 && 75 => 86
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/trmm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0041 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0050 && b0051 && b0052 && b0053 && b0055 && b0056 && b0057 && b0059 && b0060 && b0062 && b0064 && b0065 && b0066 && b0067 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0082 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0096 && b0097 && b0098 && b0099 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0116 && b0117 && b0118 && b0119 && b0120 && b0122 && b0125 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0136 && b0137 && b0138 && b0139 && b0140 && b0142 && b0143 && b0144 && b0146 && b0148 && b0151 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0342 && b0343 && b0344 && b0345 && b0346 && b0347 && b0348 && b0349 && b0357 && b0358 && b0359 && b0360 && b0361 && b0362 && b0363 && b0364
}
Prover Time taken = 14.594331
Added Horn clause: 87 && 88 && 0 => 89
Added Horn clause: 7 && 71 && 0 && 72 && 81 && 0 && 0 => 90
Added Horn clause: 14 && 91 && 0 && 92 && 41 && 0 && 0 && 0 && 93 => 94
Added Horn clause: 23 && 95 && 0 && 96 && 0 && 0 && 0 && 0 && 75 && 0 && 86 => 97
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/trmm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0041 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0050 && b0051 && b0052 && b0053 && b0055 && b0056 && b0057 && b0059 && b0060 && b0062 && b0064 && b0065 && b0066 && b0067 && b0070 && b0071 && b0072 && b0073 && b0076 && b0077 && b0078 && b0079 && b0082 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0096 && b0097 && b0098 && b0099 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0116 && b0117 && b0118 && b0120 && b0122 && b0125 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0136 && b0137 && b0138 && b0140 && b0142 && b0143 && b0144 && b0146 && b0148 && b0151 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0342 && b0343 && b0344 && b0345 && b0346 && b0347 && b0348 && b0349 && b0357 && b0358 && b0359 && b0360 && b0361 && b0362 && b0363 && b0364
}
Prover Time taken = 16.537861
Added Horn clause: 23 && 71 && 0 && 72 && 98 && 0 && 0 && 0 && 99 => 100
Added Horn clause: 7 && 101 && 0 && 102 && 103 && 0 && 0 => 104
Added Horn clause: 23 && 105 && 22 && 106 && 53 && 0 && 0 && 0 && 84 && 0 && 107 => 108
Added Horn clause: 23 && 30 && 0 && 109 && 41 && 0 && 0 && 0 && 75 && 0 && 86 && 0 && 97 => 110
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/trmm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0039 && b0041 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0050 && b0051 && b0052 && b0053 && b0055 && b0056 && b0057 && b0059 && b0060 && b0062 && b0064 && b0065 && b0066 && b0067 && b0070 && b0071 && b0072 && b0073 && b0076 && b0077 && b0078 && b0079 && b0082 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0096 && b0097 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0114 && b0116 && b0117 && b0118 && b0120 && b0122 && b0125 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0136 && b0138 && b0140 && b0142 && b0143 && b0144 && b0146 && b0148 && b0151 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0342 && b0343 && b0344 && b0345 && b0346 && b0347 && b0348 && b0349 && b0357 && b0358 && b0359 && b0360 && b0361 && b0362 && b0363 && b0364
}
Prover Time taken = 15.50068
Added Horn clause: 7 && 71 && 0 && 72 && 81 && 0 && 0 && 0 && 90 => 111
Added Horn clause: 7 && 71 && 0 && 72 && 98 && 0 && 0 && 0 && 112 && 0 && 113 => 114
Added Horn clause: 14 && 115 && 0 && 116 && 41 && 0 && 0 && 0 && 84 && 0 && 107 && 0 && 108 => 117
Added Horn clause: 14 && 115 && 0 && 118 && 41 && 0 && 0 && 0 && 75 && 0 && 86 && 0 && 97 && 59 && 110 => 119
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/trmm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0036 && b0037 && b0039 && b0041 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0050 && b0051 && b0052 && b0055 && b0056 && b0057 && b0059 && b0060 && b0062 && b0064 && b0065 && b0066 && b0067 && b0070 && b0071 && b0072 && b0073 && b0076 && b0077 && b0078 && b0079 && b0082 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0096 && b0097 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0112 && b0114 && b0116 && b0117 && b0118 && b0120 && b0122 && b0125 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0136 && b0140 && b0142 && b0143 && b0144 && b0146 && b0148 && b0151 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0342 && b0343 && b0344 && b0345 && b0346 && b0347 && b0348 && b0349 && b0357 && b0358 && b0359 && b0360 && b0361 && b0362 && b0363 && b0364
}
Prover Time taken = 14.3581
Added Horn clause: 14 && 71 && 0 && 72 && 81 && 0 && 0 && 0 && 90 && 0 && 120 => 121
Added Horn clause: 7 && 88 && 0 && 96 && 89 && 0 && 0 && 0 && 122 => 123
Added Horn clause: 29 && 71 && 0 && 72 && 98 && 0 && 0 && 0 && 112 && 0 && 124 && 0 && 114 => 125
Added Horn clause: 7 && 126 && 22 && 72 && 0 && 0 && 0 && 0 && 84 && 0 && 107 && 0 && 108 && 46 && 117 => 127
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/trmm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0036 && b0037 && b0039 && b0041 && b0043 && b0044 && b0045 && b0046 && b0047 && b0050 && b0051 && b0052 && b0055 && b0056 && b0057 && b0059 && b0060 && b0062 && b0064 && b0065 && b0066 && b0067 && b0070 && b0071 && b0072 && b0073 && b0076 && b0077 && b0078 && b0079 && b0082 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0096 && b0097 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0114 && b0116 && b0117 && b0118 && b0120 && b0122 && b0125 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0136 && b0140 && b0142 && b0146 && b0148 && b0151 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0342 && b0343 && b0344 && b0345 && b0346 && b0347 && b0348 && b0349 && b0357 && b0358 && b0359 && b0360 && b0361 && b0362 && b0363 && b0364
}
Prover Time taken = 14.16308
Added Horn clause: 29 && 88 && 0 && 96 && 89 && 0 && 0 && 0 && 122 && 0 && 123 => 128
Added Horn clause: 29 && 71 && 0 && 72 && 81 && 0 && 0 && 0 && 129 && 0 && 130 && 0 && 131 && 46 && 132 => 133
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/trmm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0036 && b0037 && b0039 && b0041 && b0043 && b0044 && b0045 && b0046 && b0050 && b0051 && b0052 && b0055 && b0056 && b0057 && b0059 && b0060 && b0062 && b0064 && b0065 && b0066 && b0067 && b0070 && b0071 && b0072 && b0073 && b0076 && b0077 && b0078 && b0079 && b0082 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0096 && b0097 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0114 && b0116 && b0120 && b0122 && b0125 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0136 && b0140 && b0142 && b0146 && b0148 && b0151 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0342 && b0343 && b0344 && b0345 && b0346 && b0347 && b0348 && b0349 && b0357 && b0358 && b0359 && b0360 && b0361 && b0362 && b0363 && b0364
}
Prover Time taken = 9.400601
Added Horn clause: 23 && 88 && 0 && 96 && 89 && 0 && 0 && 0 && 134 && 0 && 135 && 0 && 136 => 137
Added Horn clause: 7 && 71 && 0 && 72 && 81 && 0 && 0 && 0 && 90 && 0 && 111 && 0 && 121 && 46 && 132 && 0 && 138 => 139
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/trmm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0036 && b0039 && b0041 && b0043 && b0044 && b0045 && b0046 && b0050 && b0051 && b0052 && b0055 && b0056 && b0057 && b0059 && b0060 && b0062 && b0064 && b0065 && b0066 && b0067 && b0070 && b0071 && b0072 && b0073 && b0076 && b0077 && b0078 && b0079 && b0082 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0096 && b0097 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0114 && b0116 && b0120 && b0122 && b0125 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0136 && b0140 && b0142 && b0146 && b0148 && b0151 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0342 && b0343 && b0344 && b0345 && b0346 && b0347 && b0348 && b0349 && b0357 && b0358 && b0359 && b0360 && b0361 && b0362 && b0363 && b0364
}
Prover Time taken = 12.225875
Added Horn clause: 140 => 141
Added Horn clause: 29 && 88 && 0 && 96 && 89 && 0 && 0 && 0 && 134 && 0 && 135 && 0 && 136 && 59 && 137 => 142
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/trmm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0036 && b0039 && b0041 && b0043 && b0044 && b0045 && b0046 && b0050 && b0051 && b0055 && b0056 && b0057 && b0059 && b0060 && b0062 && b0064 && b0065 && b0066 && b0067 && b0070 && b0071 && b0072 && b0073 && b0076 && b0077 && b0078 && b0079 && b0082 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0096 && b0097 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0114 && b0116 && b0120 && b0122 && b0125 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0136 && b0140 && b0142 && b0146 && b0148 && b0151 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0342 && b0343 && b0344 && b0345 && b0346 && b0347 && b0348 && b0349 && b0357 && b0358 && b0359 && b0360 && b0361 && b0362 && b0363 && b0364
}
Prover Time taken = 10.564855
Added Horn clause: 23 && 88 && 0 && 96 && 89 && 0 && 0 && 0 && 134 && 0 && 135 && 0 && 136 && 59 && 137 && 0 && 143 => 144
Added Horn clause: 140 && 71 && 141 => 145
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/trmm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0036 && b0039 && b0041 && b0043 && b0044 && b0045 && b0046 && b0050 && b0051 && b0055 && b0056 && b0057 && b0059 && b0060 && b0062 && b0064 && b0065 && b0066 && b0070 && b0071 && b0072 && b0073 && b0076 && b0077 && b0078 && b0079 && b0082 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0096 && b0097 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0114 && b0116 && b0120 && b0122 && b0125 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0136 && b0140 && b0142 && b0146 && b0148 && b0151 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0342 && b0343 && b0344 && b0345 && b0346 && b0347 && b0348 && b0349 && b0357 && b0358 && b0359 && b0360 && b0361 && b0362 && b0363 && b0364
}
Prover Time taken = 7.44322
Added Horn clause: 146 => 147
Added Horn clause: 140 && 71 && 141 && 72 && 148 && 0 && 0 => 149
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/trmm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0020 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0036 && b0039 && b0041 && b0043 && b0044 && b0045 && b0046 && b0050 && b0051 && b0055 && b0056 && b0057 && b0059 && b0060 && b0062 && b0064 && b0065 && b0066 && b0070 && b0071 && b0072 && b0073 && b0076 && b0077 && b0078 && b0079 && b0082 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0097 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0114 && b0116 && b0120 && b0122 && b0125 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0136 && b0140 && b0142 && b0146 && b0148 && b0151 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0342 && b0343 && b0344 && b0345 && b0346 && b0347 && b0348 && b0349 && b0357 && b0358 && b0359 && b0360 && b0361 && b0362 && b0363 && b0364
}
Prover Time taken = 6.831889
Added Horn clause: 140 && 71 && 141 && 72 && 145 && 0 && 0 && 0 && 150 => 151
Added Horn clause: 146 && 88 && 147 => 152
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/trmm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0020 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0036 && b0039 && b0041 && b0043 && b0044 && b0045 && b0046 && b0050 && b0051 && b0055 && b0056 && b0057 && b0059 && b0060 && b0062 && b0064 && b0065 && b0066 && b0070 && b0071 && b0072 && b0076 && b0077 && b0078 && b0079 && b0082 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0097 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0114 && b0116 && b0120 && b0122 && b0125 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0142 && b0146 && b0148 && b0151 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0342 && b0343 && b0344 && b0345 && b0346 && b0347 && b0348 && b0349 && b0357 && b0358 && b0359 && b0360 && b0361 && b0362 && b0363 && b0364
}
Prover Time taken = 7.538205
Added Horn clause: 146 && 88 && 147 && 96 && 152 && 0 && 0 => 153
Added Horn clause: 140 && 71 && 141 && 72 && 145 && 0 && 0 && 0 && 150 && 0 && 154 => 155
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/trmm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0020 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0036 && b0039 && b0041 && b0043 && b0044 && b0045 && b0046 && b0050 && b0051 && b0055 && b0056 && b0057 && b0059 && b0060 && b0062 && b0064 && b0065 && b0066 && b0070 && b0071 && b0072 && b0076 && b0077 && b0078 && b0079 && b0082 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0116 && b0120 && b0122 && b0125 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0142 && b0146 && b0148 && b0151 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0342 && b0343 && b0344 && b0345 && b0346 && b0347 && b0348 && b0349 && b0357 && b0358 && b0359 && b0360 && b0361 && b0362 && b0363 && b0364
}
Prover Time taken = 8.13945
Added Horn clause: 140 && 71 && 141 && 72 && 145 && 0 && 0 && 0 && 150 && 0 && 151 && 0 && 156 => 157
Added Horn clause: 146 && 88 && 147 && 96 && 152 && 0 && 0 && 0 && 153 => 158
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/trmm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0020 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0036 && b0039 && b0041 && b0043 && b0044 && b0045 && b0046 && b0050 && b0051 && b0055 && b0056 && b0057 && b0059 && b0060 && b0062 && b0064 && b0065 && b0066 && b0070 && b0071 && b0072 && b0076 && b0077 && b0078 && b0079 && b0082 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0116 && b0120 && b0122 && b0125 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0148 && b0151 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0342 && b0343 && b0344 && b0345 && b0346 && b0347 && b0348 && b0349 && b0357 && b0358 && b0359 && b0360 && b0361 && b0362 && b0363 && b0364
}
Prover Time taken = 12.446164
Added Horn clause: 140 && 71 && 141 && 72 && 159 && 0 && 0 && 0 && 160 && 0 && 161 && 0 && 162 && 46 && 163 => 164
Added Horn clause: 146 && 88 && 147 && 96 && 152 && 0 && 0 && 0 && 153 && 0 && 158 => 165
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/trmm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0020 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0036 && b0039 && b0041 && b0043 && b0044 && b0045 && b0051 && b0055 && b0056 && b0057 && b0059 && b0060 && b0062 && b0064 && b0065 && b0066 && b0070 && b0071 && b0072 && b0076 && b0077 && b0078 && b0079 && b0082 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0122 && b0125 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0148 && b0151 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0342 && b0343 && b0344 && b0345 && b0346 && b0347 && b0348 && b0349 && b0357 && b0358 && b0359 && b0360 && b0361 && b0362 && b0363 && b0364
}
Prover Time taken = 10.149344
Added Horn clause: 146 && 88 && 147 && 96 && 152 && 0 && 0 && 0 && 153 && 0 && 158 && 0 && 165 => 166
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/trmm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0020 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0039 && b0041 && b0043 && b0044 && b0045 && b0051 && b0055 && b0056 && b0057 && b0059 && b0060 && b0062 && b0064 && b0065 && b0066 && b0070 && b0071 && b0072 && b0076 && b0077 && b0078 && b0079 && b0082 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0122 && b0125 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0148 && b0151 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0342 && b0343 && b0344 && b0345 && b0346 && b0347 && b0348 && b0349 && b0357 && b0358 && b0359 && b0360 && b0361 && b0362 && b0363 && b0364
}
Prover Time taken = 9.807656
Added Horn clause: 146 && 88 && 147 && 96 && 152 && 0 && 0 && 0 && 153 && 0 && 158 && 0 && 165 && 59 && 166 => 167
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/blas/trmm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0020 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0039 && b0041 && b0043 && b0044 && b0045 && b0056 && b0057 && b0059 && b0060 && b0062 && b0064 && b0065 && b0066 && b0070 && b0071 && b0072 && b0076 && b0077 && b0078 && b0079 && b0082 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0122 && b0125 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0148 && b0151 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0342 && b0343 && b0344 && b0345 && b0346 && b0347 && b0348 && b0349 && b0357 && b0358 && b0359 && b0360 && b0361 && b0362 && b0363 && b0364
}
Prover Time taken = 4.979304
Prover time = 346.72
Number of prover queries = 29
Learner time = 0.00
Number of learner queries = 28
Total time: 350.85
Number of positive examples:5
Number of negative examples:0
Number of Horn clauses:69
verified

Boogie program verifier finished with 1 verified, 0 errors
12.72user 1.51system 5:52.22elapsed 4%CPU (0avgtext+0avgdata 109716maxresident)k
0inputs+0outputs (0major+264059minor)pagefaults 0swaps
FILE:polybench/linear-algebra/blas/trmm/kernel0.bpl.ice2.bpl
#################
Thu Jan 31 01:05:31 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/2mm/kernel0.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/2mm/kernel0.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 190
Generating VC of $kernel0
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.081385
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/2mm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 3.321473
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/2mm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0067 && b0077 && b0079 && b0095 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 3.070697
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/2mm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0079 && b0095 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 2.862243
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/2mm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0079 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 2.184164
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/2mm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189
}
Prover Time taken = 3.099771
Added Horn clause: 5 => 6
Added Horn clause: 7 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 8
Added Horn clause: 9 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 10
Added Horn clause: 9 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 11
Added Horn clause: 12 && 0 && 0 && 0 && 0 => 13
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/2mm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189
}
Prover Time taken = 2.898631
Added Horn clause: 7 && 14 && 0 => 15
Added Horn clause: 16 && 17 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 18
Added Horn clause: 16 && 19 && 0 && 0 && 0 && 0 && 13 => 20
Added Horn clause: 16 && 19 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 21
Added Horn clause: 16 && 19 && 0 && 0 && 0 && 0 && 0 => 22
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/2mm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0053 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189
}
Prover Time taken = 4.530545
Added Horn clause: 23 => 24
Added Horn clause: 7 && 25 && 0 && 26 && 0 && 0 && 27 && 0 && 0 => 28
Added Horn clause: 12 && 29 && 0 && 30 && 0 && 0 && 0 && 0 && 22 => 31
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/2mm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0021 && b0022 && b0023 && b0024 && b0025 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0039 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0053 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189
}
Prover Time taken = 3.750171
Prover time = 25.80
Number of prover queries = 9
Learner time = 0.00
Number of learner queries = 8
Total time: 26.16
Number of positive examples:5
Number of negative examples:0
Number of Horn clauses:13
verified

Boogie program verifier finished with 1 verified, 0 errors
2.55user 0.36system 0:26.87elapsed 10%CPU (0avgtext+0avgdata 84296maxresident)k
0inputs+0outputs (0major+53812minor)pagefaults 0swaps
FILE:polybench/linear-algebra/kernels/2mm/kernel0.bpl.ice2.bpl
#################
Thu Jan 31 01:05:58 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/2mm/kernel1.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/2mm/kernel1.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 44
Generating VC of $kernel1
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.073923
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/2mm/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043
}
Prover Time taken = 0.531323
Added Horn clause: 0 => 1
Added Horn clause: 0 && 0 && 0 => 2
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 3
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 4
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/2mm/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0019 && b0020 && b0021 && b0023 && b0025 && b0026 && b0027 && b0028 && b0029 && b0031 && b0032 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043
}
Prover Time taken = 1.154291
Added Horn clause: 0 && 0 && 1 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/2mm/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0019 && b0020 && b0021 && b0023 && b0025 && b0026 && b0027 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043
}
Prover Time taken = 0.889066
Added Horn clause: 0 && 0 && 0 => 7
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/2mm/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0019 && b0020 && b0023 && b0025 && b0026 && b0027 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043
}
Prover Time taken = 0.964002
Prover time = 3.61
Number of prover queries = 5
Learner time = 0.00
Number of learner queries = 4
Total time: 3.69
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:7
verified

Boogie program verifier finished with 1 verified, 0 errors
4.20user 0.10system 0:04.28elapsed 100%CPU (0avgtext+0avgdata 58888maxresident)k
0inputs+0outputs (0major+25581minor)pagefaults 0swaps
FILE:polybench/linear-algebra/kernels/2mm/kernel1.bpl.ice2.bpl
#################
Thu Jan 31 01:06:02 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/2mm/kernel2.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/2mm/kernel2.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 192
Generating VC of $kernel2
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.080781
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/2mm/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 3.459868
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/2mm/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0068 && b0096 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 3.507897
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/2mm/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191
}
Prover Time taken = 3.241018
Added Horn clause: 3 => 4
Added Horn clause: 5 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 6
Added Horn clause: 7 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 8
Added Horn clause: 0 && 0 && 0 && 0 && 0 && 0 && 0 => 9
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 10
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/2mm/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0054 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0121 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191
}
Prover Time taken = 2.592831
Added Horn clause: 11 => 12
Added Horn clause: 5 && 13 && 0 => 14
Added Horn clause: 15 && 16 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 17
Added Horn clause: 15 && 16 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 18
Added Horn clause: 15 && 16 && 0 && 0 && 0 && 0 && 0 => 19
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/2mm/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0054 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191
}
Prover Time taken = 4.554896
Added Horn clause: 15 && 20 && 0 => 21
Added Horn clause: 22 && 23 && 0 && 24 && 0 && 0 && 0 && 0 && 0 => 25
Added Horn clause: 22 && 23 && 0 && 24 && 0 && 0 && 0 && 0 && 0 => 26
Added Horn clause: 27 && 28 && 0 && 29 && 0 && 0 && 9 && 0 && 8 => 30
Added Horn clause: 22 && 31 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 32
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/2mm/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0054 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0144 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0191
}
Prover Time taken = 5.087257
Added Horn clause: 5 && 33 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 34
Added Horn clause: 15 && 35 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 36
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/2mm/kernel2.bpl.ice2.bpl
Total learner time was 00:00:01
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0054 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0100 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0191
}
Prover Time taken = 5.480688
Added Horn clause: 37 => 38
Added Horn clause: 27 && 39 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 40
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/2mm/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0054 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0191
}
Prover Time taken = 5.98901
Added Horn clause: 41 => 42
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/2mm/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0054 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0191
}
Prover Time taken = 5.375723
Prover time = 39.37
Number of prover queries = 10
Learner time = 1.00
Number of learner queries = 9
Total time: 39.79
Number of positive examples:3
Number of negative examples:0
Number of Horn clauses:20
verified

Boogie program verifier finished with 1 verified, 0 errors
2.42user 0.38system 0:40.83elapsed 6%CPU (0avgtext+0avgdata 86144maxresident)k
0inputs+0outputs (0major+54719minor)pagefaults 0swaps
FILE:polybench/linear-algebra/kernels/2mm/kernel2.bpl.ice2.bpl
#################
Thu Jan 31 01:06:43 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel0.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel0.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 34
Generating VC of $kernel0
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.06955
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033
}
Prover Time taken = 0.375084
Added Horn clause: 0 && 0 && 0 => 1
Added Horn clause: 0 => 2
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 3
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 4
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0017 && b0018 && b0019 && b0021 && b0023 && b0024 && b0025 && b0026 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033
}
Prover Time taken = 0.866829
Added Horn clause: 0 && 0 && 0 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0017 && b0018 && b0021 && b0023 && b0024 && b0025 && b0026 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033
}
Prover Time taken = 0.780783
Added Horn clause: 0 && 0 && 2 => 7
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0017 && b0018 && b0021 && b0023 && b0024 && b0025 && b0029 && b0030 && b0031 && b0032 && b0033
}
Prover Time taken = 0.793483
Prover time = 2.89
Number of prover queries = 5
Learner time = 0.00
Number of learner queries = 4
Total time: 2.96
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:7
verified

Boogie program verifier finished with 1 verified, 0 errors
3.50user 0.10system 0:03.82elapsed 94%CPU (0avgtext+0avgdata 59220maxresident)k
0inputs+0outputs (0major+24347minor)pagefaults 0swaps
FILE:polybench/linear-algebra/kernels/3mm/kernel0.bpl.ice2.bpl
#################
Thu Jan 31 01:06:47 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel1.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel1.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 243
Generating VC of $kernel1
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.082693
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227 && b0228 && b0229 && b0230 && b0231 && b0232 && b0233 && b0234 && b0235 && b0236 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,1,1,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 6.593285
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0093 && b0094 && b0095 && b0096 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0121 && b0122 && b0123 && b0124 && b0125 && b0129 && b0130 && b0132 && b0133 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227 && b0228 && b0229 && b0230 && b0231 && b0232 && b0233 && b0234 && b0235 && b0236 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,0,0,1,0,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 8.542238
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0096 && b0099 && b0110 && b0111 && b0112 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227 && b0228 && b0229 && b0230 && b0231 && b0232 && b0233 && b0234 && b0235 && b0236 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 7.7711
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0112 && b0119 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227 && b0228 && b0229 && b0230 && b0231 && b0232 && b0233 && b0234 && b0235 && b0236 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 7.852594
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227 && b0228 && b0229 && b0230 && b0231 && b0232 && b0233 && b0234 && b0235 && b0236 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242
}
Prover Time taken = 8.10233
Added Horn clause: 5 => 6
Added Horn clause: 7 && 0 && 0 && 0 && 0 => 8
Added Horn clause: 9 && 0 && 0 => 10
Added Horn clause: 9 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 11
Added Horn clause: 12 && 0 && 0 && 0 && 0 && 0 && 0 => 13
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0065 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0078 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227 && b0228 && b0229 && b0230 && b0231 && b0232 && b0233 && b0234 && b0235 && b0236 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242
}
Prover Time taken = 7.505802
Added Horn clause: 0 => 14
Added Horn clause: 15 && 16 && 0 && 0 && 8 => 17
Added Horn clause: 9 && 18 && 0 && 0 && 0 && 0 && 13 => 19
Added Horn clause: 12 && 20 && 0 && 0 && 0 && 0 && 13 && 0 && 0 && 0 && 0 && 0 && 0 => 21
Added Horn clause: 9 && 22 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 23
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0065 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0078 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227 && b0228 && b0229 && b0230 && b0231 && b0232 && b0233 && b0234 && b0235 && b0236 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242
}
Prover Time taken = 6.540471
Added Horn clause: 12 && 24 && 0 && 0 && 0 && 0 && 0 => 25
Added Horn clause: 12 && 26 && 0 && 0 && 0 && 0 && 13 && 0 && 0 && 0 && 0 && 0 && 0 => 27
Added Horn clause: 12 && 26 && 0 && 0 && 0 && 0 && 13 && 0 && 0 && 0 && 0 => 28
Added Horn clause: 12 && 26 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 29
Added Horn clause: 12 && 26 && 0 && 0 && 0 && 0 && 13 && 0 && 0 && 0 && 0 && 0 && 0 => 30
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0053 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0065 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0078 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0215 && b0216 && b0220 && b0221 && b0222 && b0223 && b0225 && b0226 && b0227 && b0229 && b0231 && b0232 && b0233 && b0234 && b0235 && b0236 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242
}
Prover Time taken = 6.990407
Added Horn clause: 0 && 31 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 32
Added Horn clause: 9 && 33 && 0 && 0 && 0 && 0 && 13 => 34
Added Horn clause: 12 && 35 && 0 && 0 && 0 && 0 && 13 && 36 && 0 && 0 && 0 && 0 && 0 => 37
Added Horn clause: 9 && 38 && 0 && 0 && 0 && 0 && 13 && 39 && 0 && 0 && 0 && 0 && 0 => 40
Added Horn clause: 12 && 41 && 0 && 0 && 0 && 0 && 13 && 42 && 0 && 0 && 0 && 0 && 0 => 43
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0039 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0053 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0065 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0078 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0215 && b0216 && b0220 && b0221 && b0223 && b0225 && b0231 && b0232 && b0233 && b0234 && b0235 && b0236 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242
}
Prover Time taken = 9.358841
Added Horn clause: 44 => 45
Added Horn clause: 0 && 46 && 0 && 0 && 8 && 0 && 0 => 47
Added Horn clause: 12 && 48 && 0 && 0 && 0 && 0 && 0 && 36 && 43 && 0 && 0 && 0 && 0 => 49
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0021 && b0022 && b0023 && b0024 && b0025 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0039 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0053 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0065 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0078 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0216 && b0220 && b0221 && b0231 && b0232 && b0233 && b0234 && b0235 && b0236 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242
}
Prover Time taken = 5.736323
Added Horn clause: 9 && 50 && 0 && 0 && 0 && 0 && 0 => 51
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0021 && b0022 && b0023 && b0024 && b0025 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0039 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0053 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0065 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0078 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0220 && b0221 && b0231 && b0232 && b0233 && b0234 && b0235 && b0236 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242
}
Prover Time taken = 5.478349
Added Horn clause: 15 && 52 && 0 && 0 && 0 && 0 && 13 => 53
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0021 && b0022 && b0023 && b0024 && b0025 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0039 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0053 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0065 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0078 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0221 && b0231 && b0232 && b0233 && b0234 && b0235 && b0236 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242
}
Prover Time taken = 6.126285
Added Horn clause: 15 && 54 && 0 && 0 && 0 && 0 && 0 => 55
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0021 && b0022 && b0023 && b0024 && b0025 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0039 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0053 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0065 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0078 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0231 && b0232 && b0233 && b0234 && b0235 && b0236 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242
}
Prover Time taken = 4.641229
Prover time = 91.32
Number of prover queries = 14
Learner time = 0.00
Number of learner queries = 13
Total time: 92.16
Number of positive examples:5
Number of negative examples:0
Number of Horn clauses:26
verified

Boogie program verifier finished with 1 verified, 0 errors
4.35user 0.61system 1:33.34elapsed 5%CPU (0avgtext+0avgdata 90432maxresident)k
0inputs+0outputs (0major+97386minor)pagefaults 0swaps
FILE:polybench/linear-algebra/kernels/3mm/kernel1.bpl.ice2.bpl
#################
Thu Jan 31 01:08:20 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel2.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel2.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 34
Generating VC of $kernel2
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.077374
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033
}
Prover Time taken = 0.715746
Added Horn clause: 0 && 0 && 0 => 1
Added Horn clause: 0 => 2
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 3
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 4
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0017 && b0018 && b0019 && b0021 && b0023 && b0024 && b0025 && b0026 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033
}
Prover Time taken = 0.751303
Added Horn clause: 0 && 0 && 2 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0017 && b0018 && b0019 && b0021 && b0023 && b0024 && b0025 && b0029 && b0030 && b0031 && b0032 && b0033
}
Prover Time taken = 1.026941
Added Horn clause: 0 && 0 && 0 => 7
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0017 && b0018 && b0021 && b0023 && b0024 && b0025 && b0029 && b0030 && b0031 && b0032 && b0033
}
Prover Time taken = 0.931819
Prover time = 3.50
Number of prover queries = 5
Learner time = 0.00
Number of learner queries = 4
Total time: 3.58
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:7
verified

Boogie program verifier finished with 1 verified, 0 errors
4.12user 0.13system 0:04.30elapsed 98%CPU (0avgtext+0avgdata 55000maxresident)k
0inputs+0outputs (0major+28163minor)pagefaults 0swaps
FILE:polybench/linear-algebra/kernels/3mm/kernel2.bpl.ice2.bpl
#################
Thu Jan 31 01:08:24 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 466
Generating VC of $kernel3
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.100192
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227 && b0228 && b0229 && b0230 && b0231 && b0232 && b0233 && b0234 && b0235 && b0236 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242 && b0243 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273 && b0274 && b0275 && b0276 && b0277 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0290 && b0291 && b0292 && b0293 && b0294 && b0295 && b0296 && b0297 && b0298 && b0299 && b0300 && b0301 && b0302 && b0303 && b0304 && b0305 && b0306 && b0307 && b0308 && b0309 && b0310 && b0311 && b0312 && b0313 && b0314 && b0315 && b0316 && b0317 && b0318 && b0319 && b0320 && b0321 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0342 && b0343 && b0344 && b0345 && b0346 && b0347 && b0348 && b0349 && b0350 && b0351 && b0352 && b0353 && b0354 && b0355 && b0356 && b0357 && b0358 && b0359 && b0360 && b0361 && b0362 && b0363 && b0364 && b0365 && b0366 && b0367 && b0368 && b0369 && b0370 && b0371 && b0372 && b0373 && b0374 && b0375 && b0376 && b0377 && b0378 && b0379 && b0380 && b0381 && b0382 && b0383 && b0384 && b0385 && b0386 && b0387 && b0388 && b0389 && b0390 && b0391 && b0392 && b0393 && b0394 && b0395 && b0396 && b0397 && b0398 && b0399 && b0400 && b0401 && b0402 && b0403 && b0404 && b0405 && b0406 && b0407 && b0408 && b0409 && b0410 && b0411 && b0412 && b0413 && b0414 && b0415 && b0416 && b0417 && b0418 && b0419 && b0420 && b0421 && b0422 && b0423 && b0424 && b0425 && b0426 && b0427 && b0428 && b0429 && b0430 && b0431 && b0432 && b0433 && b0434 && b0435 && b0436 && b0437 && b0438 && b0439 && b0440 && b0441 && b0442 && b0443 && b0444 && b0445 && b0446 && b0447 && b0448 && b0449 && b0450 && b0451 && b0452 && b0453 && b0454 && b0455 && b0456 && b0457 && b0458 && b0459 && b0460 && b0461 && b0462 && b0463 && b0464 && b0465
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 22.380656
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227 && b0228 && b0229 && b0230 && b0231 && b0232 && b0233 && b0234 && b0235 && b0236 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242 && b0243 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273 && b0274 && b0275 && b0276 && b0277 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0290 && b0291 && b0292 && b0293 && b0294 && b0295 && b0296 && b0297 && b0298 && b0299 && b0300 && b0301 && b0302 && b0303 && b0304 && b0305 && b0306 && b0307 && b0308 && b0309 && b0310 && b0311 && b0312 && b0313 && b0314 && b0315 && b0316 && b0317 && b0318 && b0319 && b0320 && b0321 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0376 && b0377 && b0378 && b0379 && b0380 && b0381 && b0382 && b0383 && b0384 && b0385 && b0386 && b0387 && b0388 && b0389 && b0390 && b0391 && b0392 && b0393 && b0394 && b0395 && b0396 && b0397 && b0398 && b0399 && b0400 && b0401 && b0402 && b0403 && b0404 && b0405 && b0406 && b0407 && b0408 && b0409 && b0410 && b0411 && b0412 && b0413 && b0414 && b0415 && b0416 && b0417 && b0418 && b0419 && b0420 && b0421 && b0422 && b0423 && b0424 && b0425 && b0426 && b0427 && b0428 && b0429 && b0430 && b0431 && b0432 && b0433 && b0434 && b0435 && b0436 && b0437 && b0438 && b0439 && b0440 && b0441 && b0442 && b0443 && b0444 && b0445 && b0446 && b0447 && b0448 && b0449 && b0450 && b0451 && b0452 && b0453 && b0454 && b0455 && b0456 && b0457 && b0458 && b0459 && b0460 && b0461 && b0462 && b0463 && b0464 && b0465
}
Prover Time taken = 18.87516
Added Horn clause: 2 => 3
Added Horn clause: 0 && 0 && 0 => 4
Added Horn clause: 5 && 0 && 0 && 0 && 0 => 6
Added Horn clause: 5 && 0 && 0 && 0 && 0 => 7
Added Horn clause: 8 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 9
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0118 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227 && b0228 && b0229 && b0230 && b0231 && b0232 && b0235 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242 && b0243 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273 && b0274 && b0275 && b0276 && b0277 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0290 && b0291 && b0292 && b0293 && b0294 && b0295 && b0296 && b0297 && b0298 && b0299 && b0300 && b0301 && b0302 && b0303 && b0304 && b0305 && b0306 && b0307 && b0308 && b0309 && b0310 && b0311 && b0312 && b0313 && b0314 && b0315 && b0316 && b0317 && b0318 && b0319 && b0320 && b0321 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0376 && b0377 && b0378 && b0379 && b0380 && b0381 && b0382 && b0383 && b0384 && b0385 && b0386 && b0387 && b0388 && b0389 && b0390 && b0422 && b0423 && b0424 && b0425 && b0426 && b0427 && b0428 && b0429 && b0430 && b0431 && b0432 && b0433 && b0434 && b0435 && b0436 && b0437 && b0438 && b0439 && b0440 && b0441 && b0442 && b0443 && b0444 && b0445 && b0446 && b0447 && b0448 && b0449 && b0450 && b0451 && b0452 && b0453 && b0454 && b0455 && b0456 && b0457 && b0458 && b0459 && b0460 && b0461 && b0462 && b0463 && b0464 && b0465
}
Prover Time taken = 14.610291
Added Horn clause: 10 && 11 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 12
Added Horn clause: 13 && 14 && 0 && 0 && 0 && 0 && 0 => 15
Added Horn clause: 13 && 16 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 17
Added Horn clause: 13 && 16 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 18
Added Horn clause: 13 && 19 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 20
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0118 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0172 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0195 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0205 && b0206 && b0207 && b0208 && b0210 && b0212 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0227 && b0228 && b0229 && b0230 && b0232 && b0235 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242 && b0243 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273 && b0274 && b0275 && b0276 && b0277 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0290 && b0291 && b0292 && b0293 && b0294 && b0295 && b0296 && b0297 && b0298 && b0299 && b0300 && b0301 && b0302 && b0303 && b0304 && b0305 && b0306 && b0307 && b0308 && b0309 && b0310 && b0311 && b0312 && b0313 && b0314 && b0315 && b0316 && b0317 && b0318 && b0319 && b0320 && b0321 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0376 && b0377 && b0378 && b0379 && b0380 && b0381 && b0382 && b0383 && b0384 && b0385 && b0386 && b0387 && b0388 && b0389 && b0390 && b0422 && b0423 && b0424 && b0425 && b0426 && b0427 && b0428 && b0429 && b0430 && b0431 && b0432 && b0433 && b0434 && b0435 && b0436 && b0437 && b0438 && b0439 && b0440 && b0441 && b0442 && b0443 && b0444 && b0445 && b0446 && b0447 && b0448 && b0449 && b0450 && b0451 && b0452 && b0453 && b0454 && b0455 && b0456 && b0457 && b0458 && b0459 && b0460 && b0461 && b0462 && b0463 && b0464 && b0465
}
Prover Time taken = 15.269464
Added Horn clause: 13 && 21 && 0 && 0 && 6 && 0 && 0 && 0 && 0 && 0 && 0 => 22
Added Horn clause: 23 && 24 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 25
Added Horn clause: 13 && 26 && 0 && 0 && 0 && 0 && 18 && 0 && 27 => 28
Added Horn clause: 13 && 29 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 30
Added Horn clause: 13 && 29 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 31
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0118 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0134 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0154 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0172 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0195 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0205 && b0206 && b0207 && b0208 && b0210 && b0212 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0222 && b0223 && b0224 && b0225 && b0227 && b0228 && b0229 && b0230 && b0232 && b0235 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242 && b0243 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273 && b0274 && b0275 && b0276 && b0277 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0290 && b0291 && b0292 && b0293 && b0294 && b0295 && b0296 && b0297 && b0298 && b0299 && b0300 && b0301 && b0302 && b0303 && b0304 && b0305 && b0306 && b0307 && b0308 && b0309 && b0310 && b0311 && b0312 && b0313 && b0314 && b0315 && b0316 && b0317 && b0318 && b0319 && b0320 && b0321 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0376 && b0377 && b0378 && b0379 && b0380 && b0381 && b0382 && b0383 && b0384 && b0385 && b0386 && b0387 && b0388 && b0389 && b0390 && b0422 && b0424 && b0425 && b0426 && b0427 && b0428 && b0429 && b0430 && b0431 && b0432 && b0433 && b0435 && b0436 && b0437 && b0438 && b0439 && b0440 && b0441 && b0442 && b0443 && b0444 && b0445 && b0446 && b0447 && b0448 && b0449 && b0450 && b0451 && b0452 && b0453 && b0454 && b0455 && b0456 && b0457 && b0458 && b0459 && b0460 && b0461 && b0462 && b0463 && b0464 && b0465
}
Prover Time taken = 17.632718
Added Horn clause: 13 && 32 && 0 && 0 && 0 => 33
Added Horn clause: 13 && 34 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 35
Added Horn clause: 5 && 36 && 31 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 25 => 37
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0118 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0134 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0154 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0167 && b0168 && b0169 && b0172 && b0174 && b0175 && b0176 && b0177 && b0178 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0195 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0205 && b0206 && b0207 && b0208 && b0210 && b0212 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0222 && b0223 && b0224 && b0225 && b0227 && b0228 && b0229 && b0230 && b0232 && b0235 && b0237 && b0238 && b0239 && b0240 && b0241 && b0242 && b0243 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273 && b0274 && b0275 && b0276 && b0277 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0290 && b0291 && b0292 && b0293 && b0294 && b0295 && b0296 && b0297 && b0298 && b0299 && b0300 && b0301 && b0302 && b0303 && b0304 && b0305 && b0306 && b0307 && b0308 && b0309 && b0310 && b0311 && b0312 && b0313 && b0314 && b0315 && b0316 && b0317 && b0318 && b0319 && b0320 && b0321 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0376 && b0377 && b0378 && b0379 && b0380 && b0381 && b0382 && b0383 && b0384 && b0385 && b0386 && b0387 && b0388 && b0389 && b0390 && b0424 && b0425 && b0426 && b0427 && b0428 && b0429 && b0430 && b0431 && b0432 && b0433 && b0435 && b0436 && b0437 && b0438 && b0439 && b0440 && b0441 && b0442 && b0443 && b0444 && b0445 && b0446 && b0447 && b0448 && b0449 && b0450 && b0451 && b0452 && b0453 && b0454 && b0455 && b0456 && b0457 && b0458 && b0459 && b0460 && b0461 && b0462 && b0463 && b0464 && b0465
}
Prover Time taken = 23.810011
Added Horn clause: 13 && 38 && 0 => 39
Added Horn clause: 8 && 32 && 0 && 0 && 0 && 0 && 33 => 40
Added Horn clause: 8 && 34 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 35 => 41
Added Horn clause: 5 && 42 && 31 && 0 && 6 && 0 && 18 && 0 && 0 && 0 && 43 && 0 && 25 => 44
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0118 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0134 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0154 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0167 && b0168 && b0169 && b0172 && b0174 && b0175 && b0176 && b0177 && b0178 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0195 && b0197 && b0198 && b0199 && b0200 && b0201 && b0203 && b0205 && b0206 && b0207 && b0208 && b0210 && b0212 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0222 && b0223 && b0224 && b0225 && b0227 && b0228 && b0229 && b0230 && b0232 && b0235 && b0237 && b0238 && b0239 && b0240 && b0241 && b0243 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273 && b0274 && b0275 && b0276 && b0277 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0290 && b0291 && b0292 && b0293 && b0294 && b0295 && b0296 && b0297 && b0298 && b0299 && b0300 && b0301 && b0302 && b0303 && b0304 && b0305 && b0306 && b0307 && b0308 && b0309 && b0310 && b0311 && b0312 && b0313 && b0314 && b0315 && b0316 && b0317 && b0318 && b0319 && b0320 && b0321 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0376 && b0378 && b0379 && b0380 && b0381 && b0382 && b0383 && b0384 && b0385 && b0386 && b0387 && b0388 && b0389 && b0390 && b0424 && b0425 && b0426 && b0427 && b0429 && b0430 && b0431 && b0432 && b0433 && b0435 && b0436 && b0437 && b0438 && b0439 && b0440 && b0441 && b0442 && b0443 && b0444 && b0445 && b0446 && b0447 && b0448 && b0449 && b0450 && b0451 && b0452 && b0453 && b0454 && b0455 && b0456 && b0457 && b0458 && b0459 && b0460 && b0461 && b0462 && b0463 && b0464 && b0465
}
Prover Time taken = 19.574846
Added Horn clause: 45 => 46
Added Horn clause: 23 && 47 && 0 && 0 && 0 => 48
Added Horn clause: 13 && 32 && 0 && 0 && 0 && 0 && 33 && 0 && 49 => 50
Added Horn clause: 13 && 38 && 0 && 0 && 39 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 51
Added Horn clause: 23 && 52 && 31 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 53 && 0 && 25 => 54
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0118 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0134 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0147 && b0148 && b0149 && b0150 && b0151 && b0154 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0167 && b0168 && b0169 && b0172 && b0174 && b0175 && b0176 && b0177 && b0178 && b0180 && b0181 && b0182 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0195 && b0197 && b0198 && b0199 && b0200 && b0201 && b0203 && b0205 && b0206 && b0207 && b0208 && b0210 && b0212 && b0214 && b0215 && b0216 && b0217 && b0218 && b0220 && b0222 && b0223 && b0224 && b0225 && b0227 && b0228 && b0229 && b0230 && b0232 && b0235 && b0237 && b0238 && b0239 && b0240 && b0241 && b0243 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273 && b0274 && b0275 && b0276 && b0277 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0290 && b0291 && b0292 && b0293 && b0294 && b0295 && b0296 && b0297 && b0298 && b0299 && b0300 && b0301 && b0302 && b0303 && b0304 && b0305 && b0306 && b0307 && b0308 && b0309 && b0310 && b0311 && b0312 && b0313 && b0314 && b0315 && b0316 && b0317 && b0318 && b0319 && b0320 && b0321 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0378 && b0379 && b0380 && b0381 && b0382 && b0383 && b0384 && b0385 && b0386 && b0387 && b0388 && b0389 && b0390 && b0424 && b0425 && b0426 && b0427 && b0430 && b0431 && b0432 && b0433 && b0435 && b0436 && b0437 && b0438 && b0439 && b0440 && b0441 && b0442 && b0443 && b0444 && b0445 && b0446 && b0447 && b0448 && b0449 && b0450 && b0451 && b0452 && b0453 && b0454 && b0455 && b0456 && b0457 && b0458 && b0459 && b0460 && b0461 && b0462 && b0463 && b0464 && b0465
}
Prover Time taken = 19.882188
Added Horn clause: 10 && 55 && 0 && 0 && 0 => 56
Added Horn clause: 45 && 34 && 46 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 57
Added Horn clause: 58 => 59
Added Horn clause: 23 && 47 && 0 && 0 && 0 && 0 && 48 && 0 && 0 => 60
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0118 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0134 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0145 && b0147 && b0148 && b0149 && b0150 && b0151 && b0154 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0167 && b0169 && b0172 && b0174 && b0175 && b0176 && b0177 && b0178 && b0180 && b0181 && b0182 && b0184 && b0185 && b0186 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0195 && b0197 && b0198 && b0199 && b0200 && b0201 && b0203 && b0205 && b0206 && b0207 && b0208 && b0210 && b0212 && b0214 && b0215 && b0216 && b0217 && b0218 && b0220 && b0222 && b0223 && b0225 && b0227 && b0228 && b0229 && b0230 && b0232 && b0235 && b0237 && b0238 && b0239 && b0240 && b0241 && b0243 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273 && b0274 && b0275 && b0276 && b0277 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0290 && b0291 && b0292 && b0293 && b0294 && b0295 && b0296 && b0297 && b0298 && b0299 && b0300 && b0301 && b0302 && b0303 && b0304 && b0305 && b0306 && b0307 && b0308 && b0309 && b0310 && b0311 && b0312 && b0313 && b0314 && b0315 && b0316 && b0317 && b0318 && b0319 && b0320 && b0321 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0378 && b0379 && b0380 && b0381 && b0382 && b0383 && b0384 && b0385 && b0386 && b0387 && b0388 && b0389 && b0390 && b0424 && b0425 && b0426 && b0427 && b0430 && b0431 && b0432 && b0433 && b0435 && b0436 && b0437 && b0438 && b0439 && b0440 && b0441 && b0442 && b0443 && b0444 && b0445 && b0446 && b0447 && b0448 && b0449 && b0450 && b0451 && b0452 && b0453 && b0454 && b0455 && b0456 && b0457 && b0458 && b0459 && b0460 && b0461 && b0462 && b0463 && b0464 && b0465
}
Prover Time taken = 21.957326
Added Horn clause: 61 && 47 && 0 && 0 && 0 && 0 && 48 && 0 && 0 && 0 && 60 && 0 && 0 => 62
Added Horn clause: 58 && 38 && 59 => 63
Added Horn clause: 5 && 55 && 0 && 0 && 0 && 0 && 56 && 0 && 0 => 64
Added Horn clause: 13 && 32 && 0 && 0 && 0 && 0 && 33 && 0 && 49 && 0 && 50 => 65
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0118 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0134 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0145 && b0147 && b0148 && b0149 && b0150 && b0151 && b0154 && b0156 && b0157 && b0158 && b0159 && b0160 && b0162 && b0163 && b0164 && b0167 && b0169 && b0172 && b0174 && b0175 && b0176 && b0177 && b0178 && b0180 && b0181 && b0182 && b0184 && b0185 && b0186 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0195 && b0197 && b0198 && b0199 && b0200 && b0201 && b0203 && b0205 && b0206 && b0207 && b0208 && b0210 && b0212 && b0214 && b0215 && b0216 && b0217 && b0218 && b0220 && b0222 && b0223 && b0225 && b0227 && b0228 && b0230 && b0232 && b0235 && b0237 && b0238 && b0239 && b0240 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273 && b0274 && b0275 && b0276 && b0277 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0290 && b0291 && b0292 && b0293 && b0294 && b0295 && b0296 && b0297 && b0298 && b0299 && b0300 && b0301 && b0302 && b0303 && b0304 && b0305 && b0306 && b0307 && b0308 && b0309 && b0310 && b0311 && b0312 && b0313 && b0314 && b0315 && b0316 && b0317 && b0318 && b0319 && b0320 && b0321 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0378 && b0379 && b0381 && b0382 && b0383 && b0384 && b0385 && b0386 && b0387 && b0388 && b0389 && b0390 && b0424 && b0425 && b0426 && b0427 && b0430 && b0431 && b0432 && b0433 && b0435 && b0436 && b0437 && b0438 && b0439 && b0440 && b0441 && b0442 && b0443 && b0444 && b0445 && b0446 && b0447 && b0448 && b0449 && b0450 && b0451 && b0452 && b0453 && b0454 && b0455 && b0456 && b0457 && b0458 && b0459 && b0460 && b0461 && b0462 && b0463 && b0464 && b0465
}
Prover Time taken = 17.59226
Added Horn clause: 66 => 67
Added Horn clause: 8 && 55 && 0 && 0 && 0 && 0 && 56 && 0 && 0 && 0 && 68 && 0 && 0 => 69
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0118 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0134 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0143 && b0145 && b0147 && b0148 && b0149 && b0150 && b0151 && b0154 && b0156 && b0157 && b0158 && b0159 && b0160 && b0162 && b0163 && b0164 && b0167 && b0169 && b0172 && b0174 && b0175 && b0176 && b0177 && b0178 && b0180 && b0181 && b0182 && b0184 && b0185 && b0186 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0195 && b0197 && b0198 && b0199 && b0200 && b0201 && b0203 && b0205 && b0206 && b0207 && b0208 && b0210 && b0212 && b0214 && b0215 && b0216 && b0217 && b0218 && b0220 && b0222 && b0223 && b0225 && b0227 && b0228 && b0230 && b0232 && b0235 && b0237 && b0238 && b0239 && b0240 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273 && b0274 && b0275 && b0276 && b0277 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0290 && b0291 && b0292 && b0293 && b0294 && b0295 && b0296 && b0297 && b0298 && b0299 && b0300 && b0301 && b0302 && b0303 && b0304 && b0305 && b0306 && b0307 && b0308 && b0309 && b0310 && b0311 && b0312 && b0313 && b0314 && b0315 && b0316 && b0317 && b0318 && b0319 && b0320 && b0321 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0378 && b0379 && b0382 && b0383 && b0384 && b0385 && b0386 && b0387 && b0388 && b0389 && b0390 && b0424 && b0425 && b0426 && b0427 && b0430 && b0431 && b0432 && b0433 && b0435 && b0436 && b0437 && b0438 && b0439 && b0440 && b0441 && b0442 && b0443 && b0444 && b0445 && b0446 && b0447 && b0448 && b0449 && b0450 && b0451 && b0452 && b0453 && b0454 && b0455 && b0456 && b0457 && b0458 && b0459 && b0460 && b0461 && b0462 && b0463 && b0464 && b0465
}
Prover Time taken = 16.260898
Added Horn clause: 70 => 71
Added Horn clause: 13 && 32 && 0 && 0 && 0 && 0 && 33 && 0 && 40 && 0 && 72 && 0 && 65 => 73
Added Horn clause: 66 && 47 && 67 && 0 && 0 => 74
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0118 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0134 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0143 && b0145 && b0147 && b0149 && b0150 && b0151 && b0154 && b0156 && b0157 && b0158 && b0159 && b0160 && b0162 && b0163 && b0164 && b0167 && b0169 && b0172 && b0174 && b0175 && b0176 && b0177 && b0178 && b0180 && b0181 && b0185 && b0186 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0195 && b0197 && b0198 && b0199 && b0200 && b0201 && b0203 && b0205 && b0206 && b0207 && b0208 && b0210 && b0212 && b0214 && b0215 && b0216 && b0217 && b0218 && b0220 && b0222 && b0223 && b0225 && b0227 && b0228 && b0230 && b0232 && b0235 && b0237 && b0238 && b0239 && b0240 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273 && b0274 && b0275 && b0276 && b0277 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0290 && b0291 && b0292 && b0293 && b0294 && b0295 && b0296 && b0297 && b0298 && b0299 && b0300 && b0301 && b0302 && b0303 && b0304 && b0305 && b0306 && b0307 && b0308 && b0309 && b0310 && b0311 && b0312 && b0313 && b0314 && b0315 && b0316 && b0317 && b0318 && b0319 && b0320 && b0321 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0378 && b0379 && b0382 && b0383 && b0385 && b0386 && b0387 && b0388 && b0389 && b0390 && b0424 && b0425 && b0426 && b0427 && b0430 && b0431 && b0432 && b0433 && b0435 && b0436 && b0437 && b0438 && b0439 && b0440 && b0441 && b0442 && b0443 && b0444 && b0445 && b0446 && b0447 && b0448 && b0449 && b0450 && b0451 && b0452 && b0453 && b0454 && b0455 && b0456 && b0457 && b0458 && b0459 && b0460 && b0461 && b0462 && b0463 && b0464 && b0465
}
Prover Time taken = 14.897297
Added Horn clause: 70 && 55 && 71 && 0 && 0 => 75
Added Horn clause: 66 && 47 && 67 && 0 && 0 && 0 && 76 && 0 && 0 => 77
Added Horn clause: 78 => 79
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0118 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0134 && b0136 && b0137 && b0138 && b0139 && b0141 && b0143 && b0145 && b0147 && b0149 && b0150 && b0151 && b0154 && b0156 && b0157 && b0158 && b0159 && b0160 && b0162 && b0163 && b0164 && b0167 && b0169 && b0172 && b0174 && b0175 && b0176 && b0177 && b0178 && b0180 && b0181 && b0185 && b0189 && b0190 && b0191 && b0192 && b0193 && b0195 && b0197 && b0198 && b0199 && b0200 && b0201 && b0203 && b0205 && b0206 && b0207 && b0208 && b0210 && b0212 && b0214 && b0215 && b0216 && b0217 && b0218 && b0220 && b0222 && b0227 && b0228 && b0230 && b0232 && b0235 && b0237 && b0238 && b0239 && b0240 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273 && b0274 && b0275 && b0276 && b0277 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0290 && b0291 && b0292 && b0293 && b0294 && b0295 && b0296 && b0297 && b0298 && b0299 && b0300 && b0301 && b0302 && b0303 && b0304 && b0305 && b0306 && b0307 && b0308 && b0309 && b0310 && b0311 && b0312 && b0313 && b0314 && b0315 && b0316 && b0317 && b0318 && b0319 && b0320 && b0321 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0378 && b0379 && b0382 && b0383 && b0385 && b0386 && b0387 && b0388 && b0389 && b0390 && b0424 && b0425 && b0426 && b0427 && b0430 && b0431 && b0432 && b0433 && b0435 && b0436 && b0437 && b0438 && b0439 && b0440 && b0441 && b0442 && b0443 && b0444 && b0445 && b0446 && b0447 && b0448 && b0449 && b0450 && b0451 && b0452 && b0453 && b0454 && b0455 && b0456 && b0457 && b0458 && b0459 && b0460 && b0461 && b0462 && b0463 && b0464 && b0465
}
Prover Time taken = 13.408086
Added Horn clause: 80 && 81 && 82 && 0 && 83 => 84
Added Horn clause: 85 && 86 && 87 && 0 && 0 && 0 && 88 && 0 && 0 => 89
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0118 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0134 && b0136 && b0137 && b0138 && b0139 && b0141 && b0143 && b0145 && b0147 && b0149 && b0150 && b0151 && b0154 && b0156 && b0157 && b0158 && b0159 && b0160 && b0162 && b0163 && b0164 && b0167 && b0169 && b0172 && b0174 && b0175 && b0176 && b0177 && b0181 && b0185 && b0189 && b0190 && b0191 && b0192 && b0193 && b0195 && b0197 && b0198 && b0199 && b0200 && b0201 && b0203 && b0205 && b0206 && b0207 && b0208 && b0210 && b0212 && b0214 && b0215 && b0216 && b0217 && b0218 && b0220 && b0222 && b0227 && b0232 && b0235 && b0237 && b0238 && b0239 && b0240 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273 && b0274 && b0275 && b0276 && b0277 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0290 && b0291 && b0292 && b0293 && b0294 && b0295 && b0296 && b0297 && b0298 && b0299 && b0300 && b0301 && b0302 && b0303 && b0304 && b0305 && b0306 && b0307 && b0308 && b0309 && b0310 && b0311 && b0312 && b0313 && b0314 && b0315 && b0316 && b0317 && b0318 && b0319 && b0320 && b0321 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0378 && b0379 && b0382 && b0383 && b0385 && b0386 && b0387 && b0388 && b0389 && b0390 && b0424 && b0425 && b0426 && b0427 && b0430 && b0431 && b0432 && b0433 && b0435 && b0436 && b0437 && b0438 && b0439 && b0440 && b0441 && b0442 && b0443 && b0444 && b0445 && b0446 && b0447 && b0448 && b0449 && b0450 && b0451 && b0452 && b0453 && b0454 && b0455 && b0456 && b0457 && b0458 && b0459 && b0460 && b0461 && b0462 && b0463 && b0464 && b0465
}
Prover Time taken = 9.666014
Added Horn clause: 78 && 32 && 79 && 0 && 0 && 0 && 84 => 90
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0118 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0134 && b0136 && b0137 && b0138 && b0139 && b0141 && b0143 && b0145 && b0147 && b0149 && b0150 && b0151 && b0154 && b0156 && b0157 && b0158 && b0159 && b0160 && b0162 && b0163 && b0164 && b0167 && b0169 && b0172 && b0174 && b0175 && b0176 && b0177 && b0181 && b0185 && b0189 && b0190 && b0191 && b0192 && b0193 && b0195 && b0197 && b0198 && b0199 && b0200 && b0205 && b0206 && b0207 && b0208 && b0210 && b0212 && b0214 && b0215 && b0216 && b0217 && b0218 && b0220 && b0222 && b0227 && b0232 && b0235 && b0237 && b0238 && b0239 && b0240 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273 && b0274 && b0275 && b0276 && b0277 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0290 && b0291 && b0292 && b0293 && b0294 && b0295 && b0296 && b0297 && b0298 && b0299 && b0300 && b0301 && b0302 && b0303 && b0304 && b0305 && b0306 && b0307 && b0308 && b0309 && b0310 && b0311 && b0312 && b0313 && b0314 && b0315 && b0316 && b0317 && b0318 && b0319 && b0320 && b0321 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0378 && b0379 && b0382 && b0383 && b0385 && b0386 && b0387 && b0388 && b0389 && b0390 && b0424 && b0425 && b0426 && b0427 && b0430 && b0431 && b0432 && b0433 && b0435 && b0436 && b0437 && b0438 && b0439 && b0440 && b0441 && b0442 && b0443 && b0444 && b0445 && b0446 && b0447 && b0448 && b0449 && b0450 && b0451 && b0452 && b0453 && b0454 && b0455 && b0456 && b0457 && b0458 && b0459 && b0460 && b0461 && b0462 && b0463 && b0464 && b0465
}
Prover Time taken = 8.512352
Added Horn clause: 78 && 32 && 79 && 0 && 0 && 0 && 91 && 0 && 92 => 93
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0118 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0134 && b0136 && b0137 && b0138 && b0139 && b0141 && b0143 && b0145 && b0147 && b0149 && b0150 && b0151 && b0154 && b0156 && b0157 && b0158 && b0159 && b0160 && b0162 && b0163 && b0164 && b0167 && b0169 && b0172 && b0174 && b0175 && b0176 && b0177 && b0181 && b0185 && b0189 && b0190 && b0191 && b0192 && b0193 && b0195 && b0197 && b0198 && b0199 && b0200 && b0205 && b0206 && b0207 && b0208 && b0210 && b0212 && b0214 && b0215 && b0216 && b0217 && b0222 && b0227 && b0232 && b0235 && b0237 && b0238 && b0239 && b0240 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273 && b0274 && b0275 && b0276 && b0277 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0290 && b0291 && b0292 && b0293 && b0294 && b0295 && b0296 && b0297 && b0298 && b0299 && b0300 && b0301 && b0302 && b0303 && b0304 && b0305 && b0306 && b0307 && b0308 && b0309 && b0310 && b0311 && b0312 && b0313 && b0314 && b0315 && b0316 && b0317 && b0318 && b0319 && b0320 && b0321 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0378 && b0379 && b0382 && b0383 && b0385 && b0386 && b0387 && b0388 && b0389 && b0390 && b0424 && b0425 && b0426 && b0427 && b0430 && b0431 && b0432 && b0433 && b0435 && b0436 && b0437 && b0438 && b0439 && b0440 && b0441 && b0442 && b0443 && b0444 && b0445 && b0446 && b0447 && b0448 && b0449 && b0450 && b0451 && b0452 && b0453 && b0454 && b0455 && b0456 && b0457 && b0458 && b0459 && b0460 && b0461 && b0462 && b0463 && b0464 && b0465
}
Prover Time taken = 7.303043
Added Horn clause: 78 && 32 && 79 && 0 && 0 && 0 && 84 && 0 && 90 && 0 && 94 => 95
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool, b0228: bool, b0229: bool, b0230: bool, b0231: bool, b0232: bool, b0233: bool, b0234: bool, b0235: bool, b0236: bool, b0237: bool, b0238: bool, b0239: bool, b0240: bool, b0241: bool, b0242: bool, b0243: bool, b0244: bool, b0245: bool, b0246: bool, b0247: bool, b0248: bool, b0249: bool, b0250: bool, b0251: bool, b0252: bool, b0253: bool, b0254: bool, b0255: bool, b0256: bool, b0257: bool, b0258: bool, b0259: bool, b0260: bool, b0261: bool, b0262: bool, b0263: bool, b0264: bool, b0265: bool, b0266: bool, b0267: bool, b0268: bool, b0269: bool, b0270: bool, b0271: bool, b0272: bool, b0273: bool, b0274: bool, b0275: bool, b0276: bool, b0277: bool, b0278: bool, b0279: bool, b0280: bool, b0281: bool, b0282: bool, b0283: bool, b0284: bool, b0285: bool, b0286: bool, b0287: bool, b0288: bool, b0289: bool, b0290: bool, b0291: bool, b0292: bool, b0293: bool, b0294: bool, b0295: bool, b0296: bool, b0297: bool, b0298: bool, b0299: bool, b0300: bool, b0301: bool, b0302: bool, b0303: bool, b0304: bool, b0305: bool, b0306: bool, b0307: bool, b0308: bool, b0309: bool, b0310: bool, b0311: bool, b0312: bool, b0313: bool, b0314: bool, b0315: bool, b0316: bool, b0317: bool, b0318: bool, b0319: bool, b0320: bool, b0321: bool, b0322: bool, b0323: bool, b0324: bool, b0325: bool, b0326: bool, b0327: bool, b0328: bool, b0329: bool, b0330: bool, b0331: bool, b0332: bool, b0333: bool, b0334: bool, b0335: bool, b0336: bool, b0337: bool, b0338: bool, b0339: bool, b0340: bool, b0341: bool, b0342: bool, b0343: bool, b0344: bool, b0345: bool, b0346: bool, b0347: bool, b0348: bool, b0349: bool, b0350: bool, b0351: bool, b0352: bool, b0353: bool, b0354: bool, b0355: bool, b0356: bool, b0357: bool, b0358: bool, b0359: bool, b0360: bool, b0361: bool, b0362: bool, b0363: bool, b0364: bool, b0365: bool, b0366: bool, b0367: bool, b0368: bool, b0369: bool, b0370: bool, b0371: bool, b0372: bool, b0373: bool, b0374: bool, b0375: bool, b0376: bool, b0377: bool, b0378: bool, b0379: bool, b0380: bool, b0381: bool, b0382: bool, b0383: bool, b0384: bool, b0385: bool, b0386: bool, b0387: bool, b0388: bool, b0389: bool, b0390: bool, b0391: bool, b0392: bool, b0393: bool, b0394: bool, b0395: bool, b0396: bool, b0397: bool, b0398: bool, b0399: bool, b0400: bool, b0401: bool, b0402: bool, b0403: bool, b0404: bool, b0405: bool, b0406: bool, b0407: bool, b0408: bool, b0409: bool, b0410: bool, b0411: bool, b0412: bool, b0413: bool, b0414: bool, b0415: bool, b0416: bool, b0417: bool, b0418: bool, b0419: bool, b0420: bool, b0421: bool, b0422: bool, b0423: bool, b0424: bool, b0425: bool, b0426: bool, b0427: bool, b0428: bool, b0429: bool, b0430: bool, b0431: bool, b0432: bool, b0433: bool, b0434: bool, b0435: bool, b0436: bool, b0437: bool, b0438: bool, b0439: bool, b0440: bool, b0441: bool, b0442: bool, b0443: bool, b0444: bool, b0445: bool, b0446: bool, b0447: bool, b0448: bool, b0449: bool, b0450: bool, b0451: bool, b0452: bool, b0453: bool, b0454: bool, b0455: bool, b0456: bool, b0457: bool, b0458: bool, b0459: bool, b0460: bool, b0461: bool, b0462: bool, b0463: bool, b0464: bool, b0465: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0118 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0134 && b0136 && b0137 && b0138 && b0139 && b0141 && b0143 && b0145 && b0147 && b0149 && b0150 && b0151 && b0154 && b0156 && b0157 && b0158 && b0159 && b0162 && b0164 && b0167 && b0169 && b0172 && b0174 && b0175 && b0176 && b0177 && b0181 && b0185 && b0189 && b0190 && b0191 && b0192 && b0193 && b0195 && b0197 && b0198 && b0199 && b0200 && b0205 && b0206 && b0207 && b0208 && b0210 && b0212 && b0214 && b0215 && b0216 && b0217 && b0222 && b0227 && b0232 && b0235 && b0237 && b0238 && b0239 && b0240 && b0244 && b0245 && b0246 && b0247 && b0248 && b0249 && b0250 && b0251 && b0252 && b0253 && b0254 && b0255 && b0256 && b0257 && b0258 && b0259 && b0260 && b0261 && b0262 && b0263 && b0264 && b0265 && b0266 && b0267 && b0268 && b0269 && b0270 && b0271 && b0272 && b0273 && b0274 && b0275 && b0276 && b0277 && b0278 && b0279 && b0280 && b0281 && b0282 && b0283 && b0284 && b0285 && b0286 && b0287 && b0288 && b0289 && b0290 && b0291 && b0292 && b0293 && b0294 && b0295 && b0296 && b0297 && b0298 && b0299 && b0300 && b0301 && b0302 && b0303 && b0304 && b0305 && b0306 && b0307 && b0308 && b0309 && b0310 && b0311 && b0312 && b0313 && b0314 && b0315 && b0316 && b0317 && b0318 && b0319 && b0320 && b0321 && b0322 && b0323 && b0324 && b0325 && b0326 && b0327 && b0328 && b0329 && b0330 && b0331 && b0332 && b0333 && b0334 && b0335 && b0336 && b0337 && b0338 && b0339 && b0340 && b0341 && b0378 && b0379 && b0382 && b0383 && b0385 && b0386 && b0387 && b0388 && b0389 && b0390 && b0424 && b0425 && b0426 && b0427 && b0430 && b0431 && b0432 && b0433 && b0435 && b0436 && b0437 && b0438 && b0439 && b0440 && b0441 && b0442 && b0443 && b0444 && b0445 && b0446 && b0447 && b0448 && b0449 && b0450 && b0451 && b0452 && b0453 && b0454 && b0455 && b0456 && b0457 && b0458 && b0459 && b0460 && b0461 && b0462 && b0463 && b0464 && b0465
}
Prover Time taken = 5.098428
Prover time = 266.83
Number of prover queries = 18
Learner time = 0.00
Number of learner queries = 17
Total time: 271.10
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:48
verified

Boogie program verifier finished with 1 verified, 0 errors
10.54user 1.16system 4:32.72elapsed 4%CPU (0avgtext+0avgdata 114564maxresident)k
0inputs+0outputs (0major+243627minor)pagefaults 0swaps
FILE:polybench/linear-algebra/kernels/3mm/kernel3.bpl.ice2.bpl
#################
Thu Jan 31 01:12:57 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/atax/kernel0.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/atax/kernel0.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 106
Generating VC of $kernel0
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.075847
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/atax/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.097884
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/atax/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.275524
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/atax/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105
}
Prover Time taken = 1.374877
Added Horn clause: 3 => 4
Added Horn clause: 5 && 0 && 0 && 0 && 0 && 0 && 0 => 6
Added Horn clause: 7 && 0 && 0 => 8
Added Horn clause: 9 && 0 && 0 && 0 && 0 => 10
Added Horn clause: 11 && 0 && 0 && 0 && 0 && 0 && 0 => 12
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/atax/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0035 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105
}
Prover Time taken = 1.53304
Added Horn clause: 13 && 0 && 0 && 0 && 0 && 0 && 0 => 14
Added Horn clause: 13 && 15 && 0 && 0 && 0 => 16
Added Horn clause: 9 && 17 && 0 && 0 && 0 && 0 && 0 => 18
Added Horn clause: 9 && 17 && 0 && 0 && 0 && 0 && 0 => 19
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/atax/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0024 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0035 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105
}
Prover Time taken = 2.461799
Prover time = 7.82
Number of prover queries = 6
Learner time = 0.00
Number of learner queries = 5
Total time: 7.97
Number of positive examples:3
Number of negative examples:0
Number of Horn clauses:9
verified

Boogie program verifier finished with 1 verified, 0 errors
1.34user 0.19system 0:08.86elapsed 17%CPU (0avgtext+0avgdata 72028maxresident)k
0inputs+0outputs (0major+31098minor)pagefaults 0swaps
FILE:polybench/linear-algebra/kernels/atax/kernel0.bpl.ice2.bpl
#################
Thu Jan 31 01:13:06 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/atax/kernel1.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/atax/kernel1.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 8
Generating VC of $kernel1
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.071837
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/atax/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007
}
Prover Time taken = 0.098523
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/atax/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007
}
Prover Time taken = 0.255522
Prover time = 0.43
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.47
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.94user 0.08system 0:01.29elapsed 79%CPU (0avgtext+0avgdata 52000maxresident)k
0inputs+0outputs (0major+16408minor)pagefaults 0swaps
FILE:polybench/linear-algebra/kernels/atax/kernel1.bpl.ice2.bpl
#################
Thu Jan 31 01:13:07 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/atax/kernel2.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/atax/kernel2.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 82
Generating VC of $kernel2
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.083603
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/atax/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.792644
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/atax/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0037 && b0038 && b0039 && b0043 && b0044 && b0045 && b0046 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,0,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.816744
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/atax/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0044 && b0045 && b0046 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.752008
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/atax/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.037542
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/atax/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081
}
Prover Time taken = 0.843471
Added Horn clause: 5 => 6
Added Horn clause: 7 && 0 && 0 && 0 && 0 => 8
Added Horn clause: 9 && 0 && 0 => 10
Added Horn clause: 9 && 0 && 0 && 0 && 0 => 11
Added Horn clause: 12 && 0 && 0 && 0 && 0 => 13
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/atax/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0024 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081
}
Prover Time taken = 1.269113
Added Horn clause: 14 && 15 && 0 && 0 && 11 => 16
Added Horn clause: 17 && 0 && 0 && 0 && 0 => 18
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/atax/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0024 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0052 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081
}
Prover Time taken = 1.40677
Added Horn clause: 19 && 0 && 0 && 0 && 0 => 20
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/atax/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0024 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081
}
Prover Time taken = 1.359752
Prover time = 8.36
Number of prover queries = 9
Learner time = 0.00
Number of learner queries = 8
Total time: 8.55
Number of positive examples:5
Number of negative examples:0
Number of Horn clauses:8
verified

Boogie program verifier finished with 1 verified, 0 errors
1.55user 0.26system 0:09.33elapsed 19%CPU (0avgtext+0avgdata 70668maxresident)k
0inputs+0outputs (0major+33309minor)pagefaults 0swaps
FILE:polybench/linear-algebra/kernels/atax/kernel2.bpl.ice2.bpl
#################
Thu Jan 31 01:13:17 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/bicg/kernel0.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/bicg/kernel0.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 100
Generating VC of $kernel0
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.075322
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/bicg/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.156041
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/bicg/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.152819
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/bicg/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.319024
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/bicg/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0055 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.296974
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/bicg/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099
}
Prover Time taken = 1.393923
Added Horn clause: 5 => 6
Added Horn clause: 5 && 0 && 0 => 7
Added Horn clause: 8 && 0 && 0 => 9
Added Horn clause: 10 && 0 && 0 && 0 && 0 => 11
Added Horn clause: 12 && 0 && 0 && 0 && 0 && 0 && 0 => 13
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/bicg/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0035 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099
}
Prover Time taken = 1.344147
Added Horn clause: 12 && 0 && 7 && 0 && 0 && 0 && 0 => 14
Added Horn clause: 15 && 0 && 0 && 16 && 0 && 0 && 0 => 17
Added Horn clause: 15 && 0 && 7 && 18 && 0 && 0 && 11 => 19
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/bicg/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0024 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0035 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099
}
Prover Time taken = 2.008892
Prover time = 9.75
Number of prover queries = 8
Learner time = 0.00
Number of learner queries = 7
Total time: 9.94
Number of positive examples:5
Number of negative examples:0
Number of Horn clauses:8
verified

Boogie program verifier finished with 1 verified, 0 errors
1.68user 0.24system 0:10.83elapsed 17%CPU (0avgtext+0avgdata 75940maxresident)k
0inputs+0outputs (0major+38025minor)pagefaults 0swaps
FILE:polybench/linear-algebra/kernels/bicg/kernel0.bpl.ice2.bpl
#################
Thu Jan 31 01:13:27 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/bicg/kernel1.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/bicg/kernel1.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 106
Generating VC of $kernel1
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.072743
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/bicg/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,0,1,1,1,0,1,1,1,0,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.091729
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/bicg/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0050 && b0051 && b0053 && b0054 && b0055 && b0057 && b0058 && b0059 && b0061 && b0062 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,0,1,1,0,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.7687
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/bicg/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0046 && b0051 && b0053 && b0055 && b0059 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.936243
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/bicg/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0051 && b0055 && b0059 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.997416
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/bicg/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0051 && b0055 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.388102
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/bicg/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0051 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.016511
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/bicg/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105
}
Prover Time taken = 1.052706
Added Horn clause: 7 => 8
Added Horn clause: 9 && 0 && 0 && 0 && 0 => 10
Added Horn clause: 11 && 0 && 0 => 12
Added Horn clause: 13 && 0 && 0 && 0 && 0 && 0 && 0 => 14
Added Horn clause: 13 && 0 && 0 && 0 && 0 => 15
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/bicg/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0035 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0082 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105
}
Prover Time taken = 1.946928
Added Horn clause: 16 => 17
Added Horn clause: 18 && 19 && 0 && 0 && 0 && 0 && 0 => 20
Added Horn clause: 6 && 0 && 0 && 0 && 0 && 0 && 0 => 21
Added Horn clause: 6 && 22 && 0 && 0 && 10 && 0 && 0 => 23
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/bicg/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0024 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0035 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105
}
Prover Time taken = 1.917216
Prover time = 11.19
Number of prover queries = 10
Learner time = 0.00
Number of learner queries = 9
Total time: 11.44
Number of positive examples:7
Number of negative examples:0
Number of Horn clauses:9
verified

Boogie program verifier finished with 1 verified, 0 errors
2.03user 0.32system 0:12.34elapsed 19%CPU (0avgtext+0avgdata 79156maxresident)k
0inputs+0outputs (0major+41851minor)pagefaults 0swaps
FILE:polybench/linear-algebra/kernels/bicg/kernel1.bpl.ice2.bpl
#################
Thu Jan 31 01:13:40 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/doitgen/kernel0.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/doitgen/kernel0.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 8
Generating VC of $kernel0
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.07149
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/doitgen/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007
}
Prover Time taken = 0.112487
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/doitgen/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007
}
Prover Time taken = 0.200122
Prover time = 0.38
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.42
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.83user 0.08system 0:01.26elapsed 73%CPU (0avgtext+0avgdata 54304maxresident)k
0inputs+0outputs (0major+16594minor)pagefaults 0swaps
FILE:polybench/linear-algebra/kernels/doitgen/kernel0.bpl.ice2.bpl
#################
Thu Jan 31 01:13:41 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/doitgen/kernel1.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/doitgen/kernel1.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 82
Generating VC of $kernel1
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.08836
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/doitgen/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.956021
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/doitgen/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0040 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.61508
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/doitgen/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081
}
Prover Time taken = 0.974001
Added Horn clause: 3 => 4
Added Horn clause: 5 && 0 && 0 && 0 && 0 => 6
Added Horn clause: 7 && 0 && 0 => 8
Added Horn clause: 7 && 0 && 0 && 0 && 0 => 9
Added Horn clause: 10 && 0 && 0 && 0 && 0 => 11
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/doitgen/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0024 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081
}
Prover Time taken = 1.114589
Added Horn clause: 12 && 13 && 0 && 0 && 0 => 14
Added Horn clause: 10 && 0 && 0 && 0 && 0 => 15
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/doitgen/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0024 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0052 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081
}
Prover Time taken = 1.492429
Added Horn clause: 16 && 0 && 0 && 0 && 0 => 17
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/doitgen/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0024 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081
}
Prover Time taken = 1.566358
Prover time = 6.81
Number of prover queries = 7
Learner time = 0.00
Number of learner queries = 6
Total time: 6.95
Number of positive examples:3
Number of negative examples:0
Number of Horn clauses:8
verified

Boogie program verifier finished with 1 verified, 0 errors
1.23user 0.24system 0:07.83elapsed 18%CPU (0avgtext+0avgdata 68316maxresident)k
0inputs+0outputs (0major+26378minor)pagefaults 0swaps
FILE:polybench/linear-algebra/kernels/doitgen/kernel1.bpl.ice2.bpl
#################
Thu Jan 31 01:13:49 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/doitgen/kernel2.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/doitgen/kernel2.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 8
Generating VC of $kernel2
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.07811
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/doitgen/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007
}
Prover Time taken = 0.302814
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/doitgen/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007
}
Prover Time taken = 0.313997
Prover time = 0.69
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.74
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
1.24user 0.06system 0:01.31elapsed 100%CPU (0avgtext+0avgdata 52464maxresident)k
0inputs+0outputs (0major+17179minor)pagefaults 0swaps
FILE:polybench/linear-algebra/kernels/doitgen/kernel2.bpl.ice2.bpl
#################
Thu Jan 31 01:13:50 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/mvt/kernel0.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/mvt/kernel0.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 82
Generating VC of $kernel0
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.08314
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/mvt/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.889845
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/mvt/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0038 && b0039 && b0040 && b0041 && b0044 && b0045 && b0046 && b0047 && b0048 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.093091
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/mvt/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081
}
Prover Time taken = 0.697644
Added Horn clause: 3 => 4
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 5
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 6
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 7
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 8
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/mvt/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0024 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081
}
Prover Time taken = 1.466941
Added Horn clause: 9 && 10 && 0 => 11
Added Horn clause: 12 && 0 && 0 && 0 && 0 => 13
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/mvt/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0024 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0052 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081
}
Prover Time taken = 1.508545
Added Horn clause: 14 && 0 && 0 && 0 && 0 => 15
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/mvt/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0024 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081
}
Prover Time taken = 1.552307
Prover time = 7.29
Number of prover queries = 7
Learner time = 0.00
Number of learner queries = 6
Total time: 7.43
Number of positive examples:3
Number of negative examples:0
Number of Horn clauses:8
verified

Boogie program verifier finished with 1 verified, 0 errors
8.10user 0.28system 0:08.32elapsed 100%CPU (0avgtext+0avgdata 66164maxresident)k
0inputs+0outputs (0major+42330minor)pagefaults 0swaps
FILE:polybench/linear-algebra/kernels/mvt/kernel0.bpl.ice2.bpl
#################
Thu Jan 31 01:13:59 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/mvt/kernel1.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/mvt/kernel1.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 106
Generating VC of $kernel1
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.073824
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/mvt/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.491742
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/mvt/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.304622
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/mvt/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105
}
Prover Time taken = 1.1881
Added Horn clause: 3 => 4
Added Horn clause: 5 && 0 && 0 && 0 && 0 && 0 && 0 => 6
Added Horn clause: 7 && 0 && 0 && 0 && 0 => 8
Added Horn clause: 7 && 0 && 0 => 9
Added Horn clause: 7 && 0 && 0 && 0 && 0 => 10
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/mvt/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0035 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0083 && b0084 && b0086 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105
}
Prover Time taken = 1.828385
Added Horn clause: 11 => 12
Added Horn clause: 13 && 0 && 0 && 0 && 0 && 0 && 0 => 14
Added Horn clause: 15 && 16 && 0 && 0 && 17 && 0 && 0 => 18
Added Horn clause: 15 && 16 && 0 && 0 && 17 && 0 && 0 => 19
Added Horn clause: 13 && 20 && 0 && 0 && 8 && 0 && 10 => 21
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/mvt/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0024 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0035 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0067 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105
}
Prover Time taken = 3.167356
Added Horn clause: 22 && 0 && 0 && 0 && 0 && 0 && 0 => 23
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/kernels/mvt/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0024 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0035 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105
}
Prover Time taken = 2.977995
Prover time = 12.03
Number of prover queries = 7
Learner time = 0.00
Number of learner queries = 6
Total time: 12.20
Number of positive examples:3
Number of negative examples:0
Number of Horn clauses:11
verified

Boogie program verifier finished with 1 verified, 0 errors
1.30user 0.26system 0:12.84elapsed 12%CPU (0avgtext+0avgdata 75692maxresident)k
0inputs+0outputs (0major+32342minor)pagefaults 0swaps
FILE:polybench/linear-algebra/kernels/mvt/kernel1.bpl.ice2.bpl
#################
Thu Jan 31 01:14:11 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/cholesky/kernel0.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/cholesky/kernel0.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 9
Generating VC of $kernel0
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.072962
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/cholesky/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 0.150105
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/cholesky/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 0.379193
Prover time = 0.60
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.64
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
1.16user 0.07system 0:01.30elapsed 95%CPU (0avgtext+0avgdata 54484maxresident)k
0inputs+0outputs (0major+17128minor)pagefaults 0swaps
FILE:polybench/linear-algebra/solvers/cholesky/kernel0.bpl.ice2.bpl
#################
Thu Jan 31 01:14:13 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/cholesky/kernel1.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/cholesky/kernel1.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 45
Generating VC of $kernel1
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.073614
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/cholesky/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044
}
Prover Time taken = 0.519016
Added Horn clause: 0 => 1
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 2
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 3
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 4
Added Horn clause: 0 && 0 && 0 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/cholesky/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0011 && b0013 && b0014 && b0015 && b0018 && b0019 && b0020 && b0021 && b0024 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044
}
Prover Time taken = 1.833039
Added Horn clause: 0 => 6
Added Horn clause: 0 && 0 && 1 => 7
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/cholesky/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0011 && b0013 && b0014 && b0015 && b0020 && b0021 && b0024 && b0026 && b0027 && b0028 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044
}
Prover Time taken = 1.528803
Added Horn clause: 0 && 0 && 8 => 9
Added Horn clause: 0 => 10
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/cholesky/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0011 && b0013 && b0014 && b0015 && b0020 && b0021 && b0024 && b0026 && b0027 && b0028 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044
}
Prover Time taken = 2.629195
Prover time = 6.58
Number of prover queries = 5
Learner time = 0.00
Number of learner queries = 4
Total time: 6.66
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:9
verified

Boogie program verifier finished with 1 verified, 0 errors
0.67user 0.12system 0:07.26elapsed 11%CPU (0avgtext+0avgdata 57628maxresident)k
0inputs+0outputs (0major+15110minor)pagefaults 0swaps
FILE:polybench/linear-algebra/solvers/cholesky/kernel1.bpl.ice2.bpl
#################
Thu Jan 31 01:14:20 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/cholesky/kernel2.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/cholesky/kernel2.bpl.ice2.bpl
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/cholesky/kernel2.bpl.ice2.bpl(237,2368): Error: invalid argument types (bv64 and bv32) to binary operator ==
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/cholesky/kernel2.bpl.ice2.bpl(237,2410): Error: invalid type for argument 1 in application of BV64_SUB: bv32 (expected: bv64)
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/cholesky/kernel2.bpl.ice2.bpl(237,2440): Error: invalid argument types (bv64 and bv32) to binary operator !=
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/cholesky/kernel2.bpl.ice2.bpl(237,2462): Error: invalid argument types (bv64 and bv32) to binary operator ==
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/cholesky/kernel2.bpl.ice2.bpl(237,2504): Error: invalid type for argument 1 in application of BV64_SUB: bv32 (expected: bv64)
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/cholesky/kernel2.bpl.ice2.bpl(237,2534): Error: invalid argument types (bv64 and bv32) to binary operator !=
6 type checking errors detected in /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/cholesky/kernel2.bpl.ice2.bpl
0.15user 0.02system 0:00.18elapsed 100%CPU (0avgtext+0avgdata 32964maxresident)k
0inputs+0outputs (0major+3371minor)pagefaults 0swaps
FILE:polybench/linear-algebra/solvers/cholesky/kernel2.bpl.ice2.bpl
#################
Thu Jan 31 01:14:20 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/cholesky/kernel4.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/cholesky/kernel4.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 44
Generating VC of $kernel4
Verifying $kernel4: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.251091
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/cholesky/kernel4.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel4: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043
}
Added: my_inv:1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 20.180212
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/cholesky/kernel4.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel4: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0000 && b0001 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043
}
Prover Time taken = 10.500995
Added Horn clause: 0 => 2
Added Horn clause: 0 && 0 && 0 => 3
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 4
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 5
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/cholesky/kernel4.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel4: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0000 && b0001 && b0004 && b0006 && b0007 && b0008 && b0010 && b0013 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0025 && b0027 && b0028 && b0029 && b0030 && b0032 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043
}
Command exited with non-zero status 124
1.95user 0.43system 20:00.00elapsed 0%CPU (0avgtext+0avgdata 68040maxresident)k
0inputs+0outputs (0major+18343minor)pagefaults 0swaps
FILE:polybench/linear-algebra/solvers/cholesky/kernel4.bpl.ice2.bpl
#################
Thu Jan 31 01:34:20 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/cholesky/kernel5.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/cholesky/kernel5.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 9
Generating VC of $kernel5
Verifying $kernel5: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.390918
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/cholesky/kernel5.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel5: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 11.125802
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/cholesky/kernel5.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel5: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 36.755412
Prover time = 48.27
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 48.32
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.62user 0.10system 0:49.55elapsed 1%CPU (0avgtext+0avgdata 53360maxresident)k
0inputs+0outputs (0major+13242minor)pagefaults 0swaps
FILE:polybench/linear-algebra/solvers/cholesky/kernel5.bpl.ice2.bpl
#################
Thu Jan 31 01:35:10 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/durbin/kernel2.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/durbin/kernel2.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 8
Generating VC of $kernel2
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.076958
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/durbin/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007
}
Prover Time taken = 0.238889
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/durbin/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007
}
Prover Time taken = 0.781684
Prover time = 1.10
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 1.14
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
1.63user 0.07system 0:01.81elapsed 93%CPU (0avgtext+0avgdata 52344maxresident)k
0inputs+0outputs (0major+17042minor)pagefaults 0swaps
FILE:polybench/linear-algebra/solvers/durbin/kernel2.bpl.ice2.bpl
#################
Thu Jan 31 01:35:12 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/durbin/kernel9.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/durbin/kernel9.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 25
Generating VC of $kernel9
Verifying $kernel9: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.087849
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/durbin/kernel9.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel9: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1: positive
Prover Time taken = 0.368556
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/durbin/kernel9.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel9: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024
}
Prover Time taken = 0.302604
Added Horn clause: 2 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/durbin/kernel9.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel9: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0020 && b0021 && b0022 && b0023 && b0024
}
Prover Time taken = 0.634398
Added Horn clause: 4 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/durbin/kernel9.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel9: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0007 && b0008 && b0010 && b0020 && b0021 && b0022 && b0023 && b0024
}
Prover Time taken = 0.81044
Prover time = 2.20
Number of prover queries = 5
Learner time = 0.00
Number of learner queries = 4
Total time: 2.27
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
0.72user 0.06system 0:03.30elapsed 23%CPU (0avgtext+0avgdata 53732maxresident)k
0inputs+0outputs (0major+16108minor)pagefaults 0swaps
FILE:polybench/linear-algebra/solvers/durbin/kernel9.bpl.ice2.bpl
#################
Thu Jan 31 01:35:15 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/gramschmidt/kernel2.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/gramschmidt/kernel2.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 47
Generating VC of $kernel2
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.375973
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/gramschmidt/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1: positive
Prover Time taken = 3.061208
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/gramschmidt/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0029 && b0032 && b0033 && b0034 && b0042 && b0043 && b0044 && b0045 && b0046
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1: positive
Prover Time taken = 2.887577
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/gramschmidt/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0032 && b0033 && b0034 && b0043 && b0044 && b0045 && b0046
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 3.542621
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/gramschmidt/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0032 && b0034 && b0043 && b0044 && b0045 && b0046
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 2.689336
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/gramschmidt/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0043 && b0044 && b0045 && b0046
}
Command exited with non-zero status 124
2.19user 0.53system 20:00.00elapsed 0%CPU (0avgtext+0avgdata 64628maxresident)k
0inputs+0outputs (0major+23717minor)pagefaults 0swaps
FILE:polybench/linear-algebra/solvers/gramschmidt/kernel2.bpl.ice2.bpl
#################
Thu Jan 31 01:55:15 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/gramschmidt/kernel3.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/gramschmidt/kernel3.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 52
Generating VC of $kernel3
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.52954
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/gramschmidt/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051
}
Prover Time taken = 4.651178
Added Horn clause: 0 && 0 && 0 => 1
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 2
Added Horn clause: 0 => 3
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 4
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/gramschmidt/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0023 && b0024 && b0025 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0037 && b0038 && b0039 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051
}
Prover Time taken = 292.836936
Added Horn clause: 0 && 0 && 0 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/gramschmidt/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0023 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0037 && b0038 && b0039 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051
}
Prover Time taken = 261.971881
Added Horn clause: 0 && 0 && 7 => 8
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/gramschmidt/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0023 && b0024 && b0027 && b0029 && b0030 && b0031 && b0034 && b0035 && b0039 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051
}
Prover Time taken = 273.698339
Added Horn clause: 0 && 0 && 9 => 10
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/gramschmidt/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0023 && b0024 && b0027 && b0029 && b0030 && b0031 && b0039 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051
}
Prover Time taken = 267.118524
Added Horn clause: 2 && 0 && 11 => 12
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/gramschmidt/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0023 && b0024 && b0027 && b0029 && b0030 && b0031 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051
}
Command exited with non-zero status 124
1.83user 0.44system 20:00.00elapsed 0%CPU (0avgtext+0avgdata 66696maxresident)k
0inputs+0outputs (0major+22602minor)pagefaults 0swaps
FILE:polybench/linear-algebra/solvers/gramschmidt/kernel3.bpl.ice2.bpl
#################
Thu Jan 31 02:15:15 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/gramschmidt/kernel5.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/gramschmidt/kernel5.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 32
Generating VC of $kernel5
Verifying $kernel5: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.070086
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/gramschmidt/kernel5.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel5: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031
}
Prover Time taken = 3.514376
Added Horn clause: 0 && 0 && 0 => 1
Added Horn clause: 0 => 2
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 3
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 4
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/gramschmidt/kernel5.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel5: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0016 && b0017 && b0020 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031
}
Prover Time taken = 10.46858
Added Horn clause: 0 && 0 && 0 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/gramschmidt/kernel5.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel5: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0016 && b0017 && b0020 && b0022 && b0023 && b0024 && b0025 && b0027 && b0028 && b0029 && b0030 && b0031
}
Prover Time taken = 9.948022
Added Horn clause: 0 && 0 && 2 => 7
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/gramschmidt/kernel5.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel5: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0016 && b0017 && b0020 && b0022 && b0023 && b0024 && b0027 && b0028 && b0029 && b0030 && b0031
}
Prover Time taken = 15.467777
Prover time = 39.47
Number of prover queries = 5
Learner time = 0.00
Number of learner queries = 4
Total time: 39.54
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:7
verified

Boogie program verifier finished with 1 verified, 0 errors
0.71user 0.09system 0:40.51elapsed 1%CPU (0avgtext+0avgdata 61744maxresident)k
0inputs+0outputs (0major+14561minor)pagefaults 0swaps
FILE:polybench/linear-algebra/solvers/gramschmidt/kernel5.bpl.ice2.bpl
#################
Thu Jan 31 02:15:55 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/gramschmidt/kernel6.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/gramschmidt/kernel6.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 8
Generating VC of $kernel6
Verifying $kernel6: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.147908
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/gramschmidt/kernel6.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel6: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007
}
Prover Time taken = 0.877088
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/gramschmidt/kernel6.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel6: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007
}
Prover Time taken = 0.930084
Prover time = 1.96
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 2.00
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
2.46user 0.10system 0:02.77elapsed 92%CPU (0avgtext+0avgdata 60620maxresident)k
0inputs+0outputs (0major+25657minor)pagefaults 0swaps
FILE:polybench/linear-algebra/solvers/gramschmidt/kernel6.bpl.ice2.bpl
#################
Thu Jan 31 02:15:58 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/lu/kernel0.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/lu/kernel0.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 9
Generating VC of $kernel0
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.216996
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/lu/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 0.797369
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/lu/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 1.826171
Prover time = 2.84
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 2.88
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.55user 0.08system 0:03.77elapsed 16%CPU (0avgtext+0avgdata 53544maxresident)k
0inputs+0outputs (0major+13060minor)pagefaults 0swaps
FILE:polybench/linear-algebra/solvers/lu/kernel0.bpl.ice2.bpl
#################
Thu Jan 31 02:16:02 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 228
Generating VC of $kernel1
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.268749
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227
}
Added: my_inv:1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 33.830467
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  b0000 && b0001 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0100 && b0104 && b0105 && b0107 && b0126 && b0133 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 31.968183
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  b0000 && b0001 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0107 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 32.759201
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  b0000 && b0001 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227
}
Prover Time taken = 28.991038
Added Horn clause: 4 => 5
Added Horn clause: 6 => 7
Added Horn clause: 8 && 0 && 0 => 9
Added Horn clause: 8 && 0 && 0 && 0 && 0 && 0 && 0 => 10
Added Horn clause: 8 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 11
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  b0000 && b0001 && b0003 && b0004 && b0006 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0031 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227
}
Prover Time taken = 38.921475
Added Horn clause: 12 => 13
Added Horn clause: 14 => 15
Added Horn clause: 16 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 17
Added Horn clause: 18 && 5 && 7 && 0 && 0 => 19
Added Horn clause: 20 && 5 && 7 && 0 && 0 => 21
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  b0000 && b0001 && b0004 && b0006 && b0008 && b0009 && b0010 && b0012 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0029 && b0031 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0059 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0071 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227
}
Prover Time taken = 41.386772
Added Horn clause: 22 => 23
Added Horn clause: 24 && 5 && 25 && 0 && 19 => 26
Added Horn clause: 27 && 5 && 13 && 0 && 0 && 0 && 0 => 28
Added Horn clause: 29 && 5 && 25 && 0 && 0 && 0 && 0 && 0 && 0 => 30
Added Horn clause: 27 && 5 && 25 && 0 && 0 && 0 && 0 && 0 && 0 => 31
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool, b0199: bool, b0200: bool, b0201: bool, b0202: bool, b0203: bool, b0204: bool, b0205: bool, b0206: bool, b0207: bool, b0208: bool, b0209: bool, b0210: bool, b0211: bool, b0212: bool, b0213: bool, b0214: bool, b0215: bool, b0216: bool, b0217: bool, b0218: bool, b0219: bool, b0220: bool, b0221: bool, b0222: bool, b0223: bool, b0224: bool, b0225: bool, b0226: bool, b0227: bool) : bool
{
  b0000 && b0001 && b0004 && b0006 && b0008 && b0009 && b0010 && b0012 && b0015 && b0017 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0031 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0046 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0059 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0071 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0144 && b0145 && b0198 && b0199 && b0200 && b0201 && b0202 && b0203 && b0204 && b0205 && b0206 && b0207 && b0208 && b0209 && b0210 && b0211 && b0212 && b0213 && b0214 && b0215 && b0216 && b0217 && b0218 && b0219 && b0220 && b0221 && b0222 && b0223 && b0224 && b0225 && b0226 && b0227
}
Command exited with non-zero status 124
3.52user 0.73system 20:00.01elapsed 0%CPU (0avgtext+0avgdata 82684maxresident)k
0inputs+0outputs (0major+50482minor)pagefaults 0swaps
FILE:polybench/linear-algebra/solvers/lu/kernel1.bpl.ice2.bpl
#################
Thu Jan 31 02:36:02 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 199
Generating VC of $kernel2
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.180632
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 34.44786
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0094 && b0095 && b0111 && b0113 && b0115 && b0123 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 33.933506
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0094 && b0095 && b0111 && b0113 && b0115 && b0123 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 33.869335
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198
}
Prover Time taken = 28.956634
Added Horn clause: 4 => 5
Added Horn clause: 6 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 7
Added Horn clause: 8 && 0 && 0 => 9
Added Horn clause: 8 && 0 && 0 && 0 && 0 => 10
Added Horn clause: 11 && 0 && 0 && 0 && 0 => 12
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0060 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198
}
Prover Time taken = 40.775931
Added Horn clause: 13 => 14
Added Horn clause: 15 && 16 && 0 && 0 && 17 && 0 && 0 => 18
Added Horn clause: 19 && 20 && 0 && 0 && 0 && 0 && 12 => 21
Added Horn clause: 15 && 20 && 0 && 0 && 17 && 0 && 0 && 0 && 0 => 22
Added Horn clause: 15 && 20 && 0 && 0 && 10 && 0 && 0 && 0 && 0 => 23
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool, b0196: bool, b0197: bool, b0198: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0042 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0060 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195 && b0196 && b0197 && b0198
}
Command exited with non-zero status 124
3.45user 0.54system 20:00.00elapsed 0%CPU (0avgtext+0avgdata 91936maxresident)k
0inputs+0outputs (0major+45199minor)pagefaults 0swaps
FILE:polybench/linear-algebra/solvers/lu/kernel2.bpl.ice2.bpl
#################
Thu Jan 31 02:56:02 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/ludcmp/kernel3.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/ludcmp/kernel3.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 21
Generating VC of $kernel3
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.1578
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/ludcmp/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020
}
Added: my_inv:1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.877481
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/ludcmp/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool) : bool
{
  b0000 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020
}
Prover Time taken = 1.886741
Added Horn clause: 0 => 2
Added Horn clause: 1 && 0 && 0 => 3
Added Horn clause: 0 && 0 && 0 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/ludcmp/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool) : bool
{
  b0000 && b0003 && b0005 && b0006 && b0007 && b0009 && b0011 && b0012 && b0013 && b0016 && b0017 && b0018 && b0019 && b0020
}
Prover Time taken = 6.240329
Added Horn clause: 0 => 5
Added Horn clause: 3 && 0 && 0 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/ludcmp/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool) : bool
{
  b0000 && b0003 && b0006 && b0007 && b0009 && b0011 && b0012 && b0013 && b0017 && b0018 && b0019 && b0020
}
Prover Time taken = 6.987555
Prover time = 17.15
Number of prover queries = 5
Learner time = 0.00
Number of learner queries = 4
Total time: 17.23
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:5
verified

Boogie program verifier finished with 1 verified, 0 errors
0.77user 0.10system 0:18.07elapsed 4%CPU (0avgtext+0avgdata 57244maxresident)k
0inputs+0outputs (0major+15277minor)pagefaults 0swaps
FILE:polybench/linear-algebra/solvers/ludcmp/kernel3.bpl.ice2.bpl
#################
Thu Jan 31 02:56:20 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/trisolv/kernel0.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/trisolv/kernel0.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 33
Generating VC of $kernel0
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.200955
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/trisolv/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1: positive
Prover Time taken = 2.546321
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/trisolv/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0016 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 4.65477
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/trisolv/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032
}
Prover Time taken = 5.115527
Added Horn clause: 3 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/trisolv/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0007 && b0008 && b0010 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032
}
Prover Time taken = 5.254714
Added Horn clause: 5 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/trisolv/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0007 && b0008 && b0010 && b0025 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032
}
Prover Time taken = 47.231474
Added Horn clause: 7 => 8
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/trisolv/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0007 && b0008 && b0010 && b0025 && b0027 && b0028 && b0030 && b0031 && b0032
}
Prover Time taken = 51.754796
Added Horn clause: 5 => 9
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/trisolv/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0007 && b0008 && b0010 && b0027 && b0028 && b0030 && b0031 && b0032
}
Prover Time taken = 127.218912
Prover time = 243.98
Number of prover queries = 8
Learner time = 0.00
Number of learner queries = 7
Total time: 244.09
Number of positive examples:3
Number of negative examples:0
Number of Horn clauses:4
verified

Boogie program verifier finished with 1 verified, 0 errors
0.97user 0.20system 4:05.09elapsed 0%CPU (0avgtext+0avgdata 61476maxresident)k
0inputs+0outputs (0major+20074minor)pagefaults 0swaps
FILE:polybench/linear-algebra/solvers/trisolv/kernel0.bpl.ice2.bpl
#################
Thu Jan 31 03:00:25 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/trisolv/kernel1.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/trisolv/kernel1.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 8
Generating VC of $kernel1
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.067718
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/trisolv/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007
}
Prover Time taken = 0.147476
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/linear-algebra/solvers/trisolv/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007
}
Prover Time taken = 0.226403
Prover time = 0.44
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.48
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.90user 0.07system 0:01.27elapsed 76%CPU (0avgtext+0avgdata 51956maxresident)k
0inputs+0outputs (0major+16747minor)pagefaults 0swaps
FILE:polybench/linear-algebra/solvers/trisolv/kernel1.bpl.ice2.bpl
#################
Thu Jan 31 03:00:26 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/deriche/kernel24.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/deriche/kernel24.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 39
Generating VC of $kernel24
Verifying $kernel24: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.085359
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/deriche/kernel24.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel24: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038
}
Prover Time taken = 0.567711
Added Horn clause: 0 => 1
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 2
Added Horn clause: 0 && 0 && 0 => 3
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 4
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/deriche/kernel24.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel24: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0015 && b0016 && b0018 && b0019 && b0020 && b0023 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038
}
Prover Time taken = 1.226675
Added Horn clause: 0 => 6
Added Horn clause: 0 && 0 && 0 => 7
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/deriche/kernel24.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel24: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0015 && b0016 && b0019 && b0020 && b0023 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0034 && b0035 && b0036 && b0037 && b0038
}
Prover Time taken = 0.882866
Added Horn clause: 0 && 0 && 6 => 8
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/deriche/kernel24.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel24: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0015 && b0016 && b0019 && b0020 && b0023 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0034 && b0035 && b0036 && b0037 && b0038
}
Prover Time taken = 1.12332
Prover time = 3.89
Number of prover queries = 5
Learner time = 0.00
Number of learner queries = 4
Total time: 3.97
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:8
verified

Boogie program verifier finished with 1 verified, 0 errors
4.56user 0.14system 0:04.83elapsed 97%CPU (0avgtext+0avgdata 61476maxresident)k
0inputs+0outputs (0major+24747minor)pagefaults 0swaps
FILE:polybench/medley/deriche/kernel24.bpl.ice2.bpl
#################
Thu Jan 31 03:00:31 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/deriche/kernel41.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/deriche/kernel41.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 39
Generating VC of $kernel41
Verifying $kernel41: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.076843
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/deriche/kernel41.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel41: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038
}
Prover Time taken = 0.499572
Added Horn clause: 0 && 0 && 0 => 1
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 2
Added Horn clause: 0 => 3
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 4
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/deriche/kernel41.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel41: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0015 && b0016 && b0019 && b0020 && b0023 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038
}
Prover Time taken = 1.075061
Added Horn clause: 0 && 0 && 3 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/deriche/kernel41.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel41: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0015 && b0016 && b0019 && b0020 && b0023 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0034 && b0035 && b0036 && b0037 && b0038
}
Prover Time taken = 0.853453
Prover time = 2.50
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 2.57
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:6
verified

Boogie program verifier finished with 1 verified, 0 errors
3.10user 0.12system 0:03.29elapsed 97%CPU (0avgtext+0avgdata 64352maxresident)k
0inputs+0outputs (0major+25352minor)pagefaults 0swaps
FILE:polybench/medley/deriche/kernel41.bpl.ice2.bpl
#################
Thu Jan 31 03:00:35 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/floyd-warshall/kernel0.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/floyd-warshall/kernel0.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 10
Generating VC of $kernel0
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.232531
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/floyd-warshall/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009
}
Added: my_inv:1,1,0,1,1,1,1,1,1,1: positive
Prover Time taken = 17.714354
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/floyd-warshall/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0001 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009
}
Prover Time taken = 17.537639
Added Horn clause: 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/floyd-warshall/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0001 && b0004 && b0006 && b0007 && b0008 && b0009
}
Prover Time taken = 42.628051
Prover time = 78.11
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 78.17
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.70user 0.08system 1:19.17elapsed 0%CPU (0avgtext+0avgdata 57544maxresident)k
0inputs+0outputs (0major+13151minor)pagefaults 0swaps
FILE:polybench/medley/floyd-warshall/kernel0.bpl.ice2.bpl
#################
Thu Jan 31 03:01:54 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/nussinov/kernel0.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/nussinov/kernel0.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 9
Generating VC of $kernel0
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.32028
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/nussinov/kernel0.bpl.ice2.bpl
Total learner time was 00:00:01
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 22.942935
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/nussinov/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 69.155133
Prover time = 92.42
Number of prover queries = 3
Learner time = 1.00
Number of learner queries = 2
Total time: 92.46
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.73user 0.08system 1:33.52elapsed 0%CPU (0avgtext+0avgdata 56188maxresident)k
0inputs+0outputs (0major+14142minor)pagefaults 0swaps
FILE:polybench/medley/nussinov/kernel0.bpl.ice2.bpl
#################
Thu Jan 31 03:03:27 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 165
Generating VC of $kernel2
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.292048
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 16.375228
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0072 && b0083 && b0086 && b0102 && b0103 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 11.487063
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0072 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 10.909112
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164
}
Prover Time taken = 17.347369
Added Horn clause: 4 => 5
Added Horn clause: 6 => 7
Added Horn clause: 8 && 0 && 0 => 9
Added Horn clause: 8 && 0 && 0 && 0 && 0 && 0 && 0 => 10
Added Horn clause: 11 && 0 && 0 && 0 && 0 => 12
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0011 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0041 && b0044 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164
}
Prover Time taken = 12.828724
Added Horn clause: 13 => 14
Added Horn clause: 15 => 16
Added Horn clause: 17 && 0 && 0 && 0 && 0 && 0 && 0 => 18
Added Horn clause: 19 && 0 && 0 && 0 && 0 => 20
Added Horn clause: 21 && 7 && 22 && 0 && 0 && 0 && 0 => 23
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0007 && b0008 && b0009 && b0011 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0041 && b0044 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0056 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164
}
Prover Time taken = 19.63261
Added Horn clause: 24 && 7 && 25 && 0 && 12 && 0 && 0 => 26
Added Horn clause: 27 => 28
Added Horn clause: 29 && 30 && 0 => 31
Added Horn clause: 24 && 0 && 0 && 0 && 0 && 0 && 0 => 32
Added Horn clause: 24 && 7 && 14 && 0 && 0 => 33
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0007 && b0008 && b0009 && b0011 && b0014 && b0016 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0039 && b0041 && b0044 && b0046 && b0047 && b0048 && b0049 && b0052 && b0053 && b0054 && b0056 && b0105 && b0107 && b0108 && b0109 && b0110 && b0111 && b0113 && b0114 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164
}
Prover Time taken = 962.587832
Added Horn clause: 24 && 30 && 0 && 0 && 31 => 34
Added Horn clause: 35 => 36
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/nussinov/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0007 && b0008 && b0009 && b0011 && b0014 && b0016 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0041 && b0044 && b0046 && b0047 && b0048 && b0049 && b0052 && b0053 && b0054 && b0056 && b0105 && b0107 && b0108 && b0109 && b0110 && b0111 && b0113 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164
}
Command exited with non-zero status 124
3.38user 0.60system 20:00.01elapsed 0%CPU (0avgtext+0avgdata 85460maxresident)k
0inputs+0outputs (0major+50871minor)pagefaults 0swaps
FILE:polybench/medley/nussinov/kernel2.bpl.ice2.bpl
#################
Thu Jan 31 03:23:27 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/nussinov/kernel3.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/nussinov/kernel3.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 9
Generating VC of $kernel3
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.356045
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/nussinov/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 28.656576
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/nussinov/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 98.54327
Prover time = 127.56
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 127.60
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.72user 0.09system 2:08.82elapsed 0%CPU (0avgtext+0avgdata 57712maxresident)k
0inputs+0outputs (0major+12225minor)pagefaults 0swaps
FILE:polybench/medley/nussinov/kernel3.bpl.ice2.bpl
#################
Thu Jan 31 03:25:36 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/nussinov/kernel4.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/nussinov/kernel4.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 9
Generating VC of $kernel4
Verifying $kernel4: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.286827
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/nussinov/kernel4.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel4: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 43.6212
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/medley/nussinov/kernel4.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel4: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 103.20349
Prover time = 147.11
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 147.16
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.74user 0.10system 2:28.19elapsed 0%CPU (0avgtext+0avgdata 56088maxresident)k
0inputs+0outputs (0major+12673minor)pagefaults 0swaps
FILE:polybench/medley/nussinov/kernel4.bpl.ice2.bpl
#################
Thu Jan 31 03:28:04 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel12.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel12.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 124
Generating VC of $kernel12
Verifying $kernel12: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.079395
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel12.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel12: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.837803
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel12.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel12: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123
}
Prover Time taken = 0.820864
Added Horn clause: 2 => 3
Added Horn clause: 0 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel12.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel12: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123
}
Prover Time taken = 1.581518
Added Horn clause: 5 && 0 && 0 && 0 && 0 && 0 && 0 => 6
Added Horn clause: 5 && 7 && 4 && 0 && 0 => 8
Added Horn clause: 5 && 9 && 4 => 10
Added Horn clause: 5 && 11 && 4 && 0 && 0 && 0 && 0 => 12
Added Horn clause: 5 && 11 && 4 && 0 && 0 && 0 && 0 => 13
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel12.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel12: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123
}
Prover Time taken = 3.97339
Added Horn clause: 5 && 14 && 0 && 0 && 0 => 15
Added Horn clause: 0 && 16 && 4 && 0 && 0 && 0 && 0 => 17
Added Horn clause: 5 && 7 && 4 && 0 && 0 && 0 && 0 => 18
Added Horn clause: 5 && 19 && 13 && 0 && 8 && 0 && 0 => 20
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel12.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel12: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0011 && b0012 && b0014 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0025 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123
}
Prover Time taken = 5.181693
Added Horn clause: 5 && 14 && 0 && 0 && 0 && 0 && 15 => 21
Added Horn clause: 5 && 22 && 0 && 0 && 0 => 23
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel12.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel12: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0011 && b0012 && b0014 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0025 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0036 && b0037 && b0038 && b0040 && b0041 && b0042 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123
}
Prover Time taken = 5.245144
Added Horn clause: 24 => 25
Added Horn clause: 5 && 22 && 0 && 0 && 0 && 0 && 23 => 26
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel12.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel12: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0011 && b0012 && b0014 && b0017 && b0018 && b0019 && b0021 && b0022 && b0023 && b0025 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0036 && b0037 && b0038 && b0040 && b0041 && b0042 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123
}
Prover Time taken = 5.486324
Added Horn clause: 27 => 28
Added Horn clause: 24 && 14 && 25 && 0 && 0 => 29
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel12.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel12: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0011 && b0012 && b0014 && b0017 && b0018 && b0019 && b0022 && b0023 && b0025 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0037 && b0038 && b0040 && b0041 && b0042 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123
}
Prover Time taken = 5.48728
Added Horn clause: 27 && 22 && 28 && 0 && 0 => 30
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel12.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel12: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0011 && b0012 && b0014 && b0017 && b0018 && b0019 && b0022 && b0023 && b0025 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0037 && b0040 && b0042 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123
}
Prover Time taken = 5.502067
Added Horn clause: 31 && 32 && 33 && 0 && 0 => 34
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel12.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel12: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0011 && b0012 && b0014 && b0017 && b0018 && b0019 && b0022 && b0023 && b0025 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0037 && b0042 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123
}
Prover Time taken = 5.211592
Added Horn clause: 24 && 14 && 25 && 0 && 0 => 35
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel12.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel12: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0011 && b0012 && b0014 && b0017 && b0018 && b0019 && b0022 && b0023 && b0025 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0042 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123
}
Prover Time taken = 5.45919
Prover time = 44.87
Number of prover queries = 12
Learner time = 0.00
Number of learner queries = 11
Total time: 45.24
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:20
verified

Boogie program verifier finished with 1 verified, 0 errors
1.79user 0.34system 0:46.38elapsed 4%CPU (0avgtext+0avgdata 74640maxresident)k
0inputs+0outputs (0major+45434minor)pagefaults 0swaps
FILE:polybench/stencils/adi/kernel12.bpl.ice2.bpl
#################
Thu Jan 31 03:28:51 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel13.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel13.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 8
Generating VC of $kernel13
Verifying $kernel13: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.078584
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel13.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel13: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007
}
Prover Time taken = 0.390803
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel13.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel13: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007
}
Prover Time taken = 0.354772
Prover time = 0.82
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.87
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
1.33user 0.09system 0:01.79elapsed 80%CPU (0avgtext+0avgdata 51952maxresident)k
0inputs+0outputs (0major+18093minor)pagefaults 0swaps
FILE:polybench/stencils/adi/kernel13.bpl.ice2.bpl
#################
Thu Jan 31 03:28:52 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel14.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel14.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 8
Generating VC of $kernel14
Verifying $kernel14: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.081275
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel14.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel14: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007
}
Prover Time taken = 0.128333
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel14.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel14: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007
}
Prover Time taken = 0.298509
Prover time = 0.51
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.55
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
1.04user 0.06system 0:01.29elapsed 85%CPU (0avgtext+0avgdata 50196maxresident)k
0inputs+0outputs (0major+16867minor)pagefaults 0swaps
FILE:polybench/stencils/adi/kernel14.bpl.ice2.bpl
#################
Thu Jan 31 03:28:54 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel16.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel16.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 8
Generating VC of $kernel16
Verifying $kernel16: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.082393
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel16.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel16: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007
}
Prover Time taken = 0.161241
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel16.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel16: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007
}
Prover Time taken = 0.261912
Prover time = 0.51
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.55
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
1.02user 0.08system 0:01.29elapsed 85%CPU (0avgtext+0avgdata 49900maxresident)k
0inputs+0outputs (0major+16858minor)pagefaults 0swaps
FILE:polybench/stencils/adi/kernel16.bpl.ice2.bpl
#################
Thu Jan 31 03:28:55 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel17.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel17.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 100
Generating VC of $kernel17
Verifying $kernel17: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.164015
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel17.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel17: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.607827
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel17.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel17: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0063 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.85427
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel17.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel17: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099
}
Prover Time taken = 2.13515
Added Horn clause: 3 => 4
Added Horn clause: 5 && 6 && 6 && 6 && 6 => 7
Added Horn clause: 5 && 6 && 6 => 8
Added Horn clause: 5 && 6 && 6 && 6 && 6 => 9
Added Horn clause: 5 && 6 && 6 && 6 && 6 => 10
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel17.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel17: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099
}
Prover Time taken = 2.864086
Added Horn clause: 5 && 11 && 6 && 6 && 6 => 12
Added Horn clause: 5 && 11 && 6 && 6 && 6 => 13
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel17.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel17: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099
}
Prover Time taken = 3.617895
Added Horn clause: 5 && 14 && 6 => 15
Added Horn clause: 16 && 11 && 12 && 6 && 9 => 17
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel17.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel17: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099
}
Prover Time taken = 2.204199
Added Horn clause: 18 && 14 && 6 && 6 && 15 => 19
Added Horn clause: 20 && 21 && 6 => 22
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel17.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel17: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0050 && b0051 && b0052 && b0053 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099
}
Prover Time taken = 3.198353
Added Horn clause: 23 => 24
Added Horn clause: 0 && 25 && 6 && 6 && 26 => 27
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel17.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel17: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0022 && b0023 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0050 && b0051 && b0052 && b0053 && b0072 && b0073 && b0074 && b0075 && b0076 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099
}
Prover Time taken = 4.09601
Added Horn clause: 28 && 14 && 24 => 29
Added Horn clause: 30 => 31
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel17.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel17: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0022 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0050 && b0051 && b0052 && b0053 && b0072 && b0073 && b0074 && b0075 && b0076 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099
}
Prover Time taken = 3.475179
Added Horn clause: 30 && 25 && 31 => 32
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel17.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel17: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0022 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0043 && b0044 && b0045 && b0046 && b0047 && b0051 && b0052 && b0053 && b0072 && b0073 && b0074 && b0075 && b0076 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099
}
Prover Time taken = 2.899593
Added Horn clause: 33 && 21 && 34 => 35
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel17.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel17: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0022 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0044 && b0045 && b0046 && b0047 && b0052 && b0053 && b0072 && b0073 && b0074 && b0075 && b0076 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099
}
Prover Time taken = 3.234921
Prover time = 31.35
Number of prover queries = 12
Learner time = 0.00
Number of learner queries = 11
Total time: 31.64
Number of positive examples:3
Number of negative examples:0
Number of Horn clauses:17
verified

Boogie program verifier finished with 1 verified, 0 errors
1.72user 0.34system 0:32.36elapsed 6%CPU (0avgtext+0avgdata 75256maxresident)k
0inputs+0outputs (0major+40476minor)pagefaults 0swaps
FILE:polybench/stencils/adi/kernel17.bpl.ice2.bpl
#################
Thu Jan 31 03:29:27 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel18.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel18.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 8
Generating VC of $kernel18
Verifying $kernel18: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.078367
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel18.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel18: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007
}
Prover Time taken = 0.245565
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel18.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel18: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007
}
Prover Time taken = 0.344956
Prover time = 0.67
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.71
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
1.21user 0.07system 0:01.30elapsed 98%CPU (0avgtext+0avgdata 49868maxresident)k
0inputs+0outputs (0major+18476minor)pagefaults 0swaps
FILE:polybench/stencils/adi/kernel18.bpl.ice2.bpl
#################
Thu Jan 31 03:29:29 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel19.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel19.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 119
Generating VC of $kernel19
Verifying $kernel19: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.262077
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel19.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel19: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 2.673427
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel19.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel19: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0062 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 3.386168
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel19.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel19: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 3.218866
Added Horn clause: 3 => 4
Added Horn clause: 5 && 6 && 6 && 6 && 6 => 7
Added Horn clause: 5 && 6 && 6 => 8
Added Horn clause: 5 && 6 && 6 && 6 && 6 => 9
Added Horn clause: 5 && 6 && 6 && 6 && 6 => 10
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel19.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel19: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 3.911905
Added Horn clause: 0 && 6 && 6 && 6 && 10 => 11
Added Horn clause: 0 && 12 && 6 && 6 && 6 => 13
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel19.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel19: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 3.824404
Added Horn clause: 5 && 14 && 6 => 15
Added Horn clause: 16 && 17 && 6 && 6 && 10 => 18
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel19.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel19: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 3.365609
Added Horn clause: 19 && 20 && 6 => 21
Added Horn clause: 5 && 14 && 6 && 6 && 15 => 22
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel19.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel19: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0055 && b0056 && b0057 && b0058 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 3.370196
Added Horn clause: 23 => 24
Added Horn clause: 6 && 20 && 6 && 6 && 21 => 25
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel19.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel19: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0023 && b0024 && b0025 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0055 && b0056 && b0057 && b0058 && b0084 && b0085 && b0086 && b0087 && b0088 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 4.057995
Added Horn clause: 23 && 14 && 24 => 26
Added Horn clause: 27 => 28
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel19.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel19: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0023 && b0025 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0055 && b0056 && b0057 && b0058 && b0084 && b0085 && b0086 && b0087 && b0088 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 3.850539
Added Horn clause: 23 && 14 && 24 => 29
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel19.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel19: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0023 && b0025 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0049 && b0050 && b0051 && b0052 && b0053 && b0055 && b0056 && b0057 && b0058 && b0084 && b0085 && b0086 && b0087 && b0088 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 3.660199
Added Horn clause: 27 && 20 && 28 => 30
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel19.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel19: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0023 && b0025 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0049 && b0050 && b0051 && b0052 && b0056 && b0057 && b0058 && b0084 && b0085 && b0086 && b0087 && b0088 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 3.459884
Added Horn clause: 27 && 20 && 28 => 31
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel19.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel19: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0023 && b0025 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0049 && b0050 && b0051 && b0052 && b0057 && b0058 && b0084 && b0085 && b0086 && b0087 && b0088 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 3.148908
Prover time = 42.19
Number of prover queries = 13
Learner time = 0.00
Number of learner queries = 12
Total time: 42.52
Number of positive examples:3
Number of negative examples:0
Number of Horn clauses:18
verified

Boogie program verifier finished with 1 verified, 0 errors
1.96user 0.34system 0:43.36elapsed 5%CPU (0avgtext+0avgdata 77216maxresident)k
0inputs+0outputs (0major+46575minor)pagefaults 0swaps
FILE:polybench/stencils/adi/kernel19.bpl.ice2.bpl
#################
Thu Jan 31 03:30:12 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel20.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel20.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 8
Generating VC of $kernel20
Verifying $kernel20: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.071312
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel20.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel20: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007
}
Prover Time taken = 0.171616
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel20.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel20: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007
}
Prover Time taken = 0.494011
Prover time = 0.74
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.77
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
1.20user 0.08system 0:01.27elapsed 100%CPU (0avgtext+0avgdata 56092maxresident)k
0inputs+0outputs (0major+18180minor)pagefaults 0swaps
FILE:polybench/stencils/adi/kernel20.bpl.ice2.bpl
#################
Thu Jan 31 03:30:13 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel21.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel21.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 8
Generating VC of $kernel21
Verifying $kernel21: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.078504
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel21.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel21: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007
}
Prover Time taken = 0.393578
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel21.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel21: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007
}
Prover Time taken = 0.35981
Prover time = 0.83
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.87
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
1.36user 0.08system 0:01.79elapsed 80%CPU (0avgtext+0avgdata 55804maxresident)k
0inputs+0outputs (0major+18179minor)pagefaults 0swaps
FILE:polybench/stencils/adi/kernel21.bpl.ice2.bpl
#################
Thu Jan 31 03:30:15 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel22.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel22.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 124
Generating VC of $kernel22
Verifying $kernel22: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.090706
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel22.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel22: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.709322
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel22.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel22: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0064 && b0068 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.825808
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel22.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel22: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0068 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.056333
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel22.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel22: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123
}
Prover Time taken = 0.915017
Added Horn clause: 4 => 5
Added Horn clause: 0 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel22.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel22: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123
}
Prover Time taken = 1.558667
Added Horn clause: 7 && 0 && 0 && 0 && 0 && 0 && 0 => 8
Added Horn clause: 7 && 9 && 6 => 10
Added Horn clause: 0 && 9 && 6 && 0 && 0 => 11
Added Horn clause: 12 && 13 && 6 && 0 && 0 && 0 && 0 => 14
Added Horn clause: 12 && 15 && 6 && 0 && 0 && 0 && 0 => 16
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel22.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel22: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0025 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123
}
Prover Time taken = 3.488544
Added Horn clause: 12 && 17 && 6 && 0 && 0 && 0 && 0 => 18
Added Horn clause: 12 && 19 && 14 && 0 && 0 && 0 && 0 => 20
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel22.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel22: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0011 && b0012 && b0014 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0025 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0102 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123
}
Prover Time taken = 2.955762
Added Horn clause: 7 && 21 && 0 && 0 && 0 => 22
Added Horn clause: 7 && 23 && 14 && 0 && 11 && 0 && 0 => 24
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel22.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel22: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0011 && b0012 && b0014 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0025 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0040 && b0041 && b0042 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123
}
Prover Time taken = 2.63511
Added Horn clause: 0 && 21 && 0 && 0 && 0 && 0 && 22 => 25
Added Horn clause: 0 && 26 && 0 && 0 && 0 => 27
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel22.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel22: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0011 && b0012 && b0014 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0025 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0036 && b0037 && b0038 && b0040 && b0041 && b0042 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0074 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123
}
Prover Time taken = 3.795492
Added Horn clause: 28 => 29
Added Horn clause: 30 && 31 && 0 && 0 && 0 && 0 && 32 => 33
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel22.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel22: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0011 && b0012 && b0014 && b0017 && b0018 && b0019 && b0020 && b0022 && b0023 && b0025 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0036 && b0037 && b0038 && b0040 && b0041 && b0042 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123
}
Prover Time taken = 3.257638
Added Horn clause: 28 && 21 && 29 && 0 && 0 => 34
Added Horn clause: 35 => 36
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel22.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel22: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0011 && b0012 && b0014 && b0017 && b0018 && b0019 && b0022 && b0023 && b0025 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0036 && b0037 && b0041 && b0042 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123
}
Prover Time taken = 3.575627
Added Horn clause: 35 && 31 && 36 && 0 && 0 => 37
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel22.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel22: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0011 && b0012 && b0014 && b0017 && b0018 && b0019 && b0022 && b0023 && b0025 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0037 && b0041 && b0042 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123
}
Prover Time taken = 3.259619
Added Horn clause: 38 && 26 && 39 && 0 && 0 => 40
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel22.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel22: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0011 && b0012 && b0014 && b0017 && b0018 && b0019 && b0022 && b0023 && b0025 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0042 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123
}
Prover Time taken = 2.50572
Prover time = 30.63
Number of prover queries = 14
Learner time = 0.00
Number of learner queries = 13
Total time: 31.05
Number of positive examples:4
Number of negative examples:0
Number of Horn clauses:19
verified

Boogie program verifier finished with 1 verified, 0 errors
2.01user 0.28system 0:31.87elapsed 7%CPU (0avgtext+0avgdata 80152maxresident)k
0inputs+0outputs (0major+45506minor)pagefaults 0swaps
FILE:polybench/stencils/adi/kernel22.bpl.ice2.bpl
#################
Thu Jan 31 03:30:47 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel23.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel23.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 8
Generating VC of $kernel23
Verifying $kernel23: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.06977
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel23.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel23: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007
}
Prover Time taken = 0.12926
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel23.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel23: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007
}
Prover Time taken = 0.255834
Prover time = 0.45
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.49
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.90user 0.09system 0:01.26elapsed 78%CPU (0avgtext+0avgdata 52008maxresident)k
0inputs+0outputs (0major+18136minor)pagefaults 0swaps
FILE:polybench/stencils/adi/kernel23.bpl.ice2.bpl
#################
Thu Jan 31 03:30:48 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel24.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel24.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 8
Generating VC of $kernel24
Verifying $kernel24: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.078869
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel24.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel24: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007
}
Prover Time taken = 0.318181
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel24.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel24: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007
}
Prover Time taken = 0.404953
Prover time = 0.80
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.84
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
1.33user 0.08system 0:01.80elapsed 78%CPU (0avgtext+0avgdata 52436maxresident)k
0inputs+0outputs (0major+18430minor)pagefaults 0swaps
FILE:polybench/stencils/adi/kernel24.bpl.ice2.bpl
#################
Thu Jan 31 03:30:50 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel25.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel25.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 100
Generating VC of $kernel25
Verifying $kernel25: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.162605
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel25.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel25: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 1.505398
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel25.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel25: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099
}
Prover Time taken = 1.749775
Added Horn clause: 2 => 3
Added Horn clause: 4 && 5 && 5 => 6
Added Horn clause: 4 && 5 && 5 && 5 && 5 => 7
Added Horn clause: 4 && 5 && 5 && 5 && 5 => 8
Added Horn clause: 4 && 5 && 5 && 5 && 5 => 9
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel25.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel25: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099
}
Prover Time taken = 2.975026
Added Horn clause: 4 && 10 && 9 && 5 && 5 => 11
Added Horn clause: 4 && 12 && 9 && 5 && 5 => 13
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel25.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel25: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0090 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099
}
Prover Time taken = 3.84361
Added Horn clause: 4 && 14 && 5 => 15
Added Horn clause: 16 && 17 && 9 && 5 && 5 => 18
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel25.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel25: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0050 && b0051 && b0052 && b0053 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099
}
Prover Time taken = 3.175597
Added Horn clause: 5 && 19 && 9 && 5 && 15 => 20
Added Horn clause: 5 && 21 && 9 => 22
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel25.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel25: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0050 && b0051 && b0052 && b0053 && b0070 && b0072 && b0073 && b0074 && b0075 && b0076 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099
}
Prover Time taken = 3.692489
Added Horn clause: 23 => 24
Added Horn clause: 16 && 25 && 5 && 5 && 26 => 27
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel25.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel25: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0050 && b0051 && b0052 && b0053 && b0072 && b0073 && b0074 && b0075 && b0076 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099
}
Prover Time taken = 3.31646
Added Horn clause: 28 => 29
Added Horn clause: 23 && 14 && 24 => 30
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel25.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel25: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0022 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0051 && b0052 && b0053 && b0072 && b0073 && b0074 && b0075 && b0076 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099
}
Prover Time taken = 2.678107
Added Horn clause: 23 && 14 && 24 => 31
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel25.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel25: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0022 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0052 && b0053 && b0072 && b0073 && b0074 && b0075 && b0076 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099
}
Prover Time taken = 3.757468
Added Horn clause: 28 && 25 && 29 => 32
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel25.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel25: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0022 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0043 && b0044 && b0045 && b0046 && b0047 && b0052 && b0053 && b0072 && b0073 && b0074 && b0075 && b0076 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099
}
Prover Time taken = 2.926413
Added Horn clause: 28 && 25 && 29 => 33
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel25.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel25: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0022 && b0024 && b0027 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0044 && b0045 && b0046 && b0047 && b0052 && b0053 && b0072 && b0073 && b0074 && b0075 && b0076 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099
}
Prover Time taken = 2.96687
Prover time = 32.75
Number of prover queries = 12
Learner time = 0.00
Number of learner queries = 11
Total time: 33.04
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:18
verified

Boogie program verifier finished with 1 verified, 0 errors
1.60user 0.27system 0:33.86elapsed 5%CPU (0avgtext+0avgdata 72800maxresident)k
0inputs+0outputs (0major+36627minor)pagefaults 0swaps
FILE:polybench/stencils/adi/kernel25.bpl.ice2.bpl
#################
Thu Jan 31 03:31:24 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel26.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel26.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 119
Generating VC of $kernel26
Verifying $kernel26: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.245972
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel26.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel26: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 2.885984
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel26.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel26: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0065 && b0066 && b0067 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 2.470836
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel26.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel26: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0067 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 2.798215
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel26.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel26: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 2.518174
Added Horn clause: 4 => 5
Added Horn clause: 6 && 7 && 7 && 7 && 7 => 8
Added Horn clause: 9 && 7 && 7 => 10
Added Horn clause: 9 && 7 && 7 && 7 && 7 => 11
Added Horn clause: 9 && 7 && 7 && 7 && 7 => 12
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel26.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel26: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 3.789809
Added Horn clause: 0 && 13 && 7 && 7 && 7 => 14
Added Horn clause: 0 && 13 && 7 && 7 && 10 => 15
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel26.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel26: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 5.015035
Added Horn clause: 6 && 16 && 7 => 17
Added Horn clause: 6 && 7 && 7 && 7 && 7 => 18
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel26.bpl.ice2.bpl
Total learner time was 00:00:01
Verifying $kernel26: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 3.214647
Added Horn clause: 6 && 19 && 7 => 20
Added Horn clause: 9 && 16 && 7 && 7 && 17 => 21
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel26.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel26: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0055 && b0056 && b0057 && b0058 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 3.9565
Added Horn clause: 22 => 23
Added Horn clause: 6 && 24 && 12 && 7 && 20 => 25
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel26.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel26: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0023 && b0024 && b0025 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0055 && b0056 && b0057 && b0058 && b0084 && b0085 && b0086 && b0087 && b0088 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 3.808342
Added Horn clause: 26 && 16 && 23 => 27
Added Horn clause: 28 => 29
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel26.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel26: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0023 && b0025 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0055 && b0056 && b0057 && b0058 && b0084 && b0085 && b0086 && b0087 && b0088 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 3.636337
Added Horn clause: 30 && 19 && 29 => 31
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel26.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel26: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0023 && b0025 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0048 && b0049 && b0050 && b0051 && b0052 && b0056 && b0057 && b0058 && b0084 && b0085 && b0086 && b0087 && b0088 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 3.434619
Added Horn clause: 26 && 16 && 23 => 32
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel26.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel26: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0023 && b0025 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0049 && b0050 && b0051 && b0052 && b0056 && b0057 && b0058 && b0084 && b0085 && b0086 && b0087 && b0088 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 3.191487
Added Horn clause: 28 && 19 && 29 => 33
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/adi/kernel26.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel26: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0005 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0023 && b0025 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0049 && b0050 && b0051 && b0052 && b0057 && b0058 && b0084 && b0085 && b0086 && b0087 && b0088 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118
}
Prover Time taken = 3.013831
Prover time = 43.98
Number of prover queries = 14
Learner time = 1.00
Number of learner queries = 13
Total time: 44.32
Number of positive examples:4
Number of negative examples:0
Number of Horn clauses:18
verified

Boogie program verifier finished with 1 verified, 0 errors
2.02user 0.37system 0:45.34elapsed 5%CPU (0avgtext+0avgdata 75992maxresident)k
0inputs+0outputs (0major+46788minor)pagefaults 0swaps
FILE:polybench/stencils/adi/kernel26.bpl.ice2.bpl
#################
Thu Jan 31 03:32:09 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/fdtd-2d/kernel0.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/fdtd-2d/kernel0.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 44
Generating VC of $kernel0
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.07612
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/fdtd-2d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043
}
Prover Time taken = 0.688714
Added Horn clause: 0 => 1
Added Horn clause: 0 && 0 && 0 => 2
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 3
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 4
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/fdtd-2d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0019 && b0020 && b0021 && b0023 && b0025 && b0026 && b0027 && b0028 && b0029 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043
}
Prover Time taken = 1.195365
Added Horn clause: 0 && 0 && 0 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/fdtd-2d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0019 && b0020 && b0023 && b0025 && b0026 && b0027 && b0028 && b0029 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043
}
Prover Time taken = 1.17505
Added Horn clause: 0 && 0 && 1 => 7
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/fdtd-2d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0019 && b0020 && b0023 && b0025 && b0026 && b0027 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043
}
Prover Time taken = 1.212055
Prover time = 4.35
Number of prover queries = 5
Learner time = 0.00
Number of learner queries = 4
Total time: 4.43
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:7
verified

Boogie program verifier finished with 1 verified, 0 errors
5.01user 0.09system 0:05.29elapsed 96%CPU (0avgtext+0avgdata 59280maxresident)k
0inputs+0outputs (0major+29375minor)pagefaults 0swaps
FILE:polybench/stencils/fdtd-2d/kernel0.bpl.ice2.bpl
#################
Thu Jan 31 03:32:15 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/fdtd-2d/kernel1.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/fdtd-2d/kernel1.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 48
Generating VC of $kernel1
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.075537
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/fdtd-2d/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047
}
Prover Time taken = 0.578632
Added Horn clause: 0 => 1
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 2
Added Horn clause: 0 && 0 && 0 => 3
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 4
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/fdtd-2d/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0016 && b0019 && b0021 && b0022 && b0023 && b0025 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047
}
Prover Time taken = 0.957341
Added Horn clause: 0 && 0 && 0 => 6
Added Horn clause: 0 => 7
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/fdtd-2d/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0021 && b0022 && b0023 && b0025 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0034 && b0035 && b0036 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047
}
Prover Time taken = 0.942642
Added Horn clause: 0 && 0 && 7 => 8
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/fdtd-2d/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0021 && b0022 && b0023 && b0025 && b0027 && b0028 && b0029 && b0032 && b0036 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047
}
Prover Time taken = 1.088728
Added Horn clause: 0 && 0 && 9 => 10
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/fdtd-2d/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0021 && b0022 && b0023 && b0025 && b0027 && b0028 && b0029 && b0032 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047
}
Prover Time taken = 0.815731
Added Horn clause: 0 && 0 && 0 => 11
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/fdtd-2d/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0021 && b0022 && b0025 && b0027 && b0028 && b0029 && b0032 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047
}
Prover Time taken = 1.15457
Added Horn clause: 0 && 0 && 12 => 13
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/fdtd-2d/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0021 && b0022 && b0025 && b0027 && b0028 && b0029 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047
}
Prover Time taken = 0.912443
Prover time = 6.53
Number of prover queries = 8
Learner time = 0.00
Number of learner queries = 7
Total time: 6.66
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:11
verified

Boogie program verifier finished with 1 verified, 0 errors
7.30user 0.12system 0:07.33elapsed 101%CPU (0avgtext+0avgdata 65200maxresident)k
0inputs+0outputs (0major+29434minor)pagefaults 0swaps
FILE:polybench/stencils/fdtd-2d/kernel1.bpl.ice2.bpl
#################
Thu Jan 31 03:32:22 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/fdtd-2d/kernel2.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/fdtd-2d/kernel2.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 8
Generating VC of $kernel2
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.084824
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/fdtd-2d/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007
}
Prover Time taken = 0.164328
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/fdtd-2d/kernel2.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007
}
Prover Time taken = 0.355811
Prover time = 0.60
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.65
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
1.14user 0.07system 0:01.29elapsed 93%CPU (0avgtext+0avgdata 53008maxresident)k
0inputs+0outputs (0major+17386minor)pagefaults 0swaps
FILE:polybench/stencils/fdtd-2d/kernel2.bpl.ice2.bpl
#################
Thu Jan 31 03:32:23 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/fdtd-2d/kernel3.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/fdtd-2d/kernel3.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 44
Generating VC of $kernel3
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.075745
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/fdtd-2d/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043
}
Prover Time taken = 0.572799
Added Horn clause: 0 => 1
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 2
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 3
Added Horn clause: 0 && 0 && 0 => 4
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/fdtd-2d/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0019 && b0020 && b0023 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043
}
Prover Time taken = 1.047332
Added Horn clause: 0 && 0 && 6 => 7
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/fdtd-2d/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0019 && b0020 && b0023 && b0025 && b0026 && b0027 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043
}
Prover Time taken = 1.35611
Added Horn clause: 0 && 0 && 1 => 8
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/fdtd-2d/kernel3.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel3: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0019 && b0020 && b0023 && b0025 && b0026 && b0027 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043
}
Prover Time taken = 1.077165
Prover time = 4.13
Number of prover queries = 5
Learner time = 0.00
Number of learner queries = 4
Total time: 4.21
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:7
verified

Boogie program verifier finished with 1 verified, 0 errors
4.81user 0.16system 0:04.83elapsed 102%CPU (0avgtext+0avgdata 67088maxresident)k
0inputs+0outputs (0major+26796minor)pagefaults 0swaps
FILE:polybench/stencils/fdtd-2d/kernel3.bpl.ice2.bpl
#################
Thu Jan 31 03:32:28 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/heat-3d/kernel0.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/heat-3d/kernel0.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 68
Generating VC of $kernel0
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.081271
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/heat-3d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067
}
Prover Time taken = 2.336207
Added Horn clause: 0 => 1
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 2
Added Horn clause: 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 3
Added Horn clause: 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 4
Added Horn clause: 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/heat-3d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0016 && b0018 && b0019 && b0021 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067
}
Prover Time taken = 2.457116
Added Horn clause: 3 => 6
Added Horn clause: 0 && 0 && 0 => 7
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 8
Added Horn clause: 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 9
Added Horn clause: 0 && 0 && 0 && 0 && 0 && 0 && 0 => 10
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/heat-3d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0018 && b0019 && b0021 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0030 && b0031 && b0034 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0044 && b0045 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067
}
Prover Time taken = 3.839621
Added Horn clause: 0 && 0 && 6 => 11
Added Horn clause: 0 && 0 && 4 && 0 && 7 => 12
Added Horn clause: 0 && 0 && 0 && 0 && 0 && 0 && 8 => 13
Added Horn clause: 0 && 0 && 0 && 0 && 5 && 0 && 14 && 0 && 10 => 15
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/heat-3d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0018 && b0019 && b0021 && b0023 && b0024 && b0025 && b0028 && b0030 && b0031 && b0034 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0044 && b0045 && b0048 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067
}
Prover Time taken = 4.388734
Added Horn clause: 0 && 0 && 6 && 0 && 11 => 16
Added Horn clause: 0 && 0 && 1 => 17
Added Horn clause: 0 && 0 && 0 && 0 && 7 && 0 && 12 => 18
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/heat-3d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0018 && b0019 && b0021 && b0023 && b0024 && b0025 && b0030 && b0031 && b0034 && b0036 && b0037 && b0038 && b0041 && b0044 && b0045 && b0048 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067
}
Prover Time taken = 3.234023
Added Horn clause: 0 && 0 && 6 && 0 && 19 && 0 && 20 => 21
Added Horn clause: 0 && 0 && 1 && 0 && 22 => 23
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/heat-3d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0018 && b0019 && b0021 && b0023 && b0024 && b0025 && b0030 && b0031 && b0034 && b0036 && b0037 && b0038 && b0044 && b0045 && b0048 && b0050 && b0051 && b0052 && b0055 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067
}
Prover Time taken = 3.366451
Added Horn clause: 0 && 0 && 1 && 0 && 24 && 0 && 25 => 26
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/heat-3d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0018 && b0019 && b0021 && b0023 && b0024 && b0025 && b0030 && b0031 && b0034 && b0036 && b0037 && b0038 && b0044 && b0045 && b0048 && b0050 && b0051 && b0052 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067
}
Prover Time taken = 3.380184
Prover time = 23.08
Number of prover queries = 8
Learner time = 0.00
Number of learner queries = 7
Total time: 23.28
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:20
verified

Boogie program verifier finished with 1 verified, 0 errors
2.15user 0.22system 0:24.45elapsed 9%CPU (0avgtext+0avgdata 88876maxresident)k
0inputs+0outputs (0major+51532minor)pagefaults 0swaps
FILE:polybench/stencils/heat-3d/kernel0.bpl.ice2.bpl
#################
Thu Jan 31 03:32:53 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/heat-3d/kernel1.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/heat-3d/kernel1.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 68
Generating VC of $kernel1
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.079031
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/heat-3d/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067
}
Prover Time taken = 2.251064
Added Horn clause: 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 1
Added Horn clause: 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 2
Added Horn clause: 0 => 3
Added Horn clause: 0 && 0 && 0 => 4
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/heat-3d/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067
}
Prover Time taken = 2.783157
Added Horn clause: 0 => 6
Added Horn clause: 0 && 0 && 3 => 7
Added Horn clause: 0 && 0 && 0 && 0 && 4 => 8
Added Horn clause: 1 && 0 && 0 && 0 && 0 && 0 && 0 => 9
Added Horn clause: 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 10
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/heat-3d/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0028 && b0030 && b0031 && b0032 && b0034 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067
}
Prover Time taken = 2.064985
Added Horn clause: 0 && 0 && 11 && 0 && 12 => 13
Added Horn clause: 0 && 0 && 6 => 14
Added Horn clause: 0 && 0 && 0 && 0 && 0 && 0 && 10 && 0 && 0 => 15
Added Horn clause: 0 && 0 && 0 && 0 && 0 && 0 && 10 => 16
Added Horn clause: 0 && 0 && 0 && 0 && 0 && 0 && 10 && 0 && 0 => 17
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/heat-3d/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0018 && b0019 && b0021 && b0023 && b0024 && b0025 && b0030 && b0031 && b0032 && b0034 && b0036 && b0037 && b0038 && b0041 && b0044 && b0045 && b0048 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067
}
Prover Time taken = 3.400165
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 18
Added Horn clause: 0 && 0 && 3 && 0 && 7 && 0 && 19 => 20
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/heat-3d/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0018 && b0019 && b0021 && b0023 && b0024 && b0025 && b0030 && b0031 && b0034 && b0036 && b0037 && b0038 && b0041 && b0044 && b0045 && b0048 && b0050 && b0051 && b0052 && b0055 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067
}
Prover Time taken = 3.067544
Added Horn clause: 0 && 0 && 6 && 0 && 21 => 22
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/heat-3d/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0018 && b0019 && b0021 && b0023 && b0024 && b0025 && b0030 && b0031 && b0034 && b0036 && b0037 && b0038 && b0044 && b0045 && b0048 && b0050 && b0051 && b0052 && b0055 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067
}
Prover Time taken = 3.881885
Added Horn clause: 0 && 0 && 6 && 0 && 21 && 0 && 23 => 24
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/heat-3d/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0018 && b0019 && b0021 && b0023 && b0024 && b0025 && b0030 && b0031 && b0034 && b0036 && b0037 && b0038 && b0044 && b0045 && b0048 && b0050 && b0051 && b0052 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067
}
Prover Time taken = 3.165186
Prover time = 20.69
Number of prover queries = 8
Learner time = 0.00
Number of learner queries = 7
Total time: 20.90
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:19
verified

Boogie program verifier finished with 1 verified, 0 errors
2.13user 0.20system 0:22.43elapsed 10%CPU (0avgtext+0avgdata 88776maxresident)k
0inputs+0outputs (0major+52051minor)pagefaults 0swaps
FILE:polybench/stencils/heat-3d/kernel1.bpl.ice2.bpl
#################
Thu Jan 31 03:33:15 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/jacobi-1d/kernel0.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/jacobi-1d/kernel0.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 8
Generating VC of $kernel0
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.077112
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/jacobi-1d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007
}
Prover Time taken = 0.263454
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/jacobi-1d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007
}
Prover Time taken = 0.392282
Prover time = 0.73
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.78
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
1.28user 0.07system 0:01.79elapsed 75%CPU (0avgtext+0avgdata 52616maxresident)k
0inputs+0outputs (0major+16844minor)pagefaults 0swaps
FILE:polybench/stencils/jacobi-1d/kernel0.bpl.ice2.bpl
#################
Thu Jan 31 03:33:17 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/jacobi-1d/kernel1.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/jacobi-1d/kernel1.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 8
Generating VC of $kernel1
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.077764
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/jacobi-1d/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007
}
Prover Time taken = 0.314443
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/jacobi-1d/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007
}
Prover Time taken = 0.387781
Prover time = 0.78
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.82
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
1.32user 0.09system 0:01.80elapsed 78%CPU (0avgtext+0avgdata 50964maxresident)k
0inputs+0outputs (0major+17960minor)pagefaults 0swaps
FILE:polybench/stencils/jacobi-1d/kernel1.bpl.ice2.bpl
#################
Thu Jan 31 03:33:19 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/jacobi-2d/kernel0.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/jacobi-2d/kernel0.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 36
Generating VC of $kernel0
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.076995
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/jacobi-2d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035
}
Prover Time taken = 1.109185
Added Horn clause: 0 => 1
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 2
Added Horn clause: 0 && 0 && 0 => 3
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 4
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/jacobi-2d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:01
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0016 && b0018 && b0019 && b0020 && b0022 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0031 && b0032 && b0033 && b0034 && b0035
}
Prover Time taken = 1.673047
Added Horn clause: 0 && 0 && 1 => 6
Added Horn clause: 0 => 7
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/jacobi-2d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0018 && b0019 && b0020 && b0022 && b0024 && b0025 && b0026 && b0028 && b0031 && b0032 && b0033 && b0034 && b0035
}
Prover Time taken = 1.755801
Added Horn clause: 0 && 0 && 7 => 8
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/jacobi-2d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0018 && b0019 && b0020 && b0022 && b0024 && b0025 && b0026 && b0031 && b0032 && b0033 && b0034 && b0035
}
Prover Time taken = 1.74441
Added Horn clause: 0 && 0 && 0 => 9
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/jacobi-2d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0018 && b0019 && b0022 && b0024 && b0025 && b0026 && b0031 && b0032 && b0033 && b0034 && b0035
}
Prover Time taken = 1.377355
Prover time = 7.74
Number of prover queries = 6
Learner time = 1.00
Number of learner queries = 5
Total time: 7.84
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:9
verified

Boogie program verifier finished with 1 verified, 0 errors
0.92user 0.12system 0:08.83elapsed 11%CPU (0avgtext+0avgdata 66360maxresident)k
0inputs+0outputs (0major+21621minor)pagefaults 0swaps
FILE:polybench/stencils/jacobi-2d/kernel0.bpl.ice2.bpl
#################
Thu Jan 31 03:33:28 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/jacobi-2d/kernel1.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/jacobi-2d/kernel1.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 36
Generating VC of $kernel1
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.076013
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/jacobi-2d/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035
}
Prover Time taken = 0.912559
Added Horn clause: 0 => 1
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 2
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 3
Added Horn clause: 0 && 0 && 0 => 4
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/jacobi-2d/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0017 && b0018 && b0019 && b0022 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035
}
Prover Time taken = 1.725343
Added Horn clause: 0 && 0 && 1 => 6
Added Horn clause: 0 => 7
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/jacobi-2d/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0018 && b0019 && b0022 && b0024 && b0025 && b0026 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035
}
Prover Time taken = 1.53439
Added Horn clause: 0 && 0 && 7 => 8
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/jacobi-2d/kernel1.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0018 && b0019 && b0022 && b0024 && b0025 && b0026 && b0031 && b0032 && b0033 && b0034 && b0035
}
Prover Time taken = 1.463933
Prover time = 5.71
Number of prover queries = 5
Learner time = 0.00
Number of learner queries = 4
Total time: 5.80
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:8
verified

Boogie program verifier finished with 1 verified, 0 errors
6.37user 0.21system 0:06.82elapsed 96%CPU (0avgtext+0avgdata 70524maxresident)k
0inputs+0outputs (0major+50106minor)pagefaults 0swaps
FILE:polybench/stencils/jacobi-2d/kernel1.bpl.ice2.bpl
#################
Thu Jan 31 03:33:34 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/seidel-2d/kernel0.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/seidel-2d/kernel0.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 52
Generating VC of $kernel0
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.255184
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/seidel-2d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051
}
Added: my_inv:1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 36.945801
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/seidel-2d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  b0000 && b0001 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051
}
Prover Time taken = 52.786572
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 2
Added Horn clause: 1 => 3
Added Horn clause: 1 && 0 && 0 && 0 && 0 => 4
Added Horn clause: 1 && 0 && 0 => 5
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/polybench/stencils/seidel-2d/kernel0.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel0: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool) : bool
{
  b0000 && b0001 && b0004 && b0006 && b0007 && b0008 && b0009 && b0010 && b0013 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0026 && b0029 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051
}
Command exited with non-zero status 124
2.56user 0.32system 20:00.00elapsed 0%CPU (0avgtext+0avgdata 81860maxresident)k
0inputs+0outputs (0major+32472minor)pagefaults 0swaps
FILE:polybench/stencils/seidel-2d/kernel0.bpl.ice2.bpl
#################
Thu Jan 31 03:53:34 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/b+tree/findK/_kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/b+tree/findK/_kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 13
Generating VC of $findK
Verifying $findK: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.069898
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/b+tree/findK/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $findK: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012
}
Overwrote: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1: negative
Overwrote: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1: negative
Overwrote: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1: negative
Overwrote: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1: negative
Prover Time taken = 0.375618
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/b+tree/findK/_kernel.bpl.ice2.bpl
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] -> 0 not consistent!
sorcar: sorcar.cpp:202: int main(int, char* const*): Assertion `sorcar::is_consistent(X, datapoints, horn_constraints)' failed.
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
Command exited with non-zero status 1
0.65user 0.06system 0:01.25elapsed 57%CPU (0avgtext+0avgdata 55268maxresident)k
0inputs+0outputs (0major+11213minor)pagefaults 0swaps
FILE:rodinia_2.4/b+tree/findK/_kernel.bpl.ice2.bpl
#################
Thu Jan 31 03:53:36 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/b+tree/findRangeK/_kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/b+tree/findRangeK/_kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 21
Generating VC of $findRangeK
Verifying $findRangeK: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.075701
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/b+tree/findRangeK/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $findRangeK: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020
}
Overwrote: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: negative
Overwrote: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: negative
Overwrote: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: negative
Overwrote: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: negative
Prover Time taken = 1.178627
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/b+tree/findRangeK/_kernel.bpl.ice2.bpl
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] -> 0 not consistent!
sorcar: sorcar.cpp:202: int main(int, char* const*): Assertion `sorcar::is_consistent(X, datapoints, horn_constraints)' failed.
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
Command exited with non-zero status 1
0.76user 0.07system 0:01.87elapsed 44%CPU (0avgtext+0avgdata 63324maxresident)k
0inputs+0outputs (0major+12921minor)pagefaults 0swaps
FILE:rodinia_2.4/b+tree/findRangeK/_kernel.bpl.ice2.bpl
#################
Thu Jan 31 03:53:37 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/backprop/bpnn_layerforward/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/backprop/bpnn_layerforward/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 11
Generating VC of $bpnn_layerforward_ocl
Verifying $bpnn_layerforward_ocl: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.130117
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/backprop/bpnn_layerforward/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $bpnn_layerforward_ocl: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010
}
Prover Time taken = 0.370704
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/backprop/bpnn_layerforward/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $bpnn_layerforward_ocl: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010
}
Prover Time taken = 1.133781
Prover time = 1.63
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 1.68
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.64user 0.09system 0:02.32elapsed 31%CPU (0avgtext+0avgdata 58108maxresident)k
0inputs+0outputs (0major+14035minor)pagefaults 0swaps
FILE:rodinia_2.4/backprop/bpnn_layerforward/kernel.bpl.ice2.bpl
#################
Thu Jan 31 03:53:40 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/cfd/initialize_variables/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/cfd/initialize_variables/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 9
Generating VC of $initialize_variables
Verifying $initialize_variables: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.068025
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/cfd/initialize_variables/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $initialize_variables: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 0.22195
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/cfd/initialize_variables/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $initialize_variables: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 0.662329
Added Horn clause: 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/cfd/initialize_variables/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $initialize_variables: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0002 && b0004 && b0005
}
Prover Time taken = 0.971967
Prover time = 1.92
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 1.98
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
2.47user 0.05system 0:02.79elapsed 90%CPU (0avgtext+0avgdata 49804maxresident)k
0inputs+0outputs (0major+16805minor)pagefaults 0swaps
FILE:rodinia_2.4/cfd/initialize_variables/kernel.bpl.ice2.bpl
#################
Thu Jan 31 03:53:43 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/kmeans/kmeans_swap/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/kmeans/kmeans_swap/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 13
Generating VC of $kmeans_swap
Verifying $kmeans_swap: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.071626
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/kmeans/kmeans_swap/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kmeans_swap: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012
}
Prover Time taken = 0.368938
Added Horn clause: 0 && 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/kmeans/kmeans_swap/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kmeans_swap: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012
}
Prover Time taken = 0.747135
Added Horn clause: 0 && 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/kmeans/kmeans_swap/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kmeans_swap: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0012
}
Prover Time taken = 3.818731
Prover time = 5.01
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 5.06
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
5.52user 0.11system 0:05.80elapsed 96%CPU (0avgtext+0avgdata 52224maxresident)k
0inputs+0outputs (0major+17429minor)pagefaults 0swaps
FILE:rodinia_2.4/kmeans/kmeans_swap/kernel.bpl.ice2.bpl
#################
Thu Jan 31 03:53:48 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/lavaMD/_kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/lavaMD/_kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 180
Generating VC of $kernel_gpu_opencl
Verifying $kernel_gpu_opencl: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.093065
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/lavaMD/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel_gpu_opencl: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179
}
Prover Time taken = 44.360939
Added Horn clause: 0 && 0 => 1
Added Horn clause: 0 && 0 => 2
Added Horn clause: 0 && 0 && 0 && 0 && 0 && 0 => 3
Added Horn clause: 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 2
Added Horn clause: 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/lavaMD/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel_gpu_opencl: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0068 && b0069 && b0071 && b0072 && b0074 && b0075 && b0077 && b0078 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179
}
Prover Time taken = 35.717653
Added Horn clause: 0 && 0 => 5
Added Horn clause: 0 && 0 => 6
Added Horn clause: 0 && 0 && 2 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 7
Added Horn clause: 0 && 0 && 2 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 8
Added Horn clause: 0 && 0 && 2 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 9
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/lavaMD/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $kernel_gpu_opencl: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0011 && b0013 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0028 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0040 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0057 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0068 && b0069 && b0071 && b0072 && b0074 && b0075 && b0077 && b0078 && b0080 && b0081 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179
}
Added Horn clause: 0 && 0 && 10 && 11 && 0 && 0 && 0 && 0 && 0 && 12 => 
Added Horn clause: 0 && 0 && 10 && 11 && 0 && 0 && 0 && 0 && 0 && 9 => 
Added Horn clause: 0 && 0 && 13 && 0 && 0 && 0 && 0 && 0 && 0 && 14 => 
Prover Time taken = 19.808834
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/lavaMD/_kernel.bpl.ice2.bpl
terminate called after throwing an instance of 'std::runtime_error'
  what():  No consistent conjunction exists
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
Command exited with non-zero status 1
2.09user 0.32system 1:40.92elapsed 2%CPU (0avgtext+0avgdata 90456maxresident)k
0inputs+0outputs (0major+40606minor)pagefaults 0swaps
FILE:rodinia_2.4/lavaMD/_kernel.bpl.ice2.bpl
#################
Thu Jan 31 03:55:29 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/leukocyte/IMGVF/_kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/leukocyte/IMGVF/_kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 196
Generating VC of $IMGVF_kernel
Verifying $IMGVF_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.102301
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/leukocyte/IMGVF/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $IMGVF_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool, b0180: bool, b0181: bool, b0182: bool, b0183: bool, b0184: bool, b0185: bool, b0186: bool, b0187: bool, b0188: bool, b0189: bool, b0190: bool, b0191: bool, b0192: bool, b0193: bool, b0194: bool, b0195: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179 && b0180 && b0181 && b0182 && b0183 && b0184 && b0185 && b0186 && b0187 && b0188 && b0189 && b0190 && b0191 && b0192 && b0193 && b0194 && b0195
}
Overwrote: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: negative
Added Horn clause: 0 && 0 && 0 && 0 && 0 && 0 && 0 => 
Prover Time taken = 65.321084
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/leukocyte/IMGVF/_kernel.bpl.ice2.bpl
terminate called after throwing an instance of 'std::runtime_error'
  what():  No consistent conjunction exists
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
Command exited with non-zero status 1
0.99user 0.18system 1:06.15elapsed 1%CPU (0avgtext+0avgdata 77284maxresident)k
0inputs+0outputs (0major+22586minor)pagefaults 0swaps
FILE:rodinia_2.4/leukocyte/IMGVF/_kernel.bpl.ice2.bpl
#################
Thu Jan 31 03:56:36 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/lud/lud_diagonal/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/lud/lud_diagonal/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 54
Generating VC of $lud_diagonal
Verifying $lud_diagonal: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.0711
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/lud/lud_diagonal/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $lud_diagonal: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053
}
Prover Time taken = 0.29953
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/lud/lud_diagonal/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $lud_diagonal: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053
}
Prover Time taken = 1.132053
Added Horn clause: 1 && 0 && 0 && 0 && 0 && 0 => 2
Added Horn clause: 1 && 0 && 0 && 0 && 0 && 0 => 3
Added Horn clause: 1 && 0 && 0 && 0 && 0 && 0 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/lud/lud_diagonal/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $lud_diagonal: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0019 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0051 && b0052 && b0053
}
Prover Time taken = 2.579923
Added Horn clause: 1 && 2 && 0 => 5
Added Horn clause: 1 && 2 && 0 && 0 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/lud/lud_diagonal/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $lud_diagonal: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0014 && b0016 && b0017 && b0019 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0030 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0051 && b0052 && b0053
}
Prover Time taken = 2.297667
Prover time = 6.38
Number of prover queries = 5
Learner time = 0.00
Number of learner queries = 4
Total time: 6.47
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:6
verified

Boogie program verifier finished with 1 verified, 0 errors
6.96user 0.15system 0:07.30elapsed 97%CPU (0avgtext+0avgdata 63236maxresident)k
0inputs+0outputs (0major+30946minor)pagefaults 0swaps
FILE:rodinia_2.4/lud/lud_diagonal/kernel.bpl.ice2.bpl
#################
Thu Jan 31 03:56:43 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/lud/lud_internal/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/lud/lud_internal/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 5
Generating VC of $lud_internal
Verifying $lud_internal: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1: positive
Prover Time taken = 0.091699
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/lud/lud_internal/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $lud_internal: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004
}
Prover Time taken = 0.062697
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/lud/lud_internal/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $lud_internal: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool) : bool
{
  b0000 && b0002 && b0004
}
Prover Time taken = 0.06723
Prover time = 0.22
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.26
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.69user 0.09system 0:00.78elapsed 100%CPU (0avgtext+0avgdata 52268maxresident)k
0inputs+0outputs (0major+16452minor)pagefaults 0swaps
FILE:rodinia_2.4/lud/lud_internal/kernel.bpl.ice2.bpl
#################
Thu Jan 31 03:56:44 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/lud/lud_perimeter/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/lud/lud_perimeter/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 135
Generating VC of $lud_perimeter
Verifying $lud_perimeter: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.086814
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/lud/lud_perimeter/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $lud_perimeter: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134
}
Prover Time taken = 21.872794
Added Horn clause: 0 && 0 => 1
Added Horn clause: 0 && 0 && 0 && 0 => 2
Added Horn clause: 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 3
Added Horn clause: 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 4
Added Horn clause: 0 && 0 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/lud/lud_perimeter/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $lud_perimeter: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0043 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0065 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0089 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0099 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134
}
Prover Time taken = 15.067595
Added Horn clause: 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 4 && 0 && 0 => 6
Added Horn clause: 0 && 0 && 0 && 0 => 7
Added Horn clause: 0 && 0 && 0 && 0 && 0 && 0 => 8
Added Horn clause: 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 4 && 0 && 0 && 0 && 0 && 0 && 0 => 9
Added Horn clause: 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 10
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/lud/lud_perimeter/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $lud_perimeter: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0010 && b0011 && b0013 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0022 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0043 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0065 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0075 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0089 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0099 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134
}
Prover Time taken = 30.303368
Added Horn clause: 0 && 0 && 5 && 0 => 11
Added Horn clause: 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 4 => 12
Added Horn clause: 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 4 && 0 && 0 && 0 && 9 && 0 && 0 => 13
Added Horn clause: 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 4 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 3 => 14
Added Horn clause: 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 15
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/lud/lud_perimeter/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $lud_perimeter: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0010 && b0011 && b0013 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0022 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0033 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0043 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0052 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0065 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0075 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0084 && b0085 && b0086 && b0087 && b0089 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0099 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0133 && b0134
}
Prover Time taken = 22.571644
Added Horn clause: 0 && 0 && 16 && 0 && 0 && 11 => 17
Added Horn clause: 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 => 18
Added Horn clause: 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 4 && 0 && 0 && 0 && 0 && 0 && 0 && 14 && 0 => 19
Added Horn clause: 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 0 && 4 && 0 && 0 && 0 && 0 => 20
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/lud/lud_perimeter/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $lud_perimeter: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0010 && b0011 && b0013 && b0015 && b0016 && b0017 && b0019 && b0020 && b0022 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0033 && b0035 && b0036 && b0037 && b0038 && b0040 && b0041 && b0043 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0052 && b0054 && b0055 && b0056 && b0057 && b0059 && b0060 && b0061 && b0063 && b0065 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0075 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0084 && b0086 && b0087 && b0089 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0099 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0133 && b0134
}
Prover Time taken = 4.762901
Prover time = 94.67
Number of prover queries = 6
Learner time = 0.00
Number of learner queries = 5
Total time: 94.94
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:19
verified

Boogie program verifier finished with 1 verified, 0 errors
1.97user 0.26system 1:35.84elapsed 2%CPU (0avgtext+0avgdata 94532maxresident)k
0inputs+0outputs (0major+45436minor)pagefaults 0swaps
FILE:rodinia_2.4/lud/lud_perimeter/kernel.bpl.ice2.bpl
#################
Thu Jan 31 03:58:19 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/nw/nw1/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/nw/nw1/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 29
Generating VC of $nw_kernel1
Verifying $nw_kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.087842
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/nw/nw1/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $nw_kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028
}
Prover Time taken = 1.275538
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/nw/nw1/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $nw_kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028
}
Prover Time taken = 3.454203
Added Horn clause: 1 && 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/nw/nw1/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $nw_kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028
}
Prover Time taken = 2.681213
Added Horn clause: 1 && 2 && 0 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/nw/nw1/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $nw_kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028
}
Prover Time taken = 3.348068
Added Horn clause: 1 && 2 && 3 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/nw/nw1/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $nw_kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0012 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028
}
Prover Time taken = 6.31261
Added Horn clause: 1 && 2 && 4 && 0 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/nw/nw1/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $nw_kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0012 && b0016 && b0018 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028
}
Prover Time taken = 9.047065
Added Horn clause: 1 && 2 && 4 && 5 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/nw/nw1/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $nw_kernel1: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0012 && b0016 && b0018 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027
}
Prover Time taken = 5.586685
Prover time = 31.79
Number of prover queries = 8
Learner time = 0.00
Number of learner queries = 7
Total time: 31.90
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:6
verified

Boogie program verifier finished with 1 verified, 0 errors
0.87user 0.13system 0:32.84elapsed 3%CPU (0avgtext+0avgdata 70664maxresident)k
0inputs+0outputs (0major+20392minor)pagefaults 0swaps
FILE:rodinia_2.4/nw/nw1/kernel.bpl.ice2.bpl
#################
Thu Jan 31 03:58:52 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/nw/nw2/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/nw/nw2/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 29
Generating VC of $nw_kernel2
Verifying $nw_kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.097684
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/nw/nw2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $nw_kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028
}
Prover Time taken = 2.414091
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/nw/nw2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $nw_kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028
}
Prover Time taken = 3.028468
Added Horn clause: 1 && 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/nw/nw2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $nw_kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028
}
Prover Time taken = 3.258444
Added Horn clause: 1 && 2 && 0 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/nw/nw2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $nw_kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0011 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028
}
Prover Time taken = 5.532114
Added Horn clause: 1 && 2 && 3 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/nw/nw2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $nw_kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0012 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028
}
Prover Time taken = 7.26277
Added Horn clause: 1 && 2 && 4 && 0 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/nw/nw2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $nw_kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0012 && b0016 && b0018 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028
}
Prover Time taken = 9.562548
Added Horn clause: 1 && 2 && 4 && 5 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/nw/nw2/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $nw_kernel2: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0012 && b0016 && b0018 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027
}
Prover Time taken = 4.931837
Prover time = 36.09
Number of prover queries = 8
Learner time = 0.00
Number of learner queries = 7
Total time: 36.20
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:6
verified

Boogie program verifier finished with 1 verified, 0 errors
0.85user 0.14system 0:36.83elapsed 2%CPU (0avgtext+0avgdata 67744maxresident)k
0inputs+0outputs (0major+20392minor)pagefaults 0swaps
FILE:rodinia_2.4/nw/nw2/kernel.bpl.ice2.bpl
#################
Thu Jan 31 03:59:29 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/particlefilter/likelihood_single/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/particlefilter/likelihood_single/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 48
Generating VC of $likelihood_kernel
Verifying $likelihood_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.388591
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/particlefilter/likelihood_single/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $likelihood_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047
}
Prover Time taken = 297.007881
Added Horn clause: 0 && 0 && 0 && 0 && 0 => 1
Added Horn clause: 0 && 0 => 2
Added Horn clause: 0 && 0 && 0 && 0 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/particlefilter/likelihood_single/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $likelihood_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool) : bool
{
  b0000 && b0002 && b0004 && b0006 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0017 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047
}
Prover Time taken = 877.087596
Added Horn clause: 0 && 0 && 0 && 0 && 1 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/particlefilter/likelihood_single/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $likelihood_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool) : bool
{
  b0000 && b0002 && b0004 && b0006 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0017 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0044 && b0045 && b0046 && b0047
}
Command exited with non-zero status 124
1.49user 0.29system 20:00.00elapsed 0%CPU (0avgtext+0avgdata 71792maxresident)k
0inputs+0outputs (0major+21011minor)pagefaults 0swaps
FILE:rodinia_2.4/particlefilter/likelihood_single/kernel.bpl.ice2.bpl
#################
Thu Jan 31 04:19:29 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/particlefilter/sum_single/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/particlefilter/sum_single/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 9
Generating VC of $sum_kernel
Verifying $sum_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.071827
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/particlefilter/sum_single/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $sum_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 0.031374
Added Horn clause: 0 && 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/particlefilter/sum_single/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $sum_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008
}
Prover Time taken = 0.015262
Prover time = 0.12
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.16
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.64user 0.08system 0:01.06elapsed 68%CPU (0avgtext+0avgdata 51752maxresident)k
0inputs+0outputs (0major+14834minor)pagefaults 0swaps
FILE:rodinia_2.4/particlefilter/sum_single/kernel.bpl.ice2.bpl
#################
Thu Jan 31 04:19:30 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/pathfinder/dynproc/_kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/pathfinder/dynproc/_kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 14
Generating VC of $dynproc_kernel
Verifying $dynproc_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.127735
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/pathfinder/dynproc/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $dynproc_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013
}
Overwrote: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1: negative
Prover Time taken = 0.441998
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/pathfinder/dynproc/_kernel.bpl.ice2.bpl
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] -> 0 not consistent!
sorcar: sorcar.cpp:202: int main(int, char* const*): Assertion `sorcar::is_consistent(X, datapoints, horn_constraints)' failed.
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
Command exited with non-zero status 1
0.62user 0.06system 0:01.13elapsed 61%CPU (0avgtext+0avgdata 54044maxresident)k
0inputs+0outputs (0major+11643minor)pagefaults 0swaps
FILE:rodinia_2.4/pathfinder/dynproc/_kernel.bpl.ice2.bpl
#################
Thu Jan 31 04:19:31 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/srad/reduce/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/srad/reduce/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 135
Generating VC of $reduce_kernel
Verifying $reduce_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.096997
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/srad/reduce/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $reduce_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 12.817911
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/srad/reduce/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $reduce_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0072 && b0074 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 8.520844
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/srad/reduce/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $reduce_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134
}
Prover Time taken = 5.837089
Added Horn clause: 0 && 0 => 3
Added Horn clause: 4 && 0 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/srad/reduce/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $reduce_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0046 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0090 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134
}
Prover Time taken = 6.047975
Added Horn clause: 0 && 0 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/srad/reduce/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $reduce_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0046 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134
}
Prover Time taken = 4.817262
Added Horn clause: 0 && 0 => 7
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/srad/reduce/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $reduce_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0046 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134
}
Prover Time taken = 3.30488
Added Horn clause: 0 && 0 => 8
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/srad/reduce/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $reduce_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0046 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134
}
Prover Time taken = 9.773461
Added Horn clause: 0 && 0 => 9
Added Horn clause: 0 && 0 => 10
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/srad/reduce/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $reduce_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0046 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0104 && b0105 && b0106 && b0107 && b0108 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134
}
Prover Time taken = 6.667701
Added Horn clause: 0 && 0 && 11 && 9 => 12
Added Horn clause: 0 && 0 => 13
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/srad/reduce/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $reduce_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0011 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0046 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0104 && b0105 && b0106 && b0107 && b0108 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134
}
Prover Time taken = 3.976173
Added Horn clause: 0 && 0 && 10 && 13 => 14
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/rodinia_2.4/srad/reduce/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $reduce_kernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0011 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0027 && b0028 && b0029 && b0030 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0046 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0104 && b0105 && b0106 && b0107 && b0108 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134
}
Prover Time taken = 0.605655
Prover time = 62.47
Number of prover queries = 11
Learner time = 0.00
Number of learner queries = 10
Total time: 62.82
Number of positive examples:3
Number of negative examples:0
Number of Horn clauses:10
verified

Boogie program verifier finished with 1 verified, 0 errors
2.01user 0.32system 1:03.78elapsed 3%CPU (0avgtext+0avgdata 86472maxresident)k
0inputs+0outputs (0major+50747minor)pagefaults 0swaps
FILE:rodinia_2.4/srad/reduce/kernel.bpl.ice2.bpl
#################
Thu Jan 31 04:20:35 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/bfs/iiit/_kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/bfs/iiit/_kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 65
Generating VC of $BFS_kernel_warp
Verifying $BFS_kernel_warp: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.090871
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/bfs/iiit/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $BFS_kernel_warp: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.675392
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/bfs/iiit/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $BFS_kernel_warp: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0028 && b0029 && b0031 && b0032 && b0033 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.682171
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/bfs/iiit/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $BFS_kernel_warp: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: negative
Prover Time taken = 0.368659
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/bfs/iiit/_kernel.bpl.ice2.bpl
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] -> 0 not consistent!
sorcar: sorcar.cpp:202: int main(int, char* const*): Assertion `sorcar::is_consistent(X, datapoints, horn_constraints)' failed.
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
Command exited with non-zero status 1
0.73user 0.16system 0:02.37elapsed 37%CPU (0avgtext+0avgdata 65416maxresident)k
0inputs+0outputs (0major+14448minor)pagefaults 0swaps
FILE:shoc/bfs/iiit/_kernel.bpl.ice2.bpl
#################
Thu Jan 31 04:20:38 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/bfs/uiuc_spill/BFS_kernel_one_block/_kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/bfs/uiuc_spill/BFS_kernel_one_block/_kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 95
Generating VC of $BFS_kernel_one_block
Verifying $BFS_kernel_one_block: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.087258
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/bfs/uiuc_spill/BFS_kernel_one_block/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $BFS_kernel_one_block: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,0,0,0,1,1,1,0,0,1,1,1,0,1,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Added Horn clause: 0 && 0 && 0 => 
Prover Time taken = 2.31154
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/bfs/uiuc_spill/BFS_kernel_one_block/_kernel.bpl.ice2.bpl
terminate called after throwing an instance of 'std::runtime_error'
  what():  No consistent conjunction exists
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
Command exited with non-zero status 1
0.88user 0.09system 0:03.07elapsed 32%CPU (0avgtext+0avgdata 68172maxresident)k
0inputs+0outputs (0major+17288minor)pagefaults 0swaps
FILE:shoc/bfs/uiuc_spill/BFS_kernel_one_block/_kernel.bpl.ice2.bpl
#################
Thu Jan 31 04:20:41 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/bfs/uiuc_spill/BFS_kernel_SM_block/_kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/bfs/uiuc_spill/BFS_kernel_SM_block/_kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 180
Generating VC of $BFS_kernel_SM_block
Verifying $BFS_kernel_SM_block: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.07932
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/bfs/uiuc_spill/BFS_kernel_SM_block/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $BFS_kernel_SM_block: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool, b0159: bool, b0160: bool, b0161: bool, b0162: bool, b0163: bool, b0164: bool, b0165: bool, b0166: bool, b0167: bool, b0168: bool, b0169: bool, b0170: bool, b0171: bool, b0172: bool, b0173: bool, b0174: bool, b0175: bool, b0176: bool, b0177: bool, b0178: bool, b0179: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158 && b0159 && b0160 && b0161 && b0162 && b0163 && b0164 && b0165 && b0166 && b0167 && b0168 && b0169 && b0170 && b0171 && b0172 && b0173 && b0174 && b0175 && b0176 && b0177 && b0178 && b0179
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,0,0,1,1,1,1,0,1,1,1,1,1,0,0,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1,1,0,0,0,1,1,0,0,0,0,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Added Horn clause: 0 && 0 && 0 => 
Prover Time taken = 18.981118
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/bfs/uiuc_spill/BFS_kernel_SM_block/_kernel.bpl.ice2.bpl
terminate called after throwing an instance of 'std::runtime_error'
  what():  No consistent conjunction exists
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
Command exited with non-zero status 1
1.12user 0.11system 0:19.84elapsed 6%CPU (0avgtext+0avgdata 85224maxresident)k
0inputs+0outputs (0major+24784minor)pagefaults 0swaps
FILE:shoc/bfs/uiuc_spill/BFS_kernel_SM_block/_kernel.bpl.ice2.bpl
#################
Thu Jan 31 04:21:00 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/devicememory/readLocalMemory/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/devicememory/readLocalMemory/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 17
Generating VC of $readLocalMemory
Verifying $readLocalMemory: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.077442
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/devicememory/readLocalMemory/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $readLocalMemory: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016
}
Prover Time taken = 0.518052
Added Horn clause: 0 && 0 && 0 => 1
Added Horn clause: 0 => 2
Added Horn clause: 0 && 0 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/devicememory/readLocalMemory/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $readLocalMemory: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0014 && b0016
}
Prover Time taken = 0.224392
Prover time = 0.82
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.86
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:3
verified

Boogie program verifier finished with 1 verified, 0 errors
1.39user 0.08system 0:01.81elapsed 81%CPU (0avgtext+0avgdata 54704maxresident)k
0inputs+0outputs (0major+20207minor)pagefaults 0swaps
FILE:shoc/devicememory/readLocalMemory/kernel.bpl.ice2.bpl
#################
Thu Jan 31 04:21:02 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/devicememory/writeGlobalMemoryCoalesced/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/devicememory/writeGlobalMemoryCoalesced/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 5
Generating VC of $writeGlobalMemoryCoalesced
Verifying $writeGlobalMemoryCoalesced: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1: positive
Prover Time taken = 0.07641
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/devicememory/writeGlobalMemoryCoalesced/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $writeGlobalMemoryCoalesced: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004
}
Overwrote: my_inv:1,1,1,1,1: negative
Overwrote: my_inv:1,1,1,1,1: negative
Overwrote: my_inv:1,1,1,1,1: negative
Overwrote: my_inv:1,1,1,1,1: negative
Prover Time taken = 11.391823
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/devicememory/writeGlobalMemoryCoalesced/kernel.bpl.ice2.bpl
[0, 1, 1, 1, 1, 1] -> 0 not consistent!
sorcar: sorcar.cpp:202: int main(int, char* const*): Assertion `sorcar::is_consistent(X, datapoints, horn_constraints)' failed.
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
Command exited with non-zero status 1
0.68user 0.08system 0:12.02elapsed 6%CPU (0avgtext+0avgdata 56072maxresident)k
0inputs+0outputs (0major+11274minor)pagefaults 0swaps
FILE:shoc/devicememory/writeGlobalMemoryCoalesced/kernel.bpl.ice2.bpl
#################
Thu Jan 31 04:21:14 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/devicememory/writeGlobalMemoryUnit/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/devicememory/writeGlobalMemoryUnit/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 5
Generating VC of $writeGlobalMemoryUnit
Verifying $writeGlobalMemoryUnit: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1: positive
Prover Time taken = 0.06473
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/devicememory/writeGlobalMemoryUnit/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $writeGlobalMemoryUnit: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004
}
Overwrote: my_inv:1,1,1,1,1: negative
Overwrote: my_inv:1,1,1,1,1: negative
Overwrote: my_inv:1,1,1,1,1: negative
Overwrote: my_inv:1,1,1,1,1: negative
Prover Time taken = 3.101736
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/devicememory/writeGlobalMemoryUnit/kernel.bpl.ice2.bpl
[0, 1, 1, 1, 1, 1] -> 0 not consistent!
sorcar: sorcar.cpp:202: int main(int, char* const*): Assertion `sorcar::is_consistent(X, datapoints, horn_constraints)' failed.
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
Command exited with non-zero status 1
0.60user 0.07system 0:03.66elapsed 18%CPU (0avgtext+0avgdata 55580maxresident)k
0inputs+0outputs (0major+11213minor)pagefaults 0swaps
FILE:shoc/devicememory/writeGlobalMemoryUnit/kernel.bpl.ice2.bpl
#################
Thu Jan 31 04:21:18 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/devicememory/writeLocalMemory/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/devicememory/writeLocalMemory/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 11
Generating VC of $writeLocalMemory
Verifying $writeLocalMemory: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.069634
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/devicememory/writeLocalMemory/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $writeLocalMemory: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010
}
Overwrote: my_inv:1,1,1,1,1,1,1,1,1,1,1: negative
Overwrote: my_inv:1,1,1,1,1,1,1,1,1,1,1: negative
Overwrote: my_inv:1,1,1,1,1,1,1,1,1,1,1: negative
Overwrote: my_inv:1,1,1,1,1,1,1,1,1,1,1: negative
Overwrote: my_inv:1,1,1,1,1,1,1,1,1,1,1: negative
Prover Time taken = 230.562554
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/devicememory/writeLocalMemory/kernel.bpl.ice2.bpl
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] -> 0 not consistent!
sorcar: sorcar.cpp:202: int main(int, char* const*): Assertion `sorcar::is_consistent(X, datapoints, horn_constraints)' failed.
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
Command exited with non-zero status 1
0.84user 0.12system 3:51.14elapsed 0%CPU (0avgtext+0avgdata 61508maxresident)k
0inputs+0outputs (0major+12353minor)pagefaults 0swaps
FILE:shoc/devicememory/writeLocalMemory/kernel.bpl.ice2.bpl
#################
Thu Jan 31 04:25:09 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/fft/chk1D_512/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/fft/chk1D_512/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 6
Generating VC of $chk1D_512
Verifying $chk1D_512: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1: positive
Prover Time taken = 0.071386
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/fft/chk1D_512/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $chk1D_512: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005
}
Overwrote: my_inv:1,1,1,1,1,1: negative
Prover Time taken = 0.037617
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/fft/chk1D_512/kernel.bpl.ice2.bpl
[0, 1, 1, 1, 1, 1, 1] -> 0 not consistent!
sorcar: sorcar.cpp:202: int main(int, char* const*): Assertion `sorcar::is_consistent(X, datapoints, horn_constraints)' failed.
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
Command exited with non-zero status 1
0.56user 0.06system 0:00.64elapsed 97%CPU (0avgtext+0avgdata 49320maxresident)k
0inputs+0outputs (0major+9981minor)pagefaults 0swaps
FILE:shoc/fft/chk1D_512/kernel.bpl.ice2.bpl
#################
Thu Jan 31 04:25:10 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/fft/fft1D_512/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/fft/fft1D_512/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 56
Generating VC of $fft1D_512
Verifying $fft1D_512: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.080189
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/fft/fft1D_512/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $fft1D_512: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055
}
Prover Time taken = 47.708076
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/fft/fft1D_512/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $fft1D_512: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055
}
Prover Time taken = 256.552059
Added Horn clause: 1 && 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/fft/fft1D_512/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $fft1D_512: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055
}
Prover Time taken = 116.020942
Added Horn clause: 1 && 2 && 0 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/fft/fft1D_512/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $fft1D_512: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0012 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055
}
Prover Time taken = 405.435312
Added Horn clause: 1 && 2 && 3 && 0 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/fft/fft1D_512/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $fft1D_512: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0012 && b0014 && b0015 && b0017 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055
}
Command exited with non-zero status 124
2.03user 0.42system 20:00.00elapsed 0%CPU (0avgtext+0avgdata 80056maxresident)k
0inputs+0outputs (0major+30970minor)pagefaults 0swaps
FILE:shoc/fft/fft1D_512/kernel.bpl.ice2.bpl
#################
Thu Jan 31 04:45:10 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/fft/ifft1D_512/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/fft/ifft1D_512/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 56
Generating VC of $ifft1D_512
Verifying $ifft1D_512: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.090399
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/fft/ifft1D_512/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $ifft1D_512: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055
}
Prover Time taken = 53.75618
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/fft/ifft1D_512/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $ifft1D_512: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055
}
Prover Time taken = 237.153209
Added Horn clause: 1 && 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/fft/ifft1D_512/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $ifft1D_512: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055
}
Prover Time taken = 503.606296
Added Horn clause: 1 && 2 && 0 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/fft/ifft1D_512/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $ifft1D_512: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0012 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055
}
Prover Time taken = 140.41995
Added Horn clause: 1 && 2 && 3 && 0 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/fft/ifft1D_512/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $ifft1D_512: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0012 && b0014 && b0015 && b0017 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055
}
Prover Time taken = 176.535694
Added Horn clause: 1 && 2 && 3 && 4 && 0 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/fft/ifft1D_512/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $ifft1D_512: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0012 && b0014 && b0015 && b0017 && b0019 && b0020 && b0022 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055
}
Command exited with non-zero status 124
2.28user 0.45system 20:00.00elapsed 0%CPU (0avgtext+0avgdata 80600maxresident)k
0inputs+0outputs (0major+32586minor)pagefaults 0swaps
FILE:shoc/fft/ifft1D_512/kernel.bpl.ice2.bpl
#################
Thu Jan 31 05:05:10 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/gemm/sgemmNN/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/gemm/sgemmNN/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 17
Generating VC of $sgemmNN
Verifying $sgemmNN: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.104694
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/gemm/sgemmNN/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $sgemmNN: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016
}
Prover Time taken = 571.404043
Added Horn clause: 0 => 1
Added Horn clause: 0 && 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/gemm/sgemmNN/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $sgemmNN: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  b0000 && b0002 && b0004 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0015 && b0016
}
Prover Time taken = 624.834792
Added Horn clause: 1 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/gemm/sgemmNN/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $sgemmNN: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  b0000 && b0002 && b0006 && b0007 && b0008 && b0010 && b0012 && b0013 && b0014 && b0015 && b0016
}
Command exited with non-zero status 124
1.95user 0.29system 20:00.01elapsed 0%CPU (0avgtext+0avgdata 95592maxresident)k
0inputs+0outputs (0major+35965minor)pagefaults 0swaps
FILE:shoc/gemm/sgemmNN/kernel.bpl.ice2.bpl
#################
Thu Jan 31 05:25:10 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/gemm/sgemmNT/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/gemm/sgemmNT/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 17
Generating VC of $sgemmNT
Verifying $sgemmNT: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.091327
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/gemm/sgemmNT/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $sgemmNT: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016
}
Command exited with non-zero status 124
1.46user 0.31system 20:00.00elapsed 0%CPU (0avgtext+0avgdata 67316maxresident)k
0inputs+0outputs (0major+15729minor)pagefaults 0swaps
FILE:shoc/gemm/sgemmNT/kernel.bpl.ice2.bpl
#################
Thu Jan 31 05:45:10 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/kernelcompile/scan/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/kernelcompile/scan/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 88
Generating VC of $scan
Verifying $scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.109844
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/kernelcompile/scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0033 && b0034 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 3.0075
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/kernelcompile/scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0033 && b0034 && b0045 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087
}
Prover Time taken = 1.584756
Added Horn clause: 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/kernelcompile/scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0033 && b0034 && b0045 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087
}
Prover Time taken = 1.72273
Added Horn clause: 2 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/kernelcompile/scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0034 && b0045 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087
}
Prover Time taken = 3.646154
Added Horn clause: 3 => 4
Added Horn clause: 0 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/kernelcompile/scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0003 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0034 && b0048 && b0049 && b0050 && b0051 && b0053 && b0072 && b0073 && b0086 && b0087
}
Prover Time taken = 3.684406
Added Horn clause: 3 && 6 => 7
Added Horn clause: 3 => 8
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/kernelcompile/scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0003 && b0006 && b0008 && b0009 && b0010 && b0011 && b0034 && b0048 && b0049 && b0050 && b0051 && b0072 && b0073 && b0086 && b0087
}
Prover Time taken = 2.336892
Added Horn clause: 3 && 9 => 10
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/kernelcompile/scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0003 && b0006 && b0008 && b0009 && b0010 && b0011 && b0034 && b0048 && b0049 && b0050 && b0051 && b0072 && b0073 && b0086
}
Prover Time taken = 1.954211
Added Horn clause: 3 && 9 => 11
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/kernelcompile/scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool) : bool
{
  b0000 && b0001 && b0003 && b0006 && b0008 && b0009 && b0010 && b0011 && b0034 && b0048 && b0049 && b0050 && b0051 && b0072 && b0073
}
Prover Time taken = 1.293656
Prover time = 19.34
Number of prover queries = 9
Learner time = 0.00
Number of learner queries = 8
Total time: 19.48
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:8
verified

Boogie program verifier finished with 1 verified, 0 errors
0.90user 0.19system 0:20.52elapsed 5%CPU (0avgtext+0avgdata 68444maxresident)k
0inputs+0outputs (0major+21341minor)pagefaults 0swaps
FILE:shoc/kernelcompile/scan/kernel.bpl.ice2.bpl
#################
Thu Jan 31 05:45:30 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/reduction/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/reduction/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 18
Generating VC of $reduce
Verifying $reduce: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.068689
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/reduction/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $reduce: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017
}
Prover Time taken = 0.269223
Added Horn clause: 0 => 1
Added Horn clause: 0 && 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/reduction/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $reduce: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017
}
Prover Time taken = 0.23165
Added Horn clause: 1 => 3
Added Horn clause: 0 && 2 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/reduction/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $reduce: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool) : bool
{
  b0000 && b0004 && b0005 && b0006 && b0008 && b0010 && b0011 && b0012 && b0014 && b0015 && b0016 && b0017
}
Prover Time taken = 0.434203
Prover time = 1.00
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 1.05
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:4
verified

Boogie program verifier finished with 1 verified, 0 errors
1.52user 0.06system 0:01.78elapsed 89%CPU (0avgtext+0avgdata 54564maxresident)k
0inputs+0outputs (0major+20038minor)pagefaults 0swaps
FILE:shoc/reduction/kernel.bpl.ice2.bpl
#################
Thu Jan 31 05:45:32 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/s3d/gr_base/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/s3d/gr_base/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 10
Generating VC of $gr_base
Verifying $gr_base: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 126.424758
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/s3d/gr_base/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $gr_base: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009
}
Added: my_inv:1,1,1,1,1,1,1,0,1,0: positive
Prover Time taken = 151.678898
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/s3d/gr_base/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $gr_base: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0008
}
Prover Time taken = 155.800316
Added Horn clause: 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/s3d/gr_base/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $gr_base: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0001 && b0003 && b0004 && b0005 && b0006 && b0008
}
Prover Time taken = 188.157891
Added Horn clause: 2 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/s3d/gr_base/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $gr_base: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0001 && b0003 && b0004 && b0006
}
Prover Time taken = 33.822048
Prover time = 655.88
Number of prover queries = 5
Learner time = 0.00
Number of learner queries = 4
Total time: 655.95
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
1.26user 0.26system 10:56.96elapsed 0%CPU (0avgtext+0avgdata 62344maxresident)k
0inputs+0outputs (0major+18640minor)pagefaults 0swaps
FILE:shoc/s3d/gr_base/kernel.bpl.ice2.bpl
#################
Thu Jan 31 05:56:29 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/scan/bottom_scan/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/scan/bottom_scan/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 86
Generating VC of $bottom_scan
Verifying $bottom_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.087299
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/scan/bottom_scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $bottom_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0026 && b0028 && b0029 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0049 && b0050 && b0051 && b0052 && b0053 && b0054 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,0,1,1,0,0,1,1,1,1,1,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 5.464351
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/scan/bottom_scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $bottom_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0026 && b0028 && b0029 && b0032 && b0033 && b0036 && b0037 && b0038 && b0039 && b0040 && b0043 && b0044 && b0045 && b0046 && b0047 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 4.643271
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/scan/bottom_scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $bottom_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0028 && b0029 && b0032 && b0033 && b0036 && b0037 && b0044 && b0045 && b0046 && b0058 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,0,0,0,1,1,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 6.528352
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/scan/bottom_scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:01
Verifying $bottom_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0028 && b0029 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085
}
Prover Time taken = 6.056939
Added Horn clause: 4 => 5
Added Horn clause: 6 && 7 && 7 => 8
Added Horn clause: 6 && 7 && 7 => 9
Added Horn clause: 10 && 7 && 7 => 11
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/scan/bottom_scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $bottom_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0006 && b0008 && b0010 && b0012 && b0013 && b0014 && b0015 && b0017 && b0019 && b0020 && b0021 && b0022 && b0023 && b0028 && b0029 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0072 && b0074 && b0075 && b0076 && b0077 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085
}
Prover Time taken = 2.207375
Added Horn clause: 12 => 13
Added Horn clause: 14 && 7 && 7 => 15
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/scan/bottom_scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $bottom_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0006 && b0008 && b0010 && b0012 && b0013 && b0014 && b0015 && b0017 && b0019 && b0020 && b0021 && b0022 && b0023 && b0028 && b0029 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0074 && b0075 && b0076 && b0077 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085
}
Prover Time taken = 3.561025
Added Horn clause: 16 => 17
Added Horn clause: 18 && 13 && 7 => 19
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/scan/bottom_scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $bottom_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0006 && b0008 && b0010 && b0012 && b0013 && b0014 && b0015 && b0017 && b0019 && b0020 && b0021 && b0022 && b0023 && b0028 && b0029 && b0061 && b0062 && b0063 && b0064 && b0065 && b0067 && b0068 && b0069 && b0074 && b0075 && b0076 && b0077 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085
}
Prover Time taken = 2.16688
Added Horn clause: 20 => 21
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/scan/bottom_scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $bottom_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0006 && b0008 && b0010 && b0012 && b0013 && b0014 && b0015 && b0017 && b0019 && b0020 && b0021 && b0022 && b0023 && b0028 && b0029 && b0061 && b0062 && b0063 && b0064 && b0065 && b0067 && b0068 && b0069 && b0074 && b0075 && b0076 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085
}
Prover Time taken = 1.742244
Prover time = 32.46
Number of prover queries = 9
Learner time = 1.00
Number of learner queries = 8
Total time: 32.62
Number of positive examples:4
Number of negative examples:0
Number of Horn clauses:9
verified

Boogie program verifier finished with 1 verified, 0 errors
1.50user 0.26system 0:33.35elapsed 5%CPU (0avgtext+0avgdata 71644maxresident)k
0inputs+0outputs (0major+31600minor)pagefaults 0swaps
FILE:shoc/scan/bottom_scan/kernel.bpl.ice2.bpl
#################
Thu Jan 31 05:57:02 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/scan/reduce/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/scan/reduce/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 10
Generating VC of $reduce
Verifying $reduce: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.078074
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/scan/reduce/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $reduce: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009
}
Prover Time taken = 0.083994
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/scan/reduce/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $reduce: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009
}
Prover Time taken = 0.067662
Added Horn clause: 1 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/scan/reduce/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $reduce: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0002 && b0004 && b0006 && b0007 && b0008 && b0009
}
Prover Time taken = 0.022876
Prover time = 0.25
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 0.30
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:2
verified

Boogie program verifier finished with 1 verified, 0 errors
0.72user 0.10system 0:00.77elapsed 107%CPU (0avgtext+0avgdata 53440maxresident)k
0inputs+0outputs (0major+17668minor)pagefaults 0swaps
FILE:shoc/scan/reduce/kernel.bpl.ice2.bpl
#################
Thu Jan 31 05:57:03 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/scan/top_scan/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/scan/top_scan/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 10
Generating VC of $top_scan
Verifying $top_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.089316
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/scan/top_scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $top_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009
}
Prover Time taken = 0.053032
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/scan/top_scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $top_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool) : bool
{
  b0001 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009
}
Prover Time taken = 0.031364
Prover time = 0.17
Number of prover queries = 3
Learner time = 0.00
Number of learner queries = 2
Total time: 0.22
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:1
verified

Boogie program verifier finished with 1 verified, 0 errors
0.72user 0.08system 0:00.81elapsed 99%CPU (0avgtext+0avgdata 55544maxresident)k
0inputs+0outputs (0major+17002minor)pagefaults 0swaps
FILE:shoc/scan/top_scan/kernel.bpl.ice2.bpl
#################
Thu Jan 31 05:57:04 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/sort/bottom_scan/_kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/sort/bottom_scan/_kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 159
Generating VC of $bottom_scan
Verifying $bottom_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 2.262868
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/sort/bottom_scan/_kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $bottom_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool, b0033: bool, b0034: bool, b0035: bool, b0036: bool, b0037: bool, b0038: bool, b0039: bool, b0040: bool, b0041: bool, b0042: bool, b0043: bool, b0044: bool, b0045: bool, b0046: bool, b0047: bool, b0048: bool, b0049: bool, b0050: bool, b0051: bool, b0052: bool, b0053: bool, b0054: bool, b0055: bool, b0056: bool, b0057: bool, b0058: bool, b0059: bool, b0060: bool, b0061: bool, b0062: bool, b0063: bool, b0064: bool, b0065: bool, b0066: bool, b0067: bool, b0068: bool, b0069: bool, b0070: bool, b0071: bool, b0072: bool, b0073: bool, b0074: bool, b0075: bool, b0076: bool, b0077: bool, b0078: bool, b0079: bool, b0080: bool, b0081: bool, b0082: bool, b0083: bool, b0084: bool, b0085: bool, b0086: bool, b0087: bool, b0088: bool, b0089: bool, b0090: bool, b0091: bool, b0092: bool, b0093: bool, b0094: bool, b0095: bool, b0096: bool, b0097: bool, b0098: bool, b0099: bool, b0100: bool, b0101: bool, b0102: bool, b0103: bool, b0104: bool, b0105: bool, b0106: bool, b0107: bool, b0108: bool, b0109: bool, b0110: bool, b0111: bool, b0112: bool, b0113: bool, b0114: bool, b0115: bool, b0116: bool, b0117: bool, b0118: bool, b0119: bool, b0120: bool, b0121: bool, b0122: bool, b0123: bool, b0124: bool, b0125: bool, b0126: bool, b0127: bool, b0128: bool, b0129: bool, b0130: bool, b0131: bool, b0132: bool, b0133: bool, b0134: bool, b0135: bool, b0136: bool, b0137: bool, b0138: bool, b0139: bool, b0140: bool, b0141: bool, b0142: bool, b0143: bool, b0144: bool, b0145: bool, b0146: bool, b0147: bool, b0148: bool, b0149: bool, b0150: bool, b0151: bool, b0152: bool, b0153: bool, b0154: bool, b0155: bool, b0156: bool, b0157: bool, b0158: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032 && b0033 && b0034 && b0035 && b0036 && b0037 && b0038 && b0039 && b0040 && b0041 && b0042 && b0043 && b0044 && b0045 && b0046 && b0047 && b0048 && b0050 && b0052 && b0053 && b0055 && b0056 && b0057 && b0058 && b0059 && b0060 && b0061 && b0062 && b0063 && b0064 && b0065 && b0066 && b0067 && b0068 && b0069 && b0070 && b0071 && b0072 && b0073 && b0074 && b0075 && b0076 && b0077 && b0078 && b0079 && b0080 && b0081 && b0082 && b0083 && b0084 && b0085 && b0086 && b0087 && b0088 && b0089 && b0090 && b0091 && b0092 && b0093 && b0094 && b0095 && b0096 && b0097 && b0098 && b0099 && b0100 && b0101 && b0102 && b0103 && b0104 && b0105 && b0106 && b0107 && b0108 && b0109 && b0110 && b0111 && b0112 && b0113 && b0114 && b0115 && b0116 && b0117 && b0118 && b0119 && b0120 && b0121 && b0122 && b0123 && b0124 && b0125 && b0126 && b0127 && b0128 && b0129 && b0130 && b0131 && b0132 && b0133 && b0134 && b0135 && b0136 && b0137 && b0138 && b0139 && b0140 && b0141 && b0142 && b0143 && b0144 && b0145 && b0146 && b0147 && b0148 && b0149 && b0150 && b0151 && b0152 && b0153 && b0154 && b0155 && b0156 && b0157 && b0158
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,1,1,0,0,1,0,1,1,1,0,1,1,1,1,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Added Horn clause: 2 && 3 && 3 && 3 && 3 => 
Added Horn clause: 2 && 3 && 3 && 3 && 3 => 
Prover Time taken = 60.345732
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/sort/bottom_scan/_kernel.bpl.ice2.bpl
terminate called after throwing an instance of 'std::runtime_error'
  what():  No consistent conjunction exists
The learner seems to have run into an error!

Unhandled Exception:
Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Boogie.Houdini.MLHoudiniInternalError: The learner seems to have run into an error!
  at Microsoft.Boogie.Houdini.MLHoudini.learn (System.Collections.Generic.HashSet`1[System.String]& funcsChanged) [0x000d9] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.LearnInv (System.Collections.Generic.Dictionary`2[TKey,TValue] impl2Priority) [0x00723] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.Houdini.MLHoudini.ComputeSummaries () [0x001a3] in <ae50aaddd3514b51ad60d60412b98f96>:0 
  at Microsoft.Boogie.ExecutionEngine.RunMLHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00056] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.RunHoudini (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, Microsoft.Boogie.ErrorReporterDelegate er, System.String filename) [0x00027] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.InferAndVerify (Microsoft.Boogie.Program program, Microsoft.Boogie.PipelineStatistics stats, System.String filename, Microsoft.Boogie.ErrorReporterDelegate er, System.String requestId) [0x00154] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.ExecutionEngine.ProcessFiles (System.Collections.Generic.List`1[T] fileNames, System.Boolean lookForSnapshots) [0x00327] in <6f0a890617ba49ac8c833d7a02ae9ff4>:0 
  at Microsoft.Boogie.OnlyBoogie.Main (System.String[] args) [0x0028f] in <5df5dde18d654f7ea493dd5cbf890c57>:0 
Command exited with non-zero status 1
1.05user 0.13system 1:03.33elapsed 1%CPU (0avgtext+0avgdata 72816maxresident)k
0inputs+0outputs (0major+19912minor)pagefaults 0swaps
FILE:shoc/sort/bottom_scan/_kernel.bpl.ice2.bpl
#################
Thu Jan 31 05:58:07 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/sort/reduce/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/sort/reduce/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 25
Generating VC of $reduce
Verifying $reduce: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 2.087899
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/sort/reduce/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $reduce: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024
}
Added: my_inv:1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 3.85563
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/sort/reduce/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $reduce: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024
}
Prover Time taken = 3.497027
Added Horn clause: 0 && 2 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/sort/reduce/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $reduce: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0007 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024
}
Prover Time taken = 3.378369
Added Horn clause: 0 && 3 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/sort/reduce/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $reduce: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0007 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0021 && b0022 && b0023 && b0024
}
Prover Time taken = 3.87552
Added Horn clause: 0 && 4 => 5
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/sort/reduce/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $reduce: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0021 && b0022 && b0023 && b0024
}
Prover Time taken = 3.488964
Added Horn clause: 0 && 4 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/sort/reduce/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $reduce: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0021 && b0022 && b0023 && b0024
}
Prover Time taken = 3.220599
Added Horn clause: 5 && 4 => 7
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/sort/reduce/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $reduce: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0012 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0021 && b0022 && b0023 && b0024
}
Prover Time taken = 3.335814
Added Horn clause: 0 && 4 => 8
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/sort/reduce/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $reduce: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0012 && b0014 && b0016 && b0017 && b0018 && b0019 && b0021 && b0022 && b0023 && b0024
}
Prover Time taken = 0.044482
Prover time = 26.78
Number of prover queries = 9
Learner time = 0.00
Number of learner queries = 8
Total time: 26.89
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:6
verified

Boogie program verifier finished with 1 verified, 0 errors
27.39user 0.16system 0:27.80elapsed 99%CPU (0avgtext+0avgdata 61928maxresident)k
0inputs+0outputs (0major+24979minor)pagefaults 0swaps
FILE:shoc/sort/reduce/kernel.bpl.ice2.bpl
#################
Thu Jan 31 05:58:35 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/sort/top_scan/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/sort/top_scan/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 29
Generating VC of $top_scan
Verifying $top_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.070998
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/sort/top_scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $top_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028
}
Added: my_inv:1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.888182
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/sort/top_scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $top_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028
}
Prover Time taken = 0.353332
Added Horn clause: 0 && 2 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/sort/top_scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $top_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0006 && b0008 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028
}
Prover Time taken = 0.315941
Added Horn clause: 0 && 3 => 4
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/sort/top_scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $top_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool) : bool
{
  b0000 && b0002 && b0004 && b0006 && b0008 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028
}
Prover Time taken = 0.350396
Added Horn clause: 5 && 3 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/sort/top_scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $top_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool) : bool
{
  b0000 && b0002 && b0004 && b0006 && b0008 && b0011 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028
}
Prover Time taken = 0.409653
Added Horn clause: 5 && 3 => 7
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/sort/top_scan/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $top_scan: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool) : bool
{
  b0000 && b0002 && b0004 && b0006 && b0008 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028
}
Prover Time taken = 0.078479
Prover time = 2.47
Number of prover queries = 7
Learner time = 0.00
Number of learner queries = 6
Total time: 2.55
Number of positive examples:2
Number of negative examples:0
Number of Horn clauses:4
verified

Boogie program verifier finished with 1 verified, 0 errors
3.01user 0.15system 0:03.29elapsed 96%CPU (0avgtext+0avgdata 58940maxresident)k
0inputs+0outputs (0major+26622minor)pagefaults 0swaps
FILE:shoc/sort/top_scan/kernel.bpl.ice2.bpl
#################
Thu Jan 31 05:58:39 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/stencil2d/CopyRect/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/stencil2d/CopyRect/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 11
Generating VC of $CopyRect
Verifying $CopyRect: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.064677
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/stencil2d/CopyRect/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $CopyRect: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010
}
Prover Time taken = 0.721331
Added Horn clause: 0 && 0 => 1
Added Horn clause: 0 && 0 => 2
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/stencil2d/CopyRect/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $CopyRect: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0010
}
Prover Time taken = 6.257071
Added Horn clause: 0 && 1 => 3
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/stencil2d/CopyRect/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $CopyRect: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0010
}
Prover Time taken = 3.289209
Prover time = 10.33
Number of prover queries = 4
Learner time = 0.00
Number of learner queries = 3
Total time: 10.38
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:3
verified

Boogie program verifier finished with 1 verified, 0 errors
10.81user 0.08system 0:11.26elapsed 96%CPU (0avgtext+0avgdata 52232maxresident)k
0inputs+0outputs (0major+17690minor)pagefaults 0swaps
FILE:shoc/stencil2d/CopyRect/kernel.bpl.ice2.bpl
#################
Thu Jan 31 05:58:50 CET 2019
KEY=ahorndini
OUTPUT=/dev/shm/gv/results/gpuverify/ahorndini.txt
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
---Command arguments
/nologo
/env:2
/typeEncoding:m
/mv:-
/enhancedErrorMessages:1
/useArrayTheory
/prover:SMTLib
/noinfer
/contractInfer
/trace
/z3exe:/dev/shm/gv/z3/bin/z3
/mlHoudini:sorcar
/learnerOptions:-a horndini 
/doNotUseLabels
/z3opt:smt.relevancy=0
/doModSetAnalysis
/proverOpt:OPTIMIZE_FOR_BV=true
/dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/stencil2d/StencilKernel/kernel.bpl.ice2.bpl
--------------------
Parsing /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/stencil2d/StencilKernel/kernel.bpl.ice2.bpl
Coalescing blocks...
[TRACE] Using prover: /dev/shm/gv/z3/bin/z3
#parameters: 33
Generating VC of $StencilKernel
Verifying $StencilKernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool) : bool
{
  false
}
Added: my_inv:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1: positive
Prover Time taken = 0.067404
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/stencil2d/StencilKernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $StencilKernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool) : bool
{
  b0000 && b0001 && b0002 && b0003 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032
}
Prover Time taken = 0.228089
Added Horn clause: 0 => 1
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/stencil2d/StencilKernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $StencilKernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0006 && b0007 && b0008 && b0009 && b0010 && b0011 && b0012 && b0013 && b0014 && b0015 && b0016 && b0017 && b0018 && b0019 && b0020 && b0021 && b0022 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0029 && b0030 && b0031 && b0032
}
Prover Time taken = 1.470709
Added Horn clause: 1 && 0 && 0 => 2
Added Horn clause: 1 && 0 && 0 => 3
Added Horn clause: 1 && 0 && 0 => 4
Added Horn clause: 1 && 0 && 0 && 0 && 0 && 0 => 5
Added Horn clause: 1 && 0 && 0 && 0 && 0 => 6
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/stencil2d/StencilKernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $StencilKernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0012 && b0014 && b0015 && b0016 && b0019 && b0021 && b0023 && b0024 && b0025 && b0026 && b0027 && b0028 && b0030 && b0031 && b0032
}
Prover Time taken = 25.68891
Added Horn clause: 0 => 7
Added Horn clause: 1 => 8
Added Horn clause: 1 && 0 && 0 && 0 && 0 && 5 => 9
Calling sorcar -a horndini /dev/shm/gv/benchmarks/BenchmarksCompiled/ahorndini/shoc/stencil2d/StencilKernel/kernel.bpl.ice2.bpl
Total learner time was 00:00:00
Verifying $StencilKernel: 
function {:existential true} {:inline} my_inv(b0000: bool, b0001: bool, b0002: bool, b0003: bool, b0004: bool, b0005: bool, b0006: bool, b0007: bool, b0008: bool, b0009: bool, b0010: bool, b0011: bool, b0012: bool, b0013: bool, b0014: bool, b0015: bool, b0016: bool, b0017: bool, b0018: bool, b0019: bool, b0020: bool, b0021: bool, b0022: bool, b0023: bool, b0024: bool, b0025: bool, b0026: bool, b0027: bool, b0028: bool, b0029: bool, b0030: bool, b0031: bool, b0032: bool) : bool
{
  b0000 && b0002 && b0004 && b0005 && b0007 && b0009 && b0010 && b0012 && b0014 && b0015 && b0016 && b0019 && b0021 && b0023 && b0024 && b0025 && b0028 && b0030 && b0031
}
Prover Time taken = 139.109449
Prover time = 166.56
Number of prover queries = 5
Learner time = 0.00
Number of learner queries = 4
Total time: 166.64
Number of positive examples:1
Number of negative examples:0
Number of Horn clauses:9
verified

Boogie program verifier finished with 1 verified, 0 errors
0.79user 0.15system 2:47.66elapsed 0%CPU (0avgtext+0avgdata 58960maxresident)k
0inputs+0outputs (0major+15645minor)pagefaults 0swaps
FILE:shoc/stencil2d/StencilKernel/kernel.bpl.ice2.bpl
