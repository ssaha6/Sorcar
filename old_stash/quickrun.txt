 mono ./Boogie.exe  /nologo /env:2 /typeEncoding:m /mv:- /enhancedErrorMessages:1 /useArrayTheory /prover:SMTLib /noinfer /contractInfer /trace /z3exe:/mnt/d/Docker/z3/bin/z3 /mlHoudini:sorcar /learnerOptions:"-a sorcar -f -t -r" /mnt/d/Docker/benchmarks/BenchmarksDryad/asorcarftr/Vcc3Prelude.array.bpl /mnt/d/Docker/benchmarks/BenchmarksDryad/asorcarftr/phase3/find_last_sorted.bpl.ice2.bpl.mod.bpl
 
 
  mono ./Boogie.exe /nologo /env:2 /typeEncoding:m /mv:- /z3opt:pp.decimal=true /enhancedErrorMessages:1 /useArrayTheory /prover:SMTLib /noinfer /contractInfer /trace /z3exe:/mnt/d/Docker/z3/bin/z3 /mlHoudini:sorcar /learnerOptions:"-a sorcar -f -t -r" /mnt/d/Docker/benchmarks/BenchmarksDryad/Vcc3Prelude.array.bpl  /mnt/d/Docker/benchmarks/BenchmarksDryad/phase3/g_slist_find.bpl.ice2.bpl   
  
  

/z3opt:<arg>  specify additional Z3 options                                                                                                                                              
  

./done/fo/recsynth/encodings/tuk/tuk.smt2                                                            

  
Parameter setting:                                                                                                                                                                         
Global and module parameters can be set in the command line.                                                                                                                               
  param_name=value              for setting global parameters.                                                                                                                             
  module_name.param_name=value  for setting module parameters.                                                                                                                             
Use 'z3 -p' for the complete list of global and module parameters.                                                                                                                         
                                                                     
                                                                     
  
(set-option :auto_config false)
(set-option :smt.phase_selection 5)
(set-option :smt.random_seed 456)


z3.set_param('auto_config', False,
         'smt.phase_selection', 5,
         'smt.arith.random_initial_value', True,
         'smt.random_seed', np.random.randint(0, 655350),
         'sat.phase', 'random',
         'sat.random_seed', np.random.randint(0, 655350))
         
         
         
(check-sat-using (par-or (! smt :random-seed 10) (! smt :random-seed 20))) 


(set-option :smt.arith.random_initial_value true)
(declare-const x Int)
(declare-const y Int)
(assert (> (+ x y) 0))
(check-sat-using (using-params qflra :random_seed 1))
(get-model)
(check-sat-using (using-params qflra :random_seed 2))
(get-model)
(check-sat-using (using-params qflra :random_seed 3))
(get-model)



(set-option :smt.arith.random_initial_value true)
(declare-const x Int)
(declare-const y Int)
(assert (> (+ x y) 0))
(check-sat-using (using-params qflra :random_seed 1))
(get-model)
(check-sat-using (using-params qflra :random_seed 2))
(get-model)
(check-sat-using (using-params qflra :random_seed 3))
(get-model)





[module] sat, description: propositional SAT solver                                                                                                                                              
    phase (symbol) phase selection strategy: always_false, always_true, caching, random (default: caching)                                                                                 
    random_freq (double) frequency of random case splits (default: 0.01)                                                                                                                   
    random_seed (unsigned int) random seed (default: 0)        
    
[module] nlsat, description: nonlinear solver                                                                                                                            
    randomize (bool) randomize selection of a witness in nlsat. (default: true)                                                                                                            
    seed (unsigned int) random seed. (default: 0)                                                                                                                                          
    shuffle_vars (bool) use a random variable order. (default: false)                                                                                                                      
    
[module] fp, description: fixedpoint parameters
    spacer.order_children (unsigned int) SPACER: order of enqueuing children in non-linear rules : 0 (original), 1 (reverse), 2 (random) (default: 0)                                      
    spacer.random_seed (unsigned int) Random seed to be used by SMT solver (default: 0)                                                                                                    
    
[module] smt, description: smt solver based on lazy smt
    arith.random_initial_value (bool) use random initial values in the simplex-based procedure for linear arithmetic (default: false)                                                      
    phase_selection (unsigned int) phase selection heuristic: 0 - always false, 1 - always true, 2 - phase caching, 3 - phase caching conservative, 4 - phase caching conservative 2, 5 - random, 6 - number of occurrences (default: 3)                                                                                                                                              
    random_seed (unsigned int) random seed for the smt solver (default: 0)                                                                                                                 
    
[module] sls, description: Experimental Stochastic Local Search Solver (for QFBV only).
    random_offset (bool) use random offset for candidate evaluation (default: true)                                                                                                        
    random_seed (unsigned int) random seed (default: 0)                                                                                                                                    
    restart_init (bool) initialize to 0 or random value (= 1) after restart (default: false)                                                                                               
    walksat_repick (bool) repick assertion if randomizing in local minima (default: true)                                                                                                  
    walksat_ucb (bool) use bandit heuristic for walksat assertion selection (instead of random) (default: true)                                                                            
    wp (unsigned int) random walk with probability wp / 1024 (default: 100)                
    
    
    
    
    
    