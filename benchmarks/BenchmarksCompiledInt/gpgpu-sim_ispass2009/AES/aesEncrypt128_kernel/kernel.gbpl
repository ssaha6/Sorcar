type _SIZE_T_TYPE = bv32;

procedure _ATOMIC_OP32(x : [int]int, y : int) returns (z : int, A : [int]int);
procedure _ATOMIC_OP8(x : [int]int, y : int) returns (z : int, A : [int]int);
var {:source_name "result"} {:global} $$result : [int]int;
axiom {:array_info "$$result"} {:global} {:elem_width 32} {:source_name "result"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$result : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$result : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$result : bool;

var {:source_name "inData"} {:global} $$inData : [int]int;
axiom {:array_info "$$inData"} {:global} {:elem_width 32} {:source_name "inData"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$inData : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$inData : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$inData : bool;

var {:source_name ""} $$0 : [int]int;
axiom {:array_info "$$0"} {:elem_width 32} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name ""} $$1 : [int]int;
axiom {:array_info "$$1"} {:elem_width 32} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name ""} $$2 : [int]int;
axiom {:array_info "$$2"} {:elem_width 32} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name ""} $$3 : [int]int;
axiom {:array_info "$$3"} {:elem_width 32} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name ""} $$4 : [int]int;
axiom {:array_info "$$4"} {:elem_width 32} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name ""} $$5 : [int]int;
axiom {:array_info "$$5"} {:elem_width 32} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name ""} $$6 : [int]int;
axiom {:array_info "$$6"} {:elem_width 32} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name ""} $$7 : [int]int;
axiom {:array_info "$$7"} {:elem_width 32} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name ""} $$8 : [int]int;
axiom {:array_info "$$8"} {:elem_width 32} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name ""} $$9 : [int]int;
axiom {:array_info "$$9"} {:elem_width 32} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name ""} $$10 : [int]int;
axiom {:array_info "$$10"} {:elem_width 32} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name "stageBlock1"} {:group_shared} $$_ZZ13aesEncrypt128PjS_iE11stageBlock1 : [int]int;
axiom {:array_info "$$_ZZ13aesEncrypt128PjS_iE11stageBlock1"} {:group_shared} {:elem_width 8} {:source_name "stageBlock1"} {:source_elem_width 32} {:source_dimensions "256"} true;
var {:race_checking} {:group_shared} {:elem_width 8} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE11stageBlock1 : bool;
var {:race_checking} {:group_shared} {:elem_width 8} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE11stageBlock1 : bool;
var {:race_checking} {:group_shared} {:elem_width 8} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE11stageBlock1 : bool;

var {:source_name "tBox0Block"} {:group_shared} $$_ZZ13aesEncrypt128PjS_iE10tBox0Block : [int]int;
axiom {:array_info "$$_ZZ13aesEncrypt128PjS_iE10tBox0Block"} {:group_shared} {:elem_width 32} {:source_name "tBox0Block"} {:source_elem_width 32} {:source_dimensions "256"} true;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE10tBox0Block : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE10tBox0Block : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE10tBox0Block : bool;

var {:source_name "tBox1Block"} {:group_shared} $$_ZZ13aesEncrypt128PjS_iE10tBox1Block : [int]int;
axiom {:array_info "$$_ZZ13aesEncrypt128PjS_iE10tBox1Block"} {:group_shared} {:elem_width 8} {:source_name "tBox1Block"} {:source_elem_width 32} {:source_dimensions "256"} true;
var {:race_checking} {:group_shared} {:elem_width 8} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE10tBox1Block : bool;
var {:race_checking} {:group_shared} {:elem_width 8} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE10tBox1Block : bool;
var {:race_checking} {:group_shared} {:elem_width 8} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE10tBox1Block : bool;

var {:source_name "tBox2Block"} {:group_shared} $$_ZZ13aesEncrypt128PjS_iE10tBox2Block : [int]int;
axiom {:array_info "$$_ZZ13aesEncrypt128PjS_iE10tBox2Block"} {:group_shared} {:elem_width 32} {:source_name "tBox2Block"} {:source_elem_width 32} {:source_dimensions "256"} true;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE10tBox2Block : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE10tBox2Block : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE10tBox2Block : bool;

var {:source_name "tBox3Block"} {:group_shared} $$_ZZ13aesEncrypt128PjS_iE10tBox3Block : [int]int;
axiom {:array_info "$$_ZZ13aesEncrypt128PjS_iE10tBox3Block"} {:group_shared} {:elem_width 32} {:source_name "tBox3Block"} {:source_elem_width 32} {:source_dimensions "256"} true;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE10tBox3Block : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE10tBox3Block : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE10tBox3Block : bool;

var {:source_name "TBox0"} {:constant} $$TBox0 : [int]int;
axiom {:array_info "$$TBox0"} {:constant} {:elem_width 32} {:source_name "TBox0"} {:source_elem_width 32} {:source_dimensions "256"} true;

var {:source_name "TBox1"} {:constant} $$TBox1 : [int]int;
axiom {:array_info "$$TBox1"} {:constant} {:elem_width 32} {:source_name "TBox1"} {:source_elem_width 32} {:source_dimensions "256"} true;

var {:source_name "TBox2"} {:constant} $$TBox2 : [int]int;
axiom {:array_info "$$TBox2"} {:constant} {:elem_width 32} {:source_name "TBox2"} {:source_elem_width 32} {:source_dimensions "256"} true;

var {:source_name "TBox3"} {:constant} $$TBox3 : [int]int;
axiom {:array_info "$$TBox3"} {:constant} {:elem_width 32} {:source_name "TBox3"} {:source_elem_width 32} {:source_dimensions "256"} true;

var {:source_name "texEKey128"} {:global} $$texEKey128 : [int]int;
axiom {:array_info "$$texEKey128"} {:global} {:elem_width 32} {:source_name "texEKey128"} {:source_elem_width 96} {:source_dimensions "1"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 96} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$texEKey128 : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 96} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$texEKey128 : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 96} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$texEKey128 : bool;

var {:source_name "stageBlock2"} {:group_shared} $$_ZZ13aesEncrypt128PjS_iE11stageBlock2 : [int]int;
axiom {:array_info "$$_ZZ13aesEncrypt128PjS_iE11stageBlock2"} {:group_shared} {:elem_width 8} {:source_name "stageBlock2"} {:source_elem_width 32} {:source_dimensions "256"} true;
var {:race_checking} {:group_shared} {:elem_width 8} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE11stageBlock2 : bool;
var {:race_checking} {:group_shared} {:elem_width 8} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE11stageBlock2 : bool;
var {:race_checking} {:group_shared} {:elem_width 8} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE11stageBlock2 : bool;

var {:source_name "posIdx_E"} {:constant} $$posIdx_E : [int]int;
axiom {:array_info "$$posIdx_E"} {:constant} {:elem_width 8} {:source_name "posIdx_E"} {:source_elem_width 8} {:source_dimensions "32"} true;

const _WATCHED_OFFSET : int;
const {:group_id_x} group_id_x : int;
const {:group_size_x} group_size_x : int;
const {:group_size_y} group_size_y : int;
const {:group_size_z} group_size_z : int;
const {:local_id_x} local_id_x : int;
const {:num_groups_x} num_groups_x : int;
const {:num_groups_y} num_groups_y : int;
const {:num_groups_z} num_groups_z : int;
function  BV32_LSHR(int, int) : int;
function BV_CONCAT(int, int) : int;
function BV_EXTRACT(int, int, int) : int;
function {:inline true} BV32_ADD(x : int, y : int) : int {
  x + y
}
function {:inline true} BV32_AND(x : int, y : int) : int {
  if x == y then x else (if x == 0 || y == 0 then 0 else BV32_AND_UF(x, y))
}
function BV32_AND_UF(int, int) : int;
function {:inline true} BV32_MUL(x : int, y : int) : int {
  x * y
}
function {:inline true} BV32_UDIV(x : int, y : int) : int {
  x div y
}
function {:inline true} BV32_ULT(x : int, y : int) : bool {
  x < y
}
function {:inline true} BV32_UREM(x : int, y : int) : int {
  x mod y
}
function {:inline true} BV32_XOR(x : int, y : int) : int {
  if x == y then 0 else (if x == 0 then y else (if y == 0 then x else BV32_XOR_UF(x, y)))
}
function BV32_XOR_UF(int, int) : int;
function {:inline true} BV8_ZEXT32(x : int) : int {
  x
}
procedure {:source_name "aesEncrypt128"} {:kernel} $_Z13aesEncrypt128PjS_i($inputSize:int)
{
  var $cnt.0:int;
  var v26:int;
  var v25:int;
  var v1:int;
  var v27:int;
  var v80:int;
  var v81:int;
  var v82:int;
  var v83:int;
  var v84:int;
  var v85:int;
  var v50:int;
  var v72:int;
  var v73:int;
  var v51:int;
  var v52:int;
  var v53:int;
  var v54:int;
  var v55:int;
  var v56:int;
  var v71:int;
  var v0:int;
  var v66:int;
  var v67:int;
  var v234:int;
  var v235:int;
  var v236:int;
  var v237:int;
  var v238:int;
  var v239:int;
  var v48:int;
  var v28:int;
  var v22:int;
  var v23:int;
  var v4:int;
  var v21:int;
  var v74:int;
  var v75:int;
  var v76:int;
  var v77:int;
  var v78:int;
  var v79:int;
  var v24:int;
  var v138:int;
  var v139:int;
  var v140:int;
  var v141:int;
  var v134:int;
  var v135:int;
  var v130:int;
  var v131:int;
  var v132:int;
  var v133:int;
  var v119:int;
  var v120:int;
  var v121:int;
  var v122:int;
  var v123:int;
  var v124:int;
  var v65:int;
  var v228:int;
  var v229:int;
  var v144:int;
  var v145:int;
  var v146:int;
  var v147:int;
  var v148:int;
  var v149:int;
  var v150:int;
  var v151:int;
  var v152:int;
  var v153:int;
  var v154:int;
  var v155:int;
  var v156:int;
  var v61:int;
  var v62:int;
  var v63:int;
  var v64:int;
  var v5:int;
  var v125:int;
  var v126:int;
  var v127:int;
  var v128:int;
  var v129:int;
  var v38:int;
  var v39:int;
  var v40:int;
  var v69:int;
  var v70:int;
  var v157:int;
  var v158:int;
  var v159:int;
  var v160:int;
  var v161:int;
  var v162:int;
  var v6:int;
  var v20:int;
  var v142:int;
  var v143:int;
  var v41:int;
  var v42:int;
  var v89:int;
  var v90:int;
  var v163:int;
  var v164:int;
  var v167:int;
  var v168:int;
  var v169:int;
  var v170:int;
  var v171:int;
  var v172:int;
  var v173:int;
  var v174:int;
  var v49:int;
  var v68:int;
  var v7:int;
  var v2:int;
  var v109:int;
  var v110:int;
  var v111:int;
  var v34:int;
  var v35:int;
  var v36:int;
  var v37:int;
  var v103:int;
  var v104:int;
  var v105:int;
  var v106:int;
  var v107:int;
  var v108:int;
  var v175:int;
  var v176:int;
  var v177:int;
  var v178:int;
  var v179:int;
  var v180:int;
  var v181:int;
  var v182:int;
  var v183:int;
  var v112:int;
  var v113:int;
  var v91:int;
  var v92:int;
  var v184:int;
  var v185:int;
  var v190:int;
  var v186:int;
  var v187:int;
  var v188:int;
  var v189:int;
  var v8:int;
  var v9:int;
  var v10:int;
  var v11:int;
  var v12:int;
  var v114:int;
  var v43:int;
  var v44:int;
  var v93:int;
  var v94:int;
  var v191:int;
  var v192:int;
  var v193:int;
  var v194:int;
  var v195:int;
  var v196:int;
  var v197:int;
  var v198:int;
  var v199:int;
  var v200:int;
  var v201:int;
  var v202:int;
  var v203:int;
  var v204:int;
  var v13:int;
  var v14:int;
  var v115:int;
  var v116:int;
  var v45:int;
  var v95:int;
  var v96:int;
  var v240:int;
  var v241:int;
  var v242:int;
  var v205:int;
  var v206:int;
  var v15:int;
  var v16:int;
  var v17:int;
  var v18:int;
  var v19:int;
  var v136:int;
  var v137:int;
  var v46:int;
  var v97:int;
  var v98:int;
  var v99:int;
  var v100:int;
  var v101:int;
  var v102:int;
  var v207:int;
  var v208:int;
  var v215:int;
  var v209:int;
  var v210:int;
  var v211:int;
  var v212:int;
  var v213:int;
  var v214:int;
  var v3:bool;
  var v47:int;
  var v165:int;
  var v166:int;
  var v216:int;
  var v217:int;
  var v218:int;
  var v219:int;
  var v220:int;
  var v221:int;
  var v222:int;
  var v223:int;
  var v224:int;
  var v225:int;
  var v226:int;
  var v227:int;
  var v117:int;
  var v118:int;
  var v57:int;
  var v58:int;
  var v59:int;
  var v60:int;
  var v232:int;
  var v233:int;
  var v230:int;
  var v231:int;
  var v86:int;
  var v87:int;
  var v88:int;
  var v29:int;
  var v30:int;
  var v31:int;
  var v32:int;
  var v33:int;
  var v243:int;
  var v244:int;
  var v245:int;
  var v246:int;
  var v247:int;
  var v248:int;
  var v249:int;
$0:
  assert {:block_sourceloc} {:sourceloc_num 0} true;
  v0 := BV32_UREM(local_id_x, 4);
  v1 := BV32_MUL(BV32_UDIV(local_id_x, 4), 4);
  assert {:sourceloc} {:sourceloc_num 1} true;
  v2 := $$inData[BV32_ADD(BV32_MUL(256, group_id_x), local_id_x)];
  assert {:sourceloc} {:sourceloc_num 2} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_MUL(local_id_x, 4)] := BV_EXTRACT(v2, 8, 0);
  assert {:sourceloc} {:sourceloc_num 3} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4), 1)] := BV_EXTRACT(v2, 16, 8);
  assert {:sourceloc} {:sourceloc_num 4} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4), 2)] := BV_EXTRACT(v2, 24, 16);
  assert {:sourceloc} {:sourceloc_num 5} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4), 3)] := BV_EXTRACT(v2, 32, 24);
  $cnt.0 := 0;
  goto $1;
$1:
  assert {:block_sourceloc} {:sourceloc_num 6} true;
  assert {:originated_from_invariant} {:sourceloc_num 7} (if (_WRITE_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE10tBox0Block ==> BV32_UDIV(BV32_MUL(4, _WATCHED_OFFSET), 4) == local_id_x) then 1 else 0) != 0;
  assert {:originated_from_invariant} {:sourceloc_num 8} (if (_WRITE_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE10tBox1Block ==> BV32_UDIV(_WATCHED_OFFSET, 4) == local_id_x) then 1 else 0) != 0;
  assert {:originated_from_invariant} {:sourceloc_num 9} (if (_WRITE_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE10tBox2Block ==> BV32_UDIV(BV32_MUL(4, _WATCHED_OFFSET), 4) == local_id_x) then 1 else 0) != 0;
  assert {:originated_from_invariant} {:sourceloc_num 10} (if (_WRITE_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE10tBox3Block ==> BV32_UDIV(BV32_MUL(4, _WATCHED_OFFSET), 4) == local_id_x) then 1 else 0) != 0;
  v3 := BV32_ULT($cnt.0, 1);
  goto $truebb, $falsebb;
$2:
  assert {:block_sourceloc} {:sourceloc_num 11} true;
  assert {:sourceloc} {:sourceloc_num 12} true;
  v4 := $$TBox0[BV32_ADD(local_id_x, $cnt.0)];
  assert {:sourceloc} {:sourceloc_num 13} true;
  $$_ZZ13aesEncrypt128PjS_iE10tBox0Block[BV32_ADD(local_id_x, $cnt.0)] := v4;
  assert {:sourceloc} {:sourceloc_num 14} true;
  v5 := $$TBox1[BV32_ADD(local_id_x, $cnt.0)];
  assert {:sourceloc} {:sourceloc_num 15} true;
  $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_MUL(BV32_ADD(local_id_x, $cnt.0), 4)] := BV_EXTRACT(v5, 8, 0);
  assert {:sourceloc} {:sourceloc_num 16} true;
  $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV32_ADD(local_id_x, $cnt.0), 4), 1)] := BV_EXTRACT(v5, 16, 8);
  assert {:sourceloc} {:sourceloc_num 17} true;
  $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV32_ADD(local_id_x, $cnt.0), 4), 2)] := BV_EXTRACT(v5, 24, 16);
  assert {:sourceloc} {:sourceloc_num 18} true;
  $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV32_ADD(local_id_x, $cnt.0), 4), 3)] := BV_EXTRACT(v5, 32, 24);
  assert {:sourceloc} {:sourceloc_num 19} true;
  v6 := $$TBox2[BV32_ADD(local_id_x, $cnt.0)];
  assert {:sourceloc} {:sourceloc_num 20} true;
  $$_ZZ13aesEncrypt128PjS_iE10tBox2Block[BV32_ADD(local_id_x, $cnt.0)] := v6;
  assert {:sourceloc} {:sourceloc_num 21} true;
  v7 := $$TBox3[BV32_ADD(local_id_x, $cnt.0)];
  assert {:sourceloc} {:sourceloc_num 22} true;
  $$_ZZ13aesEncrypt128PjS_iE10tBox3Block[BV32_ADD(local_id_x, $cnt.0)] := v7;
  goto $3;
$3:
  assert {:block_sourceloc} {:sourceloc_num 23} true;
  $cnt.0 := BV32_ADD($cnt.0, 1);
  goto $1;
$4:
  assert {:block_sourceloc} {:sourceloc_num 24} true;
  call {:sourceloc_num 25} $bugle_barrier(-1, -1);
  assert {:sourceloc} {:sourceloc_num 26} true;
  v8 := $$texEKey128[0];
  assert {:sourceloc} {:sourceloc_num 27} true;
  $$0[0] := v8;
  assert {:sourceloc} {:sourceloc_num 28} true;
  v9 := $$texEKey128[1];
  assert {:sourceloc} {:sourceloc_num 29} true;
  $$0[1] := v9;
  assert {:sourceloc} {:sourceloc_num 30} true;
  v10 := $$texEKey128[2];
  assert {:sourceloc} {:sourceloc_num 31} true;
  $$0[2] := v10;
  assert {:sourceloc} {:sourceloc_num 32} true;
  v11 := $$0[0];
  assert {:sourceloc} {:sourceloc_num 33} true;
  v12 := $$0[1];
  assert {:sourceloc} {:sourceloc_num 34} true;
  v13 := $$0[2];
  call {:sourceloc_num 35}   v14 := $_Z10tex1DfetchIjET_7textureIS0_Li1EL19cudaTextureReadMode0EEi(v11, v12, v13, v0);
  assert {:sourceloc} {:sourceloc_num 36} true;
  v15 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_MUL(local_id_x, 4)];
  assert {:sourceloc} {:sourceloc_num 37} true;
  v16 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4), 1)];
  assert {:sourceloc} {:sourceloc_num 38} true;
  v17 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4), 2)];
  assert {:sourceloc} {:sourceloc_num 39} true;
  v18 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4), 3)];
  v19 := BV32_XOR(BV_CONCAT(BV_CONCAT(BV_CONCAT(v18, v17), v16), v15), v14);
  assert {:sourceloc} {:sourceloc_num 40} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_MUL(local_id_x, 4)] := BV_EXTRACT(v19, 8, 0);
  assert {:sourceloc} {:sourceloc_num 41} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4), 1)] := BV_EXTRACT(v19, 16, 8);
  assert {:sourceloc} {:sourceloc_num 42} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4), 2)] := BV_EXTRACT(v19, 24, 16);
  assert {:sourceloc} {:sourceloc_num 43} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4), 3)] := BV_EXTRACT(v19, 32, 24);
  call {:sourceloc_num 44} $bugle_barrier(-1, -1);
  assert {:sourceloc} {:sourceloc_num 45} true;
  v20 := $$posIdx_E[BV32_MUL(v0, 4)];
  assert {:sourceloc} {:sourceloc_num 46} true;
  v21 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_MUL(BV32_ADD(BV8_ZEXT32(v20), v1), 4)];
  assert {:sourceloc} {:sourceloc_num 47} true;
  v22 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4), 1)];
  assert {:sourceloc} {:sourceloc_num 48} true;
  v23 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v22), v1), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 49} true;
  v24 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4), 2)];
  assert {:sourceloc} {:sourceloc_num 50} true;
  v25 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v24), v1), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 51} true;
  v26 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4), 3)];
  assert {:sourceloc} {:sourceloc_num 52} true;
  v27 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v26), v1), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 53} true;
  v28 := $$_ZZ13aesEncrypt128PjS_iE10tBox0Block[BV8_ZEXT32(v21)];
  assert {:sourceloc} {:sourceloc_num 54} true;
  v29 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_MUL(BV8_ZEXT32(v23), 4)];
  assert {:sourceloc} {:sourceloc_num 55} true;
  v30 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v23), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 56} true;
  v31 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v23), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 57} true;
  v32 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v23), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 58} true;
  v33 := $$_ZZ13aesEncrypt128PjS_iE10tBox2Block[BV8_ZEXT32(v25)];
  assert {:sourceloc} {:sourceloc_num 59} true;
  v34 := $$_ZZ13aesEncrypt128PjS_iE10tBox3Block[BV8_ZEXT32(v27)];
  assert {:sourceloc} {:sourceloc_num 60} true;
  v35 := $$texEKey128[0];
  assert {:sourceloc} {:sourceloc_num 61} true;
  $$1[0] := v35;
  assert {:sourceloc} {:sourceloc_num 62} true;
  v36 := $$texEKey128[1];
  assert {:sourceloc} {:sourceloc_num 63} true;
  $$1[1] := v36;
  assert {:sourceloc} {:sourceloc_num 64} true;
  v37 := $$texEKey128[2];
  assert {:sourceloc} {:sourceloc_num 65} true;
  $$1[2] := v37;
  assert {:sourceloc} {:sourceloc_num 66} true;
  v38 := $$1[0];
  assert {:sourceloc} {:sourceloc_num 67} true;
  v39 := $$1[1];
  assert {:sourceloc} {:sourceloc_num 68} true;
  v40 := $$1[2];
  call {:sourceloc_num 69}   v41 := $_Z10tex1DfetchIjET_7textureIS0_Li1EL19cudaTextureReadMode0EEi(v38, v39, v40, BV32_ADD(v0, 4));
  v42 := BV32_XOR(BV32_XOR(BV32_XOR(BV32_XOR(v28, BV_CONCAT(BV_CONCAT(BV_CONCAT(v32, v31), v30), v29)), v33), v34), v41);
  assert {:sourceloc} {:sourceloc_num 70} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_MUL(local_id_x, 4)] := BV_EXTRACT(v42, 8, 0);
  assert {:sourceloc} {:sourceloc_num 71} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4), 1)] := BV_EXTRACT(v42, 16, 8);
  assert {:sourceloc} {:sourceloc_num 72} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4), 2)] := BV_EXTRACT(v42, 24, 16);
  assert {:sourceloc} {:sourceloc_num 73} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4), 3)] := BV_EXTRACT(v42, 32, 24);
  call {:sourceloc_num 74} $bugle_barrier(-1, -1);
  assert {:sourceloc} {:sourceloc_num 75} true;
  v43 := $$posIdx_E[BV32_MUL(v0, 4)];
  assert {:sourceloc} {:sourceloc_num 76} true;
  v44 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_MUL(BV32_ADD(BV8_ZEXT32(v43), v1), 4)];
  assert {:sourceloc} {:sourceloc_num 77} true;
  v45 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4), 1)];
  assert {:sourceloc} {:sourceloc_num 78} true;
  v46 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v45), v1), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 79} true;
  v47 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4), 2)];
  assert {:sourceloc} {:sourceloc_num 80} true;
  v48 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v47), v1), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 81} true;
  v49 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4), 3)];
  assert {:sourceloc} {:sourceloc_num 82} true;
  v50 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v49), v1), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 83} true;
  v51 := $$_ZZ13aesEncrypt128PjS_iE10tBox0Block[BV8_ZEXT32(v44)];
  assert {:sourceloc} {:sourceloc_num 84} true;
  v52 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_MUL(BV8_ZEXT32(v46), 4)];
  assert {:sourceloc} {:sourceloc_num 85} true;
  v53 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v46), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 86} true;
  v54 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v46), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 87} true;
  v55 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v46), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 88} true;
  v56 := $$_ZZ13aesEncrypt128PjS_iE10tBox2Block[BV8_ZEXT32(v48)];
  assert {:sourceloc} {:sourceloc_num 89} true;
  v57 := $$_ZZ13aesEncrypt128PjS_iE10tBox3Block[BV8_ZEXT32(v50)];
  assert {:sourceloc} {:sourceloc_num 90} true;
  v58 := $$texEKey128[0];
  assert {:sourceloc} {:sourceloc_num 91} true;
  $$2[0] := v58;
  assert {:sourceloc} {:sourceloc_num 92} true;
  v59 := $$texEKey128[1];
  assert {:sourceloc} {:sourceloc_num 93} true;
  $$2[1] := v59;
  assert {:sourceloc} {:sourceloc_num 94} true;
  v60 := $$texEKey128[2];
  assert {:sourceloc} {:sourceloc_num 95} true;
  $$2[2] := v60;
  assert {:sourceloc} {:sourceloc_num 96} true;
  v61 := $$2[0];
  assert {:sourceloc} {:sourceloc_num 97} true;
  v62 := $$2[1];
  assert {:sourceloc} {:sourceloc_num 98} true;
  v63 := $$2[2];
  call {:sourceloc_num 99}   v64 := $_Z10tex1DfetchIjET_7textureIS0_Li1EL19cudaTextureReadMode0EEi(v61, v62, v63, BV32_ADD(v0, 8));
  v65 := BV32_XOR(BV32_XOR(BV32_XOR(BV32_XOR(v51, BV_CONCAT(BV_CONCAT(BV_CONCAT(v55, v54), v53), v52)), v56), v57), v64);
  assert {:sourceloc} {:sourceloc_num 100} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_MUL(local_id_x, 4)] := BV_EXTRACT(v65, 8, 0);
  assert {:sourceloc} {:sourceloc_num 101} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4), 1)] := BV_EXTRACT(v65, 16, 8);
  assert {:sourceloc} {:sourceloc_num 102} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4), 2)] := BV_EXTRACT(v65, 24, 16);
  assert {:sourceloc} {:sourceloc_num 103} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4), 3)] := BV_EXTRACT(v65, 32, 24);
  call {:sourceloc_num 104} $bugle_barrier(-1, -1);
  assert {:sourceloc} {:sourceloc_num 105} true;
  v66 := $$posIdx_E[BV32_MUL(v0, 4)];
  assert {:sourceloc} {:sourceloc_num 106} true;
  v67 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_MUL(BV32_ADD(BV8_ZEXT32(v66), v1), 4)];
  assert {:sourceloc} {:sourceloc_num 107} true;
  v68 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4), 1)];
  assert {:sourceloc} {:sourceloc_num 108} true;
  v69 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v68), v1), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 109} true;
  v70 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4), 2)];
  assert {:sourceloc} {:sourceloc_num 110} true;
  v71 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v70), v1), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 111} true;
  v72 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4), 3)];
  assert {:sourceloc} {:sourceloc_num 112} true;
  v73 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v72), v1), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 113} true;
  v74 := $$_ZZ13aesEncrypt128PjS_iE10tBox0Block[BV8_ZEXT32(v67)];
  assert {:sourceloc} {:sourceloc_num 114} true;
  v75 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_MUL(BV8_ZEXT32(v69), 4)];
  assert {:sourceloc} {:sourceloc_num 115} true;
  v76 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v69), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 116} true;
  v77 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v69), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 117} true;
  v78 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v69), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 118} true;
  v79 := $$_ZZ13aesEncrypt128PjS_iE10tBox2Block[BV8_ZEXT32(v71)];
  assert {:sourceloc} {:sourceloc_num 119} true;
  v80 := $$_ZZ13aesEncrypt128PjS_iE10tBox3Block[BV8_ZEXT32(v73)];
  assert {:sourceloc} {:sourceloc_num 120} true;
  v81 := $$texEKey128[0];
  assert {:sourceloc} {:sourceloc_num 121} true;
  $$3[0] := v81;
  assert {:sourceloc} {:sourceloc_num 122} true;
  v82 := $$texEKey128[1];
  assert {:sourceloc} {:sourceloc_num 123} true;
  $$3[1] := v82;
  assert {:sourceloc} {:sourceloc_num 124} true;
  v83 := $$texEKey128[2];
  assert {:sourceloc} {:sourceloc_num 125} true;
  $$3[2] := v83;
  assert {:sourceloc} {:sourceloc_num 126} true;
  v84 := $$3[0];
  assert {:sourceloc} {:sourceloc_num 127} true;
  v85 := $$3[1];
  assert {:sourceloc} {:sourceloc_num 128} true;
  v86 := $$3[2];
  call {:sourceloc_num 129}   v87 := $_Z10tex1DfetchIjET_7textureIS0_Li1EL19cudaTextureReadMode0EEi(v84, v85, v86, BV32_ADD(v0, 12));
  v88 := BV32_XOR(BV32_XOR(BV32_XOR(BV32_XOR(v74, BV_CONCAT(BV_CONCAT(BV_CONCAT(v78, v77), v76), v75)), v79), v80), v87);
  assert {:sourceloc} {:sourceloc_num 130} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_MUL(local_id_x, 4)] := BV_EXTRACT(v88, 8, 0);
  assert {:sourceloc} {:sourceloc_num 131} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4), 1)] := BV_EXTRACT(v88, 16, 8);
  assert {:sourceloc} {:sourceloc_num 132} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4), 2)] := BV_EXTRACT(v88, 24, 16);
  assert {:sourceloc} {:sourceloc_num 133} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4), 3)] := BV_EXTRACT(v88, 32, 24);
  call {:sourceloc_num 134} $bugle_barrier(-1, -1);
  assert {:sourceloc} {:sourceloc_num 135} true;
  v89 := $$posIdx_E[BV32_MUL(v0, 4)];
  assert {:sourceloc} {:sourceloc_num 136} true;
  v90 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_MUL(BV32_ADD(BV8_ZEXT32(v89), v1), 4)];
  assert {:sourceloc} {:sourceloc_num 137} true;
  v91 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4), 1)];
  assert {:sourceloc} {:sourceloc_num 138} true;
  v92 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v91), v1), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 139} true;
  v93 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4), 2)];
  assert {:sourceloc} {:sourceloc_num 140} true;
  v94 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v93), v1), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 141} true;
  v95 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4), 3)];
  assert {:sourceloc} {:sourceloc_num 142} true;
  v96 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v95), v1), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 143} true;
  v97 := $$_ZZ13aesEncrypt128PjS_iE10tBox0Block[BV8_ZEXT32(v90)];
  assert {:sourceloc} {:sourceloc_num 144} true;
  v98 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_MUL(BV8_ZEXT32(v92), 4)];
  assert {:sourceloc} {:sourceloc_num 145} true;
  v99 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v92), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 146} true;
  v100 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v92), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 147} true;
  v101 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v92), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 148} true;
  v102 := $$_ZZ13aesEncrypt128PjS_iE10tBox2Block[BV8_ZEXT32(v94)];
  assert {:sourceloc} {:sourceloc_num 149} true;
  v103 := $$_ZZ13aesEncrypt128PjS_iE10tBox3Block[BV8_ZEXT32(v96)];
  assert {:sourceloc} {:sourceloc_num 150} true;
  v104 := $$texEKey128[0];
  assert {:sourceloc} {:sourceloc_num 151} true;
  $$4[0] := v104;
  assert {:sourceloc} {:sourceloc_num 152} true;
  v105 := $$texEKey128[1];
  assert {:sourceloc} {:sourceloc_num 153} true;
  $$4[1] := v105;
  assert {:sourceloc} {:sourceloc_num 154} true;
  v106 := $$texEKey128[2];
  assert {:sourceloc} {:sourceloc_num 155} true;
  $$4[2] := v106;
  assert {:sourceloc} {:sourceloc_num 156} true;
  v107 := $$4[0];
  assert {:sourceloc} {:sourceloc_num 157} true;
  v108 := $$4[1];
  assert {:sourceloc} {:sourceloc_num 158} true;
  v109 := $$4[2];
  call {:sourceloc_num 159}   v110 := $_Z10tex1DfetchIjET_7textureIS0_Li1EL19cudaTextureReadMode0EEi(v107, v108, v109, BV32_ADD(v0, 16));
  v111 := BV32_XOR(BV32_XOR(BV32_XOR(BV32_XOR(v97, BV_CONCAT(BV_CONCAT(BV_CONCAT(v101, v100), v99), v98)), v102), v103), v110);
  assert {:sourceloc} {:sourceloc_num 160} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_MUL(local_id_x, 4)] := BV_EXTRACT(v111, 8, 0);
  assert {:sourceloc} {:sourceloc_num 161} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4), 1)] := BV_EXTRACT(v111, 16, 8);
  assert {:sourceloc} {:sourceloc_num 162} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4), 2)] := BV_EXTRACT(v111, 24, 16);
  assert {:sourceloc} {:sourceloc_num 163} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4), 3)] := BV_EXTRACT(v111, 32, 24);
  call {:sourceloc_num 164} $bugle_barrier(-1, -1);
  assert {:sourceloc} {:sourceloc_num 165} true;
  v112 := $$posIdx_E[BV32_MUL(v0, 4)];
  assert {:sourceloc} {:sourceloc_num 166} true;
  v113 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_MUL(BV32_ADD(BV8_ZEXT32(v112), v1), 4)];
  assert {:sourceloc} {:sourceloc_num 167} true;
  v114 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4), 1)];
  assert {:sourceloc} {:sourceloc_num 168} true;
  v115 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v114), v1), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 169} true;
  v116 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4), 2)];
  assert {:sourceloc} {:sourceloc_num 170} true;
  v117 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v116), v1), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 171} true;
  v118 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4), 3)];
  assert {:sourceloc} {:sourceloc_num 172} true;
  v119 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v118), v1), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 173} true;
  v120 := $$_ZZ13aesEncrypt128PjS_iE10tBox0Block[BV8_ZEXT32(v113)];
  assert {:sourceloc} {:sourceloc_num 174} true;
  v121 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_MUL(BV8_ZEXT32(v115), 4)];
  assert {:sourceloc} {:sourceloc_num 175} true;
  v122 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v115), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 176} true;
  v123 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v115), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 177} true;
  v124 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v115), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 178} true;
  v125 := $$_ZZ13aesEncrypt128PjS_iE10tBox2Block[BV8_ZEXT32(v117)];
  assert {:sourceloc} {:sourceloc_num 179} true;
  v126 := $$_ZZ13aesEncrypt128PjS_iE10tBox3Block[BV8_ZEXT32(v119)];
  assert {:sourceloc} {:sourceloc_num 180} true;
  v127 := $$texEKey128[0];
  assert {:sourceloc} {:sourceloc_num 181} true;
  $$5[0] := v127;
  assert {:sourceloc} {:sourceloc_num 182} true;
  v128 := $$texEKey128[1];
  assert {:sourceloc} {:sourceloc_num 183} true;
  $$5[1] := v128;
  assert {:sourceloc} {:sourceloc_num 184} true;
  v129 := $$texEKey128[2];
  assert {:sourceloc} {:sourceloc_num 185} true;
  $$5[2] := v129;
  assert {:sourceloc} {:sourceloc_num 186} true;
  v130 := $$5[0];
  assert {:sourceloc} {:sourceloc_num 187} true;
  v131 := $$5[1];
  assert {:sourceloc} {:sourceloc_num 188} true;
  v132 := $$5[2];
  call {:sourceloc_num 189}   v133 := $_Z10tex1DfetchIjET_7textureIS0_Li1EL19cudaTextureReadMode0EEi(v130, v131, v132, BV32_ADD(v0, 20));
  v134 := BV32_XOR(BV32_XOR(BV32_XOR(BV32_XOR(v120, BV_CONCAT(BV_CONCAT(BV_CONCAT(v124, v123), v122), v121)), v125), v126), v133);
  assert {:sourceloc} {:sourceloc_num 190} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_MUL(local_id_x, 4)] := BV_EXTRACT(v134, 8, 0);
  assert {:sourceloc} {:sourceloc_num 191} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4), 1)] := BV_EXTRACT(v134, 16, 8);
  assert {:sourceloc} {:sourceloc_num 192} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4), 2)] := BV_EXTRACT(v134, 24, 16);
  assert {:sourceloc} {:sourceloc_num 193} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4), 3)] := BV_EXTRACT(v134, 32, 24);
  call {:sourceloc_num 194} $bugle_barrier(-1, -1);
  assert {:sourceloc} {:sourceloc_num 195} true;
  v135 := $$posIdx_E[BV32_MUL(v0, 4)];
  assert {:sourceloc} {:sourceloc_num 196} true;
  v136 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_MUL(BV32_ADD(BV8_ZEXT32(v135), v1), 4)];
  assert {:sourceloc} {:sourceloc_num 197} true;
  v137 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4), 1)];
  assert {:sourceloc} {:sourceloc_num 198} true;
  v138 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v137), v1), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 199} true;
  v139 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4), 2)];
  assert {:sourceloc} {:sourceloc_num 200} true;
  v140 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v139), v1), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 201} true;
  v141 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4), 3)];
  assert {:sourceloc} {:sourceloc_num 202} true;
  v142 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v141), v1), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 203} true;
  v143 := $$_ZZ13aesEncrypt128PjS_iE10tBox0Block[BV8_ZEXT32(v136)];
  assert {:sourceloc} {:sourceloc_num 204} true;
  v144 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_MUL(BV8_ZEXT32(v138), 4)];
  assert {:sourceloc} {:sourceloc_num 205} true;
  v145 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v138), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 206} true;
  v146 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v138), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 207} true;
  v147 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v138), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 208} true;
  v148 := $$_ZZ13aesEncrypt128PjS_iE10tBox2Block[BV8_ZEXT32(v140)];
  assert {:sourceloc} {:sourceloc_num 209} true;
  v149 := $$_ZZ13aesEncrypt128PjS_iE10tBox3Block[BV8_ZEXT32(v142)];
  assert {:sourceloc} {:sourceloc_num 210} true;
  v150 := $$texEKey128[0];
  assert {:sourceloc} {:sourceloc_num 211} true;
  $$6[0] := v150;
  assert {:sourceloc} {:sourceloc_num 212} true;
  v151 := $$texEKey128[1];
  assert {:sourceloc} {:sourceloc_num 213} true;
  $$6[1] := v151;
  assert {:sourceloc} {:sourceloc_num 214} true;
  v152 := $$texEKey128[2];
  assert {:sourceloc} {:sourceloc_num 215} true;
  $$6[2] := v152;
  assert {:sourceloc} {:sourceloc_num 216} true;
  v153 := $$6[0];
  assert {:sourceloc} {:sourceloc_num 217} true;
  v154 := $$6[1];
  assert {:sourceloc} {:sourceloc_num 218} true;
  v155 := $$6[2];
  call {:sourceloc_num 219}   v156 := $_Z10tex1DfetchIjET_7textureIS0_Li1EL19cudaTextureReadMode0EEi(v153, v154, v155, BV32_ADD(v0, 24));
  v157 := BV32_XOR(BV32_XOR(BV32_XOR(BV32_XOR(v143, BV_CONCAT(BV_CONCAT(BV_CONCAT(v147, v146), v145), v144)), v148), v149), v156);
  assert {:sourceloc} {:sourceloc_num 220} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_MUL(local_id_x, 4)] := BV_EXTRACT(v157, 8, 0);
  assert {:sourceloc} {:sourceloc_num 221} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4), 1)] := BV_EXTRACT(v157, 16, 8);
  assert {:sourceloc} {:sourceloc_num 222} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4), 2)] := BV_EXTRACT(v157, 24, 16);
  assert {:sourceloc} {:sourceloc_num 223} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4), 3)] := BV_EXTRACT(v157, 32, 24);
  call {:sourceloc_num 224} $bugle_barrier(-1, -1);
  assert {:sourceloc} {:sourceloc_num 225} true;
  v158 := $$posIdx_E[BV32_MUL(v0, 4)];
  assert {:sourceloc} {:sourceloc_num 226} true;
  v159 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_MUL(BV32_ADD(BV8_ZEXT32(v158), v1), 4)];
  assert {:sourceloc} {:sourceloc_num 227} true;
  v160 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4), 1)];
  assert {:sourceloc} {:sourceloc_num 228} true;
  v161 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v160), v1), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 229} true;
  v162 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4), 2)];
  assert {:sourceloc} {:sourceloc_num 230} true;
  v163 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v162), v1), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 231} true;
  v164 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4), 3)];
  assert {:sourceloc} {:sourceloc_num 232} true;
  v165 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v164), v1), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 233} true;
  v166 := $$_ZZ13aesEncrypt128PjS_iE10tBox0Block[BV8_ZEXT32(v159)];
  assert {:sourceloc} {:sourceloc_num 234} true;
  v167 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_MUL(BV8_ZEXT32(v161), 4)];
  assert {:sourceloc} {:sourceloc_num 235} true;
  v168 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v161), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 236} true;
  v169 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v161), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 237} true;
  v170 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v161), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 238} true;
  v171 := $$_ZZ13aesEncrypt128PjS_iE10tBox2Block[BV8_ZEXT32(v163)];
  assert {:sourceloc} {:sourceloc_num 239} true;
  v172 := $$_ZZ13aesEncrypt128PjS_iE10tBox3Block[BV8_ZEXT32(v165)];
  assert {:sourceloc} {:sourceloc_num 240} true;
  v173 := $$texEKey128[0];
  assert {:sourceloc} {:sourceloc_num 241} true;
  $$7[0] := v173;
  assert {:sourceloc} {:sourceloc_num 242} true;
  v174 := $$texEKey128[1];
  assert {:sourceloc} {:sourceloc_num 243} true;
  $$7[1] := v174;
  assert {:sourceloc} {:sourceloc_num 244} true;
  v175 := $$texEKey128[2];
  assert {:sourceloc} {:sourceloc_num 245} true;
  $$7[2] := v175;
  assert {:sourceloc} {:sourceloc_num 246} true;
  v176 := $$7[0];
  assert {:sourceloc} {:sourceloc_num 247} true;
  v177 := $$7[1];
  assert {:sourceloc} {:sourceloc_num 248} true;
  v178 := $$7[2];
  call {:sourceloc_num 249}   v179 := $_Z10tex1DfetchIjET_7textureIS0_Li1EL19cudaTextureReadMode0EEi(v176, v177, v178, BV32_ADD(v0, 28));
  v180 := BV32_XOR(BV32_XOR(BV32_XOR(BV32_XOR(v166, BV_CONCAT(BV_CONCAT(BV_CONCAT(v170, v169), v168), v167)), v171), v172), v179);
  assert {:sourceloc} {:sourceloc_num 250} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_MUL(local_id_x, 4)] := BV_EXTRACT(v180, 8, 0);
  assert {:sourceloc} {:sourceloc_num 251} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4), 1)] := BV_EXTRACT(v180, 16, 8);
  assert {:sourceloc} {:sourceloc_num 252} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4), 2)] := BV_EXTRACT(v180, 24, 16);
  assert {:sourceloc} {:sourceloc_num 253} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4), 3)] := BV_EXTRACT(v180, 32, 24);
  call {:sourceloc_num 254} $bugle_barrier(-1, -1);
  assert {:sourceloc} {:sourceloc_num 255} true;
  v181 := $$posIdx_E[BV32_MUL(v0, 4)];
  assert {:sourceloc} {:sourceloc_num 256} true;
  v182 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_MUL(BV32_ADD(BV8_ZEXT32(v181), v1), 4)];
  assert {:sourceloc} {:sourceloc_num 257} true;
  v183 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4), 1)];
  assert {:sourceloc} {:sourceloc_num 258} true;
  v184 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v183), v1), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 259} true;
  v185 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4), 2)];
  assert {:sourceloc} {:sourceloc_num 260} true;
  v186 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v185), v1), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 261} true;
  v187 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4), 3)];
  assert {:sourceloc} {:sourceloc_num 262} true;
  v188 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v187), v1), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 263} true;
  v189 := $$_ZZ13aesEncrypt128PjS_iE10tBox0Block[BV8_ZEXT32(v182)];
  assert {:sourceloc} {:sourceloc_num 264} true;
  v190 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_MUL(BV8_ZEXT32(v184), 4)];
  assert {:sourceloc} {:sourceloc_num 265} true;
  v191 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v184), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 266} true;
  v192 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v184), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 267} true;
  v193 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v184), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 268} true;
  v194 := $$_ZZ13aesEncrypt128PjS_iE10tBox2Block[BV8_ZEXT32(v186)];
  assert {:sourceloc} {:sourceloc_num 269} true;
  v195 := $$_ZZ13aesEncrypt128PjS_iE10tBox3Block[BV8_ZEXT32(v188)];
  assert {:sourceloc} {:sourceloc_num 270} true;
  v196 := $$texEKey128[0];
  assert {:sourceloc} {:sourceloc_num 271} true;
  $$8[0] := v196;
  assert {:sourceloc} {:sourceloc_num 272} true;
  v197 := $$texEKey128[1];
  assert {:sourceloc} {:sourceloc_num 273} true;
  $$8[1] := v197;
  assert {:sourceloc} {:sourceloc_num 274} true;
  v198 := $$texEKey128[2];
  assert {:sourceloc} {:sourceloc_num 275} true;
  $$8[2] := v198;
  assert {:sourceloc} {:sourceloc_num 276} true;
  v199 := $$8[0];
  assert {:sourceloc} {:sourceloc_num 277} true;
  v200 := $$8[1];
  assert {:sourceloc} {:sourceloc_num 278} true;
  v201 := $$8[2];
  call {:sourceloc_num 279}   v202 := $_Z10tex1DfetchIjET_7textureIS0_Li1EL19cudaTextureReadMode0EEi(v199, v200, v201, BV32_ADD(v0, 32));
  v203 := BV32_XOR(BV32_XOR(BV32_XOR(BV32_XOR(v189, BV_CONCAT(BV_CONCAT(BV_CONCAT(v193, v192), v191), v190)), v194), v195), v202);
  assert {:sourceloc} {:sourceloc_num 280} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_MUL(local_id_x, 4)] := BV_EXTRACT(v203, 8, 0);
  assert {:sourceloc} {:sourceloc_num 281} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4), 1)] := BV_EXTRACT(v203, 16, 8);
  assert {:sourceloc} {:sourceloc_num 282} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4), 2)] := BV_EXTRACT(v203, 24, 16);
  assert {:sourceloc} {:sourceloc_num 283} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4), 3)] := BV_EXTRACT(v203, 32, 24);
  call {:sourceloc_num 284} $bugle_barrier(-1, -1);
  assert {:sourceloc} {:sourceloc_num 285} true;
  v204 := $$posIdx_E[BV32_MUL(v0, 4)];
  assert {:sourceloc} {:sourceloc_num 286} true;
  v205 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_MUL(BV32_ADD(BV8_ZEXT32(v204), v1), 4)];
  assert {:sourceloc} {:sourceloc_num 287} true;
  v206 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4), 1)];
  assert {:sourceloc} {:sourceloc_num 288} true;
  v207 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v206), v1), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 289} true;
  v208 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4), 2)];
  assert {:sourceloc} {:sourceloc_num 290} true;
  v209 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v208), v1), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 291} true;
  v210 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4), 3)];
  assert {:sourceloc} {:sourceloc_num 292} true;
  v211 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v210), v1), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 293} true;
  v212 := $$_ZZ13aesEncrypt128PjS_iE10tBox0Block[BV8_ZEXT32(v205)];
  assert {:sourceloc} {:sourceloc_num 294} true;
  v213 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_MUL(BV8_ZEXT32(v207), 4)];
  assert {:sourceloc} {:sourceloc_num 295} true;
  v214 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v207), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 296} true;
  v215 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v207), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 297} true;
  v216 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v207), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 298} true;
  v217 := $$_ZZ13aesEncrypt128PjS_iE10tBox2Block[BV8_ZEXT32(v209)];
  assert {:sourceloc} {:sourceloc_num 299} true;
  v218 := $$_ZZ13aesEncrypt128PjS_iE10tBox3Block[BV8_ZEXT32(v211)];
  assert {:sourceloc} {:sourceloc_num 300} true;
  v219 := $$texEKey128[0];
  assert {:sourceloc} {:sourceloc_num 301} true;
  $$9[0] := v219;
  assert {:sourceloc} {:sourceloc_num 302} true;
  v220 := $$texEKey128[1];
  assert {:sourceloc} {:sourceloc_num 303} true;
  $$9[1] := v220;
  assert {:sourceloc} {:sourceloc_num 304} true;
  v221 := $$texEKey128[2];
  assert {:sourceloc} {:sourceloc_num 305} true;
  $$9[2] := v221;
  assert {:sourceloc} {:sourceloc_num 306} true;
  v222 := $$9[0];
  assert {:sourceloc} {:sourceloc_num 307} true;
  v223 := $$9[1];
  assert {:sourceloc} {:sourceloc_num 308} true;
  v224 := $$9[2];
  call {:sourceloc_num 309}   v225 := $_Z10tex1DfetchIjET_7textureIS0_Li1EL19cudaTextureReadMode0EEi(v222, v223, v224, BV32_ADD(v0, 36));
  v226 := BV32_XOR(BV32_XOR(BV32_XOR(BV32_XOR(v212, BV_CONCAT(BV_CONCAT(BV_CONCAT(v216, v215), v214), v213)), v217), v218), v225);
  assert {:sourceloc} {:sourceloc_num 310} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_MUL(local_id_x, 4)] := BV_EXTRACT(v226, 8, 0);
  assert {:sourceloc} {:sourceloc_num 311} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4), 1)] := BV_EXTRACT(v226, 16, 8);
  assert {:sourceloc} {:sourceloc_num 312} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4), 2)] := BV_EXTRACT(v226, 24, 16);
  assert {:sourceloc} {:sourceloc_num 313} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4), 3)] := BV_EXTRACT(v226, 32, 24);
  call {:sourceloc_num 314} $bugle_barrier(-1, -1);
  assert {:sourceloc} {:sourceloc_num 315} true;
  v227 := $$posIdx_E[BV32_MUL(v0, 4)];
  assert {:sourceloc} {:sourceloc_num 316} true;
  v228 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_MUL(BV32_ADD(BV8_ZEXT32(v227), v1), 4)];
  assert {:sourceloc} {:sourceloc_num 317} true;
  v229 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4), 1)];
  assert {:sourceloc} {:sourceloc_num 318} true;
  v230 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v229), v1), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 319} true;
  v231 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4), 2)];
  assert {:sourceloc} {:sourceloc_num 320} true;
  v232 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v231), v1), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 321} true;
  v233 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4), 3)];
  assert {:sourceloc} {:sourceloc_num 322} true;
  v234 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v233), v1), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 323} true;
  v235 := $$texEKey128[0];
  assert {:sourceloc} {:sourceloc_num 324} true;
  $$10[0] := v235;
  assert {:sourceloc} {:sourceloc_num 325} true;
  v236 := $$texEKey128[1];
  assert {:sourceloc} {:sourceloc_num 326} true;
  $$10[1] := v236;
  assert {:sourceloc} {:sourceloc_num 327} true;
  v237 := $$texEKey128[2];
  assert {:sourceloc} {:sourceloc_num 328} true;
  $$10[2] := v237;
  assert {:sourceloc} {:sourceloc_num 329} true;
  v238 := $$10[0];
  assert {:sourceloc} {:sourceloc_num 330} true;
  v239 := $$10[1];
  assert {:sourceloc} {:sourceloc_num 331} true;
  v240 := $$10[2];
  call {:sourceloc_num 332}   v241 := $_Z10tex1DfetchIjET_7textureIS0_Li1EL19cudaTextureReadMode0EEi(v238, v239, v240, BV32_ADD(v0, 40));
  assert {:sourceloc} {:sourceloc_num 333} true;
  v242 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v234), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 334} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4), 3)] := BV_EXTRACT(BV32_XOR(BV8_ZEXT32(v242), BV32_LSHR(v241, 24)), 8, 0);
  assert {:sourceloc} {:sourceloc_num 335} true;
  v243 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v232), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 336} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4), 2)] := BV_EXTRACT(BV32_XOR(BV8_ZEXT32(v243), BV32_AND(BV32_LSHR(v241, 16), 255)), 8, 0);
  assert {:sourceloc} {:sourceloc_num 337} true;
  v244 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v230), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 338} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4), 1)] := BV_EXTRACT(BV32_XOR(BV8_ZEXT32(v244), BV32_AND(BV32_LSHR(v241, 8), 255)), 8, 0);
  assert {:sourceloc} {:sourceloc_num 339} true;
  v245 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v228), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 340} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_MUL(local_id_x, 4)] := BV_EXTRACT(BV32_XOR(BV8_ZEXT32(v245), BV32_AND(v241, 255)), 8, 0);
  call {:sourceloc_num 341} $bugle_barrier(-1, -1);
  assert {:sourceloc} {:sourceloc_num 342} true;
  v246 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_MUL(local_id_x, 4)];
  assert {:sourceloc} {:sourceloc_num 343} true;
  v247 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4), 1)];
  assert {:sourceloc} {:sourceloc_num 344} true;
  v248 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4), 2)];
  assert {:sourceloc} {:sourceloc_num 345} true;
  v249 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4), 3)];
  assert {:sourceloc} {:sourceloc_num 346} true;
  $$result[BV32_ADD(BV32_MUL(256, group_id_x), local_id_x)] := BV_CONCAT(BV_CONCAT(BV_CONCAT(v249, v248), v247), v246);
  return;
$truebb:
  assume {:partition} v3;
  assert {:block_sourceloc} {:sourceloc_num 347} true;
  goto $2;
$falsebb:
  assume {:partition} !v3;
  assert {:block_sourceloc} {:sourceloc_num 348} true;
  goto $4;
}
procedure {:source_name "bugle_barrier"} {:barrier} $bugle_barrier($0:int, $1:int);
procedure {:source_name "_Z10tex1DfetchIjET_7textureIS0_Li1EL19cudaTextureReadMode0EEi"} $_Z10tex1DfetchIjET_7textureIS0_Li1EL19cudaTextureReadMode0EEi($0:int, $1:int, $2:int, $3:int) returns ($ret:int);
axiom (if group_size_y == 1 then 1 else 0) != 0;
axiom (if group_size_z == 1 then 1 else 0) != 0;
axiom (if num_groups_y == 1 then 1 else 0) != 0;
axiom (if num_groups_z == 1 then 1 else 0) != 0;
axiom (if group_size_x == 256 then 1 else 0) != 0;
axiom (if num_groups_x == 128 then 1 else 0) != 0;
