type _SIZE_T_TYPE = bv32;

procedure _ATOMIC_OP32(x : [int]int, y : int) returns (z : int, A : [int]int);
procedure _ATOMIC_OP8(x : [int]int, y : int) returns (z : int, A : [int]int);
var {:source_name "d_frame"} {:global} $$d_frame : [int]int;
axiom {:array_info "$$d_frame"} {:global} {:elem_width 32} {:source_name "d_frame"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$d_frame : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$d_frame : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$d_frame : bool;
const $arrayId$$d_frame : arrayId;
axiom $arrayId$$d_frame == 1bv6;

var {:source_name "d_endoRow"} {:global} $$d_endoRow : [int]int;
axiom {:array_info "$$d_endoRow"} {:global} {:elem_width 32} {:source_name "d_endoRow"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$d_endoRow : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$d_endoRow : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$d_endoRow : bool;
const $arrayId$$d_endoRow : arrayId;
axiom $arrayId$$d_endoRow == 2bv6;

var {:source_name "d_endoCol"} {:global} $$d_endoCol : [int]int;
axiom {:array_info "$$d_endoCol"} {:global} {:elem_width 32} {:source_name "d_endoCol"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$d_endoCol : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$d_endoCol : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$d_endoCol : bool;
const $arrayId$$d_endoCol : arrayId;
axiom $arrayId$$d_endoCol == 3bv6;

var {:source_name "d_tEndoRowLoc"} {:global} $$d_tEndoRowLoc : [int]int;
axiom {:array_info "$$d_tEndoRowLoc"} {:global} {:elem_width 32} {:source_name "d_tEndoRowLoc"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$d_tEndoRowLoc : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$d_tEndoRowLoc : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$d_tEndoRowLoc : bool;
const $arrayId$$d_tEndoRowLoc : arrayId;
axiom $arrayId$$d_tEndoRowLoc == 4bv6;

var {:source_name "d_tEndoColLoc"} {:global} $$d_tEndoColLoc : [int]int;
axiom {:array_info "$$d_tEndoColLoc"} {:global} {:elem_width 32} {:source_name "d_tEndoColLoc"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$d_tEndoColLoc : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$d_tEndoColLoc : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$d_tEndoColLoc : bool;
const $arrayId$$d_tEndoColLoc : arrayId;
axiom $arrayId$$d_tEndoColLoc == 5bv6;

var {:source_name "d_epiRow"} {:global} $$d_epiRow : [int]int;
axiom {:array_info "$$d_epiRow"} {:global} {:elem_width 32} {:source_name "d_epiRow"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$d_epiRow : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$d_epiRow : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$d_epiRow : bool;
const $arrayId$$d_epiRow : arrayId;
axiom $arrayId$$d_epiRow == 6bv6;

var {:source_name "d_epiCol"} {:global} $$d_epiCol : [int]int;
axiom {:array_info "$$d_epiCol"} {:global} {:elem_width 32} {:source_name "d_epiCol"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$d_epiCol : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$d_epiCol : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$d_epiCol : bool;
const $arrayId$$d_epiCol : arrayId;
axiom $arrayId$$d_epiCol == 7bv6;

var {:source_name "d_tEpiRowLoc"} {:global} $$d_tEpiRowLoc : [int]int;
axiom {:array_info "$$d_tEpiRowLoc"} {:global} {:elem_width 32} {:source_name "d_tEpiRowLoc"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$d_tEpiRowLoc : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$d_tEpiRowLoc : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$d_tEpiRowLoc : bool;
const $arrayId$$d_tEpiRowLoc : arrayId;
axiom $arrayId$$d_tEpiRowLoc == 8bv6;

var {:source_name "d_tEpiColLoc"} {:global} $$d_tEpiColLoc : [int]int;
axiom {:array_info "$$d_tEpiColLoc"} {:global} {:elem_width 32} {:source_name "d_tEpiColLoc"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$d_tEpiColLoc : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$d_tEpiColLoc : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$d_tEpiColLoc : bool;
const $arrayId$$d_tEpiColLoc : arrayId;
axiom $arrayId$$d_tEpiColLoc == 9bv6;

var {:source_name "d_endoT"} {:global} $$d_endoT : [int]int;
axiom {:array_info "$$d_endoT"} {:global} {:elem_width 32} {:source_name "d_endoT"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$d_endoT : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$d_endoT : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$d_endoT : bool;
const $arrayId$$d_endoT : arrayId;
axiom $arrayId$$d_endoT == 10bv6;

var {:source_name "d_epiT"} {:global} $$d_epiT : [int]int;
axiom {:array_info "$$d_epiT"} {:global} {:elem_width 32} {:source_name "d_epiT"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$d_epiT : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$d_epiT : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$d_epiT : bool;
const $arrayId$$d_epiT : arrayId;
axiom $arrayId$$d_epiT == 11bv6;

var {:source_name "d_in2_all"} {:global} $$d_in2_all : [int]int;
axiom {:array_info "$$d_in2_all"} {:global} {:elem_width 32} {:source_name "d_in2_all"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$d_in2_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$d_in2_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$d_in2_all : bool;
const $arrayId$$d_in2_all : arrayId;
axiom $arrayId$$d_in2_all == 12bv6;

var {:source_name "d_conv_all"} {:global} $$d_conv_all : [int]int;
axiom {:array_info "$$d_conv_all"} {:global} {:elem_width 32} {:source_name "d_conv_all"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$d_conv_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$d_conv_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$d_conv_all : bool;
const $arrayId$$d_conv_all : arrayId;
axiom $arrayId$$d_conv_all == 13bv6;

var {:source_name "d_in2_pad_cumv_all"} {:global} $$d_in2_pad_cumv_all : [int]int;
axiom {:array_info "$$d_in2_pad_cumv_all"} {:global} {:elem_width 32} {:source_name "d_in2_pad_cumv_all"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$d_in2_pad_cumv_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$d_in2_pad_cumv_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$d_in2_pad_cumv_all : bool;
const $arrayId$$d_in2_pad_cumv_all : arrayId;
axiom $arrayId$$d_in2_pad_cumv_all == 14bv6;

var {:source_name "d_in2_pad_cumv_sel_all"} {:global} $$d_in2_pad_cumv_sel_all : [int]int;
axiom {:array_info "$$d_in2_pad_cumv_sel_all"} {:global} {:elem_width 32} {:source_name "d_in2_pad_cumv_sel_all"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$d_in2_pad_cumv_sel_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$d_in2_pad_cumv_sel_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$d_in2_pad_cumv_sel_all : bool;
const $arrayId$$d_in2_pad_cumv_sel_all : arrayId;
axiom $arrayId$$d_in2_pad_cumv_sel_all == 15bv6;

var {:source_name "d_in2_sub_cumh_all"} {:global} $$d_in2_sub_cumh_all : [int]int;
axiom {:array_info "$$d_in2_sub_cumh_all"} {:global} {:elem_width 32} {:source_name "d_in2_sub_cumh_all"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$d_in2_sub_cumh_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$d_in2_sub_cumh_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$d_in2_sub_cumh_all : bool;
const $arrayId$$d_in2_sub_cumh_all : arrayId;
axiom $arrayId$$d_in2_sub_cumh_all == 16bv6;

var {:source_name "d_in2_sub_cumh_sel_all"} {:global} $$d_in2_sub_cumh_sel_all : [int]int;
axiom {:array_info "$$d_in2_sub_cumh_sel_all"} {:global} {:elem_width 32} {:source_name "d_in2_sub_cumh_sel_all"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$d_in2_sub_cumh_sel_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$d_in2_sub_cumh_sel_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$d_in2_sub_cumh_sel_all : bool;
const $arrayId$$d_in2_sub_cumh_sel_all : arrayId;
axiom $arrayId$$d_in2_sub_cumh_sel_all == 17bv6;

var {:source_name "d_in2_sub2_all"} {:global} $$d_in2_sub2_all : [int]int;
axiom {:array_info "$$d_in2_sub2_all"} {:global} {:elem_width 32} {:source_name "d_in2_sub2_all"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$d_in2_sub2_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$d_in2_sub2_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$d_in2_sub2_all : bool;
const $arrayId$$d_in2_sub2_all : arrayId;
axiom $arrayId$$d_in2_sub2_all == 18bv6;

var {:source_name "d_in2_sqr_all"} {:global} $$d_in2_sqr_all : [int]int;
axiom {:array_info "$$d_in2_sqr_all"} {:global} {:elem_width 32} {:source_name "d_in2_sqr_all"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$d_in2_sqr_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$d_in2_sqr_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$d_in2_sqr_all : bool;
const $arrayId$$d_in2_sqr_all : arrayId;
axiom $arrayId$$d_in2_sqr_all == 19bv6;

var {:source_name "d_in2_sqr_sub2_all"} {:global} $$d_in2_sqr_sub2_all : [int]int;
axiom {:array_info "$$d_in2_sqr_sub2_all"} {:global} {:elem_width 32} {:source_name "d_in2_sqr_sub2_all"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$d_in2_sqr_sub2_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$d_in2_sqr_sub2_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$d_in2_sqr_sub2_all : bool;
const $arrayId$$d_in2_sqr_sub2_all : arrayId;
axiom $arrayId$$d_in2_sqr_sub2_all == 20bv6;

var {:source_name "d_in_sqr_all"} {:global} $$d_in_sqr_all : [int]int;
axiom {:array_info "$$d_in_sqr_all"} {:global} {:elem_width 32} {:source_name "d_in_sqr_all"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$d_in_sqr_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$d_in_sqr_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$d_in_sqr_all : bool;
const $arrayId$$d_in_sqr_all : arrayId;
axiom $arrayId$$d_in_sqr_all == 21bv6;

var {:source_name "d_tMask_all"} {:global} $$d_tMask_all : [int]int;
axiom {:array_info "$$d_tMask_all"} {:global} {:elem_width 32} {:source_name "d_tMask_all"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$d_tMask_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$d_tMask_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$d_tMask_all : bool;
const $arrayId$$d_tMask_all : arrayId;
axiom $arrayId$$d_tMask_all == 22bv6;

var {:source_name "d_mask_conv_all"} {:global} $$d_mask_conv_all : [int]int;
axiom {:array_info "$$d_mask_conv_all"} {:global} {:elem_width 32} {:source_name "d_mask_conv_all"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$d_mask_conv_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$d_mask_conv_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$d_mask_conv_all : bool;
const $arrayId$$d_mask_conv_all : arrayId;
axiom $arrayId$$d_mask_conv_all == 23bv6;

var {:source_name "d_in_mod_temp_all"} {:global} $$d_in_mod_temp_all : [int]int;
axiom {:array_info "$$d_in_mod_temp_all"} {:global} {:elem_width 32} {:source_name "d_in_mod_temp_all"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$d_in_mod_temp_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$d_in_mod_temp_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$d_in_mod_temp_all : bool;
const $arrayId$$d_in_mod_temp_all : arrayId;
axiom $arrayId$$d_in_mod_temp_all == 24bv6;

var {:source_name "in_partial_sum_all"} {:global} $$in_partial_sum_all : [int]int;
axiom {:array_info "$$in_partial_sum_all"} {:global} {:elem_width 32} {:source_name "in_partial_sum_all"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$in_partial_sum_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$in_partial_sum_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$in_partial_sum_all : bool;
const $arrayId$$in_partial_sum_all : arrayId;
axiom $arrayId$$in_partial_sum_all == 25bv6;

var {:source_name "in_sqr_partial_sum_all"} {:global} $$in_sqr_partial_sum_all : [int]int;
axiom {:array_info "$$in_sqr_partial_sum_all"} {:global} {:elem_width 32} {:source_name "in_sqr_partial_sum_all"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$in_sqr_partial_sum_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$in_sqr_partial_sum_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$in_sqr_partial_sum_all : bool;
const $arrayId$$in_sqr_partial_sum_all : arrayId;
axiom $arrayId$$in_sqr_partial_sum_all == 26bv6;

var {:source_name "par_max_val_all"} {:global} $$par_max_val_all : [int]int;
axiom {:array_info "$$par_max_val_all"} {:global} {:elem_width 32} {:source_name "par_max_val_all"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$par_max_val_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$par_max_val_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$par_max_val_all : bool;
const $arrayId$$par_max_val_all : arrayId;
axiom $arrayId$$par_max_val_all == 27bv6;

var {:source_name "par_max_coo_all"} {:global} $$par_max_coo_all : [int]int;
axiom {:array_info "$$par_max_coo_all"} {:global} {:elem_width 32} {:source_name "par_max_coo_all"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$par_max_coo_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$par_max_coo_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$par_max_coo_all : bool;
const $arrayId$$par_max_coo_all : arrayId;
axiom $arrayId$$par_max_coo_all == 28bv6;

var {:source_name "in_final_sum_all"} {:global} $$in_final_sum_all : [int]int;
axiom {:array_info "$$in_final_sum_all"} {:global} {:elem_width 32} {:source_name "in_final_sum_all"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$in_final_sum_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$in_final_sum_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$in_final_sum_all : bool;
const $arrayId$$in_final_sum_all : arrayId;
axiom $arrayId$$in_final_sum_all == 29bv6;

var {:source_name "in_sqr_final_sum_all"} {:global} $$in_sqr_final_sum_all : [int]int;
axiom {:array_info "$$in_sqr_final_sum_all"} {:global} {:elem_width 32} {:source_name "in_sqr_final_sum_all"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$in_sqr_final_sum_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$in_sqr_final_sum_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$in_sqr_final_sum_all : bool;
const $arrayId$$in_sqr_final_sum_all : arrayId;
axiom $arrayId$$in_sqr_final_sum_all == 30bv6;

var {:source_name "denomT_all"} {:global} $$denomT_all : [int]int;
axiom {:array_info "$$denomT_all"} {:global} {:elem_width 32} {:source_name "denomT_all"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$denomT_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$denomT_all : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$denomT_all : bool;
const $arrayId$$denomT_all : arrayId;
axiom $arrayId$$denomT_all == 31bv6;

var {:source_name "checksum"} {:global} $$checksum : [int]int;
axiom {:array_info "$$checksum"} {:global} {:elem_width 32} {:source_name "checksum"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$checksum : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$checksum : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$checksum : bool;
const $arrayId$$checksum : arrayId;
axiom $arrayId$$checksum == 32bv6;

var {:source_name "d_common"} $$d_common : [int]int;
axiom {:array_info "$$d_common"} {:elem_width 8} {:source_name "d_common"} {:source_elem_width 3104} {:source_dimensions "1"} true;
const $arrayId$$d_common : arrayId;
axiom $arrayId$$d_common == 33bv6;

type ptr = bv32;
type arrayId = bv6;

function {:inline true} MKPTR(base: arrayId, offset: int) : ptr {
  base ++ offset[26:0]
}

function {:inline true} base#MKPTR(p: ptr) : arrayId {
  p[32:26]
}

function {:inline true} offset#MKPTR(p : ptr) : bv32 {
  0bv6++p[26:0]
}

const $arrayId$$null$ : arrayId;
axiom $arrayId$$null$ == 0bv6;

const _WATCHED_OFFSET : int;
const {:global_offset_x} global_offset_x : int;
const {:global_offset_y} global_offset_y : int;
const {:global_offset_z} global_offset_z : int;
const {:group_id_x} group_id_x : int;
const {:group_id_y} group_id_y : int;
const {:group_id_z} group_id_z : int;
const {:group_size_x} group_size_x : int;
const {:group_size_y} group_size_y : int;
const {:group_size_z} group_size_z : int;
const {:local_id_x} local_id_x : int;
const {:num_groups_x} num_groups_x : int;
const {:num_groups_y} num_groups_y : int;
const {:num_groups_z} num_groups_z : int;
function BV_CONCAT(int, int) : int;
function BV_EXTRACT(int, int, int) : int;
function FABS32(int) : int;
function FADD32(int, int) : int;
function FDIV32(int, int) : int;
function FLT32(int, int) : bool;
function FMUL32(int, int) : int;
function FSQRT32(int) : int;
function FSUB32(int, int) : int;
function SI32_TO_FP32(int) : int;
function __other_bv32(int) : int;
function {:inline true} BV1_XOR(x : int, y : int) : int {
  if (x == 1 || x == -1) && (y == 1 || y == -1) then 0 else (
    if (x == 1 || x == -1) && y == 0 then 1 else (
      if x == 0 && (y == 1 || y == -1) then 1 else (
        if x == y then 0 else BV1_XOR_UF(x, y))))
}
function BV1_XOR_UF(int, int) : int;
function {:inline true} BV1_ZEXT32(x : int) : int {
  x
}
function {:inline true} BV32_ADD(x : int, y : int) : int {
  x + y
}
function {:inline true} BV32_AND(x : int, y : int) : int {
  if x == y then x else (if x == 0 || y == 0 then 0 else BV32_AND_UF(x, y))
}
function BV32_AND_UF(int, int) : int;
function {:inline true} BV32_MUL(x : int, y : int) : int {
  x * y
}
function {:inline true} BV32_SDIV(x : int, y : int) : int {
  x div y
}
function {:inline true} BV32_SGE(x : int, y : int) : bool {
  x >= y
}
function {:inline true} BV32_SGT(x : int, y : int) : bool {
  x > y
}
function {:inline true} BV32_SLE(x : int, y : int) : bool {
  x <= y
}
function {:inline true} BV32_SLT(x : int, y : int) : bool {
  x < y
}
function {:inline true} BV32_SREM(x : int, y : int) : int {
  x mod y
}
function {:inline true} BV32_SUB(x : int, y : int) : int {
  x - y
}
function {:inline true} BV32_UDIV(x : int, y : int) : int {
  x div y
}
function {:inline true} BV32_ULT(x : int, y : int) : bool {
  x < y
}
function {:inline true} BV32_UREM(x : int, y : int) : int {
  x mod y
}
procedure {:source_name "kernel_gpu_opencl"} {:kernel} $kernel_gpu_opencl($d_common.coerce0:int, $d_common.coerce1:int, $d_common.coerce2:int, $d_common.coerce3:int, $d_common.coerce4:int, $d_common.coerce5:int, $d_common.coerce6:int, $d_common.coerce7:int, $d_common.coerce8:int, $d_common.coerce9:int, $d_common.coerce10:int, $d_common.coerce11:int, $d_common.coerce12:int, $d_common.coerce13:int, $d_common.coerce14:int, $d_common.coerce15:int, $d_common.coerce16:int, $d_common.coerce17:int, $d_common.coerce18:int, $d_common.coerce19:int, $d_common.coerce20:int, $d_common.coerce21:int, $d_common.coerce22:int, $d_common.coerce23:int, $d_common.coerce24:int, $d_common.coerce25:int, $d_common.coerce26:int, $d_common.coerce27:int, $d_common.coerce28:int, $d_common.coerce29:int, $d_common.coerce30:int, $d_common.coerce31:int, $d_common.coerce32:int, $d_common.coerce33:int, $d_common.coerce34:int, $d_common.coerce35:int, $d_common.coerce36:int, $d_common.coerce37:int, $d_common.coerce38:int, $d_common.coerce39:int, $d_common.coerce40:int, $d_common.coerce41:int, $d_common.coerce42:int, $d_common.coerce43:int, $d_common.coerce44:int, $d_common.coerce45:int, $d_common.coerce46:int, $d_common.coerce47:int, $d_common.coerce48:int, $d_common.coerce49:int, $d_common.coerce50:int, $d_common.coerce51:int, $d_common.coerce52:int, $d_common.coerce53:int, $d_common.coerce54:int, $d_common.coerce55:int, $d_common.coerce56:int, $d_common.coerce57:int, $d_common.coerce58:int, $d_common.coerce59:int, $d_common.coerce60:int, $d_common.coerce61:int, $d_common.coerce62:int, $d_common.coerce63:int, $d_common.coerce64:int, $d_common.coerce65:int, $d_common.coerce66:int, $d_common.coerce67:int, $d_common.coerce68:int, $d_common.coerce69:int, $d_common.coerce70:int, $d_common.coerce71:int, $d_common.coerce72:int, $d_common.coerce73:int, $d_common.coerce74:int, $d_common.coerce75:int, $d_common.coerce76:int, $d_common.coerce77:int, $d_common.coerce78:int, $d_common.coerce79:int, $d_common.coerce80:int, $d_common.coerce81:int, $d_common.coerce82:int, $d_common.coerce83:int, $d_common.coerce84:int, $d_common.coerce85:int, $d_common.coerce86:int, $d_common.coerce87:int, $d_common.coerce88:int, $d_common.coerce89:int, $d_common.coerce90:int, $d_common.coerce91:int, $d_common.coerce92:int, $d_common.coerce93:int, $d_common.coerce94:int, $d_common.coerce95:int, $d_common.coerce96:int, $d_frame_no:int)
requires {:sourceloc_num 0} (if $d_frame_no == 1 then 1 else 0) != 0;
{
  var $d_unique_point_no.0:int;
  var $d_unique_d_Row.0:ptr;
  var $d_unique_d_Col.0:ptr;
  var $d_unique_d_tRowLoc.0:ptr;
  var $d_unique_d_tColLoc.0:ptr;
  var $d_in.0:ptr;
  var $ei_new.0:int;
  var $row.0:int;
  var $col.0:int;
  var $ei_new.1:int;
  var $row.1:int;
  var $col.1:int;
  var $ei_new.2:int;
  var $row.2:int;
  var $col.2:int;
  var $ei_new.3:int;
  var $ic.0:int;
  var $jc.0:int;
  var $ja1.0:int;
  var $ja2.0:int;
  var $ia1.0:int;
  var $ia2.0:int;
  var $ja.0:int;
  var $s.0:int;
  var $ia.0:int;
  var $s.1:int;
  var $ei_new.4:int;
  var $row.3:int;
  var $col.3:int;
  var $ei_new.5:int;
  var $position.0:int;
  var $sum.0:int;
  var $ei_new.6:int;
  var $row.4:int;
  var $col.4:int;
  var $ei_new.7:int;
  var $row.5:int;
  var $col.5:int;
  var $ei_new.8:int;
  var $ei_new.9:int;
  var $position.1:int;
  var $sum.1:int;
  var $ei_new.10:int;
  var $row.6:int;
  var $col.6:int;
  var $ei_new.11:int;
  var $row.7:int;
  var $col.7:int;
  var $ei_new.12:int;
  var $ei_new.13:int;
  var $ei_new.14:int;
  var $row.8:int;
  var $col.8:int;
  var $ei_new.15:int;
  var $position.2:int;
  var $sum.2:int;
  var $ei_new.16:int;
  var $row.9:int;
  var $col.9:int;
  var $ei_new.17:int;
  var $row.10:int;
  var $col.10:int;
  var $ei_new.18:int;
  var $ei_new.19:int;
  var $position.3:int;
  var $sum.3:int;
  var $ei_new.20:int;
  var $row.11:int;
  var $col.11:int;
  var $ei_new.21:int;
  var $row.12:int;
  var $col.12:int;
  var $ei_new.22:int;
  var $ei_new.23:int;
  var $temp2.0:int;
  var $ei_new.24:int;
  var $ei_new.25:int;
  var $i.0:int;
  var $sum.4:int;
  var $ei_new.26:int;
  var $i.1:int;
  var $sum.5:int;
  var $i.2:int;
  var $i.3:int;
  var $ei_new.27:int;
  var $ei_new.28:int;
  var $ei_new.29:int;
  var $tMask_row.0:int;
  var $tMask_col.0:int;
  var $ei_new.30:int;
  var $ei_new.31:int;
  var $ic.1:int;
  var $jc.1:int;
  var $ja1.1:int;
  var $ja2.1:int;
  var $ia1.1:int;
  var $ia2.1:int;
  var $ja.1:int;
  var $s.2:int;
  var $ia.1:int;
  var $s.3:int;
  var $largest_value.0:int;
  var $largest_coordinate.0:int;
  var $ei_new.32:int;
  var $i.4:int;
  var $largest_value.1:int;
  var $largest_coordinate.1:int;
  var $largest_value.2:int;
  var $largest_coordinate.2:int;
  var $i.5:int;
  var $fin_max_val.0:int;
  var $fin_max_coo.0:int;
  var $fin_max_val.1:int;
  var $fin_max_coo.1:int;
  var $largest_row.0:int;
  var $largest_col.0:int;
  var $ei_new.33:int;
  var $row.13:int;
  var $col.13:int;
  var v641:int;
  var v642:int;
  var v348:int;
  var v349:int;
  var v350:int;
  var v351:int;
  var v636:int;
  var v637:int;
  var v638:int;
  var v639:int;
  var v640:int;
  var v44:int;
  var v85:int;
  var v86:int;
  var v87:int;
  var v951:int;
  var v952:int;
  var v953:int;
  var v954:int;
  var v955:int;
  var v956:bool;
  var v957:int;
  var v958:int;
  var v959:int;
  var v960:int;
  var v977:int;
  var v978:int;
  var v979:int;
  var v980:bool;
  var v981:int;
  var v982:int;
  var v983:int;
  var v984:int;
  var v985:int;
  var v986:int;
  var v987:int;
  var v988:int;
  var v989:int;
  var v990:int;
  var v392:int;
  var v393:int;
  var v394:int;
  var v395:int;
  var v593:int;
  var v594:bool;
  var v1035:int;
  var v1036:int;
  var v1037:int;
  var v1038:int;
  var v1039:int;
  var v1040:int;
  var v1041:int;
  var v1042:int;
  var v1043:int;
  var v1044:int;
  var v1045:bool;
  var v1046:int;
  var v1047:int;
  var v1048:int;
  var v1049:int;
  var v1050:bool;
  var v1051:int;
  var v1052:int;
  var v1053:int;
  var v1054:int;
  var v1055:int;
  var v1056:int;
  var v1057:int;
  var v1058:bool;
  var v270:int;
  var v1001:int;
  var v1002:int;
  var v1003:int;
  var v1004:bool;
  var v1009:int;
  var v1012:int;
  var v1005:int;
  var v1006:int;
  var v1007:int;
  var v1008:int;
  var v1018:int;
  var v1019:bool;
  var v1020:int;
  var v1091:int;
  var v1092:int;
  var v1093:int;
  var v1094:int;
  var v1104:int;
  var v1096:int;
  var v1097:int;
  var v1098:int;
  var v1099:int;
  var v1100:int;
  var v1101:int;
  var v1102:int;
  var v1103:int;
  var v1105:int;
  var v1106:int;
  var v1107:int;
  var v1108:int;
  var v1109:int;
  var v1110:int;
  var v1111:int;
  var v1112:int;
  var v1113:int;
  var v1114:int;
  var v1115:int;
  var v1116:int;
  var v1117:int;
  var v1118:bool;
  var v1119:bool;
  var v1120:int;
  var v1121:int;
  var v1122:int;
  var v1123:int;
  var v1124:int;
  var v1125:int;
  var v1126:int;
  var v1127:int;
  var v1128:int;
  var v1129:int;
  var v1130:int;
  var v1131:bool;
  var v1140:int;
  var v1141:int;
  var v1142:int;
  var v1143:int;
  var v1144:int;
  var v1145:bool;
  var v1146:int;
  var v1147:int;
  var v1148:int;
  var v1149:int;
  var v1150:int;
  var v1151:int;
  var v1132:int;
  var v1133:int;
  var v1134:int;
  var v1135:int;
  var v1136:int;
  var v1137:int;
  var v1138:int;
  var v1139:int;
  var v242:int;
  var v243:int;
  var v244:int;
  var v245:int;
  var v1059:bool;
  var v1060:int;
  var v1061:int;
  var v1062:int;
  var v1063:int;
  var v1064:bool;
  var v1065:int;
  var v1066:bool;
  var v1067:int;
  var v1068:int;
  var v1069:int;
  var v1070:int;
  var v1071:int;
  var v1072:int;
  var v1073:int;
  var v1074:int;
  var v1075:int;
  var v1076:int;
  var v1077:int;
  var v1078:int;
  var v1079:int;
  var v1080:int;
  var v1081:int;
  var v1082:bool;
  var v1083:int;
  var v1084:int;
  var v1085:int;
  var v1086:int;
  var v1087:int;
  var v1088:int;
  var v1089:int;
  var v1090:int;
  var v1095:int;
  var v251:int;
  var v252:int;
  var v253:int;
  var v254:int;
  var v943:int;
  var v944:int;
  var v945:int;
  var v946:int;
  var v947:int;
  var v948:int;
  var v949:int;
  var v950:int;
  var v182:int;
  var v183:int;
  var v184:int;
  var v185:int;
  var v186:int;
  var v305:int;
  var v187:int;
  var v188:int;
  var v189:int;
  var v190:int;
  var v300:int;
  var v301:int;
  var v302:int;
  var v191:bool;
  var v246:int;
  var v247:int;
  var v248:int;
  var v249:int;
  var v250:int;
  var v75:int;
  var v76:int;
  var v77:int;
  var v78:int;
  var v169:int;
  var v170:int;
  var v171:int;
  var v192:int;
  var v193:int;
  var v194:int;
  var v195:int;
  var v196:int;
  var v197:int;
  var v198:int;
  var v199:int;
  var v200:int;
  var v201:int;
  var v202:int;
  var v203:int;
  var v204:int;
  var v205:bool;
  var v206:int;
  var v207:int;
  var v208:int;
  var v209:int;
  var v210:int;
  var v211:int;
  var v212:int;
  var v213:int;
  var v214:int;
  var v215:int;
  var v216:int;
  var v217:int;
  var v218:int;
  var v219:int;
  var v220:int;
  var v221:int;
  var v222:int;
  var v335:int;
  var v336:int;
  var v337:int;
  var v338:int;
  var v339:int;
  var v340:int;
  var v239:int;
  var v240:int;
  var v241:bool;
  var v334:int;
  var v306:int;
  var v307:int;
  var v308:int;
  var v309:int;
  var v310:bool;
  var v311:int;
  var v312:int;
  var v313:int;
  var v314:int;
  var v315:int;
  var v316:int;
  var v317:int;
  var v318:int;
  var v319:int;
  var v320:int;
  var v321:int;
  var v322:int;
  var v323:int;
  var v324:bool;
  var v325:int;
  var v326:int;
  var v327:int;
  var v328:int;
  var v822:int;
  var v823:int;
  var v824:int;
  var v825:int;
  var v826:bool;
  var v827:int;
  var v149:int;
  var v464:int;
  var v465:int;
  var v173:int;
  var v174:int;
  var v175:int;
  var v176:int;
  var v177:bool;
  var v386:int;
  var v105:bool;
  var v90:int;
  var v91:int;
  var v716:int;
  var v717:int;
  var v718:int;
  var v719:int;
  var v693:int;
  var v694:int;
  var v695:int;
  var v696:int;
  var v697:int;
  var v428:int;
  var v429:int;
  var v285:int;
  var v286:int;
  var v287:int;
  var v288:int;
  var v289:bool;
  var v630:int;
  var v258:int;
  var v259:int;
  var v29:int;
  var v147:int;
  var v580:int;
  var v581:int;
  var v582:int;
  var v583:int;
  var v584:int;
  var v684:int;
  var v685:int;
  var v686:int;
  var v687:int;
  var v368:int;
  var v369:int;
  var v40:int;
  var v41:int;
  var v42:int;
  var v43:int;
  var v554:int;
  var v555:int;
  var v556:int;
  var v271:int;
  var v272:int;
  var v273:int;
  var v274:int;
  var v275:int;
  var v385:int;
  var v688:bool;
  var v689:int;
  var v690:int;
  var v691:int;
  var v692:int;
  var v178:int;
  var v179:int;
  var v180:int;
  var v181:int;
  var v347:bool;
  var v375:int;
  var v376:int;
  var v377:int;
  var v378:int;
  var v379:int;
  var v113:int;
  var v527:int;
  var v528:int;
  var v529:int;
  var v530:int;
  var v531:int;
  var v106:bool;
  var v303:int;
  var v518:int;
  var v519:int;
  var v520:int;
  var v521:int;
  var v522:bool;
  var v294:bool;
  var v107:int;
  var v108:int;
  var v281:int;
  var v282:int;
  var v283:int;
  var v284:int;
  var v965:int;
  var v966:bool;
  var v967:int;
  var v968:int;
  var v969:int;
  var v970:int;
  var v971:int;
  var v972:int;
  var v973:int;
  var v974:int;
  var v975:int;
  var v976:int;
  var v45:int;
  var v46:int;
  var v47:int;
  var v48:int;
  var v557:int;
  var v558:bool;
  var v559:int;
  var v643:int;
  var v644:int;
  var v645:bool;
  var v459:int;
  var v460:int;
  var v461:int;
  var v462:int;
  var v463:bool;
  var v295:bool;
  var v88:int;
  var v89:int;
  var v35:int;
  var v36:int;
  var v9:int;
  var v10:int;
  var v815:int;
  var v816:int;
  var v817:int;
  var v818:int;
  var v819:bool;
  var v820:int;
  var v821:int;
  var v7:int;
  var v8:int;
  var v887:bool;
  var v888:int;
  var v889:int;
  var v890:int;
  var v891:int;
  var v892:int;
  var v893:int;
  var v388:int;
  var v389:int;
  var v390:int;
  var v391:bool;
  var v835:int;
  var v836:int;
  var v837:int;
  var v838:int;
  var v720:int;
  var v721:int;
  var v722:int;
  var v723:int;
  var v724:bool;
  var v797:bool;
  var v798:int;
  var v799:int;
  var v800:int;
  var v801:int;
  var v872:int;
  var v873:int;
  var v874:int;
  var v875:int;
  var v876:bool;
  var v877:int;
  var v878:int;
  var v387:int;
  var v850:bool;
  var v851:int;
  var v852:int;
  var v853:int;
  var v854:int;
  var v855:int;
  var v450:int;
  var v451:int;
  var v452:int;
  var v453:int;
  var v454:int;
  var v138:int;
  var v150:int;
  var v151:int;
  var v152:int;
  var v153:int;
  var v114:int;
  var v115:int;
  var v116:int;
  var v117:int;
  var v560:int;
  var v482:int;
  var v483:int;
  var v646:int;
  var v647:int;
  var v631:int;
  var v632:int;
  var v633:int;
  var v634:int;
  var v635:bool;
  var v49:int;
  var v118:bool;
  var v727:int;
  var v484:int;
  var v485:int;
  var v486:bool;
  var v79:int;
  var v618:int;
  var v619:int;
  var v620:int;
  var v621:int;
  var v622:int;
  var v623:int;
  var v624:int;
  var v698:int;
  var v699:int;
  var v700:int;
  var v701:int;
  var v702:bool;
  var v802:int;
  var v803:int;
  var v804:int;
  var v805:int;
  var v806:int;
  var v807:int;
  var v808:int;
  var v809:int;
  var v915:int;
  var v916:int;
  var v917:int;
  var v918:int;
  var v919:int;
  var v920:int;
  var v921:int;
  var v779:int;
  var v780:int;
  var v781:int;
  var v782:int;
  var v783:bool;
  var v784:int;
  var v785:int;
  var v786:int;
  var v787:int;
  var v903:int;
  var v904:int;
  var v905:int;
  var v906:int;
  var v907:bool;
  var v908:int;
  var v909:int;
  var v343:int;
  var v344:int;
  var v345:int;
  var v346:int;
  var v752:int;
  var v753:int;
  var v754:int;
  var v755:int;
  var v756:int;
  var v757:int;
  var v758:int;
  var v759:int;
  var v760:int;
  var v761:bool;
  var v839:bool;
  var v840:int;
  var v922:int;
  var v923:int;
  var v924:int;
  var v925:int;
  var v926:bool;
  var v927:int;
  var v928:int;
  var v739:int;
  var v740:int;
  var v741:int;
  var v742:int;
  var v766:int;
  var v767:int;
  var v768:int;
  var v769:int;
  var v770:int;
  var v771:int;
  var v772:int;
  var v773:int;
  var v774:int;
  var v775:int;
  var v939:int;
  var v940:int;
  var v941:int;
  var v942:int;
  var v732:int;
  var v733:int;
  var v734:int;
  var v735:int;
  var v433:int;
  var v434:int;
  var v435:int;
  var v436:int;
  var v26:int;
  var v27:int;
  var v28:int;
  var v168:int;
  var v50:int;
  var v51:int;
  var v52:int;
  var v53:int;
  var v119:int;
  var v120:int;
  var v121:int;
  var v122:int;
  var v728:int;
  var v729:int;
  var v730:int;
  var v731:bool;
  var v561:int;
  var v562:int;
  var v487:int;
  var v488:int;
  var v489:int;
  var v490:int;
  var v491:int;
  var v492:int;
  var v648:int;
  var v649:int;
  var v650:int;
  var v651:int;
  var v54:int;
  var v563:int;
  var v564:int;
  var v565:bool;
  var v566:int;
  var v493:int;
  var v494:int;
  var v495:int;
  var v496:int;
  var v497:int;
  var v652:bool;
  var v653:int;
  var v654:int;
  var v655:int;
  var v656:int;
  var v466:int;
  var v467:int;
  var v468:int;
  var v469:int;
  var v470:bool;
  var v55:int;
  var v56:int;
  var v57:int;
  var v123:int;
  var v124:int;
  var v125:int;
  var v126:int;
  var v595:int;
  var v596:int;
  var v597:int;
  var v598:int;
  var v599:int;
  var v600:int;
  var v601:int;
  var v602:int;
  var v603:bool;
  var v102:int;
  var v103:int;
  var v104:int;
  var v127:int;
  var v430:int;
  var v431:int;
  var v432:int;
  var v223:int;
  var v224:int;
  var v225:int;
  var v226:int;
  var v227:bool;
  var v154:int;
  var v498:int;
  var v499:int;
  var v500:bool;
  var v657:int;
  var v658:int;
  var v659:int;
  var v660:int;
  var v661:int;
  var v828:int;
  var v829:int;
  var v830:int;
  var v831:int;
  var v832:int;
  var v833:int;
  var v834:bool;
  var v455:int;
  var v456:int;
  var v457:int;
  var v458:int;
  var v296:int;
  var v297:int;
  var v298:int;
  var v299:int;
  var v80:int;
  var v81:int;
  var v82:int;
  var v83:int;
  var v30:int;
  var v31:int;
  var v32:int;
  var v400:int;
  var v401:int;
  var v402:int;
  var v810:int;
  var v811:int;
  var v812:int;
  var v813:int;
  var v814:int;
  var v879:bool;
  var v710:int;
  var v711:int;
  var v712:int;
  var v713:int;
  var v714:int;
  var v715:int;
  var v416:int;
  var v417:int;
  var v418:int;
  var v419:int;
  var v991:int;
  var v992:int;
  var v993:int;
  var v994:int;
  var v995:bool;
  var v996:int;
  var v997:int;
  var v998:int;
  var v999:int;
  var v1000:int;
  var v261:int;
  var v262:int;
  var v263:int;
  var v264:int;
  var v265:bool;
  var v11:int;
  var v12:int;
  var v13:int;
  var v14:int;
  var v880:int;
  var v881:int;
  var v882:int;
  var v883:int;
  var v884:bool;
  var v885:int;
  var v886:int;
  var v762:int;
  var v763:int;
  var v764:int;
  var v765:int;
  var v396:int;
  var v397:int;
  var v398:int;
  var v399:int;
  var v856:int;
  var v857:int;
  var v858:int;
  var v859:int;
  var v860:bool;
  var v437:int;
  var v438:int;
  var v439:int;
  var v440:int;
  var v441:bool;
  var v139:int;
  var v140:int;
  var v141:int;
  var v142:int;
  var v58:int;
  var v59:int;
  var v128:int;
  var v501:int;
  var v502:int;
  var v503:int;
  var v504:int;
  var v662:int;
  var v663:int;
  var v664:int;
  var v665:int;
  var v666:bool;
  var v403:int;
  var v404:int;
  var v405:bool;
  var v228:int;
  var v229:int;
  var v230:int;
  var v15:int;
  var v505:int;
  var v506:int;
  var v507:int;
  var v508:int;
  var v667:int;
  var v668:int;
  var v669:int;
  var v670:int;
  var v406:int;
  var v407:int;
  var v408:int;
  var v409:int;
  var v231:int;
  var v16:int;
  var v17:int;
  var v18:int;
  var v19:int;
  var v60:int;
  var v148:bool;
  var v604:int;
  var v605:int;
  var v606:int;
  var v607:int;
  var v232:int;
  var v233:int;
  var v234:int;
  var v235:int;
  var v910:int;
  var v911:int;
  var v912:int;
  var v913:int;
  var v914:bool;
  var v776:int;
  var v777:int;
  var v778:int;
  var v870:int;
  var v871:bool;
  var v341:int;
  var v342:bool;
  var v747:bool;
  var v748:int;
  var v749:int;
  var v750:int;
  var v751:int;
  var v95:int;
  var v96:int;
  var v841:int;
  var v842:int;
  var v843:int;
  var v844:int;
  var v845:bool;
  var v846:int;
  var v847:int;
  var v848:int;
  var v849:int;
  var v2:int;
  var v0:int;
  var v1:int;
  var v3:int;
  var v4:int;
  var v5:int;
  var v736:bool;
  var v737:int;
  var v738:int;
  var v6:bool;
  var v929:int;
  var v930:int;
  var v931:int;
  var v932:int;
  var v933:int;
  var v934:int;
  var v935:int;
  var v936:int;
  var v937:int;
  var v938:bool;
  var v442:int;
  var v143:int;
  var v25:int;
  var v164:int;
  var v165:int;
  var v166:int;
  var v167:int;
  var v410:int;
  var v413:int;
  var v236:int;
  var v237:int;
  var v238:int;
  var v567:int;
  var v568:int;
  var v569:int;
  var v570:int;
  var v509:int;
  var v510:int;
  var v511:int;
  var v512:int;
  var v513:int;
  var v514:int;
  var v515:int;
  var v516:int;
  var v671:int;
  var v672:int;
  var v673:int;
  var v674:int;
  var v675:int;
  var v676:int;
  var v677:int;
  var v678:int;
  var v100:int;
  var v101:int;
  var v129:int;
  var v130:int;
  var v131:int;
  var v132:bool;
  var v571:bool;
  var v572:int;
  var v517:int;
  var v679:int;
  var v680:int;
  var v681:int;
  var v682:int;
  var v683:int;
  var v61:int;
  var v62:int;
  var v63:int;
  var v64:int;
  var v370:int;
  var v371:int;
  var v372:int;
  var v373:int;
  var v608:bool;
  var v609:int;
  var v610:int;
  var v611:int;
  var v612:int;
  var v97:int;
  var v98:int;
  var v99:int;
  var v374:bool;
  var v255:int;
  var v256:bool;
  var v144:int;
  var v145:int;
  var v146:int;
  var v92:int;
  var v93:int;
  var v94:int;
  var v133:int;
  var v134:int;
  var v135:int;
  var v136:int;
  var v1021:int;
  var v1022:int;
  var v1023:int;
  var v1024:int;
  var v1025:int;
  var v1026:int;
  var v1027:int;
  var v1028:bool;
  var v1033:bool;
  var v1034:bool;
  var v1029:int;
  var v1030:int;
  var v1031:int;
  var v1032:int;
  var v545:int;
  var v546:int;
  var v547:int;
  var v548:int;
  var v65:int;
  var v66:int;
  var v67:int;
  var v68:int;
  var v69:int;
  var v137:int;
  var v549:int;
  var v550:int;
  var v551:int;
  var v552:int;
  var v553:int;
  var v159:int;
  var v160:int;
  var v161:int;
  var v162:int;
  var v163:bool;
  var v155:int;
  var v156:int;
  var v157:int;
  var v158:int;
  var v481:int;
  var v22:int;
  var v23:int;
  var v24:int;
  var v477:int;
  var v478:int;
  var v479:int;
  var v480:int;
  var v541:int;
  var v542:int;
  var v543:int;
  var v544:int;
  var v585:bool;
  var v537:int;
  var v538:int;
  var v539:int;
  var v540:int;
  var v476:int;
  var v266:int;
  var v267:int;
  var v268:int;
  var v269:int;
  var v894:int;
  var v895:int;
  var v896:int;
  var v897:int;
  var v898:int;
  var v899:int;
  var v900:int;
  var v901:int;
  var v902:int;
  var v613:int;
  var v614:int;
  var v615:int;
  var v616:int;
  var v617:bool;
  var v411:int;
  var v412:int;
  var v414:int;
  var v415:int;
  var v625:int;
  var v626:int;
  var v627:int;
  var v628:int;
  var v629:int;
  var v84:int;
  var v33:int;
  var v34:int;
  var v471:int;
  var v472:int;
  var v473:int;
  var v474:int;
  var v475:bool;
  var v703:int;
  var v704:int;
  var v705:int;
  var v706:int;
  var v707:int;
  var v708:int;
  var v709:int;
  var v420:int;
  var v421:int;
  var v422:int;
  var v443:int;
  var v444:int;
  var v445:int;
  var v109:int;
  var v110:int;
  var v111:int;
  var v532:int;
  var v533:int;
  var v534:int;
  var v535:int;
  var v536:bool;
  var v357:int;
  var v961:bool;
  var v962:int;
  var v963:int;
  var v964:int;
  var v446:int;
  var v447:int;
  var v448:int;
  var v449:int;
  var v112:int;
  var v523:int;
  var v524:int;
  var v525:int;
  var v526:int;
  var v352:int;
  var v353:int;
  var v354:int;
  var v355:int;
  var v356:bool;
  var v276:int;
  var v277:int;
  var v278:int;
  var v279:int;
  var v280:bool;
  var v37:int;
  var v38:int;
  var v39:int;
  var v725:int;
  var v726:int;
  var v380:int;
  var v381:int;
  var v382:int;
  var v383:int;
  var v384:bool;
  var v304:int;
  var v70:int;
  var v71:int;
  var v72:int;
  var v73:int;
  var v586:int;
  var v587:int;
  var v588:int;
  var v589:int;
  var v590:int;
  var v591:int;
  var v592:int;
  var v20:int;
  var v21:int;
  var v74:int;
  var v329:int;
  var v330:int;
  var v331:int;
  var v332:int;
  var v333:bool;
  var v743:int;
  var v744:int;
  var v745:int;
  var v746:int;
  var v788:int;
  var v789:int;
  var v790:int;
  var v791:int;
  var v792:int;
  var v793:int;
  var v794:int;
  var v795:int;
  var v796:int;
  var v257:int;
  var v260:int;
  var v423:int;
  var v424:int;
  var v425:int;
  var v426:int;
  var v427:bool;
  var v363:int;
  var v364:int;
  var v365:int;
  var v366:int;
  var v367:int;
  var v172:int;
  var v290:int;
  var v291:int;
  var v292:int;
  var v293:int;
  var v573:int;
  var v574:int;
  var v575:int;
  var v576:int;
  var v577:int;
  var v578:int;
  var v579:int;
  var v1010:int;
  var v1011:int;
  var v1013:int;
  var v1014:int;
  var v1015:int;
  var v1016:int;
  var v1017:int;
  var v358:int;
  var v359:int;
  var v360:int;
  var v361:int;
  var v362:int;
  var v861:int;
  var v862:int;
  var v863:int;
  var v864:int;
  var v865:bool;
  var v866:int;
  var v867:int;
  var v868:int;
  var v869:int;
  var v1152:int;
  var v1153:int;
  var v1154:int;
  var v1155:int;
  var v1156:int;
  var v1157:int;
  var v1158:int;
  var v1159:int;
  var v1160:int;
  var v1161:int;
  var v1162:int;
  var v1163:int;
  var v1164:int;
  var v1165:int;
$0:
  assert {:block_sourceloc} {:sourceloc_num 1} true;
  $$d_common[0] := BV_EXTRACT($d_common.coerce0, 8, 0);
  $$d_common[1] := BV_EXTRACT($d_common.coerce0, 16, 8);
  $$d_common[2] := BV_EXTRACT($d_common.coerce0, 24, 16);
  $$d_common[3] := BV_EXTRACT($d_common.coerce0, 32, 24);
  $$d_common[4] := BV_EXTRACT($d_common.coerce1, 8, 0);
  $$d_common[5] := BV_EXTRACT($d_common.coerce1, 16, 8);
  $$d_common[6] := BV_EXTRACT($d_common.coerce1, 24, 16);
  $$d_common[7] := BV_EXTRACT($d_common.coerce1, 32, 24);
  $$d_common[8] := BV_EXTRACT($d_common.coerce2, 8, 0);
  $$d_common[9] := BV_EXTRACT($d_common.coerce2, 16, 8);
  $$d_common[10] := BV_EXTRACT($d_common.coerce2, 24, 16);
  $$d_common[11] := BV_EXTRACT($d_common.coerce2, 32, 24);
  $$d_common[12] := BV_EXTRACT($d_common.coerce3, 8, 0);
  $$d_common[13] := BV_EXTRACT($d_common.coerce3, 16, 8);
  $$d_common[14] := BV_EXTRACT($d_common.coerce3, 24, 16);
  $$d_common[15] := BV_EXTRACT($d_common.coerce3, 32, 24);
  $$d_common[16] := BV_EXTRACT($d_common.coerce4, 8, 0);
  $$d_common[17] := BV_EXTRACT($d_common.coerce4, 16, 8);
  $$d_common[18] := BV_EXTRACT($d_common.coerce4, 24, 16);
  $$d_common[19] := BV_EXTRACT($d_common.coerce4, 32, 24);
  $$d_common[20] := BV_EXTRACT($d_common.coerce5, 8, 0);
  $$d_common[21] := BV_EXTRACT($d_common.coerce5, 16, 8);
  $$d_common[22] := BV_EXTRACT($d_common.coerce5, 24, 16);
  $$d_common[23] := BV_EXTRACT($d_common.coerce5, 32, 24);
  $$d_common[24] := BV_EXTRACT($d_common.coerce6, 8, 0);
  $$d_common[25] := BV_EXTRACT($d_common.coerce6, 16, 8);
  $$d_common[26] := BV_EXTRACT($d_common.coerce6, 24, 16);
  $$d_common[27] := BV_EXTRACT($d_common.coerce6, 32, 24);
  $$d_common[28] := BV_EXTRACT($d_common.coerce7, 8, 0);
  $$d_common[29] := BV_EXTRACT($d_common.coerce7, 16, 8);
  $$d_common[30] := BV_EXTRACT($d_common.coerce7, 24, 16);
  $$d_common[31] := BV_EXTRACT($d_common.coerce7, 32, 24);
  $$d_common[32] := BV_EXTRACT($d_common.coerce8, 8, 0);
  $$d_common[33] := BV_EXTRACT($d_common.coerce8, 16, 8);
  $$d_common[34] := BV_EXTRACT($d_common.coerce8, 24, 16);
  $$d_common[35] := BV_EXTRACT($d_common.coerce8, 32, 24);
  $$d_common[36] := BV_EXTRACT($d_common.coerce9, 8, 0);
  $$d_common[37] := BV_EXTRACT($d_common.coerce9, 16, 8);
  $$d_common[38] := BV_EXTRACT($d_common.coerce9, 24, 16);
  $$d_common[39] := BV_EXTRACT($d_common.coerce9, 32, 24);
  $$d_common[40] := BV_EXTRACT($d_common.coerce10, 8, 0);
  $$d_common[41] := BV_EXTRACT($d_common.coerce10, 16, 8);
  $$d_common[42] := BV_EXTRACT($d_common.coerce10, 24, 16);
  $$d_common[43] := BV_EXTRACT($d_common.coerce10, 32, 24);
  $$d_common[44] := BV_EXTRACT($d_common.coerce11, 8, 0);
  $$d_common[45] := BV_EXTRACT($d_common.coerce11, 16, 8);
  $$d_common[46] := BV_EXTRACT($d_common.coerce11, 24, 16);
  $$d_common[47] := BV_EXTRACT($d_common.coerce11, 32, 24);
  $$d_common[48] := BV_EXTRACT($d_common.coerce12, 8, 0);
  $$d_common[49] := BV_EXTRACT($d_common.coerce12, 16, 8);
  $$d_common[50] := BV_EXTRACT($d_common.coerce12, 24, 16);
  $$d_common[51] := BV_EXTRACT($d_common.coerce12, 32, 24);
  $$d_common[52] := BV_EXTRACT($d_common.coerce13, 8, 0);
  $$d_common[53] := BV_EXTRACT($d_common.coerce13, 16, 8);
  $$d_common[54] := BV_EXTRACT($d_common.coerce13, 24, 16);
  $$d_common[55] := BV_EXTRACT($d_common.coerce13, 32, 24);
  $$d_common[56] := BV_EXTRACT($d_common.coerce14, 8, 0);
  $$d_common[57] := BV_EXTRACT($d_common.coerce14, 16, 8);
  $$d_common[58] := BV_EXTRACT($d_common.coerce14, 24, 16);
  $$d_common[59] := BV_EXTRACT($d_common.coerce14, 32, 24);
  $$d_common[60] := BV_EXTRACT($d_common.coerce15, 8, 0);
  $$d_common[61] := BV_EXTRACT($d_common.coerce15, 16, 8);
  $$d_common[62] := BV_EXTRACT($d_common.coerce15, 24, 16);
  $$d_common[63] := BV_EXTRACT($d_common.coerce15, 32, 24);
  $$d_common[64] := BV_EXTRACT($d_common.coerce16, 8, 0);
  $$d_common[65] := BV_EXTRACT($d_common.coerce16, 16, 8);
  $$d_common[66] := BV_EXTRACT($d_common.coerce16, 24, 16);
  $$d_common[67] := BV_EXTRACT($d_common.coerce16, 32, 24);
  $$d_common[68] := BV_EXTRACT($d_common.coerce17, 8, 0);
  $$d_common[69] := BV_EXTRACT($d_common.coerce17, 16, 8);
  $$d_common[70] := BV_EXTRACT($d_common.coerce17, 24, 16);
  $$d_common[71] := BV_EXTRACT($d_common.coerce17, 32, 24);
  $$d_common[72] := BV_EXTRACT($d_common.coerce18, 8, 0);
  $$d_common[73] := BV_EXTRACT($d_common.coerce18, 16, 8);
  $$d_common[74] := BV_EXTRACT($d_common.coerce18, 24, 16);
  $$d_common[75] := BV_EXTRACT($d_common.coerce18, 32, 24);
  $$d_common[76] := BV_EXTRACT($d_common.coerce19, 8, 0);
  $$d_common[77] := BV_EXTRACT($d_common.coerce19, 16, 8);
  $$d_common[78] := BV_EXTRACT($d_common.coerce19, 24, 16);
  $$d_common[79] := BV_EXTRACT($d_common.coerce19, 32, 24);
  $$d_common[80] := BV_EXTRACT($d_common.coerce20, 8, 0);
  $$d_common[81] := BV_EXTRACT($d_common.coerce20, 16, 8);
  $$d_common[82] := BV_EXTRACT($d_common.coerce20, 24, 16);
  $$d_common[83] := BV_EXTRACT($d_common.coerce20, 32, 24);
  $$d_common[84] := BV_EXTRACT($d_common.coerce21, 8, 0);
  $$d_common[85] := BV_EXTRACT($d_common.coerce21, 16, 8);
  $$d_common[86] := BV_EXTRACT($d_common.coerce21, 24, 16);
  $$d_common[87] := BV_EXTRACT($d_common.coerce21, 32, 24);
  $$d_common[88] := BV_EXTRACT($d_common.coerce22, 8, 0);
  $$d_common[89] := BV_EXTRACT($d_common.coerce22, 16, 8);
  $$d_common[90] := BV_EXTRACT($d_common.coerce22, 24, 16);
  $$d_common[91] := BV_EXTRACT($d_common.coerce22, 32, 24);
  $$d_common[92] := BV_EXTRACT($d_common.coerce23, 8, 0);
  $$d_common[93] := BV_EXTRACT($d_common.coerce23, 16, 8);
  $$d_common[94] := BV_EXTRACT($d_common.coerce23, 24, 16);
  $$d_common[95] := BV_EXTRACT($d_common.coerce23, 32, 24);
  $$d_common[96] := BV_EXTRACT($d_common.coerce24, 8, 0);
  $$d_common[97] := BV_EXTRACT($d_common.coerce24, 16, 8);
  $$d_common[98] := BV_EXTRACT($d_common.coerce24, 24, 16);
  $$d_common[99] := BV_EXTRACT($d_common.coerce24, 32, 24);
  $$d_common[100] := BV_EXTRACT($d_common.coerce25, 8, 0);
  $$d_common[101] := BV_EXTRACT($d_common.coerce25, 16, 8);
  $$d_common[102] := BV_EXTRACT($d_common.coerce25, 24, 16);
  $$d_common[103] := BV_EXTRACT($d_common.coerce25, 32, 24);
  $$d_common[104] := BV_EXTRACT($d_common.coerce26, 8, 0);
  $$d_common[105] := BV_EXTRACT($d_common.coerce26, 16, 8);
  $$d_common[106] := BV_EXTRACT($d_common.coerce26, 24, 16);
  $$d_common[107] := BV_EXTRACT($d_common.coerce26, 32, 24);
  $$d_common[108] := BV_EXTRACT($d_common.coerce27, 8, 0);
  $$d_common[109] := BV_EXTRACT($d_common.coerce27, 16, 8);
  $$d_common[110] := BV_EXTRACT($d_common.coerce27, 24, 16);
  $$d_common[111] := BV_EXTRACT($d_common.coerce27, 32, 24);
  $$d_common[112] := BV_EXTRACT($d_common.coerce28, 8, 0);
  $$d_common[113] := BV_EXTRACT($d_common.coerce28, 16, 8);
  $$d_common[114] := BV_EXTRACT($d_common.coerce28, 24, 16);
  $$d_common[115] := BV_EXTRACT($d_common.coerce28, 32, 24);
  $$d_common[116] := BV_EXTRACT($d_common.coerce29, 8, 0);
  $$d_common[117] := BV_EXTRACT($d_common.coerce29, 16, 8);
  $$d_common[118] := BV_EXTRACT($d_common.coerce29, 24, 16);
  $$d_common[119] := BV_EXTRACT($d_common.coerce29, 32, 24);
  $$d_common[120] := BV_EXTRACT($d_common.coerce30, 8, 0);
  $$d_common[121] := BV_EXTRACT($d_common.coerce30, 16, 8);
  $$d_common[122] := BV_EXTRACT($d_common.coerce30, 24, 16);
  $$d_common[123] := BV_EXTRACT($d_common.coerce30, 32, 24);
  $$d_common[124] := BV_EXTRACT($d_common.coerce31, 8, 0);
  $$d_common[125] := BV_EXTRACT($d_common.coerce31, 16, 8);
  $$d_common[126] := BV_EXTRACT($d_common.coerce31, 24, 16);
  $$d_common[127] := BV_EXTRACT($d_common.coerce31, 32, 24);
  $$d_common[128] := BV_EXTRACT($d_common.coerce32, 8, 0);
  $$d_common[129] := BV_EXTRACT($d_common.coerce32, 16, 8);
  $$d_common[130] := BV_EXTRACT($d_common.coerce32, 24, 16);
  $$d_common[131] := BV_EXTRACT($d_common.coerce32, 32, 24);
  $$d_common[132] := BV_EXTRACT($d_common.coerce33, 8, 0);
  $$d_common[133] := BV_EXTRACT($d_common.coerce33, 16, 8);
  $$d_common[134] := BV_EXTRACT($d_common.coerce33, 24, 16);
  $$d_common[135] := BV_EXTRACT($d_common.coerce33, 32, 24);
  $$d_common[136] := BV_EXTRACT($d_common.coerce34, 8, 0);
  $$d_common[137] := BV_EXTRACT($d_common.coerce34, 16, 8);
  $$d_common[138] := BV_EXTRACT($d_common.coerce34, 24, 16);
  $$d_common[139] := BV_EXTRACT($d_common.coerce34, 32, 24);
  $$d_common[140] := BV_EXTRACT($d_common.coerce35, 8, 0);
  $$d_common[141] := BV_EXTRACT($d_common.coerce35, 16, 8);
  $$d_common[142] := BV_EXTRACT($d_common.coerce35, 24, 16);
  $$d_common[143] := BV_EXTRACT($d_common.coerce35, 32, 24);
  $$d_common[144] := BV_EXTRACT($d_common.coerce36, 8, 0);
  $$d_common[145] := BV_EXTRACT($d_common.coerce36, 16, 8);
  $$d_common[146] := BV_EXTRACT($d_common.coerce36, 24, 16);
  $$d_common[147] := BV_EXTRACT($d_common.coerce36, 32, 24);
  $$d_common[148] := BV_EXTRACT($d_common.coerce37, 8, 0);
  $$d_common[149] := BV_EXTRACT($d_common.coerce37, 16, 8);
  $$d_common[150] := BV_EXTRACT($d_common.coerce37, 24, 16);
  $$d_common[151] := BV_EXTRACT($d_common.coerce37, 32, 24);
  $$d_common[152] := BV_EXTRACT($d_common.coerce38, 8, 0);
  $$d_common[153] := BV_EXTRACT($d_common.coerce38, 16, 8);
  $$d_common[154] := BV_EXTRACT($d_common.coerce38, 24, 16);
  $$d_common[155] := BV_EXTRACT($d_common.coerce38, 32, 24);
  $$d_common[156] := BV_EXTRACT($d_common.coerce39, 8, 0);
  $$d_common[157] := BV_EXTRACT($d_common.coerce39, 16, 8);
  $$d_common[158] := BV_EXTRACT($d_common.coerce39, 24, 16);
  $$d_common[159] := BV_EXTRACT($d_common.coerce39, 32, 24);
  $$d_common[160] := BV_EXTRACT($d_common.coerce40, 8, 0);
  $$d_common[161] := BV_EXTRACT($d_common.coerce40, 16, 8);
  $$d_common[162] := BV_EXTRACT($d_common.coerce40, 24, 16);
  $$d_common[163] := BV_EXTRACT($d_common.coerce40, 32, 24);
  $$d_common[164] := BV_EXTRACT($d_common.coerce41, 8, 0);
  $$d_common[165] := BV_EXTRACT($d_common.coerce41, 16, 8);
  $$d_common[166] := BV_EXTRACT($d_common.coerce41, 24, 16);
  $$d_common[167] := BV_EXTRACT($d_common.coerce41, 32, 24);
  $$d_common[168] := BV_EXTRACT($d_common.coerce42, 8, 0);
  $$d_common[169] := BV_EXTRACT($d_common.coerce42, 16, 8);
  $$d_common[170] := BV_EXTRACT($d_common.coerce42, 24, 16);
  $$d_common[171] := BV_EXTRACT($d_common.coerce42, 32, 24);
  $$d_common[172] := BV_EXTRACT($d_common.coerce43, 8, 0);
  $$d_common[173] := BV_EXTRACT($d_common.coerce43, 16, 8);
  $$d_common[174] := BV_EXTRACT($d_common.coerce43, 24, 16);
  $$d_common[175] := BV_EXTRACT($d_common.coerce43, 32, 24);
  $$d_common[176] := BV_EXTRACT($d_common.coerce44, 8, 0);
  $$d_common[177] := BV_EXTRACT($d_common.coerce44, 16, 8);
  $$d_common[178] := BV_EXTRACT($d_common.coerce44, 24, 16);
  $$d_common[179] := BV_EXTRACT($d_common.coerce44, 32, 24);
  $$d_common[180] := BV_EXTRACT($d_common.coerce45, 8, 0);
  $$d_common[181] := BV_EXTRACT($d_common.coerce45, 16, 8);
  $$d_common[182] := BV_EXTRACT($d_common.coerce45, 24, 16);
  $$d_common[183] := BV_EXTRACT($d_common.coerce45, 32, 24);
  $$d_common[184] := BV_EXTRACT($d_common.coerce46, 8, 0);
  $$d_common[185] := BV_EXTRACT($d_common.coerce46, 16, 8);
  $$d_common[186] := BV_EXTRACT($d_common.coerce46, 24, 16);
  $$d_common[187] := BV_EXTRACT($d_common.coerce46, 32, 24);
  $$d_common[188] := BV_EXTRACT($d_common.coerce47, 8, 0);
  $$d_common[189] := BV_EXTRACT($d_common.coerce47, 16, 8);
  $$d_common[190] := BV_EXTRACT($d_common.coerce47, 24, 16);
  $$d_common[191] := BV_EXTRACT($d_common.coerce47, 32, 24);
  $$d_common[192] := BV_EXTRACT($d_common.coerce48, 8, 0);
  $$d_common[193] := BV_EXTRACT($d_common.coerce48, 16, 8);
  $$d_common[194] := BV_EXTRACT($d_common.coerce48, 24, 16);
  $$d_common[195] := BV_EXTRACT($d_common.coerce48, 32, 24);
  $$d_common[196] := BV_EXTRACT($d_common.coerce49, 8, 0);
  $$d_common[197] := BV_EXTRACT($d_common.coerce49, 16, 8);
  $$d_common[198] := BV_EXTRACT($d_common.coerce49, 24, 16);
  $$d_common[199] := BV_EXTRACT($d_common.coerce49, 32, 24);
  $$d_common[200] := BV_EXTRACT($d_common.coerce50, 8, 0);
  $$d_common[201] := BV_EXTRACT($d_common.coerce50, 16, 8);
  $$d_common[202] := BV_EXTRACT($d_common.coerce50, 24, 16);
  $$d_common[203] := BV_EXTRACT($d_common.coerce50, 32, 24);
  $$d_common[204] := BV_EXTRACT($d_common.coerce51, 8, 0);
  $$d_common[205] := BV_EXTRACT($d_common.coerce51, 16, 8);
  $$d_common[206] := BV_EXTRACT($d_common.coerce51, 24, 16);
  $$d_common[207] := BV_EXTRACT($d_common.coerce51, 32, 24);
  $$d_common[208] := BV_EXTRACT($d_common.coerce52, 8, 0);
  $$d_common[209] := BV_EXTRACT($d_common.coerce52, 16, 8);
  $$d_common[210] := BV_EXTRACT($d_common.coerce52, 24, 16);
  $$d_common[211] := BV_EXTRACT($d_common.coerce52, 32, 24);
  $$d_common[212] := BV_EXTRACT($d_common.coerce53, 8, 0);
  $$d_common[213] := BV_EXTRACT($d_common.coerce53, 16, 8);
  $$d_common[214] := BV_EXTRACT($d_common.coerce53, 24, 16);
  $$d_common[215] := BV_EXTRACT($d_common.coerce53, 32, 24);
  $$d_common[216] := BV_EXTRACT($d_common.coerce54, 8, 0);
  $$d_common[217] := BV_EXTRACT($d_common.coerce54, 16, 8);
  $$d_common[218] := BV_EXTRACT($d_common.coerce54, 24, 16);
  $$d_common[219] := BV_EXTRACT($d_common.coerce54, 32, 24);
  $$d_common[220] := BV_EXTRACT($d_common.coerce55, 8, 0);
  $$d_common[221] := BV_EXTRACT($d_common.coerce55, 16, 8);
  $$d_common[222] := BV_EXTRACT($d_common.coerce55, 24, 16);
  $$d_common[223] := BV_EXTRACT($d_common.coerce55, 32, 24);
  $$d_common[224] := BV_EXTRACT($d_common.coerce56, 8, 0);
  $$d_common[225] := BV_EXTRACT($d_common.coerce56, 16, 8);
  $$d_common[226] := BV_EXTRACT($d_common.coerce56, 24, 16);
  $$d_common[227] := BV_EXTRACT($d_common.coerce56, 32, 24);
  $$d_common[228] := BV_EXTRACT($d_common.coerce57, 8, 0);
  $$d_common[229] := BV_EXTRACT($d_common.coerce57, 16, 8);
  $$d_common[230] := BV_EXTRACT($d_common.coerce57, 24, 16);
  $$d_common[231] := BV_EXTRACT($d_common.coerce57, 32, 24);
  $$d_common[232] := BV_EXTRACT($d_common.coerce58, 8, 0);
  $$d_common[233] := BV_EXTRACT($d_common.coerce58, 16, 8);
  $$d_common[234] := BV_EXTRACT($d_common.coerce58, 24, 16);
  $$d_common[235] := BV_EXTRACT($d_common.coerce58, 32, 24);
  $$d_common[236] := BV_EXTRACT($d_common.coerce59, 8, 0);
  $$d_common[237] := BV_EXTRACT($d_common.coerce59, 16, 8);
  $$d_common[238] := BV_EXTRACT($d_common.coerce59, 24, 16);
  $$d_common[239] := BV_EXTRACT($d_common.coerce59, 32, 24);
  $$d_common[240] := BV_EXTRACT($d_common.coerce60, 8, 0);
  $$d_common[241] := BV_EXTRACT($d_common.coerce60, 16, 8);
  $$d_common[242] := BV_EXTRACT($d_common.coerce60, 24, 16);
  $$d_common[243] := BV_EXTRACT($d_common.coerce60, 32, 24);
  $$d_common[244] := BV_EXTRACT($d_common.coerce61, 8, 0);
  $$d_common[245] := BV_EXTRACT($d_common.coerce61, 16, 8);
  $$d_common[246] := BV_EXTRACT($d_common.coerce61, 24, 16);
  $$d_common[247] := BV_EXTRACT($d_common.coerce61, 32, 24);
  $$d_common[248] := BV_EXTRACT($d_common.coerce62, 8, 0);
  $$d_common[249] := BV_EXTRACT($d_common.coerce62, 16, 8);
  $$d_common[250] := BV_EXTRACT($d_common.coerce62, 24, 16);
  $$d_common[251] := BV_EXTRACT($d_common.coerce62, 32, 24);
  $$d_common[252] := BV_EXTRACT($d_common.coerce63, 8, 0);
  $$d_common[253] := BV_EXTRACT($d_common.coerce63, 16, 8);
  $$d_common[254] := BV_EXTRACT($d_common.coerce63, 24, 16);
  $$d_common[255] := BV_EXTRACT($d_common.coerce63, 32, 24);
  $$d_common[256] := BV_EXTRACT($d_common.coerce64, 8, 0);
  $$d_common[257] := BV_EXTRACT($d_common.coerce64, 16, 8);
  $$d_common[258] := BV_EXTRACT($d_common.coerce64, 24, 16);
  $$d_common[259] := BV_EXTRACT($d_common.coerce64, 32, 24);
  $$d_common[260] := BV_EXTRACT($d_common.coerce65, 8, 0);
  $$d_common[261] := BV_EXTRACT($d_common.coerce65, 16, 8);
  $$d_common[262] := BV_EXTRACT($d_common.coerce65, 24, 16);
  $$d_common[263] := BV_EXTRACT($d_common.coerce65, 32, 24);
  $$d_common[264] := BV_EXTRACT($d_common.coerce66, 8, 0);
  $$d_common[265] := BV_EXTRACT($d_common.coerce66, 16, 8);
  $$d_common[266] := BV_EXTRACT($d_common.coerce66, 24, 16);
  $$d_common[267] := BV_EXTRACT($d_common.coerce66, 32, 24);
  $$d_common[268] := BV_EXTRACT($d_common.coerce67, 8, 0);
  $$d_common[269] := BV_EXTRACT($d_common.coerce67, 16, 8);
  $$d_common[270] := BV_EXTRACT($d_common.coerce67, 24, 16);
  $$d_common[271] := BV_EXTRACT($d_common.coerce67, 32, 24);
  $$d_common[272] := BV_EXTRACT($d_common.coerce68, 8, 0);
  $$d_common[273] := BV_EXTRACT($d_common.coerce68, 16, 8);
  $$d_common[274] := BV_EXTRACT($d_common.coerce68, 24, 16);
  $$d_common[275] := BV_EXTRACT($d_common.coerce68, 32, 24);
  $$d_common[276] := BV_EXTRACT($d_common.coerce69, 8, 0);
  $$d_common[277] := BV_EXTRACT($d_common.coerce69, 16, 8);
  $$d_common[278] := BV_EXTRACT($d_common.coerce69, 24, 16);
  $$d_common[279] := BV_EXTRACT($d_common.coerce69, 32, 24);
  $$d_common[280] := BV_EXTRACT($d_common.coerce70, 8, 0);
  $$d_common[281] := BV_EXTRACT($d_common.coerce70, 16, 8);
  $$d_common[282] := BV_EXTRACT($d_common.coerce70, 24, 16);
  $$d_common[283] := BV_EXTRACT($d_common.coerce70, 32, 24);
  $$d_common[284] := BV_EXTRACT($d_common.coerce71, 8, 0);
  $$d_common[285] := BV_EXTRACT($d_common.coerce71, 16, 8);
  $$d_common[286] := BV_EXTRACT($d_common.coerce71, 24, 16);
  $$d_common[287] := BV_EXTRACT($d_common.coerce71, 32, 24);
  $$d_common[288] := BV_EXTRACT($d_common.coerce72, 8, 0);
  $$d_common[289] := BV_EXTRACT($d_common.coerce72, 16, 8);
  $$d_common[290] := BV_EXTRACT($d_common.coerce72, 24, 16);
  $$d_common[291] := BV_EXTRACT($d_common.coerce72, 32, 24);
  $$d_common[292] := BV_EXTRACT($d_common.coerce73, 8, 0);
  $$d_common[293] := BV_EXTRACT($d_common.coerce73, 16, 8);
  $$d_common[294] := BV_EXTRACT($d_common.coerce73, 24, 16);
  $$d_common[295] := BV_EXTRACT($d_common.coerce73, 32, 24);
  $$d_common[296] := BV_EXTRACT($d_common.coerce74, 8, 0);
  $$d_common[297] := BV_EXTRACT($d_common.coerce74, 16, 8);
  $$d_common[298] := BV_EXTRACT($d_common.coerce74, 24, 16);
  $$d_common[299] := BV_EXTRACT($d_common.coerce74, 32, 24);
  $$d_common[300] := BV_EXTRACT($d_common.coerce75, 8, 0);
  $$d_common[301] := BV_EXTRACT($d_common.coerce75, 16, 8);
  $$d_common[302] := BV_EXTRACT($d_common.coerce75, 24, 16);
  $$d_common[303] := BV_EXTRACT($d_common.coerce75, 32, 24);
  $$d_common[304] := BV_EXTRACT($d_common.coerce76, 8, 0);
  $$d_common[305] := BV_EXTRACT($d_common.coerce76, 16, 8);
  $$d_common[306] := BV_EXTRACT($d_common.coerce76, 24, 16);
  $$d_common[307] := BV_EXTRACT($d_common.coerce76, 32, 24);
  $$d_common[308] := BV_EXTRACT($d_common.coerce77, 8, 0);
  $$d_common[309] := BV_EXTRACT($d_common.coerce77, 16, 8);
  $$d_common[310] := BV_EXTRACT($d_common.coerce77, 24, 16);
  $$d_common[311] := BV_EXTRACT($d_common.coerce77, 32, 24);
  $$d_common[312] := BV_EXTRACT($d_common.coerce78, 8, 0);
  $$d_common[313] := BV_EXTRACT($d_common.coerce78, 16, 8);
  $$d_common[314] := BV_EXTRACT($d_common.coerce78, 24, 16);
  $$d_common[315] := BV_EXTRACT($d_common.coerce78, 32, 24);
  $$d_common[316] := BV_EXTRACT($d_common.coerce79, 8, 0);
  $$d_common[317] := BV_EXTRACT($d_common.coerce79, 16, 8);
  $$d_common[318] := BV_EXTRACT($d_common.coerce79, 24, 16);
  $$d_common[319] := BV_EXTRACT($d_common.coerce79, 32, 24);
  $$d_common[320] := BV_EXTRACT($d_common.coerce80, 8, 0);
  $$d_common[321] := BV_EXTRACT($d_common.coerce80, 16, 8);
  $$d_common[322] := BV_EXTRACT($d_common.coerce80, 24, 16);
  $$d_common[323] := BV_EXTRACT($d_common.coerce80, 32, 24);
  $$d_common[324] := BV_EXTRACT($d_common.coerce81, 8, 0);
  $$d_common[325] := BV_EXTRACT($d_common.coerce81, 16, 8);
  $$d_common[326] := BV_EXTRACT($d_common.coerce81, 24, 16);
  $$d_common[327] := BV_EXTRACT($d_common.coerce81, 32, 24);
  $$d_common[328] := BV_EXTRACT($d_common.coerce82, 8, 0);
  $$d_common[329] := BV_EXTRACT($d_common.coerce82, 16, 8);
  $$d_common[330] := BV_EXTRACT($d_common.coerce82, 24, 16);
  $$d_common[331] := BV_EXTRACT($d_common.coerce82, 32, 24);
  $$d_common[332] := BV_EXTRACT($d_common.coerce83, 8, 0);
  $$d_common[333] := BV_EXTRACT($d_common.coerce83, 16, 8);
  $$d_common[334] := BV_EXTRACT($d_common.coerce83, 24, 16);
  $$d_common[335] := BV_EXTRACT($d_common.coerce83, 32, 24);
  $$d_common[336] := BV_EXTRACT($d_common.coerce84, 8, 0);
  $$d_common[337] := BV_EXTRACT($d_common.coerce84, 16, 8);
  $$d_common[338] := BV_EXTRACT($d_common.coerce84, 24, 16);
  $$d_common[339] := BV_EXTRACT($d_common.coerce84, 32, 24);
  $$d_common[340] := BV_EXTRACT($d_common.coerce85, 8, 0);
  $$d_common[341] := BV_EXTRACT($d_common.coerce85, 16, 8);
  $$d_common[342] := BV_EXTRACT($d_common.coerce85, 24, 16);
  $$d_common[343] := BV_EXTRACT($d_common.coerce85, 32, 24);
  $$d_common[344] := BV_EXTRACT($d_common.coerce86, 8, 0);
  $$d_common[345] := BV_EXTRACT($d_common.coerce86, 16, 8);
  $$d_common[346] := BV_EXTRACT($d_common.coerce86, 24, 16);
  $$d_common[347] := BV_EXTRACT($d_common.coerce86, 32, 24);
  $$d_common[348] := BV_EXTRACT($d_common.coerce87, 8, 0);
  $$d_common[349] := BV_EXTRACT($d_common.coerce87, 16, 8);
  $$d_common[350] := BV_EXTRACT($d_common.coerce87, 24, 16);
  $$d_common[351] := BV_EXTRACT($d_common.coerce87, 32, 24);
  $$d_common[352] := BV_EXTRACT($d_common.coerce88, 8, 0);
  $$d_common[353] := BV_EXTRACT($d_common.coerce88, 16, 8);
  $$d_common[354] := BV_EXTRACT($d_common.coerce88, 24, 16);
  $$d_common[355] := BV_EXTRACT($d_common.coerce88, 32, 24);
  $$d_common[356] := BV_EXTRACT($d_common.coerce89, 8, 0);
  $$d_common[357] := BV_EXTRACT($d_common.coerce89, 16, 8);
  $$d_common[358] := BV_EXTRACT($d_common.coerce89, 24, 16);
  $$d_common[359] := BV_EXTRACT($d_common.coerce89, 32, 24);
  $$d_common[360] := BV_EXTRACT($d_common.coerce90, 8, 0);
  $$d_common[361] := BV_EXTRACT($d_common.coerce90, 16, 8);
  $$d_common[362] := BV_EXTRACT($d_common.coerce90, 24, 16);
  $$d_common[363] := BV_EXTRACT($d_common.coerce90, 32, 24);
  $$d_common[364] := BV_EXTRACT($d_common.coerce91, 8, 0);
  $$d_common[365] := BV_EXTRACT($d_common.coerce91, 16, 8);
  $$d_common[366] := BV_EXTRACT($d_common.coerce91, 24, 16);
  $$d_common[367] := BV_EXTRACT($d_common.coerce91, 32, 24);
  $$d_common[368] := BV_EXTRACT($d_common.coerce92, 8, 0);
  $$d_common[369] := BV_EXTRACT($d_common.coerce92, 16, 8);
  $$d_common[370] := BV_EXTRACT($d_common.coerce92, 24, 16);
  $$d_common[371] := BV_EXTRACT($d_common.coerce92, 32, 24);
  $$d_common[372] := BV_EXTRACT($d_common.coerce93, 8, 0);
  $$d_common[373] := BV_EXTRACT($d_common.coerce93, 16, 8);
  $$d_common[374] := BV_EXTRACT($d_common.coerce93, 24, 16);
  $$d_common[375] := BV_EXTRACT($d_common.coerce93, 32, 24);
  $$d_common[376] := BV_EXTRACT($d_common.coerce94, 8, 0);
  $$d_common[377] := BV_EXTRACT($d_common.coerce94, 16, 8);
  $$d_common[378] := BV_EXTRACT($d_common.coerce94, 24, 16);
  $$d_common[379] := BV_EXTRACT($d_common.coerce94, 32, 24);
  $$d_common[380] := BV_EXTRACT($d_common.coerce95, 8, 0);
  $$d_common[381] := BV_EXTRACT($d_common.coerce95, 16, 8);
  $$d_common[382] := BV_EXTRACT($d_common.coerce95, 24, 16);
  $$d_common[383] := BV_EXTRACT($d_common.coerce95, 32, 24);
  $$d_common[384] := BV_EXTRACT($d_common.coerce96, 8, 0);
  $$d_common[385] := BV_EXTRACT($d_common.coerce96, 16, 8);
  $$d_common[386] := BV_EXTRACT($d_common.coerce96, 24, 16);
  $$d_common[387] := BV_EXTRACT($d_common.coerce96, 32, 24);
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[55], $$d_common[54]), $$d_common[53]), $$d_common[52]) == 20 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[35], $$d_common[34]), $$d_common[33]), $$d_common[32]) == 104 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[131], $$d_common[130]), $$d_common[129]), $$d_common[128]) == 0 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[127], $$d_common[126]), $$d_common[125]), $$d_common[124]) == 0 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[119], $$d_common[118]), $$d_common[117]), $$d_common[116]) == 17161 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[111], $$d_common[110]), $$d_common[109]), $$d_common[108]) == 131 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[83], $$d_common[82]), $$d_common[81]), $$d_common[80]) == 2601 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[75], $$d_common[74]), $$d_common[73]), $$d_common[72]) == 51 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[79], $$d_common[78]), $$d_common[77]), $$d_common[76]) == 51 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[327], $$d_common[326]), $$d_common[325]), $$d_common[324]) == 2601 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[319], $$d_common[318]), $$d_common[317]), $$d_common[316]) == 51 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[323], $$d_common[322]), $$d_common[321]), $$d_common[320]) == 51 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[103], $$d_common[102]), $$d_common[101]), $$d_common[100]) == 6561 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[95], $$d_common[94]), $$d_common[93]), $$d_common[92]) == 81 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[99], $$d_common[98]), $$d_common[97]), $$d_common[96]) == 81 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[135], $$d_common[134]), $$d_common[133]), $$d_common[132]) == 51 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[139], $$d_common[138]), $$d_common[137]), $$d_common[136]) == 51 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[151], $$d_common[150]), $$d_common[149]), $$d_common[148]) == 33489 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[143], $$d_common[142]), $$d_common[141]), $$d_common[140]) == 183 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[147], $$d_common[146]), $$d_common[145]), $$d_common[144]) == 183 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[167], $$d_common[166]), $$d_common[165]), $$d_common[164]) == 23973 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[159], $$d_common[158]), $$d_common[157]), $$d_common[156]) == 131 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[175], $$d_common[174]), $$d_common[173]), $$d_common[172]) == 52 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[183], $$d_common[182]), $$d_common[181]), $$d_common[180]) == 1 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[191], $$d_common[190]), $$d_common[189]), $$d_common[188]) == 1 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[199], $$d_common[198]), $$d_common[197]), $$d_common[196]) == 1 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[215], $$d_common[214]), $$d_common[213]), $$d_common[212]) == 23973 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[207], $$d_common[206]), $$d_common[205]), $$d_common[204]) == 131 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[231], $$d_common[230]), $$d_common[229]), $$d_common[228]) == 17161 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[223], $$d_common[222]), $$d_common[221]), $$d_common[220]) == 131 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[239], $$d_common[238]), $$d_common[237]), $$d_common[236]) == 1 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[247], $$d_common[246]), $$d_common[245]), $$d_common[244]) == 52 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[255], $$d_common[254]), $$d_common[253]), $$d_common[252]) == 1 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[263], $$d_common[262]), $$d_common[261]), $$d_common[260]) == 1 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[279], $$d_common[278]), $$d_common[277]), $$d_common[276]) == 17161 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[271], $$d_common[270]), $$d_common[269]), $$d_common[268]) == 131 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[295], $$d_common[294]), $$d_common[293]), $$d_common[292]) == 6561 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[287], $$d_common[286]), $$d_common[285]), $$d_common[284]) == 81 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[291], $$d_common[290]), $$d_common[289]), $$d_common[288]) == 81 then 1 else 0)) != 0;
  assume BV1_ZEXT32((if BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[311], $$d_common[310]), $$d_common[309]), $$d_common[308]) == 17161 then 1 else 0)) != 0;
  v0 := group_id_x;
  v1 := local_id_x;
  assert {:sourceloc} {:sourceloc_num 2} true;
  v2 := $$d_common[52];
  assert {:sourceloc} {:sourceloc_num 3} true;
  v3 := $$d_common[53];
  assert {:sourceloc} {:sourceloc_num 4} true;
  v4 := $$d_common[54];
  assert {:sourceloc} {:sourceloc_num 5} true;
  v5 := $$d_common[55];
  v6 := BV32_SLT(v0, BV_CONCAT(BV_CONCAT(BV_CONCAT(v5, v4), v3), v2));
  goto $truebb, $falsebb;
$1:
  assert {:block_sourceloc} {:sourceloc_num 6} true;
  assert {:sourceloc} {:sourceloc_num 7} true;
  v7 := $$d_common[80];
  assert {:sourceloc} {:sourceloc_num 8} true;
  v8 := $$d_common[81];
  assert {:sourceloc} {:sourceloc_num 9} true;
  v9 := $$d_common[82];
  assert {:sourceloc} {:sourceloc_num 10} true;
  v10 := $$d_common[83];
  $d_unique_point_no.0, $d_unique_d_Row.0, $d_unique_d_Col.0, $d_unique_d_tRowLoc.0, $d_unique_d_tColLoc.0, $d_in.0 := v0, MKPTR($arrayId$$d_endoRow, 0), MKPTR($arrayId$$d_endoCol, 0), MKPTR($arrayId$$d_tEndoRowLoc, 0), MKPTR($arrayId$$d_tEndoColLoc, 0), MKPTR($arrayId$$d_endoT, BV32_MUL(v0, BV_CONCAT(BV_CONCAT(BV_CONCAT(v10, v9), v8), v7)));
  goto $3;
$2:
  assert {:block_sourceloc} {:sourceloc_num 11} true;
  assert {:sourceloc} {:sourceloc_num 12} true;
  v11 := $$d_common[52];
  assert {:sourceloc} {:sourceloc_num 13} true;
  v12 := $$d_common[53];
  assert {:sourceloc} {:sourceloc_num 14} true;
  v13 := $$d_common[54];
  assert {:sourceloc} {:sourceloc_num 15} true;
  v14 := $$d_common[55];
  v15 := BV32_SUB(v0, BV_CONCAT(BV_CONCAT(BV_CONCAT(v14, v13), v12), v11));
  assert {:sourceloc} {:sourceloc_num 16} true;
  v16 := $$d_common[80];
  assert {:sourceloc} {:sourceloc_num 17} true;
  v17 := $$d_common[81];
  assert {:sourceloc} {:sourceloc_num 18} true;
  v18 := $$d_common[82];
  assert {:sourceloc} {:sourceloc_num 19} true;
  v19 := $$d_common[83];
  $d_unique_point_no.0, $d_unique_d_Row.0, $d_unique_d_Col.0, $d_unique_d_tRowLoc.0, $d_unique_d_tColLoc.0, $d_in.0 := v15, MKPTR($arrayId$$d_epiRow, 0), MKPTR($arrayId$$d_epiCol, 0), MKPTR($arrayId$$d_tEpiRowLoc, 0), MKPTR($arrayId$$d_tEpiColLoc, 0), MKPTR($arrayId$$d_epiT, BV32_MUL(v15, BV_CONCAT(BV_CONCAT(BV_CONCAT(v19, v18), v17), v16)));
  goto $3;
$3:
  assert {:block_sourceloc} {:sourceloc_num 20} true;
  assert {:sourceloc} {:sourceloc_num 21} true;
  v20 := $$d_common[100];
  assert {:sourceloc} {:sourceloc_num 22} true;
  v21 := $$d_common[101];
  assert {:sourceloc} {:sourceloc_num 23} true;
  v22 := $$d_common[102];
  assert {:sourceloc} {:sourceloc_num 24} true;
  v23 := $$d_common[103];
  v24 := BV32_MUL(v0, BV_CONCAT(BV_CONCAT(BV_CONCAT(v23, v22), v21), v20));
  assert {:sourceloc} {:sourceloc_num 25} true;
  v25 := $$d_common[116];
  assert {:sourceloc} {:sourceloc_num 26} true;
  v26 := $$d_common[117];
  assert {:sourceloc} {:sourceloc_num 27} true;
  v27 := $$d_common[118];
  assert {:sourceloc} {:sourceloc_num 28} true;
  v28 := $$d_common[119];
  v29 := BV32_MUL(v0, BV_CONCAT(BV_CONCAT(BV_CONCAT(v28, v27), v26), v25));
  assert {:sourceloc} {:sourceloc_num 29} true;
  v30 := $$d_common[148];
  assert {:sourceloc} {:sourceloc_num 30} true;
  v31 := $$d_common[149];
  assert {:sourceloc} {:sourceloc_num 31} true;
  v32 := $$d_common[150];
  assert {:sourceloc} {:sourceloc_num 32} true;
  v33 := $$d_common[151];
  v34 := BV32_MUL(v0, BV_CONCAT(BV_CONCAT(BV_CONCAT(v33, v32), v31), v30));
  assert {:sourceloc} {:sourceloc_num 33} true;
  v35 := $$d_common[164];
  assert {:sourceloc} {:sourceloc_num 34} true;
  v36 := $$d_common[165];
  assert {:sourceloc} {:sourceloc_num 35} true;
  v37 := $$d_common[166];
  assert {:sourceloc} {:sourceloc_num 36} true;
  v38 := $$d_common[167];
  v39 := BV32_MUL(v0, BV_CONCAT(BV_CONCAT(BV_CONCAT(v38, v37), v36), v35));
  assert {:sourceloc} {:sourceloc_num 37} true;
  v40 := $$d_common[212];
  assert {:sourceloc} {:sourceloc_num 38} true;
  v41 := $$d_common[213];
  assert {:sourceloc} {:sourceloc_num 39} true;
  v42 := $$d_common[214];
  assert {:sourceloc} {:sourceloc_num 40} true;
  v43 := $$d_common[215];
  v44 := BV32_MUL(v0, BV_CONCAT(BV_CONCAT(BV_CONCAT(v43, v42), v41), v40));
  assert {:sourceloc} {:sourceloc_num 41} true;
  v45 := $$d_common[228];
  assert {:sourceloc} {:sourceloc_num 42} true;
  v46 := $$d_common[229];
  assert {:sourceloc} {:sourceloc_num 43} true;
  v47 := $$d_common[230];
  assert {:sourceloc} {:sourceloc_num 44} true;
  v48 := $$d_common[231];
  v49 := BV32_MUL(v0, BV_CONCAT(BV_CONCAT(BV_CONCAT(v48, v47), v46), v45));
  assert {:sourceloc} {:sourceloc_num 45} true;
  v50 := $$d_common[276];
  assert {:sourceloc} {:sourceloc_num 46} true;
  v51 := $$d_common[277];
  assert {:sourceloc} {:sourceloc_num 47} true;
  v52 := $$d_common[278];
  assert {:sourceloc} {:sourceloc_num 48} true;
  v53 := $$d_common[279];
  v54 := BV32_MUL(v0, BV_CONCAT(BV_CONCAT(BV_CONCAT(v53, v52), v51), v50));
  assert {:sourceloc} {:sourceloc_num 49} true;
  v55 := $$d_common[292];
  assert {:sourceloc} {:sourceloc_num 50} true;
  v56 := $$d_common[293];
  assert {:sourceloc} {:sourceloc_num 51} true;
  v57 := $$d_common[294];
  assert {:sourceloc} {:sourceloc_num 52} true;
  v58 := $$d_common[295];
  v59 := BV32_MUL(v0, BV_CONCAT(BV_CONCAT(BV_CONCAT(v58, v57), v56), v55));
  assert {:sourceloc} {:sourceloc_num 53} true;
  v60 := $$d_common[308];
  assert {:sourceloc} {:sourceloc_num 54} true;
  v61 := $$d_common[309];
  assert {:sourceloc} {:sourceloc_num 55} true;
  v62 := $$d_common[310];
  assert {:sourceloc} {:sourceloc_num 56} true;
  v63 := $$d_common[311];
  v64 := BV32_MUL(v0, BV_CONCAT(BV_CONCAT(BV_CONCAT(v63, v62), v61), v60));
  assert {:sourceloc} {:sourceloc_num 57} true;
  v65 := $$d_common[324];
  assert {:sourceloc} {:sourceloc_num 58} true;
  v66 := $$d_common[325];
  assert {:sourceloc} {:sourceloc_num 59} true;
  v67 := $$d_common[326];
  assert {:sourceloc} {:sourceloc_num 60} true;
  v68 := $$d_common[327];
  v69 := BV32_MUL(v0, BV_CONCAT(BV_CONCAT(BV_CONCAT(v68, v67), v66), v65));
  assert {:sourceloc} {:sourceloc_num 61} true;
  v70 := $$d_common[340];
  assert {:sourceloc} {:sourceloc_num 62} true;
  v71 := $$d_common[341];
  assert {:sourceloc} {:sourceloc_num 63} true;
  v72 := $$d_common[342];
  assert {:sourceloc} {:sourceloc_num 64} true;
  v73 := $$d_common[343];
  v74 := BV32_MUL(v0, BV_CONCAT(BV_CONCAT(BV_CONCAT(v73, v72), v71), v70));
  assert {:sourceloc} {:sourceloc_num 65} true;
  v75 := $$d_common[372];
  assert {:sourceloc} {:sourceloc_num 66} true;
  v76 := $$d_common[373];
  assert {:sourceloc} {:sourceloc_num 67} true;
  v77 := $$d_common[374];
  assert {:sourceloc} {:sourceloc_num 68} true;
  v78 := $$d_common[375];
  v79 := BV32_MUL(v0, BV_CONCAT(BV_CONCAT(BV_CONCAT(v78, v77), v76), v75));
  assert {:sourceloc} {:sourceloc_num 69} true;
  v80 := $$d_common[80];
  assert {:sourceloc} {:sourceloc_num 70} true;
  v81 := $$d_common[81];
  assert {:sourceloc} {:sourceloc_num 71} true;
  v82 := $$d_common[82];
  assert {:sourceloc} {:sourceloc_num 72} true;
  v83 := $$d_common[83];
  v84 := BV32_MUL(v0, BV_CONCAT(BV_CONCAT(BV_CONCAT(v83, v82), v81), v80));
  assert {:sourceloc} {:sourceloc_num 73} true;
  v85 := $$d_common[76];
  assert {:sourceloc} {:sourceloc_num 74} true;
  v86 := $$d_common[77];
  assert {:sourceloc} {:sourceloc_num 75} true;
  v87 := $$d_common[78];
  assert {:sourceloc} {:sourceloc_num 76} true;
  v88 := $$d_common[79];
  v89 := BV32_MUL(v0, BV_CONCAT(BV_CONCAT(BV_CONCAT(v88, v87), v86), v85));
  assert {:sourceloc} {:sourceloc_num 77} true;
  v90 := $$d_common[316];
  assert {:sourceloc} {:sourceloc_num 78} true;
  v91 := $$d_common[317];
  assert {:sourceloc} {:sourceloc_num 79} true;
  v92 := $$d_common[318];
  assert {:sourceloc} {:sourceloc_num 80} true;
  v93 := $$d_common[319];
  v94 := BV32_MUL(v0, BV_CONCAT(BV_CONCAT(BV_CONCAT(v93, v92), v91), v90));
  assert {:sourceloc} {:sourceloc_num 81} true;
  v95 := $$d_common[364];
  assert {:sourceloc} {:sourceloc_num 82} true;
  v96 := $$d_common[365];
  assert {:sourceloc} {:sourceloc_num 83} true;
  v97 := $$d_common[366];
  assert {:sourceloc} {:sourceloc_num 84} true;
  v98 := $$d_common[367];
  v99 := BV32_MUL(v0, BV_CONCAT(BV_CONCAT(BV_CONCAT(v98, v97), v96), v95));
  assert {:sourceloc} {:sourceloc_num 85} true;
  v100 := $$d_common[364];
  assert {:sourceloc} {:sourceloc_num 86} true;
  v101 := $$d_common[365];
  assert {:sourceloc} {:sourceloc_num 87} true;
  v102 := $$d_common[366];
  assert {:sourceloc} {:sourceloc_num 88} true;
  v103 := $$d_common[367];
  v104 := BV32_MUL(v0, BV_CONCAT(BV_CONCAT(BV_CONCAT(v103, v102), v101), v100));
  v105 := $d_frame_no == 0;
  goto $truebb0, $falsebb0;
$4:
  assert {:block_sourceloc} {:sourceloc_num 89} true;
  call {:sourceloc_num 90} $bugle_barrier(-1, -1);
  v106 := v1 == 0;
  goto $truebb1, $falsebb1;
$5:
  assert {:block_sourceloc} {:sourceloc_num 91} true;
  assert {:sourceloc} {:sourceloc_num 92} true;
  v107 := $$d_common[32];
  assert {:sourceloc} {:sourceloc_num 93} true;
  v108 := $$d_common[33];
  assert {:sourceloc} {:sourceloc_num 94} true;
  v109 := $$d_common[34];
  assert {:sourceloc} {:sourceloc_num 95} true;
  v110 := $$d_common[35];
  v111 := BV32_ADD(BV32_MUL($d_unique_point_no.0, BV_CONCAT(BV_CONCAT(BV_CONCAT(v110, v109), v108), v107)), $d_frame_no);
  if (base#MKPTR($d_unique_d_Row.0) == $arrayId$$d_epiRow) {
    assert {:sourceloc} {:sourceloc_num 96} true;
    v112 := $$d_epiRow[BV32_ADD(offset#MKPTR($d_unique_d_Row.0), $d_unique_point_no.0)];
  } else if (base#MKPTR($d_unique_d_Row.0) == $arrayId$$d_endoRow) {
    assert {:sourceloc} {:sourceloc_num 97} true;
    v112 := $$d_endoRow[BV32_ADD(offset#MKPTR($d_unique_d_Row.0), $d_unique_point_no.0)];
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 98} false;
  }
  if (base#MKPTR($d_unique_d_tRowLoc.0) == $arrayId$$d_tEndoRowLoc) {
    assert {:sourceloc} {:sourceloc_num 99} true;
    $$d_tEndoRowLoc[BV32_ADD(offset#MKPTR($d_unique_d_tRowLoc.0), v111)] := v112;
  } else if (base#MKPTR($d_unique_d_tRowLoc.0) == $arrayId$$d_tEpiRowLoc) {
    assert {:sourceloc} {:sourceloc_num 100} true;
    $$d_tEpiRowLoc[BV32_ADD(offset#MKPTR($d_unique_d_tRowLoc.0), v111)] := v112;
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 101} false;
  }
  if (base#MKPTR($d_unique_d_Col.0) == $arrayId$$d_epiCol) {
    assert {:sourceloc} {:sourceloc_num 102} true;
    v113 := $$d_epiCol[BV32_ADD(offset#MKPTR($d_unique_d_Col.0), $d_unique_point_no.0)];
  } else if (base#MKPTR($d_unique_d_Col.0) == $arrayId$$d_endoCol) {
    assert {:sourceloc} {:sourceloc_num 103} true;
    v113 := $$d_endoCol[BV32_ADD(offset#MKPTR($d_unique_d_Col.0), $d_unique_point_no.0)];
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 104} false;
  }
  if (base#MKPTR($d_unique_d_tColLoc.0) == $arrayId$$d_tEndoColLoc) {
    assert {:sourceloc} {:sourceloc_num 105} true;
    $$d_tEndoColLoc[BV32_ADD(offset#MKPTR($d_unique_d_tColLoc.0), v111)] := v113;
  } else if (base#MKPTR($d_unique_d_tColLoc.0) == $arrayId$$d_tEpiColLoc) {
    assert {:sourceloc} {:sourceloc_num 106} true;
    $$d_tEpiColLoc[BV32_ADD(offset#MKPTR($d_unique_d_tColLoc.0), v111)] := v113;
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 107} false;
  }
  goto $6;
$6:
  assert {:block_sourceloc} {:sourceloc_num 108} true;
  $ei_new.0 := v1;
  goto $7;
$7:
  assert {:block_sourceloc} {:sourceloc_num 109} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 110} (if (BV32_SLT(v0, BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[55], $$d_common[54]), $$d_common[53]), $$d_common[52])) ==> BV1_XOR((if _WRITE_HAS_OCCURRED_$$d_epiT then 1 else 0), -1) == 1) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 111} (if (BV32_SGE(v0, BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[55], $$d_common[54]), $$d_common[53]), $$d_common[52])) ==> BV1_XOR((if _WRITE_HAS_OCCURRED_$$d_endoT then 1 else 0), -1) == 1) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 112} (if ((if (base#MKPTR($d_in.0) == $arrayId$$d_endoT) then _WRITE_HAS_OCCURRED_$$d_endoT else if (base#MKPTR($d_in.0) == $arrayId$$d_epiT) then _WRITE_HAS_OCCURRED_$$d_epiT else false) ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(offset#MKPTR($d_in.0), 4)), 4), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 113} (if ((if (base#MKPTR($d_in.0) == $arrayId$$d_endoT) then _WRITE_HAS_OCCURRED_$$d_endoT else if (base#MKPTR($d_in.0) == $arrayId$$d_epiT) then _WRITE_HAS_OCCURRED_$$d_epiT else false) ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(offset#MKPTR($d_in.0), 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[83], $$d_common[82]), $$d_common[81]), $$d_common[80]))) then 1 else 0) != 0;
  assert {:sourceloc} {:sourceloc_num 114} true;
  v114 := $$d_common[80];
  assert {:sourceloc} {:sourceloc_num 115} true;
  v115 := $$d_common[81];
  assert {:sourceloc} {:sourceloc_num 116} true;
  v116 := $$d_common[82];
  assert {:sourceloc} {:sourceloc_num 117} true;
  v117 := $$d_common[83];
  v118 := BV32_SLT($ei_new.0, BV_CONCAT(BV_CONCAT(BV_CONCAT(v117, v116), v115), v114));
  goto $truebb2, $falsebb2;
$8:
  assert {:block_sourceloc} {:sourceloc_num 118} true;
  assert {:sourceloc} {:sourceloc_num 119} true;
  v119 := $$d_common[72];
  assert {:sourceloc} {:sourceloc_num 120} true;
  v120 := $$d_common[73];
  assert {:sourceloc} {:sourceloc_num 121} true;
  v121 := $$d_common[74];
  assert {:sourceloc} {:sourceloc_num 122} true;
  v122 := $$d_common[75];
  assert {:sourceloc} {:sourceloc_num 123} true;
  v123 := $$d_common[72];
  assert {:sourceloc} {:sourceloc_num 124} true;
  v124 := $$d_common[73];
  assert {:sourceloc} {:sourceloc_num 125} true;
  v125 := $$d_common[74];
  assert {:sourceloc} {:sourceloc_num 126} true;
  v126 := $$d_common[75];
  v127 := BV32_SUB(BV32_ADD(BV32_SDIV(BV32_ADD($ei_new.0, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v126, v125), v124), v123)), 1), 1);
  assert {:sourceloc} {:sourceloc_num 127} true;
  v128 := $$d_common[72];
  assert {:sourceloc} {:sourceloc_num 128} true;
  v129 := $$d_common[73];
  assert {:sourceloc} {:sourceloc_num 129} true;
  v130 := $$d_common[74];
  assert {:sourceloc} {:sourceloc_num 130} true;
  v131 := $$d_common[75];
  v132 := BV32_SREM(BV32_ADD($ei_new.0, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v131, v130), v129), v128)) == 0;
  goto $truebb3, $falsebb3;
$9:
  assert {:block_sourceloc} {:sourceloc_num 131} true;
  assert {:sourceloc} {:sourceloc_num 132} true;
  v133 := $$d_common[72];
  assert {:sourceloc} {:sourceloc_num 133} true;
  v134 := $$d_common[73];
  assert {:sourceloc} {:sourceloc_num 134} true;
  v135 := $$d_common[74];
  assert {:sourceloc} {:sourceloc_num 135} true;
  v136 := $$d_common[75];
  $row.0, $col.0 := BV32_SUB(BV_CONCAT(BV_CONCAT(BV_CONCAT(v136, v135), v134), v133), 1), BV32_SUB(v127, 1);
  goto $10;
$10:
  assert {:block_sourceloc} {:sourceloc_num 136} true;
  if (base#MKPTR($d_unique_d_Row.0) == $arrayId$$d_epiRow) {
    assert {:sourceloc} {:sourceloc_num 137} true;
    v137 := $$d_epiRow[BV32_ADD(offset#MKPTR($d_unique_d_Row.0), $d_unique_point_no.0)];
  } else if (base#MKPTR($d_unique_d_Row.0) == $arrayId$$d_endoRow) {
    assert {:sourceloc} {:sourceloc_num 138} true;
    v137 := $$d_endoRow[BV32_ADD(offset#MKPTR($d_unique_d_Row.0), $d_unique_point_no.0)];
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 139} false;
  }
  if (base#MKPTR($d_unique_d_Col.0) == $arrayId$$d_epiCol) {
    assert {:sourceloc} {:sourceloc_num 140} true;
    v138 := $$d_epiCol[BV32_ADD(offset#MKPTR($d_unique_d_Col.0), $d_unique_point_no.0)];
  } else if (base#MKPTR($d_unique_d_Col.0) == $arrayId$$d_endoCol) {
    assert {:sourceloc} {:sourceloc_num 141} true;
    v138 := $$d_endoCol[BV32_ADD(offset#MKPTR($d_unique_d_Col.0), $d_unique_point_no.0)];
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 142} false;
  }
  assert {:sourceloc} {:sourceloc_num 143} true;
  v139 := $$d_common[36];
  assert {:sourceloc} {:sourceloc_num 144} true;
  v140 := $$d_common[37];
  assert {:sourceloc} {:sourceloc_num 145} true;
  v141 := $$d_common[38];
  assert {:sourceloc} {:sourceloc_num 146} true;
  v142 := $$d_common[39];
  assert {:sourceloc} {:sourceloc_num 147} true;
  v143 := $$d_frame[BV32_ADD(BV32_MUL(BV32_SUB(BV32_ADD(BV32_SUB(v138, 25), $col.0), 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v142, v141), v140), v139)), BV32_SUB(BV32_ADD(BV32_SUB(v137, 25), $row.0), 1))];
  assert {:sourceloc} {:sourceloc_num 148} true;
  v144 := $$d_common[72];
  assert {:sourceloc} {:sourceloc_num 149} true;
  v145 := $$d_common[73];
  assert {:sourceloc} {:sourceloc_num 150} true;
  v146 := $$d_common[74];
  assert {:sourceloc} {:sourceloc_num 151} true;
  v147 := $$d_common[75];
  if (base#MKPTR($d_in.0) == $arrayId$$d_endoT) {
    assert {:sourceloc} {:sourceloc_num 152} true;
    $$d_endoT[BV32_ADD(offset#MKPTR($d_in.0), BV32_ADD(BV32_MUL($col.0, BV_CONCAT(BV_CONCAT(BV_CONCAT(v147, v146), v145), v144)), $row.0))] := v143;
  } else if (base#MKPTR($d_in.0) == $arrayId$$d_epiT) {
    assert {:sourceloc} {:sourceloc_num 153} true;
    $$d_epiT[BV32_ADD(offset#MKPTR($d_in.0), BV32_ADD(BV32_MUL($col.0, BV_CONCAT(BV_CONCAT(BV_CONCAT(v147, v146), v145), v144)), $row.0))] := v143;
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 154} false;
  }
  $ei_new.0 := BV32_ADD($ei_new.0, 256);
  goto $7;
$11:
  assert {:block_sourceloc} {:sourceloc_num 155} true;
  call {:sourceloc_num 156} $bugle_barrier(-1, -1);
  goto $12;
$12:
  assert {:block_sourceloc} {:sourceloc_num 157} true;
  v148 := $d_frame_no != 0;
  goto $truebb4, $falsebb4;
$13:
  assert {:block_sourceloc} {:sourceloc_num 158} true;
  call {:sourceloc_num 159} $bugle_barrier(-1, -1);
  if (base#MKPTR($d_unique_d_Row.0) == $arrayId$$d_epiRow) {
    assert {:sourceloc} {:sourceloc_num 160} true;
    v149 := $$d_epiRow[BV32_ADD(offset#MKPTR($d_unique_d_Row.0), $d_unique_point_no.0)];
  } else if (base#MKPTR($d_unique_d_Row.0) == $arrayId$$d_endoRow) {
    assert {:sourceloc} {:sourceloc_num 161} true;
    v149 := $$d_endoRow[BV32_ADD(offset#MKPTR($d_unique_d_Row.0), $d_unique_point_no.0)];
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 162} false;
  }
  assert {:sourceloc} {:sourceloc_num 163} true;
  v150 := $$d_common[16];
  assert {:sourceloc} {:sourceloc_num 164} true;
  v151 := $$d_common[17];
  assert {:sourceloc} {:sourceloc_num 165} true;
  v152 := $$d_common[18];
  assert {:sourceloc} {:sourceloc_num 166} true;
  v153 := $$d_common[19];
  if (base#MKPTR($d_unique_d_Col.0) == $arrayId$$d_epiCol) {
    assert {:sourceloc} {:sourceloc_num 167} true;
    v154 := $$d_epiCol[BV32_ADD(offset#MKPTR($d_unique_d_Col.0), $d_unique_point_no.0)];
  } else if (base#MKPTR($d_unique_d_Col.0) == $arrayId$$d_endoCol) {
    assert {:sourceloc} {:sourceloc_num 168} true;
    v154 := $$d_endoCol[BV32_ADD(offset#MKPTR($d_unique_d_Col.0), $d_unique_point_no.0)];
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 169} false;
  }
  assert {:sourceloc} {:sourceloc_num 170} true;
  v155 := $$d_common[16];
  assert {:sourceloc} {:sourceloc_num 171} true;
  v156 := $$d_common[17];
  assert {:sourceloc} {:sourceloc_num 172} true;
  v157 := $$d_common[18];
  assert {:sourceloc} {:sourceloc_num 173} true;
  v158 := $$d_common[19];
  $ei_new.1 := v1;
  goto $14;
$14:
  assert {:block_sourceloc} {:sourceloc_num 174} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 175} (if (_WRITE_HAS_OCCURRED_$$d_in2_all ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v24, 4)), 4), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 176} (if (_WRITE_HAS_OCCURRED_$$d_in2_all ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v24, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[103], $$d_common[102]), $$d_common[101]), $$d_common[100]))) then 1 else 0) != 0;
  assert {:sourceloc} {:sourceloc_num 177} true;
  v159 := $$d_common[100];
  assert {:sourceloc} {:sourceloc_num 178} true;
  v160 := $$d_common[101];
  assert {:sourceloc} {:sourceloc_num 179} true;
  v161 := $$d_common[102];
  assert {:sourceloc} {:sourceloc_num 180} true;
  v162 := $$d_common[103];
  v163 := BV32_SLT($ei_new.1, BV_CONCAT(BV_CONCAT(BV_CONCAT(v162, v161), v160), v159));
  goto $truebb5, $falsebb5;
$15:
  assert {:block_sourceloc} {:sourceloc_num 181} true;
  assert {:sourceloc} {:sourceloc_num 182} true;
  v164 := $$d_common[92];
  assert {:sourceloc} {:sourceloc_num 183} true;
  v165 := $$d_common[93];
  assert {:sourceloc} {:sourceloc_num 184} true;
  v166 := $$d_common[94];
  assert {:sourceloc} {:sourceloc_num 185} true;
  v167 := $$d_common[95];
  assert {:sourceloc} {:sourceloc_num 186} true;
  v168 := $$d_common[92];
  assert {:sourceloc} {:sourceloc_num 187} true;
  v169 := $$d_common[93];
  assert {:sourceloc} {:sourceloc_num 188} true;
  v170 := $$d_common[94];
  assert {:sourceloc} {:sourceloc_num 189} true;
  v171 := $$d_common[95];
  v172 := BV32_SUB(BV32_ADD(BV32_SDIV(BV32_ADD($ei_new.1, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v171, v170), v169), v168)), 1), 1);
  assert {:sourceloc} {:sourceloc_num 190} true;
  v173 := $$d_common[92];
  assert {:sourceloc} {:sourceloc_num 191} true;
  v174 := $$d_common[93];
  assert {:sourceloc} {:sourceloc_num 192} true;
  v175 := $$d_common[94];
  assert {:sourceloc} {:sourceloc_num 193} true;
  v176 := $$d_common[95];
  v177 := BV32_SREM(BV32_ADD($ei_new.1, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v176, v175), v174), v173)) == 0;
  goto $truebb6, $falsebb6;
$16:
  assert {:block_sourceloc} {:sourceloc_num 194} true;
  assert {:sourceloc} {:sourceloc_num 195} true;
  v178 := $$d_common[92];
  assert {:sourceloc} {:sourceloc_num 196} true;
  v179 := $$d_common[93];
  assert {:sourceloc} {:sourceloc_num 197} true;
  v180 := $$d_common[94];
  assert {:sourceloc} {:sourceloc_num 198} true;
  v181 := $$d_common[95];
  $row.1, $col.1 := BV32_SUB(BV_CONCAT(BV_CONCAT(BV_CONCAT(v181, v180), v179), v178), 1), BV32_SUB(v172, 1);
  goto $17;
$17:
  assert {:block_sourceloc} {:sourceloc_num 199} true;
  assert {:sourceloc} {:sourceloc_num 200} true;
  v182 := $$d_common[36];
  assert {:sourceloc} {:sourceloc_num 201} true;
  v183 := $$d_common[37];
  assert {:sourceloc} {:sourceloc_num 202} true;
  v184 := $$d_common[38];
  assert {:sourceloc} {:sourceloc_num 203} true;
  v185 := $$d_common[39];
  assert {:sourceloc} {:sourceloc_num 204} true;
  v186 := $$d_frame[BV32_ADD(BV32_MUL(BV32_SUB(BV32_ADD($col.1, BV32_SUB(v154, BV_CONCAT(BV_CONCAT(BV_CONCAT(v158, v157), v156), v155))), 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v185, v184), v183), v182)), BV32_SUB(BV32_ADD($row.1, BV32_SUB(v149, BV_CONCAT(BV_CONCAT(BV_CONCAT(v153, v152), v151), v150))), 1))];
  assert {:sourceloc} {:sourceloc_num 205} true;
  $$d_in2_all[BV32_ADD(v24, $ei_new.1)] := v186;
  $ei_new.1 := BV32_ADD($ei_new.1, 256);
  goto $14;
$18:
  assert {:block_sourceloc} {:sourceloc_num 206} true;
  call {:sourceloc_num 207} $bugle_barrier(-1, -1);
  $ei_new.2 := v1;
  goto $19;
$19:
  assert {:block_sourceloc} {:sourceloc_num 208} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 209} (if (_WRITE_HAS_OCCURRED_$$d_in_mod_temp_all ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v84, 4)), 4), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 210} (if (_WRITE_HAS_OCCURRED_$$d_in_mod_temp_all ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v84, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[83], $$d_common[82]), $$d_common[81]), $$d_common[80]))) then 1 else 0) != 0;
  assert {:sourceloc} {:sourceloc_num 211} true;
  v187 := $$d_common[80];
  assert {:sourceloc} {:sourceloc_num 212} true;
  v188 := $$d_common[81];
  assert {:sourceloc} {:sourceloc_num 213} true;
  v189 := $$d_common[82];
  assert {:sourceloc} {:sourceloc_num 214} true;
  v190 := $$d_common[83];
  v191 := BV32_SLT($ei_new.2, BV_CONCAT(BV_CONCAT(BV_CONCAT(v190, v189), v188), v187));
  goto $truebb7, $falsebb7;
$20:
  assert {:block_sourceloc} {:sourceloc_num 215} true;
  assert {:sourceloc} {:sourceloc_num 216} true;
  v192 := $$d_common[72];
  assert {:sourceloc} {:sourceloc_num 217} true;
  v193 := $$d_common[73];
  assert {:sourceloc} {:sourceloc_num 218} true;
  v194 := $$d_common[74];
  assert {:sourceloc} {:sourceloc_num 219} true;
  v195 := $$d_common[75];
  assert {:sourceloc} {:sourceloc_num 220} true;
  v196 := $$d_common[72];
  assert {:sourceloc} {:sourceloc_num 221} true;
  v197 := $$d_common[73];
  assert {:sourceloc} {:sourceloc_num 222} true;
  v198 := $$d_common[74];
  assert {:sourceloc} {:sourceloc_num 223} true;
  v199 := $$d_common[75];
  v200 := BV32_SUB(BV32_ADD(BV32_SDIV(BV32_ADD($ei_new.2, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v199, v198), v197), v196)), 1), 1);
  assert {:sourceloc} {:sourceloc_num 224} true;
  v201 := $$d_common[72];
  assert {:sourceloc} {:sourceloc_num 225} true;
  v202 := $$d_common[73];
  assert {:sourceloc} {:sourceloc_num 226} true;
  v203 := $$d_common[74];
  assert {:sourceloc} {:sourceloc_num 227} true;
  v204 := $$d_common[75];
  v205 := BV32_SREM(BV32_ADD($ei_new.2, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v204, v203), v202), v201)) == 0;
  goto $truebb8, $falsebb8;
$21:
  assert {:block_sourceloc} {:sourceloc_num 228} true;
  assert {:sourceloc} {:sourceloc_num 229} true;
  v206 := $$d_common[72];
  assert {:sourceloc} {:sourceloc_num 230} true;
  v207 := $$d_common[73];
  assert {:sourceloc} {:sourceloc_num 231} true;
  v208 := $$d_common[74];
  assert {:sourceloc} {:sourceloc_num 232} true;
  v209 := $$d_common[75];
  $row.2, $col.2 := BV32_SUB(BV_CONCAT(BV_CONCAT(BV_CONCAT(v209, v208), v207), v206), 1), BV32_SUB(v200, 1);
  goto $22;
$22:
  assert {:block_sourceloc} {:sourceloc_num 233} true;
  assert {:sourceloc} {:sourceloc_num 234} true;
  v210 := $$d_common[72];
  assert {:sourceloc} {:sourceloc_num 235} true;
  v211 := $$d_common[73];
  assert {:sourceloc} {:sourceloc_num 236} true;
  v212 := $$d_common[74];
  assert {:sourceloc} {:sourceloc_num 237} true;
  v213 := $$d_common[75];
  assert {:sourceloc} {:sourceloc_num 238} true;
  v214 := $$d_common[72];
  assert {:sourceloc} {:sourceloc_num 239} true;
  v215 := $$d_common[73];
  assert {:sourceloc} {:sourceloc_num 240} true;
  v216 := $$d_common[74];
  assert {:sourceloc} {:sourceloc_num 241} true;
  v217 := $$d_common[75];
  assert {:sourceloc} {:sourceloc_num 242} true;
  v218 := $$d_common[72];
  assert {:sourceloc} {:sourceloc_num 243} true;
  v219 := $$d_common[73];
  assert {:sourceloc} {:sourceloc_num 244} true;
  v220 := $$d_common[74];
  assert {:sourceloc} {:sourceloc_num 245} true;
  v221 := $$d_common[75];
  if (base#MKPTR($d_in.0) == $arrayId$$d_endoT) {
    assert {:sourceloc} {:sourceloc_num 246} true;
    v222 := $$d_endoT[BV32_ADD(offset#MKPTR($d_in.0), BV32_ADD(BV32_MUL(BV32_SUB(BV32_SUB(BV_CONCAT(BV_CONCAT(BV_CONCAT(v217, v216), v215), v214), 1), $col.2), BV_CONCAT(BV_CONCAT(BV_CONCAT(v221, v220), v219), v218)), BV32_SUB(BV32_SUB(BV_CONCAT(BV_CONCAT(BV_CONCAT(v213, v212), v211), v210), 1), $row.2)))];
  } else if (base#MKPTR($d_in.0) == $arrayId$$d_epiT) {
    assert {:sourceloc} {:sourceloc_num 247} true;
    v222 := $$d_epiT[BV32_ADD(offset#MKPTR($d_in.0), BV32_ADD(BV32_MUL(BV32_SUB(BV32_SUB(BV_CONCAT(BV_CONCAT(BV_CONCAT(v217, v216), v215), v214), 1), $col.2), BV_CONCAT(BV_CONCAT(BV_CONCAT(v221, v220), v219), v218)), BV32_SUB(BV32_SUB(BV_CONCAT(BV_CONCAT(BV_CONCAT(v213, v212), v211), v210), 1), $row.2)))];
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 248} false;
  }
  assert {:sourceloc} {:sourceloc_num 249} true;
  $$d_in_mod_temp_all[BV32_ADD(v84, $ei_new.2)] := v222;
  $ei_new.2 := BV32_ADD($ei_new.2, 256);
  goto $19;
$23:
  assert {:block_sourceloc} {:sourceloc_num 250} true;
  call {:sourceloc_num 251} $bugle_barrier(-1, -1);
  $ei_new.3 := v1;
  goto $24;
$24:
  assert {:block_sourceloc} {:sourceloc_num 252} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 253} (if (_WRITE_HAS_OCCURRED_$$d_conv_all ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v29, 4)), 4), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 254} (if (_WRITE_HAS_OCCURRED_$$d_conv_all ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v29, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[119], $$d_common[118]), $$d_common[117]), $$d_common[116]))) then 1 else 0) != 0;
  assert {:sourceloc} {:sourceloc_num 255} true;
  v223 := $$d_common[116];
  assert {:sourceloc} {:sourceloc_num 256} true;
  v224 := $$d_common[117];
  assert {:sourceloc} {:sourceloc_num 257} true;
  v225 := $$d_common[118];
  assert {:sourceloc} {:sourceloc_num 258} true;
  v226 := $$d_common[119];
  v227 := BV32_SLT($ei_new.3, BV_CONCAT(BV_CONCAT(BV_CONCAT(v226, v225), v224), v223));
  goto $truebb9, $falsebb9;
$25:
  assert {:block_sourceloc} {:sourceloc_num 259} true;
  assert {:sourceloc} {:sourceloc_num 260} true;
  v228 := $$d_common[108];
  assert {:sourceloc} {:sourceloc_num 261} true;
  v229 := $$d_common[109];
  assert {:sourceloc} {:sourceloc_num 262} true;
  v230 := $$d_common[110];
  assert {:sourceloc} {:sourceloc_num 263} true;
  v231 := $$d_common[111];
  assert {:sourceloc} {:sourceloc_num 264} true;
  v232 := $$d_common[108];
  assert {:sourceloc} {:sourceloc_num 265} true;
  v233 := $$d_common[109];
  assert {:sourceloc} {:sourceloc_num 266} true;
  v234 := $$d_common[110];
  assert {:sourceloc} {:sourceloc_num 267} true;
  v235 := $$d_common[111];
  v236 := BV32_ADD(BV32_SDIV(BV32_ADD($ei_new.3, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v235, v234), v233), v232)), 1);
  assert {:sourceloc} {:sourceloc_num 268} true;
  v237 := $$d_common[108];
  assert {:sourceloc} {:sourceloc_num 269} true;
  v238 := $$d_common[109];
  assert {:sourceloc} {:sourceloc_num 270} true;
  v239 := $$d_common[110];
  assert {:sourceloc} {:sourceloc_num 271} true;
  v240 := $$d_common[111];
  v241 := BV32_SREM(BV32_ADD($ei_new.3, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v240, v239), v238), v237)) == 0;
  goto $truebb10, $falsebb10;
$26:
  assert {:block_sourceloc} {:sourceloc_num 272} true;
  assert {:sourceloc} {:sourceloc_num 273} true;
  v242 := $$d_common[108];
  assert {:sourceloc} {:sourceloc_num 274} true;
  v243 := $$d_common[109];
  assert {:sourceloc} {:sourceloc_num 275} true;
  v244 := $$d_common[110];
  assert {:sourceloc} {:sourceloc_num 276} true;
  v245 := $$d_common[111];
  $ic.0, $jc.0 := BV_CONCAT(BV_CONCAT(BV_CONCAT(v245, v244), v243), v242), BV32_SUB(v236, 1);
  goto $27;
$27:
  assert {:block_sourceloc} {:sourceloc_num 277} true;
  assert {:sourceloc} {:sourceloc_num 278} true;
  v246 := $$d_common[128];
  assert {:sourceloc} {:sourceloc_num 279} true;
  v247 := $$d_common[129];
  assert {:sourceloc} {:sourceloc_num 280} true;
  v248 := $$d_common[130];
  assert {:sourceloc} {:sourceloc_num 281} true;
  v249 := $$d_common[131];
  v250 := BV32_ADD($jc.0, BV_CONCAT(BV_CONCAT(BV_CONCAT(v249, v248), v247), v246));
  v251 := BV32_ADD(v250, 1);
  assert {:sourceloc} {:sourceloc_num 282} true;
  v252 := $$d_common[96];
  assert {:sourceloc} {:sourceloc_num 283} true;
  v253 := $$d_common[97];
  assert {:sourceloc} {:sourceloc_num 284} true;
  v254 := $$d_common[98];
  assert {:sourceloc} {:sourceloc_num 285} true;
  v255 := $$d_common[99];
  v256 := BV32_SLT(BV_CONCAT(BV_CONCAT(BV_CONCAT(v255, v254), v253), v252), v251);
  goto $truebb11, $falsebb11;
$28:
  assert {:block_sourceloc} {:sourceloc_num 286} true;
  assert {:sourceloc} {:sourceloc_num 287} true;
  v257 := $$d_common[96];
  assert {:sourceloc} {:sourceloc_num 288} true;
  v258 := $$d_common[97];
  assert {:sourceloc} {:sourceloc_num 289} true;
  v259 := $$d_common[98];
  assert {:sourceloc} {:sourceloc_num 290} true;
  v260 := $$d_common[99];
  $ja1.0 := BV32_SUB(v251, BV_CONCAT(BV_CONCAT(BV_CONCAT(v260, v259), v258), v257));
  goto $30;
$29:
  assert {:block_sourceloc} {:sourceloc_num 291} true;
  $ja1.0 := 1;
  goto $30;
$30:
  assert {:block_sourceloc} {:sourceloc_num 292} true;
  assert {:sourceloc} {:sourceloc_num 293} true;
  v261 := $$d_common[76];
  assert {:sourceloc} {:sourceloc_num 294} true;
  v262 := $$d_common[77];
  assert {:sourceloc} {:sourceloc_num 295} true;
  v263 := $$d_common[78];
  assert {:sourceloc} {:sourceloc_num 296} true;
  v264 := $$d_common[79];
  v265 := BV32_SLT(BV_CONCAT(BV_CONCAT(BV_CONCAT(v264, v263), v262), v261), v250);
  goto $truebb12, $falsebb12;
$31:
  assert {:block_sourceloc} {:sourceloc_num 297} true;
  assert {:sourceloc} {:sourceloc_num 298} true;
  v266 := $$d_common[76];
  assert {:sourceloc} {:sourceloc_num 299} true;
  v267 := $$d_common[77];
  assert {:sourceloc} {:sourceloc_num 300} true;
  v268 := $$d_common[78];
  assert {:sourceloc} {:sourceloc_num 301} true;
  v269 := $$d_common[79];
  $ja2.0 := BV_CONCAT(BV_CONCAT(BV_CONCAT(v269, v268), v267), v266);
  goto $33;
$32:
  assert {:block_sourceloc} {:sourceloc_num 302} true;
  $ja2.0 := v250;
  goto $33;
$33:
  assert {:block_sourceloc} {:sourceloc_num 303} true;
  assert {:sourceloc} {:sourceloc_num 304} true;
  v270 := $$d_common[124];
  assert {:sourceloc} {:sourceloc_num 305} true;
  v271 := $$d_common[125];
  assert {:sourceloc} {:sourceloc_num 306} true;
  v272 := $$d_common[126];
  assert {:sourceloc} {:sourceloc_num 307} true;
  v273 := $$d_common[127];
  v274 := BV32_ADD($ic.0, BV_CONCAT(BV_CONCAT(BV_CONCAT(v273, v272), v271), v270));
  v275 := BV32_ADD(v274, 1);
  assert {:sourceloc} {:sourceloc_num 308} true;
  v276 := $$d_common[92];
  assert {:sourceloc} {:sourceloc_num 309} true;
  v277 := $$d_common[93];
  assert {:sourceloc} {:sourceloc_num 310} true;
  v278 := $$d_common[94];
  assert {:sourceloc} {:sourceloc_num 311} true;
  v279 := $$d_common[95];
  v280 := BV32_SLT(BV_CONCAT(BV_CONCAT(BV_CONCAT(v279, v278), v277), v276), v275);
  goto $truebb13, $falsebb13;
$34:
  assert {:block_sourceloc} {:sourceloc_num 312} true;
  assert {:sourceloc} {:sourceloc_num 313} true;
  v281 := $$d_common[92];
  assert {:sourceloc} {:sourceloc_num 314} true;
  v282 := $$d_common[93];
  assert {:sourceloc} {:sourceloc_num 315} true;
  v283 := $$d_common[94];
  assert {:sourceloc} {:sourceloc_num 316} true;
  v284 := $$d_common[95];
  $ia1.0 := BV32_SUB(v275, BV_CONCAT(BV_CONCAT(BV_CONCAT(v284, v283), v282), v281));
  goto $36;
$35:
  assert {:block_sourceloc} {:sourceloc_num 317} true;
  $ia1.0 := 1;
  goto $36;
$36:
  assert {:block_sourceloc} {:sourceloc_num 318} true;
  assert {:sourceloc} {:sourceloc_num 319} true;
  v285 := $$d_common[72];
  assert {:sourceloc} {:sourceloc_num 320} true;
  v286 := $$d_common[73];
  assert {:sourceloc} {:sourceloc_num 321} true;
  v287 := $$d_common[74];
  assert {:sourceloc} {:sourceloc_num 322} true;
  v288 := $$d_common[75];
  v289 := BV32_SLT(BV_CONCAT(BV_CONCAT(BV_CONCAT(v288, v287), v286), v285), v274);
  goto $truebb14, $falsebb14;
$37:
  assert {:block_sourceloc} {:sourceloc_num 323} true;
  assert {:sourceloc} {:sourceloc_num 324} true;
  v290 := $$d_common[72];
  assert {:sourceloc} {:sourceloc_num 325} true;
  v291 := $$d_common[73];
  assert {:sourceloc} {:sourceloc_num 326} true;
  v292 := $$d_common[74];
  assert {:sourceloc} {:sourceloc_num 327} true;
  v293 := $$d_common[75];
  $ia2.0 := BV_CONCAT(BV_CONCAT(BV_CONCAT(v293, v292), v291), v290);
  goto $39;
$38:
  assert {:block_sourceloc} {:sourceloc_num 328} true;
  $ia2.0 := v274;
  goto $39;
$39:
  assert {:block_sourceloc} {:sourceloc_num 329} true;
  $ja.0, $s.0 := $ja1.0, 0;
  goto $40;
$40:
  assert {:block_sourceloc} {:sourceloc_num 330} true;
  v294 := BV32_SLE($ja.0, $ja2.0);
  goto $truebb15, $falsebb15;
$41:
  assert {:block_sourceloc} {:sourceloc_num 331} true;
  $ia.0, $s.1 := $ia1.0, $s.0;
  goto $42;
$42:
  assert {:block_sourceloc} {:sourceloc_num 332} true;
  v295 := BV32_SLE($ia.0, $ia2.0);
  goto $truebb16, $falsebb16;
$43:
  assert {:block_sourceloc} {:sourceloc_num 333} true;
  assert {:sourceloc} {:sourceloc_num 334} true;
  v296 := $$d_common[72];
  assert {:sourceloc} {:sourceloc_num 335} true;
  v297 := $$d_common[73];
  assert {:sourceloc} {:sourceloc_num 336} true;
  v298 := $$d_common[74];
  assert {:sourceloc} {:sourceloc_num 337} true;
  v299 := $$d_common[75];
  assert {:sourceloc} {:sourceloc_num 338} true;
  v300 := $$d_in_mod_temp_all[BV32_ADD(v84, BV32_SUB(BV32_ADD(BV32_MUL(BV_CONCAT(BV_CONCAT(BV_CONCAT(v299, v298), v297), v296), BV32_SUB($ja.0, 1)), $ia.0), 1))];
  assert {:sourceloc} {:sourceloc_num 339} true;
  v301 := $$d_common[92];
  assert {:sourceloc} {:sourceloc_num 340} true;
  v302 := $$d_common[93];
  assert {:sourceloc} {:sourceloc_num 341} true;
  v303 := $$d_common[94];
  assert {:sourceloc} {:sourceloc_num 342} true;
  v304 := $$d_common[95];
  assert {:sourceloc} {:sourceloc_num 343} true;
  v305 := $$d_in2_all[BV32_ADD(v24, BV32_SUB(BV32_ADD(BV32_MUL(BV_CONCAT(BV_CONCAT(BV_CONCAT(v304, v303), v302), v301), BV32_SUB(BV32_SUB(v251, $ja.0), 1)), BV32_SUB(v275, $ia.0)), 1))];
  goto $44;
$44:
  assert {:block_sourceloc} {:sourceloc_num 344} true;
  $ia.0, $s.1 := BV32_ADD($ia.0, 1), FADD32(FMUL32(v300, v305), $s.1);
  goto $42;
$45:
  assert {:block_sourceloc} {:sourceloc_num 345} true;
  goto $46;
$46:
  assert {:block_sourceloc} {:sourceloc_num 346} true;
  $ja.0, $s.0 := BV32_ADD($ja.0, 1), $s.1;
  goto $40;
$47:
  assert {:block_sourceloc} {:sourceloc_num 347} true;
  assert {:sourceloc} {:sourceloc_num 348} true;
  $$d_conv_all[BV32_ADD(v29, $ei_new.3)] := $s.0;
  $ei_new.3 := BV32_ADD($ei_new.3, 256);
  goto $24;
$48:
  assert {:block_sourceloc} {:sourceloc_num 349} true;
  call {:sourceloc_num 350} $bugle_barrier(-1, -1);
  $ei_new.4 := v1;
  goto $49;
$49:
  assert {:block_sourceloc} {:sourceloc_num 351} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 352} (if (_WRITE_HAS_OCCURRED_$$d_in2_pad_cumv_all ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v34, 4)), 4), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 353} (if (_WRITE_HAS_OCCURRED_$$d_in2_pad_cumv_all ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v34, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[151], $$d_common[150]), $$d_common[149]), $$d_common[148]))) then 1 else 0) != 0;
  assert {:sourceloc} {:sourceloc_num 354} true;
  v306 := $$d_common[148];
  assert {:sourceloc} {:sourceloc_num 355} true;
  v307 := $$d_common[149];
  assert {:sourceloc} {:sourceloc_num 356} true;
  v308 := $$d_common[150];
  assert {:sourceloc} {:sourceloc_num 357} true;
  v309 := $$d_common[151];
  v310 := BV32_SLT($ei_new.4, BV_CONCAT(BV_CONCAT(BV_CONCAT(v309, v308), v307), v306));
  goto $truebb17, $falsebb17;
$50:
  assert {:block_sourceloc} {:sourceloc_num 358} true;
  assert {:sourceloc} {:sourceloc_num 359} true;
  v311 := $$d_common[140];
  assert {:sourceloc} {:sourceloc_num 360} true;
  v312 := $$d_common[141];
  assert {:sourceloc} {:sourceloc_num 361} true;
  v313 := $$d_common[142];
  assert {:sourceloc} {:sourceloc_num 362} true;
  v314 := $$d_common[143];
  assert {:sourceloc} {:sourceloc_num 363} true;
  v315 := $$d_common[140];
  assert {:sourceloc} {:sourceloc_num 364} true;
  v316 := $$d_common[141];
  assert {:sourceloc} {:sourceloc_num 365} true;
  v317 := $$d_common[142];
  assert {:sourceloc} {:sourceloc_num 366} true;
  v318 := $$d_common[143];
  v319 := BV32_SUB(BV32_ADD(BV32_SDIV(BV32_ADD($ei_new.4, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v318, v317), v316), v315)), 1), 1);
  assert {:sourceloc} {:sourceloc_num 367} true;
  v320 := $$d_common[140];
  assert {:sourceloc} {:sourceloc_num 368} true;
  v321 := $$d_common[141];
  assert {:sourceloc} {:sourceloc_num 369} true;
  v322 := $$d_common[142];
  assert {:sourceloc} {:sourceloc_num 370} true;
  v323 := $$d_common[143];
  v324 := BV32_SREM(BV32_ADD($ei_new.4, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v323, v322), v321), v320)) == 0;
  goto $truebb18, $falsebb18;
$51:
  assert {:block_sourceloc} {:sourceloc_num 371} true;
  assert {:sourceloc} {:sourceloc_num 372} true;
  v325 := $$d_common[140];
  assert {:sourceloc} {:sourceloc_num 373} true;
  v326 := $$d_common[141];
  assert {:sourceloc} {:sourceloc_num 374} true;
  v327 := $$d_common[142];
  assert {:sourceloc} {:sourceloc_num 375} true;
  v328 := $$d_common[143];
  $row.3, $col.3 := BV32_SUB(BV_CONCAT(BV_CONCAT(BV_CONCAT(v328, v327), v326), v325), 1), BV32_SUB(v319, 1);
  goto $52;
$52:
  assert {:block_sourceloc} {:sourceloc_num 376} true;
  assert {:sourceloc} {:sourceloc_num 377} true;
  v329 := $$d_common[132];
  assert {:sourceloc} {:sourceloc_num 378} true;
  v330 := $$d_common[133];
  assert {:sourceloc} {:sourceloc_num 379} true;
  v331 := $$d_common[134];
  assert {:sourceloc} {:sourceloc_num 380} true;
  v332 := $$d_common[135];
  v333 := BV32_SGT($row.3, BV32_SUB(BV_CONCAT(BV_CONCAT(BV_CONCAT(v332, v331), v330), v329), 1));
  goto $truebb19, $falsebb19;
$53:
  assert {:block_sourceloc} {:sourceloc_num 381} true;
  assert {:sourceloc} {:sourceloc_num 382} true;
  v334 := $$d_common[132];
  assert {:sourceloc} {:sourceloc_num 383} true;
  v335 := $$d_common[133];
  assert {:sourceloc} {:sourceloc_num 384} true;
  v336 := $$d_common[134];
  assert {:sourceloc} {:sourceloc_num 385} true;
  v337 := $$d_common[135];
  assert {:sourceloc} {:sourceloc_num 386} true;
  v338 := $$d_common[92];
  assert {:sourceloc} {:sourceloc_num 387} true;
  v339 := $$d_common[93];
  assert {:sourceloc} {:sourceloc_num 388} true;
  v340 := $$d_common[94];
  assert {:sourceloc} {:sourceloc_num 389} true;
  v341 := $$d_common[95];
  v342 := BV32_SLT($row.3, BV32_ADD(BV_CONCAT(BV_CONCAT(BV_CONCAT(v337, v336), v335), v334), BV_CONCAT(BV_CONCAT(BV_CONCAT(v341, v340), v339), v338)));
  goto $truebb20, $falsebb20;
$54:
  assert {:block_sourceloc} {:sourceloc_num 390} true;
  assert {:sourceloc} {:sourceloc_num 391} true;
  v343 := $$d_common[136];
  assert {:sourceloc} {:sourceloc_num 392} true;
  v344 := $$d_common[137];
  assert {:sourceloc} {:sourceloc_num 393} true;
  v345 := $$d_common[138];
  assert {:sourceloc} {:sourceloc_num 394} true;
  v346 := $$d_common[139];
  v347 := BV32_SGT($col.3, BV32_SUB(BV_CONCAT(BV_CONCAT(BV_CONCAT(v346, v345), v344), v343), 1));
  goto $truebb21, $falsebb21;
$55:
  assert {:block_sourceloc} {:sourceloc_num 395} true;
  assert {:sourceloc} {:sourceloc_num 396} true;
  v348 := $$d_common[136];
  assert {:sourceloc} {:sourceloc_num 397} true;
  v349 := $$d_common[137];
  assert {:sourceloc} {:sourceloc_num 398} true;
  v350 := $$d_common[138];
  assert {:sourceloc} {:sourceloc_num 399} true;
  v351 := $$d_common[139];
  assert {:sourceloc} {:sourceloc_num 400} true;
  v352 := $$d_common[96];
  assert {:sourceloc} {:sourceloc_num 401} true;
  v353 := $$d_common[97];
  assert {:sourceloc} {:sourceloc_num 402} true;
  v354 := $$d_common[98];
  assert {:sourceloc} {:sourceloc_num 403} true;
  v355 := $$d_common[99];
  v356 := BV32_SLT($col.3, BV32_ADD(BV_CONCAT(BV_CONCAT(BV_CONCAT(v351, v350), v349), v348), BV_CONCAT(BV_CONCAT(BV_CONCAT(v355, v354), v353), v352)));
  goto $truebb22, $falsebb22;
$56:
  assert {:block_sourceloc} {:sourceloc_num 404} true;
  assert {:sourceloc} {:sourceloc_num 405} true;
  v357 := $$d_common[132];
  assert {:sourceloc} {:sourceloc_num 406} true;
  v358 := $$d_common[133];
  assert {:sourceloc} {:sourceloc_num 407} true;
  v359 := $$d_common[134];
  assert {:sourceloc} {:sourceloc_num 408} true;
  v360 := $$d_common[135];
  assert {:sourceloc} {:sourceloc_num 409} true;
  v361 := $$d_common[136];
  assert {:sourceloc} {:sourceloc_num 410} true;
  v362 := $$d_common[137];
  assert {:sourceloc} {:sourceloc_num 411} true;
  v363 := $$d_common[138];
  assert {:sourceloc} {:sourceloc_num 412} true;
  v364 := $$d_common[139];
  assert {:sourceloc} {:sourceloc_num 413} true;
  v365 := $$d_common[92];
  assert {:sourceloc} {:sourceloc_num 414} true;
  v366 := $$d_common[93];
  assert {:sourceloc} {:sourceloc_num 415} true;
  v367 := $$d_common[94];
  assert {:sourceloc} {:sourceloc_num 416} true;
  v368 := $$d_common[95];
  assert {:sourceloc} {:sourceloc_num 417} true;
  v369 := $$d_in2_all[BV32_ADD(v24, BV32_ADD(BV32_MUL(BV32_SUB($col.3, BV_CONCAT(BV_CONCAT(BV_CONCAT(v364, v363), v362), v361)), BV_CONCAT(BV_CONCAT(BV_CONCAT(v368, v367), v366), v365)), BV32_SUB($row.3, BV_CONCAT(BV_CONCAT(BV_CONCAT(v360, v359), v358), v357))))];
  assert {:sourceloc} {:sourceloc_num 418} true;
  $$d_in2_pad_cumv_all[BV32_ADD(v34, $ei_new.4)] := v369;
  goto $58;
$57:
  assert {:block_sourceloc} {:sourceloc_num 419} true;
  assert {:sourceloc} {:sourceloc_num 420} true;
  $$d_in2_pad_cumv_all[BV32_ADD(v34, $ei_new.4)] := 0;
  goto $58;
$58:
  assert {:block_sourceloc} {:sourceloc_num 421} true;
  $ei_new.4 := BV32_ADD($ei_new.4, 256);
  goto $49;
$59:
  assert {:block_sourceloc} {:sourceloc_num 422} true;
  call {:sourceloc_num 423} $bugle_barrier(-1, -1);
  $ei_new.5 := v1;
  goto $60;
$60:
  assert {:block_sourceloc} {:sourceloc_num 424} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 425} (if (BV32_AND(BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))), BV1_ZEXT32((if _WRITE_HAS_OCCURRED_$$d_in2_pad_cumv_all then 1 else 0))) != 0 ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v34, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[143], $$d_common[142]), $$d_common[141]), $$d_common[140])), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 426} (if (BV32_AND(BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))), BV1_ZEXT32((if _WRITE_HAS_OCCURRED_$$d_in2_pad_cumv_all then 1 else 0))) != 0 ==> BV32_ULT(BV32_UDIV(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v34, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[143], $$d_common[142]), $$d_common[141]), $$d_common[140])), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[147], $$d_common[146]), $$d_common[145]), $$d_common[144]))) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 427} (if (BV32_AND(BV1_ZEXT32(BV1_XOR((if BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))) != 0 then 1 else 0), -1)), BV1_ZEXT32((if _WRITE_HAS_OCCURRED_$$d_in2_pad_cumv_all then 1 else 0))) != 0 ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v34, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[151], $$d_common[150]), $$d_common[149]), $$d_common[148]))) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 428} (if (_READ_HAS_OCCURRED_$$d_in2_pad_cumv_all ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v34, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[143], $$d_common[142]), $$d_common[141]), $$d_common[140])), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 429} (if (_READ_HAS_OCCURRED_$$d_in2_pad_cumv_all ==> BV32_ULT(BV32_UDIV(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v34, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[143], $$d_common[142]), $$d_common[141]), $$d_common[140])), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[147], $$d_common[146]), $$d_common[145]), $$d_common[144]))) then 1 else 0) != 0;
  assert {:sourceloc} {:sourceloc_num 430} true;
  v370 := $$d_common[144];
  assert {:sourceloc} {:sourceloc_num 431} true;
  v371 := $$d_common[145];
  assert {:sourceloc} {:sourceloc_num 432} true;
  v372 := $$d_common[146];
  assert {:sourceloc} {:sourceloc_num 433} true;
  v373 := $$d_common[147];
  v374 := BV32_SLT($ei_new.5, BV_CONCAT(BV_CONCAT(BV_CONCAT(v373, v372), v371), v370));
  goto $truebb23, $falsebb23;
$61:
  assert {:block_sourceloc} {:sourceloc_num 434} true;
  assert {:sourceloc} {:sourceloc_num 435} true;
  v375 := $$d_common[140];
  assert {:sourceloc} {:sourceloc_num 436} true;
  v376 := $$d_common[141];
  assert {:sourceloc} {:sourceloc_num 437} true;
  v377 := $$d_common[142];
  assert {:sourceloc} {:sourceloc_num 438} true;
  v378 := $$d_common[143];
  v379 := BV32_MUL($ei_new.5, BV_CONCAT(BV_CONCAT(BV_CONCAT(v378, v377), v376), v375));
  $position.0, $sum.0 := v379, 0;
  goto $62;
$62:
  assert {:block_sourceloc} {:sourceloc_num 439} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 440} (if (BV32_AND(BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))), BV1_ZEXT32((if _WRITE_HAS_OCCURRED_$$d_in2_pad_cumv_all then 1 else 0))) != 0 ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v34, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[143], $$d_common[142]), $$d_common[141]), $$d_common[140])), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 441} (if (BV32_AND(BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))), BV1_ZEXT32((if _WRITE_HAS_OCCURRED_$$d_in2_pad_cumv_all then 1 else 0))) != 0 ==> BV32_ULT(BV32_UDIV(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v34, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[143], $$d_common[142]), $$d_common[141]), $$d_common[140])), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[147], $$d_common[146]), $$d_common[145]), $$d_common[144]))) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 442} (if (BV32_AND(BV1_ZEXT32(BV1_XOR((if BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))) != 0 then 1 else 0), -1)), BV1_ZEXT32((if _WRITE_HAS_OCCURRED_$$d_in2_pad_cumv_all then 1 else 0))) != 0 ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v34, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[151], $$d_common[150]), $$d_common[149]), $$d_common[148]))) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 443} (if (_READ_HAS_OCCURRED_$$d_in2_pad_cumv_all ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v34, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[143], $$d_common[142]), $$d_common[141]), $$d_common[140])), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 444} (if (_READ_HAS_OCCURRED_$$d_in2_pad_cumv_all ==> BV32_ULT(BV32_UDIV(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v34, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[143], $$d_common[142]), $$d_common[141]), $$d_common[140])), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[147], $$d_common[146]), $$d_common[145]), $$d_common[144]))) then 1 else 0) != 0;
  assert {:sourceloc} {:sourceloc_num 445} true;
  v380 := $$d_common[140];
  assert {:sourceloc} {:sourceloc_num 446} true;
  v381 := $$d_common[141];
  assert {:sourceloc} {:sourceloc_num 447} true;
  v382 := $$d_common[142];
  assert {:sourceloc} {:sourceloc_num 448} true;
  v383 := $$d_common[143];
  v384 := BV32_SLT($position.0, BV32_ADD(v379, BV_CONCAT(BV_CONCAT(BV_CONCAT(v383, v382), v381), v380)));
  goto $truebb24, $falsebb24;
$63:
  assert {:block_sourceloc} {:sourceloc_num 449} true;
  assert {:sourceloc} {:sourceloc_num 450} true;
  v385 := $$d_in2_pad_cumv_all[BV32_ADD(v34, $position.0)];
  assert {:sourceloc} {:sourceloc_num 451} true;
  $$d_in2_pad_cumv_all[BV32_ADD(v34, $position.0)] := FADD32(v385, $sum.0);
  assert {:sourceloc} {:sourceloc_num 452} true;
  v386 := $$d_in2_pad_cumv_all[BV32_ADD(v34, $position.0)];
  goto $64;
$64:
  assert {:block_sourceloc} {:sourceloc_num 453} true;
  $position.0, $sum.0 := BV32_ADD($position.0, 1), v386;
  goto $62;
$65:
  assert {:block_sourceloc} {:sourceloc_num 454} true;
  $ei_new.5 := BV32_ADD($ei_new.5, 256);
  goto $60;
$66:
  assert {:block_sourceloc} {:sourceloc_num 455} true;
  call {:sourceloc_num 456} $bugle_barrier(-1, -1);
  $ei_new.6 := v1;
  goto $67;
$67:
  assert {:block_sourceloc} {:sourceloc_num 457} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 458} (if (_WRITE_HAS_OCCURRED_$$d_in2_pad_cumv_sel_all ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v39, 4)), 4), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 459} (if (_WRITE_HAS_OCCURRED_$$d_in2_pad_cumv_sel_all ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v39, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[167], $$d_common[166]), $$d_common[165]), $$d_common[164]))) then 1 else 0) != 0;
  assert {:sourceloc} {:sourceloc_num 460} true;
  v387 := $$d_common[164];
  assert {:sourceloc} {:sourceloc_num 461} true;
  v388 := $$d_common[165];
  assert {:sourceloc} {:sourceloc_num 462} true;
  v389 := $$d_common[166];
  assert {:sourceloc} {:sourceloc_num 463} true;
  v390 := $$d_common[167];
  v391 := BV32_SLT($ei_new.6, BV_CONCAT(BV_CONCAT(BV_CONCAT(v390, v389), v388), v387));
  goto $truebb25, $falsebb25;
$68:
  assert {:block_sourceloc} {:sourceloc_num 464} true;
  assert {:sourceloc} {:sourceloc_num 465} true;
  v392 := $$d_common[156];
  assert {:sourceloc} {:sourceloc_num 466} true;
  v393 := $$d_common[157];
  assert {:sourceloc} {:sourceloc_num 467} true;
  v394 := $$d_common[158];
  assert {:sourceloc} {:sourceloc_num 468} true;
  v395 := $$d_common[159];
  assert {:sourceloc} {:sourceloc_num 469} true;
  v396 := $$d_common[156];
  assert {:sourceloc} {:sourceloc_num 470} true;
  v397 := $$d_common[157];
  assert {:sourceloc} {:sourceloc_num 471} true;
  v398 := $$d_common[158];
  assert {:sourceloc} {:sourceloc_num 472} true;
  v399 := $$d_common[159];
  v400 := BV32_SUB(BV32_ADD(BV32_SDIV(BV32_ADD($ei_new.6, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v399, v398), v397), v396)), 1), 1);
  assert {:sourceloc} {:sourceloc_num 473} true;
  v401 := $$d_common[156];
  assert {:sourceloc} {:sourceloc_num 474} true;
  v402 := $$d_common[157];
  assert {:sourceloc} {:sourceloc_num 475} true;
  v403 := $$d_common[158];
  assert {:sourceloc} {:sourceloc_num 476} true;
  v404 := $$d_common[159];
  v405 := BV32_SREM(BV32_ADD($ei_new.6, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v404, v403), v402), v401)) == 0;
  goto $truebb26, $falsebb26;
$69:
  assert {:block_sourceloc} {:sourceloc_num 477} true;
  assert {:sourceloc} {:sourceloc_num 478} true;
  v406 := $$d_common[156];
  assert {:sourceloc} {:sourceloc_num 479} true;
  v407 := $$d_common[157];
  assert {:sourceloc} {:sourceloc_num 480} true;
  v408 := $$d_common[158];
  assert {:sourceloc} {:sourceloc_num 481} true;
  v409 := $$d_common[159];
  $row.4, $col.4 := BV32_SUB(BV_CONCAT(BV_CONCAT(BV_CONCAT(v409, v408), v407), v406), 1), BV32_SUB(v400, 1);
  goto $70;
$70:
  assert {:block_sourceloc} {:sourceloc_num 482} true;
  assert {:sourceloc} {:sourceloc_num 483} true;
  v410 := $$d_common[172];
  assert {:sourceloc} {:sourceloc_num 484} true;
  v411 := $$d_common[173];
  assert {:sourceloc} {:sourceloc_num 485} true;
  v412 := $$d_common[174];
  assert {:sourceloc} {:sourceloc_num 486} true;
  v413 := $$d_common[175];
  assert {:sourceloc} {:sourceloc_num 487} true;
  v414 := $$d_common[180];
  assert {:sourceloc} {:sourceloc_num 488} true;
  v415 := $$d_common[181];
  assert {:sourceloc} {:sourceloc_num 489} true;
  v416 := $$d_common[182];
  assert {:sourceloc} {:sourceloc_num 490} true;
  v417 := $$d_common[183];
  assert {:sourceloc} {:sourceloc_num 491} true;
  v418 := $$d_common[140];
  assert {:sourceloc} {:sourceloc_num 492} true;
  v419 := $$d_common[141];
  assert {:sourceloc} {:sourceloc_num 493} true;
  v420 := $$d_common[142];
  assert {:sourceloc} {:sourceloc_num 494} true;
  v421 := $$d_common[143];
  assert {:sourceloc} {:sourceloc_num 495} true;
  v422 := $$d_in2_pad_cumv_all[BV32_ADD(v34, BV32_ADD(BV32_MUL(BV32_SUB(BV32_ADD($col.4, BV_CONCAT(BV_CONCAT(BV_CONCAT(v417, v416), v415), v414)), 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v421, v420), v419), v418)), BV32_SUB(BV32_ADD($row.4, BV_CONCAT(BV_CONCAT(BV_CONCAT(v413, v412), v411), v410)), 1)))];
  assert {:sourceloc} {:sourceloc_num 496} true;
  $$d_in2_pad_cumv_sel_all[BV32_ADD(v39, $ei_new.6)] := v422;
  $ei_new.6 := BV32_ADD($ei_new.6, 256);
  goto $67;
$71:
  assert {:block_sourceloc} {:sourceloc_num 497} true;
  call {:sourceloc_num 498} $bugle_barrier(-1, -1);
  $ei_new.7 := v1;
  goto $72;
$72:
  assert {:block_sourceloc} {:sourceloc_num 499} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 500} (if (_WRITE_HAS_OCCURRED_$$d_in2_sub_cumh_all ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 501} (if (_WRITE_HAS_OCCURRED_$$d_in2_sub_cumh_all ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[215], $$d_common[214]), $$d_common[213]), $$d_common[212]))) then 1 else 0) != 0;
  assert {:sourceloc} {:sourceloc_num 502} true;
  v423 := $$d_common[212];
  assert {:sourceloc} {:sourceloc_num 503} true;
  v424 := $$d_common[213];
  assert {:sourceloc} {:sourceloc_num 504} true;
  v425 := $$d_common[214];
  assert {:sourceloc} {:sourceloc_num 505} true;
  v426 := $$d_common[215];
  v427 := BV32_SLT($ei_new.7, BV_CONCAT(BV_CONCAT(BV_CONCAT(v426, v425), v424), v423));
  goto $truebb27, $falsebb27;
$73:
  assert {:block_sourceloc} {:sourceloc_num 506} true;
  assert {:sourceloc} {:sourceloc_num 507} true;
  v428 := $$d_common[204];
  assert {:sourceloc} {:sourceloc_num 508} true;
  v429 := $$d_common[205];
  assert {:sourceloc} {:sourceloc_num 509} true;
  v430 := $$d_common[206];
  assert {:sourceloc} {:sourceloc_num 510} true;
  v431 := $$d_common[207];
  assert {:sourceloc} {:sourceloc_num 511} true;
  v432 := $$d_common[204];
  assert {:sourceloc} {:sourceloc_num 512} true;
  v433 := $$d_common[205];
  assert {:sourceloc} {:sourceloc_num 513} true;
  v434 := $$d_common[206];
  assert {:sourceloc} {:sourceloc_num 514} true;
  v435 := $$d_common[207];
  v436 := BV32_SUB(BV32_ADD(BV32_SDIV(BV32_ADD($ei_new.7, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v435, v434), v433), v432)), 1), 1);
  assert {:sourceloc} {:sourceloc_num 515} true;
  v437 := $$d_common[204];
  assert {:sourceloc} {:sourceloc_num 516} true;
  v438 := $$d_common[205];
  assert {:sourceloc} {:sourceloc_num 517} true;
  v439 := $$d_common[206];
  assert {:sourceloc} {:sourceloc_num 518} true;
  v440 := $$d_common[207];
  v441 := BV32_SREM(BV32_ADD($ei_new.7, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v440, v439), v438), v437)) == 0;
  goto $truebb28, $falsebb28;
$74:
  assert {:block_sourceloc} {:sourceloc_num 519} true;
  assert {:sourceloc} {:sourceloc_num 520} true;
  v442 := $$d_common[204];
  assert {:sourceloc} {:sourceloc_num 521} true;
  v443 := $$d_common[205];
  assert {:sourceloc} {:sourceloc_num 522} true;
  v444 := $$d_common[206];
  assert {:sourceloc} {:sourceloc_num 523} true;
  v445 := $$d_common[207];
  $row.5, $col.5 := BV32_SUB(BV_CONCAT(BV_CONCAT(BV_CONCAT(v445, v444), v443), v442), 1), BV32_SUB(v436, 1);
  goto $75;
$75:
  assert {:block_sourceloc} {:sourceloc_num 524} true;
  assert {:sourceloc} {:sourceloc_num 525} true;
  v446 := $$d_common[188];
  assert {:sourceloc} {:sourceloc_num 526} true;
  v447 := $$d_common[189];
  assert {:sourceloc} {:sourceloc_num 527} true;
  v448 := $$d_common[190];
  assert {:sourceloc} {:sourceloc_num 528} true;
  v449 := $$d_common[191];
  assert {:sourceloc} {:sourceloc_num 529} true;
  v450 := $$d_common[196];
  assert {:sourceloc} {:sourceloc_num 530} true;
  v451 := $$d_common[197];
  assert {:sourceloc} {:sourceloc_num 531} true;
  v452 := $$d_common[198];
  assert {:sourceloc} {:sourceloc_num 532} true;
  v453 := $$d_common[199];
  assert {:sourceloc} {:sourceloc_num 533} true;
  v454 := $$d_common[140];
  assert {:sourceloc} {:sourceloc_num 534} true;
  v455 := $$d_common[141];
  assert {:sourceloc} {:sourceloc_num 535} true;
  v456 := $$d_common[142];
  assert {:sourceloc} {:sourceloc_num 536} true;
  v457 := $$d_common[143];
  assert {:sourceloc} {:sourceloc_num 537} true;
  v458 := $$d_in2_pad_cumv_all[BV32_ADD(v34, BV32_ADD(BV32_MUL(BV32_SUB(BV32_ADD($col.5, BV_CONCAT(BV_CONCAT(BV_CONCAT(v453, v452), v451), v450)), 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v457, v456), v455), v454)), BV32_SUB(BV32_ADD($row.5, BV_CONCAT(BV_CONCAT(BV_CONCAT(v449, v448), v447), v446)), 1)))];
  assert {:sourceloc} {:sourceloc_num 538} true;
  $$d_in2_sub_cumh_all[BV32_ADD(v44, $ei_new.7)] := v458;
  $ei_new.7 := BV32_ADD($ei_new.7, 256);
  goto $72;
$76:
  assert {:block_sourceloc} {:sourceloc_num 539} true;
  call {:sourceloc_num 540} $bugle_barrier(-1, -1);
  call {:sourceloc_num 541} $bugle_barrier(-1, -1);
  $ei_new.8 := v1;
  goto $77;
$77:
  assert {:block_sourceloc} {:sourceloc_num 542} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 543} (if (_WRITE_HAS_OCCURRED_$$d_in2_sub_cumh_all ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 544} (if (_WRITE_HAS_OCCURRED_$$d_in2_sub_cumh_all ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[215], $$d_common[214]), $$d_common[213]), $$d_common[212]))) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 545} (if (_READ_HAS_OCCURRED_$$d_in2_sub_cumh_all ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 546} (if (_READ_HAS_OCCURRED_$$d_in2_sub_cumh_all ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[215], $$d_common[214]), $$d_common[213]), $$d_common[212]))) then 1 else 0) != 0;
  assert {:sourceloc} {:sourceloc_num 547} true;
  v459 := $$d_common[212];
  assert {:sourceloc} {:sourceloc_num 548} true;
  v460 := $$d_common[213];
  assert {:sourceloc} {:sourceloc_num 549} true;
  v461 := $$d_common[214];
  assert {:sourceloc} {:sourceloc_num 550} true;
  v462 := $$d_common[215];
  v463 := BV32_SLT($ei_new.8, BV_CONCAT(BV_CONCAT(BV_CONCAT(v462, v461), v460), v459));
  goto $truebb29, $falsebb29;
$78:
  assert {:block_sourceloc} {:sourceloc_num 551} true;
  assert {:sourceloc} {:sourceloc_num 552} true;
  v464 := $$d_in2_pad_cumv_sel_all[BV32_ADD(v39, $ei_new.8)];
  assert {:sourceloc} {:sourceloc_num 553} true;
  v465 := $$d_in2_sub_cumh_all[BV32_ADD(v44, $ei_new.8)];
  assert {:sourceloc} {:sourceloc_num 554} true;
  $$d_in2_sub_cumh_all[BV32_ADD(v44, $ei_new.8)] := FSUB32(v464, v465);
  $ei_new.8 := BV32_ADD($ei_new.8, 256);
  goto $77;
$79:
  assert {:block_sourceloc} {:sourceloc_num 555} true;
  call {:sourceloc_num 556} $bugle_barrier(-1, -1);
  $ei_new.9 := v1;
  goto $80;
$80:
  assert {:block_sourceloc} {:sourceloc_num 557} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 558} (if (BV32_AND(BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))), BV1_ZEXT32((if _WRITE_HAS_OCCURRED_$$d_in2_sub_cumh_all then 1 else 0))) != 0 ==> BV32_UREM(BV32_SUB(BV32_UREM(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[207], $$d_common[206]), $$d_common[205]), $$d_common[204])), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 559} (if (BV32_AND(BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))), BV1_ZEXT32((if _WRITE_HAS_OCCURRED_$$d_in2_sub_cumh_all then 1 else 0))) != 0 ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_UREM(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[207], $$d_common[206]), $$d_common[205]), $$d_common[204])), v1), 256), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[207], $$d_common[206]), $$d_common[205]), $$d_common[204]))) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 560} (if (BV32_AND(BV1_ZEXT32(BV1_XOR((if BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))) != 0 then 1 else 0), -1)), BV1_ZEXT32((if _WRITE_HAS_OCCURRED_$$d_in2_sub_cumh_all then 1 else 0))) != 0 ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[215], $$d_common[214]), $$d_common[213]), $$d_common[212]))) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 561} (if (BV32_AND(BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))), BV1_ZEXT32((if _READ_HAS_OCCURRED_$$d_in2_sub_cumh_all then 1 else 0))) != 0 ==> BV32_UREM(BV32_SUB(BV32_UREM(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[207], $$d_common[206]), $$d_common[205]), $$d_common[204])), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 562} (if (BV32_AND(BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))), BV1_ZEXT32((if _READ_HAS_OCCURRED_$$d_in2_sub_cumh_all then 1 else 0))) != 0 ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_UREM(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[207], $$d_common[206]), $$d_common[205]), $$d_common[204])), v1), 256), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[207], $$d_common[206]), $$d_common[205]), $$d_common[204]))) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 563} (if (BV32_AND(BV1_ZEXT32(BV1_XOR((if BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))) != 0 then 1 else 0), -1)), BV1_ZEXT32((if _READ_HAS_OCCURRED_$$d_in2_sub_cumh_all then 1 else 0))) != 0 ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[215], $$d_common[214]), $$d_common[213]), $$d_common[212]))) then 1 else 0) != 0;
  assert {:sourceloc} {:sourceloc_num 564} true;
  v466 := $$d_common[204];
  assert {:sourceloc} {:sourceloc_num 565} true;
  v467 := $$d_common[205];
  assert {:sourceloc} {:sourceloc_num 566} true;
  v468 := $$d_common[206];
  assert {:sourceloc} {:sourceloc_num 567} true;
  v469 := $$d_common[207];
  v470 := BV32_SLT($ei_new.9, BV_CONCAT(BV_CONCAT(BV_CONCAT(v469, v468), v467), v466));
  goto $truebb30, $falsebb30;
$81:
  assert {:block_sourceloc} {:sourceloc_num 568} true;
  $position.1, $sum.1 := $ei_new.9, 0;
  goto $82;
$82:
  assert {:block_sourceloc} {:sourceloc_num 569} true;
  assert {:originated_from_invariant} {:sourceloc_num 570} (if BV32_SREM(BV32_SUB($position.1, $ei_new.9), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[207], $$d_common[206]), $$d_common[205]), $$d_common[204])) == 0 then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 571} (if (BV32_AND(BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))), BV1_ZEXT32((if _WRITE_HAS_OCCURRED_$$d_in2_sub_cumh_all then 1 else 0))) != 0 ==> BV32_UREM(BV32_SUB(BV32_UREM(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[207], $$d_common[206]), $$d_common[205]), $$d_common[204])), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 572} (if (BV32_AND(BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))), BV1_ZEXT32((if _WRITE_HAS_OCCURRED_$$d_in2_sub_cumh_all then 1 else 0))) != 0 ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_UREM(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[207], $$d_common[206]), $$d_common[205]), $$d_common[204])), v1), 256), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[207], $$d_common[206]), $$d_common[205]), $$d_common[204]))) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 573} (if (BV32_AND(BV1_ZEXT32(BV1_XOR((if BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))) != 0 then 1 else 0), -1)), BV1_ZEXT32((if _WRITE_HAS_OCCURRED_$$d_in2_sub_cumh_all then 1 else 0))) != 0 ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[215], $$d_common[214]), $$d_common[213]), $$d_common[212]))) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 574} (if (BV32_AND(BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))), BV1_ZEXT32((if _READ_HAS_OCCURRED_$$d_in2_sub_cumh_all then 1 else 0))) != 0 ==> BV32_UREM(BV32_SUB(BV32_UREM(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[207], $$d_common[206]), $$d_common[205]), $$d_common[204])), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 575} (if (BV32_AND(BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))), BV1_ZEXT32((if _READ_HAS_OCCURRED_$$d_in2_sub_cumh_all then 1 else 0))) != 0 ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_UREM(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[207], $$d_common[206]), $$d_common[205]), $$d_common[204])), v1), 256), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[207], $$d_common[206]), $$d_common[205]), $$d_common[204]))) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 576} (if (BV32_AND(BV1_ZEXT32(BV1_XOR((if BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))) != 0 then 1 else 0), -1)), BV1_ZEXT32((if _READ_HAS_OCCURRED_$$d_in2_sub_cumh_all then 1 else 0))) != 0 ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[215], $$d_common[214]), $$d_common[213]), $$d_common[212]))) then 1 else 0) != 0;
  assert {:sourceloc} {:sourceloc_num 577} true;
  v471 := $$d_common[212];
  assert {:sourceloc} {:sourceloc_num 578} true;
  v472 := $$d_common[213];
  assert {:sourceloc} {:sourceloc_num 579} true;
  v473 := $$d_common[214];
  assert {:sourceloc} {:sourceloc_num 580} true;
  v474 := $$d_common[215];
  v475 := BV32_SLT($position.1, BV32_ADD($ei_new.9, BV_CONCAT(BV_CONCAT(BV_CONCAT(v474, v473), v472), v471)));
  goto $truebb31, $falsebb31;
$83:
  assert {:block_sourceloc} {:sourceloc_num 581} true;
  assert {:sourceloc} {:sourceloc_num 582} true;
  v476 := $$d_in2_sub_cumh_all[BV32_ADD(v44, $position.1)];
  assert {:sourceloc} {:sourceloc_num 583} true;
  $$d_in2_sub_cumh_all[BV32_ADD(v44, $position.1)] := FADD32(v476, $sum.1);
  assert {:sourceloc} {:sourceloc_num 584} true;
  v477 := $$d_in2_sub_cumh_all[BV32_ADD(v44, $position.1)];
  goto $84;
$84:
  assert {:block_sourceloc} {:sourceloc_num 585} true;
  assert {:sourceloc} {:sourceloc_num 586} true;
  v478 := $$d_common[204];
  assert {:sourceloc} {:sourceloc_num 587} true;
  v479 := $$d_common[205];
  assert {:sourceloc} {:sourceloc_num 588} true;
  v480 := $$d_common[206];
  assert {:sourceloc} {:sourceloc_num 589} true;
  v481 := $$d_common[207];
  $position.1, $sum.1 := BV32_ADD($position.1, BV_CONCAT(BV_CONCAT(BV_CONCAT(v481, v480), v479), v478)), v477;
  goto $82;
$85:
  assert {:block_sourceloc} {:sourceloc_num 590} true;
  $ei_new.9 := BV32_ADD($ei_new.9, 256);
  goto $80;
$86:
  assert {:block_sourceloc} {:sourceloc_num 591} true;
  call {:sourceloc_num 592} $bugle_barrier(-1, -1);
  $ei_new.10 := v1;
  goto $87;
$87:
  assert {:block_sourceloc} {:sourceloc_num 593} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 594} (if (_WRITE_HAS_OCCURRED_$$d_in2_sub_cumh_sel_all ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v49, 4)), 4), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 595} (if (_WRITE_HAS_OCCURRED_$$d_in2_sub_cumh_sel_all ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v49, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[231], $$d_common[230]), $$d_common[229]), $$d_common[228]))) then 1 else 0) != 0;
  assert {:sourceloc} {:sourceloc_num 596} true;
  v482 := $$d_common[228];
  assert {:sourceloc} {:sourceloc_num 597} true;
  v483 := $$d_common[229];
  assert {:sourceloc} {:sourceloc_num 598} true;
  v484 := $$d_common[230];
  assert {:sourceloc} {:sourceloc_num 599} true;
  v485 := $$d_common[231];
  v486 := BV32_SLT($ei_new.10, BV_CONCAT(BV_CONCAT(BV_CONCAT(v485, v484), v483), v482));
  goto $truebb32, $falsebb32;
$88:
  assert {:block_sourceloc} {:sourceloc_num 600} true;
  assert {:sourceloc} {:sourceloc_num 601} true;
  v487 := $$d_common[220];
  assert {:sourceloc} {:sourceloc_num 602} true;
  v488 := $$d_common[221];
  assert {:sourceloc} {:sourceloc_num 603} true;
  v489 := $$d_common[222];
  assert {:sourceloc} {:sourceloc_num 604} true;
  v490 := $$d_common[223];
  assert {:sourceloc} {:sourceloc_num 605} true;
  v491 := $$d_common[220];
  assert {:sourceloc} {:sourceloc_num 606} true;
  v492 := $$d_common[221];
  assert {:sourceloc} {:sourceloc_num 607} true;
  v493 := $$d_common[222];
  assert {:sourceloc} {:sourceloc_num 608} true;
  v494 := $$d_common[223];
  v495 := BV32_SUB(BV32_ADD(BV32_SDIV(BV32_ADD($ei_new.10, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v494, v493), v492), v491)), 1), 1);
  assert {:sourceloc} {:sourceloc_num 609} true;
  v496 := $$d_common[220];
  assert {:sourceloc} {:sourceloc_num 610} true;
  v497 := $$d_common[221];
  assert {:sourceloc} {:sourceloc_num 611} true;
  v498 := $$d_common[222];
  assert {:sourceloc} {:sourceloc_num 612} true;
  v499 := $$d_common[223];
  v500 := BV32_SREM(BV32_ADD($ei_new.10, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v499, v498), v497), v496)) == 0;
  goto $truebb33, $falsebb33;
$89:
  assert {:block_sourceloc} {:sourceloc_num 613} true;
  assert {:sourceloc} {:sourceloc_num 614} true;
  v501 := $$d_common[220];
  assert {:sourceloc} {:sourceloc_num 615} true;
  v502 := $$d_common[221];
  assert {:sourceloc} {:sourceloc_num 616} true;
  v503 := $$d_common[222];
  assert {:sourceloc} {:sourceloc_num 617} true;
  v504 := $$d_common[223];
  $row.6, $col.6 := BV32_SUB(BV_CONCAT(BV_CONCAT(BV_CONCAT(v504, v503), v502), v501), 1), BV32_SUB(v495, 1);
  goto $90;
$90:
  assert {:block_sourceloc} {:sourceloc_num 618} true;
  assert {:sourceloc} {:sourceloc_num 619} true;
  v505 := $$d_common[236];
  assert {:sourceloc} {:sourceloc_num 620} true;
  v506 := $$d_common[237];
  assert {:sourceloc} {:sourceloc_num 621} true;
  v507 := $$d_common[238];
  assert {:sourceloc} {:sourceloc_num 622} true;
  v508 := $$d_common[239];
  assert {:sourceloc} {:sourceloc_num 623} true;
  v509 := $$d_common[244];
  assert {:sourceloc} {:sourceloc_num 624} true;
  v510 := $$d_common[245];
  assert {:sourceloc} {:sourceloc_num 625} true;
  v511 := $$d_common[246];
  assert {:sourceloc} {:sourceloc_num 626} true;
  v512 := $$d_common[247];
  assert {:sourceloc} {:sourceloc_num 627} true;
  v513 := $$d_common[204];
  assert {:sourceloc} {:sourceloc_num 628} true;
  v514 := $$d_common[205];
  assert {:sourceloc} {:sourceloc_num 629} true;
  v515 := $$d_common[206];
  assert {:sourceloc} {:sourceloc_num 630} true;
  v516 := $$d_common[207];
  assert {:sourceloc} {:sourceloc_num 631} true;
  v517 := $$d_in2_sub_cumh_all[BV32_ADD(v44, BV32_ADD(BV32_MUL(BV32_SUB(BV32_ADD($col.6, BV_CONCAT(BV_CONCAT(BV_CONCAT(v512, v511), v510), v509)), 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v516, v515), v514), v513)), BV32_SUB(BV32_ADD($row.6, BV_CONCAT(BV_CONCAT(BV_CONCAT(v508, v507), v506), v505)), 1)))];
  assert {:sourceloc} {:sourceloc_num 632} true;
  $$d_in2_sub_cumh_sel_all[BV32_ADD(v49, $ei_new.10)] := v517;
  $ei_new.10 := BV32_ADD($ei_new.10, 256);
  goto $87;
$91:
  assert {:block_sourceloc} {:sourceloc_num 633} true;
  call {:sourceloc_num 634} $bugle_barrier(-1, -1);
  $ei_new.11 := v1;
  goto $92;
$92:
  assert {:block_sourceloc} {:sourceloc_num 635} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 636} (if (_WRITE_HAS_OCCURRED_$$d_in2_sub2_all ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v54, 4)), 4), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 637} (if (_WRITE_HAS_OCCURRED_$$d_in2_sub2_all ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v54, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[279], $$d_common[278]), $$d_common[277]), $$d_common[276]))) then 1 else 0) != 0;
  assert {:sourceloc} {:sourceloc_num 638} true;
  v518 := $$d_common[276];
  assert {:sourceloc} {:sourceloc_num 639} true;
  v519 := $$d_common[277];
  assert {:sourceloc} {:sourceloc_num 640} true;
  v520 := $$d_common[278];
  assert {:sourceloc} {:sourceloc_num 641} true;
  v521 := $$d_common[279];
  v522 := BV32_SLT($ei_new.11, BV_CONCAT(BV_CONCAT(BV_CONCAT(v521, v520), v519), v518));
  goto $truebb34, $falsebb34;
$93:
  assert {:block_sourceloc} {:sourceloc_num 642} true;
  assert {:sourceloc} {:sourceloc_num 643} true;
  v523 := $$d_common[268];
  assert {:sourceloc} {:sourceloc_num 644} true;
  v524 := $$d_common[269];
  assert {:sourceloc} {:sourceloc_num 645} true;
  v525 := $$d_common[270];
  assert {:sourceloc} {:sourceloc_num 646} true;
  v526 := $$d_common[271];
  assert {:sourceloc} {:sourceloc_num 647} true;
  v527 := $$d_common[268];
  assert {:sourceloc} {:sourceloc_num 648} true;
  v528 := $$d_common[269];
  assert {:sourceloc} {:sourceloc_num 649} true;
  v529 := $$d_common[270];
  assert {:sourceloc} {:sourceloc_num 650} true;
  v530 := $$d_common[271];
  v531 := BV32_SUB(BV32_ADD(BV32_SDIV(BV32_ADD($ei_new.11, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v530, v529), v528), v527)), 1), 1);
  assert {:sourceloc} {:sourceloc_num 651} true;
  v532 := $$d_common[268];
  assert {:sourceloc} {:sourceloc_num 652} true;
  v533 := $$d_common[269];
  assert {:sourceloc} {:sourceloc_num 653} true;
  v534 := $$d_common[270];
  assert {:sourceloc} {:sourceloc_num 654} true;
  v535 := $$d_common[271];
  v536 := BV32_SREM(BV32_ADD($ei_new.11, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v535, v534), v533), v532)) == 0;
  goto $truebb35, $falsebb35;
$94:
  assert {:block_sourceloc} {:sourceloc_num 655} true;
  assert {:sourceloc} {:sourceloc_num 656} true;
  v537 := $$d_common[268];
  assert {:sourceloc} {:sourceloc_num 657} true;
  v538 := $$d_common[269];
  assert {:sourceloc} {:sourceloc_num 658} true;
  v539 := $$d_common[270];
  assert {:sourceloc} {:sourceloc_num 659} true;
  v540 := $$d_common[271];
  $row.7, $col.7 := BV32_SUB(BV_CONCAT(BV_CONCAT(BV_CONCAT(v540, v539), v538), v537), 1), BV32_SUB(v531, 1);
  goto $95;
$95:
  assert {:block_sourceloc} {:sourceloc_num 660} true;
  assert {:sourceloc} {:sourceloc_num 661} true;
  v541 := $$d_common[252];
  assert {:sourceloc} {:sourceloc_num 662} true;
  v542 := $$d_common[253];
  assert {:sourceloc} {:sourceloc_num 663} true;
  v543 := $$d_common[254];
  assert {:sourceloc} {:sourceloc_num 664} true;
  v544 := $$d_common[255];
  assert {:sourceloc} {:sourceloc_num 665} true;
  v545 := $$d_common[260];
  assert {:sourceloc} {:sourceloc_num 666} true;
  v546 := $$d_common[261];
  assert {:sourceloc} {:sourceloc_num 667} true;
  v547 := $$d_common[262];
  assert {:sourceloc} {:sourceloc_num 668} true;
  v548 := $$d_common[263];
  assert {:sourceloc} {:sourceloc_num 669} true;
  v549 := $$d_common[204];
  assert {:sourceloc} {:sourceloc_num 670} true;
  v550 := $$d_common[205];
  assert {:sourceloc} {:sourceloc_num 671} true;
  v551 := $$d_common[206];
  assert {:sourceloc} {:sourceloc_num 672} true;
  v552 := $$d_common[207];
  assert {:sourceloc} {:sourceloc_num 673} true;
  v553 := $$d_in2_sub_cumh_all[BV32_ADD(v44, BV32_ADD(BV32_MUL(BV32_SUB(BV32_ADD($col.7, BV_CONCAT(BV_CONCAT(BV_CONCAT(v548, v547), v546), v545)), 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v552, v551), v550), v549)), BV32_SUB(BV32_ADD($row.7, BV_CONCAT(BV_CONCAT(BV_CONCAT(v544, v543), v542), v541)), 1)))];
  assert {:sourceloc} {:sourceloc_num 674} true;
  $$d_in2_sub2_all[BV32_ADD(v54, $ei_new.11)] := v553;
  $ei_new.11 := BV32_ADD($ei_new.11, 256);
  goto $92;
$96:
  assert {:block_sourceloc} {:sourceloc_num 675} true;
  call {:sourceloc_num 676} $bugle_barrier(-1, -1);
  $ei_new.12 := v1;
  goto $97;
$97:
  assert {:block_sourceloc} {:sourceloc_num 677} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 678} (if (_WRITE_HAS_OCCURRED_$$d_in2_sub2_all ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v54, 4)), 4), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 679} (if (_WRITE_HAS_OCCURRED_$$d_in2_sub2_all ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v54, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[279], $$d_common[278]), $$d_common[277]), $$d_common[276]))) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 680} (if (_READ_HAS_OCCURRED_$$d_in2_sub2_all ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v54, 4)), 4), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 681} (if (_READ_HAS_OCCURRED_$$d_in2_sub2_all ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v54, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[279], $$d_common[278]), $$d_common[277]), $$d_common[276]))) then 1 else 0) != 0;
  assert {:sourceloc} {:sourceloc_num 682} true;
  v554 := $$d_common[276];
  assert {:sourceloc} {:sourceloc_num 683} true;
  v555 := $$d_common[277];
  assert {:sourceloc} {:sourceloc_num 684} true;
  v556 := $$d_common[278];
  assert {:sourceloc} {:sourceloc_num 685} true;
  v557 := $$d_common[279];
  v558 := BV32_SLT($ei_new.12, BV_CONCAT(BV_CONCAT(BV_CONCAT(v557, v556), v555), v554));
  goto $truebb36, $falsebb36;
$98:
  assert {:block_sourceloc} {:sourceloc_num 686} true;
  assert {:sourceloc} {:sourceloc_num 687} true;
  v559 := $$d_in2_sub_cumh_sel_all[BV32_ADD(v49, $ei_new.12)];
  assert {:sourceloc} {:sourceloc_num 688} true;
  v560 := $$d_in2_sub2_all[BV32_ADD(v54, $ei_new.12)];
  assert {:sourceloc} {:sourceloc_num 689} true;
  $$d_in2_sub2_all[BV32_ADD(v54, $ei_new.12)] := FSUB32(v559, v560);
  $ei_new.12 := BV32_ADD($ei_new.12, 256);
  goto $97;
$99:
  assert {:block_sourceloc} {:sourceloc_num 690} true;
  call {:sourceloc_num 691} $bugle_barrier(-1, -1);
  $ei_new.13 := v1;
  goto $100;
$100:
  assert {:block_sourceloc} {:sourceloc_num 692} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 693} (if (_WRITE_HAS_OCCURRED_$$d_in2_sqr_all ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v59, 4)), 4), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 694} (if (_WRITE_HAS_OCCURRED_$$d_in2_sqr_all ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v59, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[295], $$d_common[294]), $$d_common[293]), $$d_common[292]))) then 1 else 0) != 0;
  assert {:sourceloc} {:sourceloc_num 695} true;
  v561 := $$d_common[292];
  assert {:sourceloc} {:sourceloc_num 696} true;
  v562 := $$d_common[293];
  assert {:sourceloc} {:sourceloc_num 697} true;
  v563 := $$d_common[294];
  assert {:sourceloc} {:sourceloc_num 698} true;
  v564 := $$d_common[295];
  v565 := BV32_SLT($ei_new.13, BV_CONCAT(BV_CONCAT(BV_CONCAT(v564, v563), v562), v561));
  goto $truebb37, $falsebb37;
$101:
  assert {:block_sourceloc} {:sourceloc_num 699} true;
  assert {:sourceloc} {:sourceloc_num 700} true;
  v566 := $$d_in2_all[BV32_ADD(v24, $ei_new.13)];
  assert {:sourceloc} {:sourceloc_num 701} true;
  $$d_in2_sqr_all[BV32_ADD(v59, $ei_new.13)] := FMUL32(v566, v566);
  $ei_new.13 := BV32_ADD($ei_new.13, 256);
  goto $100;
$102:
  assert {:block_sourceloc} {:sourceloc_num 702} true;
  call {:sourceloc_num 703} $bugle_barrier(-1, -1);
  $ei_new.14 := v1;
  goto $103;
$103:
  assert {:block_sourceloc} {:sourceloc_num 704} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 705} (if (BV32_AND(BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))), BV1_ZEXT32((if _WRITE_HAS_OCCURRED_$$d_in2_pad_cumv_all then 1 else 0))) != 0 ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v34, 4)), 4), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 706} (if (_WRITE_HAS_OCCURRED_$$d_in2_pad_cumv_all ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v34, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[151], $$d_common[150]), $$d_common[149]), $$d_common[148]))) then 1 else 0) != 0;
  assert {:sourceloc} {:sourceloc_num 707} true;
  v567 := $$d_common[148];
  assert {:sourceloc} {:sourceloc_num 708} true;
  v568 := $$d_common[149];
  assert {:sourceloc} {:sourceloc_num 709} true;
  v569 := $$d_common[150];
  assert {:sourceloc} {:sourceloc_num 710} true;
  v570 := $$d_common[151];
  v571 := BV32_SLT($ei_new.14, BV_CONCAT(BV_CONCAT(BV_CONCAT(v570, v569), v568), v567));
  goto $truebb38, $falsebb38;
$104:
  assert {:block_sourceloc} {:sourceloc_num 711} true;
  assert {:sourceloc} {:sourceloc_num 712} true;
  v572 := $$d_common[140];
  assert {:sourceloc} {:sourceloc_num 713} true;
  v573 := $$d_common[141];
  assert {:sourceloc} {:sourceloc_num 714} true;
  v574 := $$d_common[142];
  assert {:sourceloc} {:sourceloc_num 715} true;
  v575 := $$d_common[143];
  assert {:sourceloc} {:sourceloc_num 716} true;
  v576 := $$d_common[140];
  assert {:sourceloc} {:sourceloc_num 717} true;
  v577 := $$d_common[141];
  assert {:sourceloc} {:sourceloc_num 718} true;
  v578 := $$d_common[142];
  assert {:sourceloc} {:sourceloc_num 719} true;
  v579 := $$d_common[143];
  v580 := BV32_SUB(BV32_ADD(BV32_SDIV(BV32_ADD($ei_new.14, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v579, v578), v577), v576)), 1), 1);
  assert {:sourceloc} {:sourceloc_num 720} true;
  v581 := $$d_common[140];
  assert {:sourceloc} {:sourceloc_num 721} true;
  v582 := $$d_common[141];
  assert {:sourceloc} {:sourceloc_num 722} true;
  v583 := $$d_common[142];
  assert {:sourceloc} {:sourceloc_num 723} true;
  v584 := $$d_common[143];
  v585 := BV32_SREM(BV32_ADD($ei_new.14, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v584, v583), v582), v581)) == 0;
  goto $truebb39, $falsebb39;
$105:
  assert {:block_sourceloc} {:sourceloc_num 724} true;
  assert {:sourceloc} {:sourceloc_num 725} true;
  v586 := $$d_common[140];
  assert {:sourceloc} {:sourceloc_num 726} true;
  v587 := $$d_common[141];
  assert {:sourceloc} {:sourceloc_num 727} true;
  v588 := $$d_common[142];
  assert {:sourceloc} {:sourceloc_num 728} true;
  v589 := $$d_common[143];
  $row.8, $col.8 := BV32_SUB(BV_CONCAT(BV_CONCAT(BV_CONCAT(v589, v588), v587), v586), 1), BV32_SUB(v580, 1);
  goto $106;
$106:
  assert {:block_sourceloc} {:sourceloc_num 729} true;
  assert {:sourceloc} {:sourceloc_num 730} true;
  v590 := $$d_common[132];
  assert {:sourceloc} {:sourceloc_num 731} true;
  v591 := $$d_common[133];
  assert {:sourceloc} {:sourceloc_num 732} true;
  v592 := $$d_common[134];
  assert {:sourceloc} {:sourceloc_num 733} true;
  v593 := $$d_common[135];
  v594 := BV32_SGT($row.8, BV32_SUB(BV_CONCAT(BV_CONCAT(BV_CONCAT(v593, v592), v591), v590), 1));
  goto $truebb40, $falsebb40;
$107:
  assert {:block_sourceloc} {:sourceloc_num 734} true;
  assert {:sourceloc} {:sourceloc_num 735} true;
  v595 := $$d_common[132];
  assert {:sourceloc} {:sourceloc_num 736} true;
  v596 := $$d_common[133];
  assert {:sourceloc} {:sourceloc_num 737} true;
  v597 := $$d_common[134];
  assert {:sourceloc} {:sourceloc_num 738} true;
  v598 := $$d_common[135];
  assert {:sourceloc} {:sourceloc_num 739} true;
  v599 := $$d_common[284];
  assert {:sourceloc} {:sourceloc_num 740} true;
  v600 := $$d_common[285];
  assert {:sourceloc} {:sourceloc_num 741} true;
  v601 := $$d_common[286];
  assert {:sourceloc} {:sourceloc_num 742} true;
  v602 := $$d_common[287];
  v603 := BV32_SLT($row.8, BV32_ADD(BV_CONCAT(BV_CONCAT(BV_CONCAT(v598, v597), v596), v595), BV_CONCAT(BV_CONCAT(BV_CONCAT(v602, v601), v600), v599)));
  goto $truebb41, $falsebb41;
$108:
  assert {:block_sourceloc} {:sourceloc_num 743} true;
  assert {:sourceloc} {:sourceloc_num 744} true;
  v604 := $$d_common[136];
  assert {:sourceloc} {:sourceloc_num 745} true;
  v605 := $$d_common[137];
  assert {:sourceloc} {:sourceloc_num 746} true;
  v606 := $$d_common[138];
  assert {:sourceloc} {:sourceloc_num 747} true;
  v607 := $$d_common[139];
  v608 := BV32_SGT($col.8, BV32_SUB(BV_CONCAT(BV_CONCAT(BV_CONCAT(v607, v606), v605), v604), 1));
  goto $truebb42, $falsebb42;
$109:
  assert {:block_sourceloc} {:sourceloc_num 748} true;
  assert {:sourceloc} {:sourceloc_num 749} true;
  v609 := $$d_common[136];
  assert {:sourceloc} {:sourceloc_num 750} true;
  v610 := $$d_common[137];
  assert {:sourceloc} {:sourceloc_num 751} true;
  v611 := $$d_common[138];
  assert {:sourceloc} {:sourceloc_num 752} true;
  v612 := $$d_common[139];
  assert {:sourceloc} {:sourceloc_num 753} true;
  v613 := $$d_common[288];
  assert {:sourceloc} {:sourceloc_num 754} true;
  v614 := $$d_common[289];
  assert {:sourceloc} {:sourceloc_num 755} true;
  v615 := $$d_common[290];
  assert {:sourceloc} {:sourceloc_num 756} true;
  v616 := $$d_common[291];
  v617 := BV32_SLT($col.8, BV32_ADD(BV_CONCAT(BV_CONCAT(BV_CONCAT(v612, v611), v610), v609), BV_CONCAT(BV_CONCAT(BV_CONCAT(v616, v615), v614), v613)));
  goto $truebb43, $falsebb43;
$110:
  assert {:block_sourceloc} {:sourceloc_num 757} true;
  assert {:sourceloc} {:sourceloc_num 758} true;
  v618 := $$d_common[132];
  assert {:sourceloc} {:sourceloc_num 759} true;
  v619 := $$d_common[133];
  assert {:sourceloc} {:sourceloc_num 760} true;
  v620 := $$d_common[134];
  assert {:sourceloc} {:sourceloc_num 761} true;
  v621 := $$d_common[135];
  assert {:sourceloc} {:sourceloc_num 762} true;
  v622 := $$d_common[136];
  assert {:sourceloc} {:sourceloc_num 763} true;
  v623 := $$d_common[137];
  assert {:sourceloc} {:sourceloc_num 764} true;
  v624 := $$d_common[138];
  assert {:sourceloc} {:sourceloc_num 765} true;
  v625 := $$d_common[139];
  assert {:sourceloc} {:sourceloc_num 766} true;
  v626 := $$d_common[284];
  assert {:sourceloc} {:sourceloc_num 767} true;
  v627 := $$d_common[285];
  assert {:sourceloc} {:sourceloc_num 768} true;
  v628 := $$d_common[286];
  assert {:sourceloc} {:sourceloc_num 769} true;
  v629 := $$d_common[287];
  assert {:sourceloc} {:sourceloc_num 770} true;
  v630 := $$d_in2_sqr_all[BV32_ADD(v59, BV32_ADD(BV32_MUL(BV32_SUB($col.8, BV_CONCAT(BV_CONCAT(BV_CONCAT(v625, v624), v623), v622)), BV_CONCAT(BV_CONCAT(BV_CONCAT(v629, v628), v627), v626)), BV32_SUB($row.8, BV_CONCAT(BV_CONCAT(BV_CONCAT(v621, v620), v619), v618))))];
  assert {:sourceloc} {:sourceloc_num 771} true;
  $$d_in2_pad_cumv_all[BV32_ADD(v34, $ei_new.14)] := v630;
  goto $112;
$111:
  assert {:block_sourceloc} {:sourceloc_num 772} true;
  assert {:sourceloc} {:sourceloc_num 773} true;
  $$d_in2_pad_cumv_all[BV32_ADD(v34, $ei_new.14)] := 0;
  goto $112;
$112:
  assert {:block_sourceloc} {:sourceloc_num 774} true;
  $ei_new.14 := BV32_ADD($ei_new.14, 256);
  goto $103;
$113:
  assert {:block_sourceloc} {:sourceloc_num 775} true;
  call {:sourceloc_num 776} $bugle_barrier(-1, -1);
  $ei_new.15 := v1;
  goto $114;
$114:
  assert {:block_sourceloc} {:sourceloc_num 777} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 778} (if (BV32_AND(BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))), BV1_ZEXT32((if _WRITE_HAS_OCCURRED_$$d_in2_pad_cumv_all then 1 else 0))) != 0 ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v34, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[143], $$d_common[142]), $$d_common[141]), $$d_common[140])), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 779} (if (BV32_AND(BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))), BV1_ZEXT32((if _WRITE_HAS_OCCURRED_$$d_in2_pad_cumv_all then 1 else 0))) != 0 ==> BV32_ULT(BV32_UDIV(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v34, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[143], $$d_common[142]), $$d_common[141]), $$d_common[140])), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[147], $$d_common[146]), $$d_common[145]), $$d_common[144]))) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 780} (if (BV32_AND(BV1_ZEXT32(BV1_XOR((if BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))) != 0 then 1 else 0), -1)), BV1_ZEXT32((if _WRITE_HAS_OCCURRED_$$d_in2_pad_cumv_all then 1 else 0))) != 0 ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v34, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[151], $$d_common[150]), $$d_common[149]), $$d_common[148]))) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 781} (if (BV32_AND(BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))), BV1_ZEXT32((if _READ_HAS_OCCURRED_$$d_in2_pad_cumv_all then 1 else 0))) != 0 ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v34, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[143], $$d_common[142]), $$d_common[141]), $$d_common[140])), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 782} (if (_READ_HAS_OCCURRED_$$d_in2_pad_cumv_all ==> BV32_ULT(BV32_UDIV(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v34, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[143], $$d_common[142]), $$d_common[141]), $$d_common[140])), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[147], $$d_common[146]), $$d_common[145]), $$d_common[144]))) then 1 else 0) != 0;
  assert {:sourceloc} {:sourceloc_num 783} true;
  v631 := $$d_common[144];
  assert {:sourceloc} {:sourceloc_num 784} true;
  v632 := $$d_common[145];
  assert {:sourceloc} {:sourceloc_num 785} true;
  v633 := $$d_common[146];
  assert {:sourceloc} {:sourceloc_num 786} true;
  v634 := $$d_common[147];
  v635 := BV32_SLT($ei_new.15, BV_CONCAT(BV_CONCAT(BV_CONCAT(v634, v633), v632), v631));
  goto $truebb44, $falsebb44;
$115:
  assert {:block_sourceloc} {:sourceloc_num 787} true;
  assert {:sourceloc} {:sourceloc_num 788} true;
  v636 := $$d_common[140];
  assert {:sourceloc} {:sourceloc_num 789} true;
  v637 := $$d_common[141];
  assert {:sourceloc} {:sourceloc_num 790} true;
  v638 := $$d_common[142];
  assert {:sourceloc} {:sourceloc_num 791} true;
  v639 := $$d_common[143];
  v640 := BV32_MUL($ei_new.15, BV_CONCAT(BV_CONCAT(BV_CONCAT(v639, v638), v637), v636));
  $position.2, $sum.2 := v640, 0;
  goto $116;
$116:
  assert {:block_sourceloc} {:sourceloc_num 792} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 793} (if (BV32_AND(BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))), BV1_ZEXT32((if _WRITE_HAS_OCCURRED_$$d_in2_pad_cumv_all then 1 else 0))) != 0 ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v34, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[143], $$d_common[142]), $$d_common[141]), $$d_common[140])), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 794} (if (BV32_AND(BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))), BV1_ZEXT32((if _WRITE_HAS_OCCURRED_$$d_in2_pad_cumv_all then 1 else 0))) != 0 ==> BV32_ULT(BV32_UDIV(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v34, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[143], $$d_common[142]), $$d_common[141]), $$d_common[140])), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[147], $$d_common[146]), $$d_common[145]), $$d_common[144]))) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 795} (if (BV32_AND(BV1_ZEXT32(BV1_XOR((if BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))) != 0 then 1 else 0), -1)), BV1_ZEXT32((if _WRITE_HAS_OCCURRED_$$d_in2_pad_cumv_all then 1 else 0))) != 0 ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v34, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[151], $$d_common[150]), $$d_common[149]), $$d_common[148]))) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 796} (if (BV32_AND(BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))), BV1_ZEXT32((if _READ_HAS_OCCURRED_$$d_in2_pad_cumv_all then 1 else 0))) != 0 ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v34, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[143], $$d_common[142]), $$d_common[141]), $$d_common[140])), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 797} (if (_READ_HAS_OCCURRED_$$d_in2_pad_cumv_all ==> BV32_ULT(BV32_UDIV(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v34, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[143], $$d_common[142]), $$d_common[141]), $$d_common[140])), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[147], $$d_common[146]), $$d_common[145]), $$d_common[144]))) then 1 else 0) != 0;
  assert {:sourceloc} {:sourceloc_num 798} true;
  v641 := $$d_common[140];
  assert {:sourceloc} {:sourceloc_num 799} true;
  v642 := $$d_common[141];
  assert {:sourceloc} {:sourceloc_num 800} true;
  v643 := $$d_common[142];
  assert {:sourceloc} {:sourceloc_num 801} true;
  v644 := $$d_common[143];
  v645 := BV32_SLT($position.2, BV32_ADD(v640, BV_CONCAT(BV_CONCAT(BV_CONCAT(v644, v643), v642), v641)));
  goto $truebb45, $falsebb45;
$117:
  assert {:block_sourceloc} {:sourceloc_num 802} true;
  assert {:sourceloc} {:sourceloc_num 803} true;
  v646 := $$d_in2_pad_cumv_all[BV32_ADD(v34, $position.2)];
  assert {:sourceloc} {:sourceloc_num 804} true;
  $$d_in2_pad_cumv_all[BV32_ADD(v34, $position.2)] := FADD32(v646, $sum.2);
  assert {:sourceloc} {:sourceloc_num 805} true;
  v647 := $$d_in2_pad_cumv_all[BV32_ADD(v34, $position.2)];
  goto $118;
$118:
  assert {:block_sourceloc} {:sourceloc_num 806} true;
  $position.2, $sum.2 := BV32_ADD($position.2, 1), v647;
  goto $116;
$119:
  assert {:block_sourceloc} {:sourceloc_num 807} true;
  $ei_new.15 := BV32_ADD($ei_new.15, 256);
  goto $114;
$120:
  assert {:block_sourceloc} {:sourceloc_num 808} true;
  call {:sourceloc_num 809} $bugle_barrier(-1, -1);
  $ei_new.16 := v1;
  goto $121;
$121:
  assert {:block_sourceloc} {:sourceloc_num 810} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 811} (if (_WRITE_HAS_OCCURRED_$$d_in2_pad_cumv_sel_all ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v39, 4)), 4), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 812} (if (_WRITE_HAS_OCCURRED_$$d_in2_pad_cumv_sel_all ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v39, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[167], $$d_common[166]), $$d_common[165]), $$d_common[164]))) then 1 else 0) != 0;
  assert {:sourceloc} {:sourceloc_num 813} true;
  v648 := $$d_common[164];
  assert {:sourceloc} {:sourceloc_num 814} true;
  v649 := $$d_common[165];
  assert {:sourceloc} {:sourceloc_num 815} true;
  v650 := $$d_common[166];
  assert {:sourceloc} {:sourceloc_num 816} true;
  v651 := $$d_common[167];
  v652 := BV32_SLT($ei_new.16, BV_CONCAT(BV_CONCAT(BV_CONCAT(v651, v650), v649), v648));
  goto $truebb46, $falsebb46;
$122:
  assert {:block_sourceloc} {:sourceloc_num 817} true;
  assert {:sourceloc} {:sourceloc_num 818} true;
  v653 := $$d_common[156];
  assert {:sourceloc} {:sourceloc_num 819} true;
  v654 := $$d_common[157];
  assert {:sourceloc} {:sourceloc_num 820} true;
  v655 := $$d_common[158];
  assert {:sourceloc} {:sourceloc_num 821} true;
  v656 := $$d_common[159];
  assert {:sourceloc} {:sourceloc_num 822} true;
  v657 := $$d_common[156];
  assert {:sourceloc} {:sourceloc_num 823} true;
  v658 := $$d_common[157];
  assert {:sourceloc} {:sourceloc_num 824} true;
  v659 := $$d_common[158];
  assert {:sourceloc} {:sourceloc_num 825} true;
  v660 := $$d_common[159];
  v661 := BV32_SUB(BV32_ADD(BV32_SDIV(BV32_ADD($ei_new.16, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v660, v659), v658), v657)), 1), 1);
  assert {:sourceloc} {:sourceloc_num 826} true;
  v662 := $$d_common[156];
  assert {:sourceloc} {:sourceloc_num 827} true;
  v663 := $$d_common[157];
  assert {:sourceloc} {:sourceloc_num 828} true;
  v664 := $$d_common[158];
  assert {:sourceloc} {:sourceloc_num 829} true;
  v665 := $$d_common[159];
  v666 := BV32_SREM(BV32_ADD($ei_new.16, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v665, v664), v663), v662)) == 0;
  goto $truebb47, $falsebb47;
$123:
  assert {:block_sourceloc} {:sourceloc_num 830} true;
  assert {:sourceloc} {:sourceloc_num 831} true;
  v667 := $$d_common[156];
  assert {:sourceloc} {:sourceloc_num 832} true;
  v668 := $$d_common[157];
  assert {:sourceloc} {:sourceloc_num 833} true;
  v669 := $$d_common[158];
  assert {:sourceloc} {:sourceloc_num 834} true;
  v670 := $$d_common[159];
  $row.9, $col.9 := BV32_SUB(BV_CONCAT(BV_CONCAT(BV_CONCAT(v670, v669), v668), v667), 1), BV32_SUB(v661, 1);
  goto $124;
$124:
  assert {:block_sourceloc} {:sourceloc_num 835} true;
  assert {:sourceloc} {:sourceloc_num 836} true;
  v671 := $$d_common[172];
  assert {:sourceloc} {:sourceloc_num 837} true;
  v672 := $$d_common[173];
  assert {:sourceloc} {:sourceloc_num 838} true;
  v673 := $$d_common[174];
  assert {:sourceloc} {:sourceloc_num 839} true;
  v674 := $$d_common[175];
  assert {:sourceloc} {:sourceloc_num 840} true;
  v675 := $$d_common[180];
  assert {:sourceloc} {:sourceloc_num 841} true;
  v676 := $$d_common[181];
  assert {:sourceloc} {:sourceloc_num 842} true;
  v677 := $$d_common[182];
  assert {:sourceloc} {:sourceloc_num 843} true;
  v678 := $$d_common[183];
  assert {:sourceloc} {:sourceloc_num 844} true;
  v679 := $$d_common[140];
  assert {:sourceloc} {:sourceloc_num 845} true;
  v680 := $$d_common[141];
  assert {:sourceloc} {:sourceloc_num 846} true;
  v681 := $$d_common[142];
  assert {:sourceloc} {:sourceloc_num 847} true;
  v682 := $$d_common[143];
  assert {:sourceloc} {:sourceloc_num 848} true;
  v683 := $$d_in2_pad_cumv_all[BV32_ADD(v34, BV32_ADD(BV32_MUL(BV32_SUB(BV32_ADD($col.9, BV_CONCAT(BV_CONCAT(BV_CONCAT(v678, v677), v676), v675)), 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v682, v681), v680), v679)), BV32_SUB(BV32_ADD($row.9, BV_CONCAT(BV_CONCAT(BV_CONCAT(v674, v673), v672), v671)), 1)))];
  assert {:sourceloc} {:sourceloc_num 849} true;
  $$d_in2_pad_cumv_sel_all[BV32_ADD(v39, $ei_new.16)] := v683;
  $ei_new.16 := BV32_ADD($ei_new.16, 256);
  goto $121;
$125:
  assert {:block_sourceloc} {:sourceloc_num 850} true;
  call {:sourceloc_num 851} $bugle_barrier(-1, -1);
  $ei_new.17 := v1;
  goto $126;
$126:
  assert {:block_sourceloc} {:sourceloc_num 852} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 853} (if (BV32_AND(BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))), BV1_ZEXT32((if _WRITE_HAS_OCCURRED_$$d_in2_sub_cumh_all then 1 else 0))) != 0 ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 854} (if (_WRITE_HAS_OCCURRED_$$d_in2_sub_cumh_all ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[215], $$d_common[214]), $$d_common[213]), $$d_common[212]))) then 1 else 0) != 0;
  assert {:sourceloc} {:sourceloc_num 855} true;
  v684 := $$d_common[212];
  assert {:sourceloc} {:sourceloc_num 856} true;
  v685 := $$d_common[213];
  assert {:sourceloc} {:sourceloc_num 857} true;
  v686 := $$d_common[214];
  assert {:sourceloc} {:sourceloc_num 858} true;
  v687 := $$d_common[215];
  v688 := BV32_SLT($ei_new.17, BV_CONCAT(BV_CONCAT(BV_CONCAT(v687, v686), v685), v684));
  goto $truebb48, $falsebb48;
$127:
  assert {:block_sourceloc} {:sourceloc_num 859} true;
  assert {:sourceloc} {:sourceloc_num 860} true;
  v689 := $$d_common[204];
  assert {:sourceloc} {:sourceloc_num 861} true;
  v690 := $$d_common[205];
  assert {:sourceloc} {:sourceloc_num 862} true;
  v691 := $$d_common[206];
  assert {:sourceloc} {:sourceloc_num 863} true;
  v692 := $$d_common[207];
  assert {:sourceloc} {:sourceloc_num 864} true;
  v693 := $$d_common[204];
  assert {:sourceloc} {:sourceloc_num 865} true;
  v694 := $$d_common[205];
  assert {:sourceloc} {:sourceloc_num 866} true;
  v695 := $$d_common[206];
  assert {:sourceloc} {:sourceloc_num 867} true;
  v696 := $$d_common[207];
  v697 := BV32_SUB(BV32_ADD(BV32_SDIV(BV32_ADD($ei_new.17, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v696, v695), v694), v693)), 1), 1);
  assert {:sourceloc} {:sourceloc_num 868} true;
  v698 := $$d_common[204];
  assert {:sourceloc} {:sourceloc_num 869} true;
  v699 := $$d_common[205];
  assert {:sourceloc} {:sourceloc_num 870} true;
  v700 := $$d_common[206];
  assert {:sourceloc} {:sourceloc_num 871} true;
  v701 := $$d_common[207];
  v702 := BV32_SREM(BV32_ADD($ei_new.17, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v701, v700), v699), v698)) == 0;
  goto $truebb49, $falsebb49;
$128:
  assert {:block_sourceloc} {:sourceloc_num 872} true;
  assert {:sourceloc} {:sourceloc_num 873} true;
  v703 := $$d_common[204];
  assert {:sourceloc} {:sourceloc_num 874} true;
  v704 := $$d_common[205];
  assert {:sourceloc} {:sourceloc_num 875} true;
  v705 := $$d_common[206];
  assert {:sourceloc} {:sourceloc_num 876} true;
  v706 := $$d_common[207];
  $row.10, $col.10 := BV32_SUB(BV_CONCAT(BV_CONCAT(BV_CONCAT(v706, v705), v704), v703), 1), BV32_SUB(v697, 1);
  goto $129;
$129:
  assert {:block_sourceloc} {:sourceloc_num 877} true;
  assert {:sourceloc} {:sourceloc_num 878} true;
  v707 := $$d_common[188];
  assert {:sourceloc} {:sourceloc_num 879} true;
  v708 := $$d_common[189];
  assert {:sourceloc} {:sourceloc_num 880} true;
  v709 := $$d_common[190];
  assert {:sourceloc} {:sourceloc_num 881} true;
  v710 := $$d_common[191];
  assert {:sourceloc} {:sourceloc_num 882} true;
  v711 := $$d_common[196];
  assert {:sourceloc} {:sourceloc_num 883} true;
  v712 := $$d_common[197];
  assert {:sourceloc} {:sourceloc_num 884} true;
  v713 := $$d_common[198];
  assert {:sourceloc} {:sourceloc_num 885} true;
  v714 := $$d_common[199];
  assert {:sourceloc} {:sourceloc_num 886} true;
  v715 := $$d_common[140];
  assert {:sourceloc} {:sourceloc_num 887} true;
  v716 := $$d_common[141];
  assert {:sourceloc} {:sourceloc_num 888} true;
  v717 := $$d_common[142];
  assert {:sourceloc} {:sourceloc_num 889} true;
  v718 := $$d_common[143];
  assert {:sourceloc} {:sourceloc_num 890} true;
  v719 := $$d_in2_pad_cumv_all[BV32_ADD(v34, BV32_ADD(BV32_MUL(BV32_SUB(BV32_ADD($col.10, BV_CONCAT(BV_CONCAT(BV_CONCAT(v714, v713), v712), v711)), 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v718, v717), v716), v715)), BV32_SUB(BV32_ADD($row.10, BV_CONCAT(BV_CONCAT(BV_CONCAT(v710, v709), v708), v707)), 1)))];
  assert {:sourceloc} {:sourceloc_num 891} true;
  $$d_in2_sub_cumh_all[BV32_ADD(v44, $ei_new.17)] := v719;
  $ei_new.17 := BV32_ADD($ei_new.17, 256);
  goto $126;
$130:
  assert {:block_sourceloc} {:sourceloc_num 892} true;
  call {:sourceloc_num 893} $bugle_barrier(-1, -1);
  $ei_new.18 := v1;
  goto $131;
$131:
  assert {:block_sourceloc} {:sourceloc_num 894} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 895} (if (BV32_AND(BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))), BV1_ZEXT32((if _WRITE_HAS_OCCURRED_$$d_in2_sub_cumh_all then 1 else 0))) != 0 ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 896} (if (_WRITE_HAS_OCCURRED_$$d_in2_sub_cumh_all ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[215], $$d_common[214]), $$d_common[213]), $$d_common[212]))) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 897} (if (BV32_AND(BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))), BV1_ZEXT32((if _READ_HAS_OCCURRED_$$d_in2_sub_cumh_all then 1 else 0))) != 0 ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 898} (if (_READ_HAS_OCCURRED_$$d_in2_sub_cumh_all ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[215], $$d_common[214]), $$d_common[213]), $$d_common[212]))) then 1 else 0) != 0;
  assert {:sourceloc} {:sourceloc_num 899} true;
  v720 := $$d_common[212];
  assert {:sourceloc} {:sourceloc_num 900} true;
  v721 := $$d_common[213];
  assert {:sourceloc} {:sourceloc_num 901} true;
  v722 := $$d_common[214];
  assert {:sourceloc} {:sourceloc_num 902} true;
  v723 := $$d_common[215];
  v724 := BV32_SLT($ei_new.18, BV_CONCAT(BV_CONCAT(BV_CONCAT(v723, v722), v721), v720));
  goto $truebb50, $falsebb50;
$132:
  assert {:block_sourceloc} {:sourceloc_num 903} true;
  assert {:sourceloc} {:sourceloc_num 904} true;
  v725 := $$d_in2_pad_cumv_sel_all[BV32_ADD(v39, $ei_new.18)];
  assert {:sourceloc} {:sourceloc_num 905} true;
  v726 := $$d_in2_sub_cumh_all[BV32_ADD(v44, $ei_new.18)];
  assert {:sourceloc} {:sourceloc_num 906} true;
  $$d_in2_sub_cumh_all[BV32_ADD(v44, $ei_new.18)] := FSUB32(v725, v726);
  $ei_new.18 := BV32_ADD($ei_new.18, 256);
  goto $131;
$133:
  assert {:block_sourceloc} {:sourceloc_num 907} true;
  call {:sourceloc_num 908} $bugle_barrier(-1, -1);
  $ei_new.19 := v1;
  goto $134;
$134:
  assert {:block_sourceloc} {:sourceloc_num 909} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 910} (if (BV32_AND(BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))), BV1_ZEXT32((if _WRITE_HAS_OCCURRED_$$d_in2_sub_cumh_all then 1 else 0))) != 0 ==> BV32_UREM(BV32_SUB(BV32_UREM(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[207], $$d_common[206]), $$d_common[205]), $$d_common[204])), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 911} (if (BV32_AND(BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))), BV1_ZEXT32((if _WRITE_HAS_OCCURRED_$$d_in2_sub_cumh_all then 1 else 0))) != 0 ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_UREM(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[207], $$d_common[206]), $$d_common[205]), $$d_common[204])), v1), 256), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[207], $$d_common[206]), $$d_common[205]), $$d_common[204]))) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 912} (if (BV32_AND(BV1_ZEXT32(BV1_XOR((if BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))) != 0 then 1 else 0), -1)), BV1_ZEXT32((if _WRITE_HAS_OCCURRED_$$d_in2_sub_cumh_all then 1 else 0))) != 0 ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[215], $$d_common[214]), $$d_common[213]), $$d_common[212]))) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 913} (if (BV32_AND(BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))), BV1_ZEXT32((if _READ_HAS_OCCURRED_$$d_in2_sub_cumh_all then 1 else 0))) != 0 ==> BV32_UREM(BV32_SUB(BV32_UREM(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[207], $$d_common[206]), $$d_common[205]), $$d_common[204])), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 914} (if (BV32_AND(BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))), BV1_ZEXT32((if _READ_HAS_OCCURRED_$$d_in2_sub_cumh_all then 1 else 0))) != 0 ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_UREM(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[207], $$d_common[206]), $$d_common[205]), $$d_common[204])), v1), 256), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[207], $$d_common[206]), $$d_common[205]), $$d_common[204]))) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 915} (if (BV32_AND(BV1_ZEXT32(BV1_XOR((if BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))) != 0 then 1 else 0), -1)), BV1_ZEXT32((if _READ_HAS_OCCURRED_$$d_in2_sub_cumh_all then 1 else 0))) != 0 ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[215], $$d_common[214]), $$d_common[213]), $$d_common[212]))) then 1 else 0) != 0;
  assert {:sourceloc} {:sourceloc_num 916} true;
  v727 := $$d_common[204];
  assert {:sourceloc} {:sourceloc_num 917} true;
  v728 := $$d_common[205];
  assert {:sourceloc} {:sourceloc_num 918} true;
  v729 := $$d_common[206];
  assert {:sourceloc} {:sourceloc_num 919} true;
  v730 := $$d_common[207];
  v731 := BV32_SLT($ei_new.19, BV_CONCAT(BV_CONCAT(BV_CONCAT(v730, v729), v728), v727));
  goto $truebb51, $falsebb51;
$135:
  assert {:block_sourceloc} {:sourceloc_num 920} true;
  $position.3, $sum.3 := $ei_new.19, 0;
  goto $136;
$136:
  assert {:block_sourceloc} {:sourceloc_num 921} true;
  assert {:originated_from_invariant} {:sourceloc_num 922} (if BV32_SREM(BV32_SUB($position.3, $ei_new.19), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[207], $$d_common[206]), $$d_common[205]), $$d_common[204])) == 0 then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 923} (if (BV32_AND(BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))), BV1_ZEXT32((if _WRITE_HAS_OCCURRED_$$d_in2_sub_cumh_all then 1 else 0))) != 0 ==> BV32_UREM(BV32_SUB(BV32_UREM(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[207], $$d_common[206]), $$d_common[205]), $$d_common[204])), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 924} (if (BV32_AND(BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))), BV1_ZEXT32((if _WRITE_HAS_OCCURRED_$$d_in2_sub_cumh_all then 1 else 0))) != 0 ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_UREM(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[207], $$d_common[206]), $$d_common[205]), $$d_common[204])), v1), 256), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[207], $$d_common[206]), $$d_common[205]), $$d_common[204]))) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 925} (if (BV32_AND(BV1_ZEXT32(BV1_XOR((if BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))) != 0 then 1 else 0), -1)), BV1_ZEXT32((if _WRITE_HAS_OCCURRED_$$d_in2_sub_cumh_all then 1 else 0))) != 0 ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[215], $$d_common[214]), $$d_common[213]), $$d_common[212]))) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 926} (if (BV32_AND(BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))), BV1_ZEXT32((if _READ_HAS_OCCURRED_$$d_in2_sub_cumh_all then 1 else 0))) != 0 ==> BV32_UREM(BV32_SUB(BV32_UREM(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[207], $$d_common[206]), $$d_common[205]), $$d_common[204])), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 927} (if (BV32_AND(BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))), BV1_ZEXT32((if _READ_HAS_OCCURRED_$$d_in2_sub_cumh_all then 1 else 0))) != 0 ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_UREM(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[207], $$d_common[206]), $$d_common[205]), $$d_common[204])), v1), 256), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[207], $$d_common[206]), $$d_common[205]), $$d_common[204]))) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 928} (if (BV32_AND(BV1_ZEXT32(BV1_XOR((if BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))) != 0 then 1 else 0), -1)), BV1_ZEXT32((if _READ_HAS_OCCURRED_$$d_in2_sub_cumh_all then 1 else 0))) != 0 ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v44, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[215], $$d_common[214]), $$d_common[213]), $$d_common[212]))) then 1 else 0) != 0;
  assert {:sourceloc} {:sourceloc_num 929} true;
  v732 := $$d_common[212];
  assert {:sourceloc} {:sourceloc_num 930} true;
  v733 := $$d_common[213];
  assert {:sourceloc} {:sourceloc_num 931} true;
  v734 := $$d_common[214];
  assert {:sourceloc} {:sourceloc_num 932} true;
  v735 := $$d_common[215];
  v736 := BV32_SLT($position.3, BV32_ADD($ei_new.19, BV_CONCAT(BV_CONCAT(BV_CONCAT(v735, v734), v733), v732)));
  goto $truebb52, $falsebb52;
$137:
  assert {:block_sourceloc} {:sourceloc_num 933} true;
  assert {:sourceloc} {:sourceloc_num 934} true;
  v737 := $$d_in2_sub_cumh_all[BV32_ADD(v44, $position.3)];
  assert {:sourceloc} {:sourceloc_num 935} true;
  $$d_in2_sub_cumh_all[BV32_ADD(v44, $position.3)] := FADD32(v737, $sum.3);
  assert {:sourceloc} {:sourceloc_num 936} true;
  v738 := $$d_in2_sub_cumh_all[BV32_ADD(v44, $position.3)];
  goto $138;
$138:
  assert {:block_sourceloc} {:sourceloc_num 937} true;
  assert {:sourceloc} {:sourceloc_num 938} true;
  v739 := $$d_common[204];
  assert {:sourceloc} {:sourceloc_num 939} true;
  v740 := $$d_common[205];
  assert {:sourceloc} {:sourceloc_num 940} true;
  v741 := $$d_common[206];
  assert {:sourceloc} {:sourceloc_num 941} true;
  v742 := $$d_common[207];
  $position.3, $sum.3 := BV32_ADD($position.3, BV_CONCAT(BV_CONCAT(BV_CONCAT(v742, v741), v740), v739)), v738;
  goto $136;
$139:
  assert {:block_sourceloc} {:sourceloc_num 942} true;
  $ei_new.19 := BV32_ADD($ei_new.19, 256);
  goto $134;
$140:
  assert {:block_sourceloc} {:sourceloc_num 943} true;
  call {:sourceloc_num 944} $bugle_barrier(-1, -1);
  $ei_new.20 := v1;
  goto $141;
$141:
  assert {:block_sourceloc} {:sourceloc_num 945} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 946} (if (BV32_AND(BV32_AND(BV32_AND(BV1_ZEXT32((if group_id_x == __other_bv32(group_id_x) then 1 else 0)), BV1_ZEXT32((if group_id_y == __other_bv32(group_id_y) then 1 else 0))), BV1_ZEXT32((if group_id_z == __other_bv32(group_id_z) then 1 else 0))), BV1_ZEXT32((if _WRITE_HAS_OCCURRED_$$d_in2_sub_cumh_sel_all then 1 else 0))) != 0 ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v49, 4)), 4), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 947} (if (_WRITE_HAS_OCCURRED_$$d_in2_sub_cumh_sel_all ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v49, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[231], $$d_common[230]), $$d_common[229]), $$d_common[228]))) then 1 else 0) != 0;
  assert {:sourceloc} {:sourceloc_num 948} true;
  v743 := $$d_common[228];
  assert {:sourceloc} {:sourceloc_num 949} true;
  v744 := $$d_common[229];
  assert {:sourceloc} {:sourceloc_num 950} true;
  v745 := $$d_common[230];
  assert {:sourceloc} {:sourceloc_num 951} true;
  v746 := $$d_common[231];
  v747 := BV32_SLT($ei_new.20, BV_CONCAT(BV_CONCAT(BV_CONCAT(v746, v745), v744), v743));
  goto $truebb53, $falsebb53;
$142:
  assert {:block_sourceloc} {:sourceloc_num 952} true;
  assert {:sourceloc} {:sourceloc_num 953} true;
  v748 := $$d_common[220];
  assert {:sourceloc} {:sourceloc_num 954} true;
  v749 := $$d_common[221];
  assert {:sourceloc} {:sourceloc_num 955} true;
  v750 := $$d_common[222];
  assert {:sourceloc} {:sourceloc_num 956} true;
  v751 := $$d_common[223];
  assert {:sourceloc} {:sourceloc_num 957} true;
  v752 := $$d_common[220];
  assert {:sourceloc} {:sourceloc_num 958} true;
  v753 := $$d_common[221];
  assert {:sourceloc} {:sourceloc_num 959} true;
  v754 := $$d_common[222];
  assert {:sourceloc} {:sourceloc_num 960} true;
  v755 := $$d_common[223];
  v756 := BV32_SUB(BV32_ADD(BV32_SDIV(BV32_ADD($ei_new.20, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v755, v754), v753), v752)), 1), 1);
  assert {:sourceloc} {:sourceloc_num 961} true;
  v757 := $$d_common[220];
  assert {:sourceloc} {:sourceloc_num 962} true;
  v758 := $$d_common[221];
  assert {:sourceloc} {:sourceloc_num 963} true;
  v759 := $$d_common[222];
  assert {:sourceloc} {:sourceloc_num 964} true;
  v760 := $$d_common[223];
  v761 := BV32_SREM(BV32_ADD($ei_new.20, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v760, v759), v758), v757)) == 0;
  goto $truebb54, $falsebb54;
$143:
  assert {:block_sourceloc} {:sourceloc_num 965} true;
  assert {:sourceloc} {:sourceloc_num 966} true;
  v762 := $$d_common[220];
  assert {:sourceloc} {:sourceloc_num 967} true;
  v763 := $$d_common[221];
  assert {:sourceloc} {:sourceloc_num 968} true;
  v764 := $$d_common[222];
  assert {:sourceloc} {:sourceloc_num 969} true;
  v765 := $$d_common[223];
  $row.11, $col.11 := BV32_SUB(BV_CONCAT(BV_CONCAT(BV_CONCAT(v765, v764), v763), v762), 1), BV32_SUB(v756, 1);
  goto $144;
$144:
  assert {:block_sourceloc} {:sourceloc_num 970} true;
  assert {:sourceloc} {:sourceloc_num 971} true;
  v766 := $$d_common[236];
  assert {:sourceloc} {:sourceloc_num 972} true;
  v767 := $$d_common[237];
  assert {:sourceloc} {:sourceloc_num 973} true;
  v768 := $$d_common[238];
  assert {:sourceloc} {:sourceloc_num 974} true;
  v769 := $$d_common[239];
  assert {:sourceloc} {:sourceloc_num 975} true;
  v770 := $$d_common[244];
  assert {:sourceloc} {:sourceloc_num 976} true;
  v771 := $$d_common[245];
  assert {:sourceloc} {:sourceloc_num 977} true;
  v772 := $$d_common[246];
  assert {:sourceloc} {:sourceloc_num 978} true;
  v773 := $$d_common[247];
  assert {:sourceloc} {:sourceloc_num 979} true;
  v774 := $$d_common[204];
  assert {:sourceloc} {:sourceloc_num 980} true;
  v775 := $$d_common[205];
  assert {:sourceloc} {:sourceloc_num 981} true;
  v776 := $$d_common[206];
  assert {:sourceloc} {:sourceloc_num 982} true;
  v777 := $$d_common[207];
  assert {:sourceloc} {:sourceloc_num 983} true;
  v778 := $$d_in2_sub_cumh_all[BV32_ADD(v44, BV32_ADD(BV32_MUL(BV32_SUB(BV32_ADD($col.11, BV_CONCAT(BV_CONCAT(BV_CONCAT(v773, v772), v771), v770)), 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v777, v776), v775), v774)), BV32_SUB(BV32_ADD($row.11, BV_CONCAT(BV_CONCAT(BV_CONCAT(v769, v768), v767), v766)), 1)))];
  assert {:sourceloc} {:sourceloc_num 984} true;
  $$d_in2_sub_cumh_sel_all[BV32_ADD(v49, $ei_new.20)] := v778;
  $ei_new.20 := BV32_ADD($ei_new.20, 256);
  goto $141;
$145:
  assert {:block_sourceloc} {:sourceloc_num 985} true;
  call {:sourceloc_num 986} $bugle_barrier(-1, -1);
  $ei_new.21 := v1;
  goto $146;
$146:
  assert {:block_sourceloc} {:sourceloc_num 987} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 988} (if (_WRITE_HAS_OCCURRED_$$d_in2_sqr_sub2_all ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v64, 4)), 4), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 989} (if (_WRITE_HAS_OCCURRED_$$d_in2_sqr_sub2_all ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v64, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[279], $$d_common[278]), $$d_common[277]), $$d_common[276]))) then 1 else 0) != 0;
  assert {:sourceloc} {:sourceloc_num 990} true;
  v779 := $$d_common[276];
  assert {:sourceloc} {:sourceloc_num 991} true;
  v780 := $$d_common[277];
  assert {:sourceloc} {:sourceloc_num 992} true;
  v781 := $$d_common[278];
  assert {:sourceloc} {:sourceloc_num 993} true;
  v782 := $$d_common[279];
  v783 := BV32_SLT($ei_new.21, BV_CONCAT(BV_CONCAT(BV_CONCAT(v782, v781), v780), v779));
  goto $truebb55, $falsebb55;
$147:
  assert {:block_sourceloc} {:sourceloc_num 994} true;
  assert {:sourceloc} {:sourceloc_num 995} true;
  v784 := $$d_common[268];
  assert {:sourceloc} {:sourceloc_num 996} true;
  v785 := $$d_common[269];
  assert {:sourceloc} {:sourceloc_num 997} true;
  v786 := $$d_common[270];
  assert {:sourceloc} {:sourceloc_num 998} true;
  v787 := $$d_common[271];
  assert {:sourceloc} {:sourceloc_num 999} true;
  v788 := $$d_common[268];
  assert {:sourceloc} {:sourceloc_num 1000} true;
  v789 := $$d_common[269];
  assert {:sourceloc} {:sourceloc_num 1001} true;
  v790 := $$d_common[270];
  assert {:sourceloc} {:sourceloc_num 1002} true;
  v791 := $$d_common[271];
  v792 := BV32_SUB(BV32_ADD(BV32_SDIV(BV32_ADD($ei_new.21, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v791, v790), v789), v788)), 1), 1);
  assert {:sourceloc} {:sourceloc_num 1003} true;
  v793 := $$d_common[268];
  assert {:sourceloc} {:sourceloc_num 1004} true;
  v794 := $$d_common[269];
  assert {:sourceloc} {:sourceloc_num 1005} true;
  v795 := $$d_common[270];
  assert {:sourceloc} {:sourceloc_num 1006} true;
  v796 := $$d_common[271];
  v797 := BV32_SREM(BV32_ADD($ei_new.21, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v796, v795), v794), v793)) == 0;
  goto $truebb56, $falsebb56;
$148:
  assert {:block_sourceloc} {:sourceloc_num 1007} true;
  assert {:sourceloc} {:sourceloc_num 1008} true;
  v798 := $$d_common[268];
  assert {:sourceloc} {:sourceloc_num 1009} true;
  v799 := $$d_common[269];
  assert {:sourceloc} {:sourceloc_num 1010} true;
  v800 := $$d_common[270];
  assert {:sourceloc} {:sourceloc_num 1011} true;
  v801 := $$d_common[271];
  $row.12, $col.12 := BV32_SUB(BV_CONCAT(BV_CONCAT(BV_CONCAT(v801, v800), v799), v798), 1), BV32_SUB(v792, 1);
  goto $149;
$149:
  assert {:block_sourceloc} {:sourceloc_num 1012} true;
  assert {:sourceloc} {:sourceloc_num 1013} true;
  v802 := $$d_common[252];
  assert {:sourceloc} {:sourceloc_num 1014} true;
  v803 := $$d_common[253];
  assert {:sourceloc} {:sourceloc_num 1015} true;
  v804 := $$d_common[254];
  assert {:sourceloc} {:sourceloc_num 1016} true;
  v805 := $$d_common[255];
  assert {:sourceloc} {:sourceloc_num 1017} true;
  v806 := $$d_common[260];
  assert {:sourceloc} {:sourceloc_num 1018} true;
  v807 := $$d_common[261];
  assert {:sourceloc} {:sourceloc_num 1019} true;
  v808 := $$d_common[262];
  assert {:sourceloc} {:sourceloc_num 1020} true;
  v809 := $$d_common[263];
  assert {:sourceloc} {:sourceloc_num 1021} true;
  v810 := $$d_common[204];
  assert {:sourceloc} {:sourceloc_num 1022} true;
  v811 := $$d_common[205];
  assert {:sourceloc} {:sourceloc_num 1023} true;
  v812 := $$d_common[206];
  assert {:sourceloc} {:sourceloc_num 1024} true;
  v813 := $$d_common[207];
  assert {:sourceloc} {:sourceloc_num 1025} true;
  v814 := $$d_in2_sub_cumh_all[BV32_ADD(v44, BV32_ADD(BV32_MUL(BV32_SUB(BV32_ADD($col.12, BV_CONCAT(BV_CONCAT(BV_CONCAT(v809, v808), v807), v806)), 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v813, v812), v811), v810)), BV32_SUB(BV32_ADD($row.12, BV_CONCAT(BV_CONCAT(BV_CONCAT(v805, v804), v803), v802)), 1)))];
  assert {:sourceloc} {:sourceloc_num 1026} true;
  $$d_in2_sqr_sub2_all[BV32_ADD(v64, $ei_new.21)] := v814;
  $ei_new.21 := BV32_ADD($ei_new.21, 256);
  goto $146;
$150:
  assert {:block_sourceloc} {:sourceloc_num 1027} true;
  call {:sourceloc_num 1028} $bugle_barrier(-1, -1);
  $ei_new.22 := v1;
  goto $151;
$151:
  assert {:block_sourceloc} {:sourceloc_num 1029} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 1030} (if (_WRITE_HAS_OCCURRED_$$d_in2_sqr_sub2_all ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v64, 4)), 4), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 1031} (if (_WRITE_HAS_OCCURRED_$$d_in2_sqr_sub2_all ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v64, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[279], $$d_common[278]), $$d_common[277]), $$d_common[276]))) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 1032} (if (_READ_HAS_OCCURRED_$$d_in2_sqr_sub2_all ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v64, 4)), 4), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 1033} (if (_READ_HAS_OCCURRED_$$d_in2_sqr_sub2_all ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v64, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[279], $$d_common[278]), $$d_common[277]), $$d_common[276]))) then 1 else 0) != 0;
  assert {:sourceloc} {:sourceloc_num 1034} true;
  v815 := $$d_common[276];
  assert {:sourceloc} {:sourceloc_num 1035} true;
  v816 := $$d_common[277];
  assert {:sourceloc} {:sourceloc_num 1036} true;
  v817 := $$d_common[278];
  assert {:sourceloc} {:sourceloc_num 1037} true;
  v818 := $$d_common[279];
  v819 := BV32_SLT($ei_new.22, BV_CONCAT(BV_CONCAT(BV_CONCAT(v818, v817), v816), v815));
  goto $truebb57, $falsebb57;
$152:
  assert {:block_sourceloc} {:sourceloc_num 1038} true;
  assert {:sourceloc} {:sourceloc_num 1039} true;
  v820 := $$d_in2_sub_cumh_sel_all[BV32_ADD(v49, $ei_new.22)];
  assert {:sourceloc} {:sourceloc_num 1040} true;
  v821 := $$d_in2_sqr_sub2_all[BV32_ADD(v64, $ei_new.22)];
  assert {:sourceloc} {:sourceloc_num 1041} true;
  $$d_in2_sqr_sub2_all[BV32_ADD(v64, $ei_new.22)] := FSUB32(v820, v821);
  $ei_new.22 := BV32_ADD($ei_new.22, 256);
  goto $151;
$153:
  assert {:block_sourceloc} {:sourceloc_num 1042} true;
  call {:sourceloc_num 1043} $bugle_barrier(-1, -1);
  $ei_new.23 := v1;
  goto $154;
$154:
  assert {:block_sourceloc} {:sourceloc_num 1044} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 1045} (if (_WRITE_HAS_OCCURRED_$$d_in2_sqr_sub2_all ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v64, 4)), 4), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 1046} (if (_WRITE_HAS_OCCURRED_$$d_in2_sqr_sub2_all ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v64, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[279], $$d_common[278]), $$d_common[277]), $$d_common[276]))) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 1047} (if (_READ_HAS_OCCURRED_$$d_in2_sqr_sub2_all ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v64, 4)), 4), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 1048} (if (_READ_HAS_OCCURRED_$$d_in2_sqr_sub2_all ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v64, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[279], $$d_common[278]), $$d_common[277]), $$d_common[276]))) then 1 else 0) != 0;
  assert {:sourceloc} {:sourceloc_num 1049} true;
  v822 := $$d_common[276];
  assert {:sourceloc} {:sourceloc_num 1050} true;
  v823 := $$d_common[277];
  assert {:sourceloc} {:sourceloc_num 1051} true;
  v824 := $$d_common[278];
  assert {:sourceloc} {:sourceloc_num 1052} true;
  v825 := $$d_common[279];
  v826 := BV32_SLT($ei_new.23, BV_CONCAT(BV_CONCAT(BV_CONCAT(v825, v824), v823), v822));
  goto $truebb58, $falsebb58;
$155:
  assert {:block_sourceloc} {:sourceloc_num 1053} true;
  assert {:sourceloc} {:sourceloc_num 1054} true;
  v827 := $$d_in2_sub2_all[BV32_ADD(v54, $ei_new.23)];
  assert {:sourceloc} {:sourceloc_num 1055} true;
  v828 := $$d_in2_sqr_sub2_all[BV32_ADD(v64, $ei_new.23)];
  assert {:sourceloc} {:sourceloc_num 1056} true;
  v829 := $$d_common[80];
  assert {:sourceloc} {:sourceloc_num 1057} true;
  v830 := $$d_common[81];
  assert {:sourceloc} {:sourceloc_num 1058} true;
  v831 := $$d_common[82];
  assert {:sourceloc} {:sourceloc_num 1059} true;
  v832 := $$d_common[83];
  v833 := FSUB32(v828, FDIV32(FMUL32(v827, v827), SI32_TO_FP32(BV_CONCAT(BV_CONCAT(BV_CONCAT(v832, v831), v830), v829))));
  v834 := FLT32(v833, 0);
  goto $truebb59, $falsebb59;
$156:
  assert {:block_sourceloc} {:sourceloc_num 1060} true;
  $temp2.0 := 0;
  goto $157;
$157:
  assert {:block_sourceloc} {:sourceloc_num 1061} true;
  assert {:sourceloc} {:sourceloc_num 1062} true;
  $$d_in2_sqr_sub2_all[BV32_ADD(v64, $ei_new.23)] := FSQRT32($temp2.0);
  $ei_new.23 := BV32_ADD($ei_new.23, 256);
  goto $154;
$158:
  assert {:block_sourceloc} {:sourceloc_num 1063} true;
  call {:sourceloc_num 1064} $bugle_barrier(-1, -1);
  $ei_new.24 := v1;
  goto $159;
$159:
  assert {:block_sourceloc} {:sourceloc_num 1065} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 1066} (if (_WRITE_HAS_OCCURRED_$$d_in_sqr_all ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v69, 4)), 4), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 1067} (if (_WRITE_HAS_OCCURRED_$$d_in_sqr_all ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v69, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[327], $$d_common[326]), $$d_common[325]), $$d_common[324]))) then 1 else 0) != 0;
  assert {:sourceloc} {:sourceloc_num 1068} true;
  v835 := $$d_common[324];
  assert {:sourceloc} {:sourceloc_num 1069} true;
  v836 := $$d_common[325];
  assert {:sourceloc} {:sourceloc_num 1070} true;
  v837 := $$d_common[326];
  assert {:sourceloc} {:sourceloc_num 1071} true;
  v838 := $$d_common[327];
  v839 := BV32_SLT($ei_new.24, BV_CONCAT(BV_CONCAT(BV_CONCAT(v838, v837), v836), v835));
  goto $truebb60, $falsebb60;
$160:
  assert {:block_sourceloc} {:sourceloc_num 1072} true;
  if (base#MKPTR($d_in.0) == $arrayId$$d_endoT) {
    assert {:sourceloc} {:sourceloc_num 1073} true;
    v840 := $$d_endoT[BV32_ADD(offset#MKPTR($d_in.0), $ei_new.24)];
  } else if (base#MKPTR($d_in.0) == $arrayId$$d_epiT) {
    assert {:sourceloc} {:sourceloc_num 1074} true;
    v840 := $$d_epiT[BV32_ADD(offset#MKPTR($d_in.0), $ei_new.24)];
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 1075} false;
  }
  assert {:sourceloc} {:sourceloc_num 1076} true;
  $$d_in_sqr_all[BV32_ADD(v69, $ei_new.24)] := FMUL32(v840, v840);
  $ei_new.24 := BV32_ADD($ei_new.24, 256);
  goto $159;
$161:
  assert {:block_sourceloc} {:sourceloc_num 1077} true;
  call {:sourceloc_num 1078} $bugle_barrier(-1, -1);
  $ei_new.25 := v1;
  goto $162;
$162:
  assert {:block_sourceloc} {:sourceloc_num 1079} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 1080} (if (_WRITE_HAS_OCCURRED_$$in_partial_sum_all ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v89, 4)), 4), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 1081} (if (_WRITE_HAS_OCCURRED_$$in_partial_sum_all ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v89, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[79], $$d_common[78]), $$d_common[77]), $$d_common[76]))) then 1 else 0) != 0;
  assert {:sourceloc} {:sourceloc_num 1082} true;
  v841 := $$d_common[76];
  assert {:sourceloc} {:sourceloc_num 1083} true;
  v842 := $$d_common[77];
  assert {:sourceloc} {:sourceloc_num 1084} true;
  v843 := $$d_common[78];
  assert {:sourceloc} {:sourceloc_num 1085} true;
  v844 := $$d_common[79];
  v845 := BV32_SLT($ei_new.25, BV_CONCAT(BV_CONCAT(BV_CONCAT(v844, v843), v842), v841));
  goto $truebb61, $falsebb61;
$163:
  assert {:block_sourceloc} {:sourceloc_num 1086} true;
  $i.0, $sum.4 := 0, 0;
  goto $164;
$164:
  assert {:block_sourceloc} {:sourceloc_num 1087} true;
  assert {:sourceloc} {:sourceloc_num 1088} true;
  v846 := $$d_common[72];
  assert {:sourceloc} {:sourceloc_num 1089} true;
  v847 := $$d_common[73];
  assert {:sourceloc} {:sourceloc_num 1090} true;
  v848 := $$d_common[74];
  assert {:sourceloc} {:sourceloc_num 1091} true;
  v849 := $$d_common[75];
  v850 := BV32_SLT($i.0, BV_CONCAT(BV_CONCAT(BV_CONCAT(v849, v848), v847), v846));
  goto $truebb62, $falsebb62;
$165:
  assert {:block_sourceloc} {:sourceloc_num 1092} true;
  assert {:sourceloc} {:sourceloc_num 1093} true;
  v851 := $$d_common[72];
  assert {:sourceloc} {:sourceloc_num 1094} true;
  v852 := $$d_common[73];
  assert {:sourceloc} {:sourceloc_num 1095} true;
  v853 := $$d_common[74];
  assert {:sourceloc} {:sourceloc_num 1096} true;
  v854 := $$d_common[75];
  if (base#MKPTR($d_in.0) == $arrayId$$d_endoT) {
    assert {:sourceloc} {:sourceloc_num 1097} true;
    v855 := $$d_endoT[BV32_ADD(offset#MKPTR($d_in.0), BV32_ADD(BV32_MUL($ei_new.25, BV_CONCAT(BV_CONCAT(BV_CONCAT(v854, v853), v852), v851)), $i.0))];
  } else if (base#MKPTR($d_in.0) == $arrayId$$d_epiT) {
    assert {:sourceloc} {:sourceloc_num 1098} true;
    v855 := $$d_epiT[BV32_ADD(offset#MKPTR($d_in.0), BV32_ADD(BV32_MUL($ei_new.25, BV_CONCAT(BV_CONCAT(BV_CONCAT(v854, v853), v852), v851)), $i.0))];
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 1099} false;
  }
  goto $166;
$166:
  assert {:block_sourceloc} {:sourceloc_num 1100} true;
  $i.0, $sum.4 := BV32_ADD($i.0, 1), FADD32($sum.4, v855);
  goto $164;
$167:
  assert {:block_sourceloc} {:sourceloc_num 1101} true;
  assert {:sourceloc} {:sourceloc_num 1102} true;
  $$in_partial_sum_all[BV32_ADD(v89, $ei_new.25)] := $sum.4;
  $ei_new.25 := BV32_ADD($ei_new.25, 256);
  goto $162;
$168:
  assert {:block_sourceloc} {:sourceloc_num 1103} true;
  call {:sourceloc_num 1104} $bugle_barrier(-1, -1);
  $ei_new.26 := v1;
  goto $169;
$169:
  assert {:block_sourceloc} {:sourceloc_num 1105} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 1106} (if (_WRITE_HAS_OCCURRED_$$in_sqr_partial_sum_all ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v94, 4)), 4), v1), 256) == 0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 1107} (if (_WRITE_HAS_OCCURRED_$$in_sqr_partial_sum_all ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_MUL(4, _WATCHED_OFFSET), BV32_MUL(v94, 4)), 4), BV_CONCAT(BV_CONCAT(BV_CONCAT($$d_common[319], $$d_common[318]), $$d_common[317]), $$d_common[316]))) then 1 else 0) != 0;
  assert {:sourceloc} {:sourceloc_num 1108} true;
  v856 := $$d_common[316];
  assert {:sourceloc} {:sourceloc_num 1109} true;
  v857 := $$d_common[317];
  assert {:sourceloc} {:sourceloc_num 1110} true;
  v858 := $$d_common[318];
  assert {:sourceloc} {:sourceloc_num 1111} true;
  v859 := $$d_common[319];
  v860 := BV32_SLT($ei_new.26, BV_CONCAT(BV_CONCAT(BV_CONCAT(v859, v858), v857), v856));
  goto $truebb63, $falsebb63;
$170:
  assert {:block_sourceloc} {:sourceloc_num 1112} true;
  $i.1, $sum.5 := 0, 0;
  goto $171;
$171:
  assert {:block_sourceloc} {:sourceloc_num 1113} true;
  assert {:sourceloc} {:sourceloc_num 1114} true;
  v861 := $$d_common[320];
  assert {:sourceloc} {:sourceloc_num 1115} true;
  v862 := $$d_common[321];
  assert {:sourceloc} {:sourceloc_num 1116} true;
  v863 := $$d_common[322];
  assert {:sourceloc} {:sourceloc_num 1117} true;
  v864 := $$d_common[323];
  v865 := BV32_SLT($i.1, BV_CONCAT(BV_CONCAT(BV_CONCAT(v864, v863), v862), v861));
  goto $truebb64, $falsebb64;
$172:
  assert {:block_sourceloc} {:sourceloc_num 1118} true;
  assert {:sourceloc} {:sourceloc_num 1119} true;
  v866 := $$d_common[316];
  assert {:sourceloc} {:sourceloc_num 1120} true;
  v867 := $$d_common[317];
  assert {:sourceloc} {:sourceloc_num 1121} true;
  v868 := $$d_common[318];
  assert {:sourceloc} {:sourceloc_num 1122} true;
  v869 := $$d_common[319];
  assert {:sourceloc} {:sourceloc_num 1123} true;
  v870 := $$d_in_sqr_all[BV32_ADD(v69, BV32_ADD($ei_new.26, BV32_MUL(BV_CONCAT(BV_CONCAT(BV_CONCAT(v869, v868), v867), v866), $i.1)))];
  goto $173;
$173:
  assert {:block_sourceloc} {:sourceloc_num 1124} true;
  $i.1, $sum.5 := BV32_ADD($i.1, 1), FADD32($sum.5, v870);
  goto $171;
$174:
  assert {:block_sourceloc} {:sourceloc_num 1125} true;
  assert {:sourceloc} {:sourceloc_num 1126} true;
  $$in_sqr_partial_sum_all[BV32_ADD(v94, $ei_new.26)] := $sum.5;
  $ei_new.26 := BV32_ADD($ei_new.26, 256);
  goto $169;
$175:
  assert {:block_sourceloc} {:sourceloc_num 1127} true;
  call {:sourceloc_num 1128} $bugle_barrier(-1, -1);
  v871 := v1 == 0;
  goto $truebb65, $falsebb65;
$176:
  assert {:block_sourceloc} {:sourceloc_num 1129} true;
  assert {:sourceloc} {:sourceloc_num 1130} true;
  $$in_final_sum_all[v0] := 0;
  $i.2 := 0;
  goto $177;
$177:
  assert {:block_sourceloc} {:sourceloc_num 1131} true;
  assert {:sourceloc} {:sourceloc_num 1132} true;
  v872 := $$d_common[76];
  assert {:sourceloc} {:sourceloc_num 1133} true;
  v873 := $$d_common[77];
  assert {:sourceloc} {:sourceloc_num 1134} true;
  v874 := $$d_common[78];
  assert {:sourceloc} {:sourceloc_num 1135} true;
  v875 := $$d_common[79];
  v876 := BV32_SLT($i.2, BV_CONCAT(BV_CONCAT(BV_CONCAT(v875, v874), v873), v872));
  goto $truebb66, $falsebb66;
$178:
  assert {:block_sourceloc} {:sourceloc_num 1136} true;
  assert {:sourceloc} {:sourceloc_num 1137} true;
  v877 := $$in_final_sum_all[v0];
  assert {:sourceloc} {:sourceloc_num 1138} true;
  v878 := $$in_partial_sum_all[BV32_ADD(v89, $i.2)];
  assert {:sourceloc} {:sourceloc_num 1139} true;
  $$in_final_sum_all[v0] := FADD32(v877, v878);
  goto $179;
$179:
  assert {:block_sourceloc} {:sourceloc_num 1140} true;
  $i.2 := BV32_ADD($i.2, 1);
  goto $177;
$180:
  assert {:block_sourceloc} {:sourceloc_num 1141} true;
  goto $188;
$181:
  assert {:block_sourceloc} {:sourceloc_num 1142} true;
  v879 := v1 == 1;
  goto $truebb67, $falsebb67;
$182:
  assert {:block_sourceloc} {:sourceloc_num 1143} true;
  assert {:sourceloc} {:sourceloc_num 1144} true;
  $$in_sqr_final_sum_all[v0] := 0;
  $i.3 := 0;
  goto $183;
$183:
  assert {:block_sourceloc} {:sourceloc_num 1145} true;
  assert {:sourceloc} {:sourceloc_num 1146} true;
  v880 := $$d_common[320];
  assert {:sourceloc} {:sourceloc_num 1147} true;
  v881 := $$d_common[321];
  assert {:sourceloc} {:sourceloc_num 1148} true;
  v882 := $$d_common[322];
  assert {:sourceloc} {:sourceloc_num 1149} true;
  v883 := $$d_common[323];
  v884 := BV32_SLT($i.3, BV_CONCAT(BV_CONCAT(BV_CONCAT(v883, v882), v881), v880));
  goto $truebb68, $falsebb68;
$184:
  assert {:block_sourceloc} {:sourceloc_num 1150} true;
  assert {:sourceloc} {:sourceloc_num 1151} true;
  v885 := $$in_sqr_final_sum_all[v0];
  assert {:sourceloc} {:sourceloc_num 1152} true;
  v886 := $$in_sqr_partial_sum_all[BV32_ADD(v94, $i.3)];
  assert {:sourceloc} {:sourceloc_num 1153} true;
  $$in_sqr_final_sum_all[v0] := FADD32(v885, v886);
  goto $185;
$185:
  assert {:block_sourceloc} {:sourceloc_num 1154} true;
  $i.3 := BV32_ADD($i.3, 1);
  goto $183;
$186:
  assert {:block_sourceloc} {:sourceloc_num 1155} true;
  goto $187;
$187:
  assert {:block_sourceloc} true;
  goto $188;
$188:
  assert {:block_sourceloc} {:sourceloc_num 1156} true;
  call {:sourceloc_num 1157} $bugle_barrier(-1, -1);
  v887 := v1 == 0;
  goto $truebb69, $falsebb69;
$189:
  assert {:block_sourceloc} {:sourceloc_num 1158} true;
  assert {:sourceloc} {:sourceloc_num 1159} true;
  v888 := $$in_final_sum_all[v0];
  assert {:sourceloc} {:sourceloc_num 1160} true;
  v889 := $$d_common[80];
  assert {:sourceloc} {:sourceloc_num 1161} true;
  v890 := $$d_common[81];
  assert {:sourceloc} {:sourceloc_num 1162} true;
  v891 := $$d_common[82];
  assert {:sourceloc} {:sourceloc_num 1163} true;
  v892 := $$d_common[83];
  v893 := FDIV32(v888, SI32_TO_FP32(BV_CONCAT(BV_CONCAT(BV_CONCAT(v892, v891), v890), v889)));
  assert {:sourceloc} {:sourceloc_num 1164} true;
  v894 := $$in_sqr_final_sum_all[v0];
  assert {:sourceloc} {:sourceloc_num 1165} true;
  v895 := $$d_common[80];
  assert {:sourceloc} {:sourceloc_num 1166} true;
  v896 := $$d_common[81];
  assert {:sourceloc} {:sourceloc_num 1167} true;
  v897 := $$d_common[82];
  assert {:sourceloc} {:sourceloc_num 1168} true;
  v898 := $$d_common[83];
  assert {:sourceloc} {:sourceloc_num 1169} true;
  v899 := $$d_common[80];
  assert {:sourceloc} {:sourceloc_num 1170} true;
  v900 := $$d_common[81];
  assert {:sourceloc} {:sourceloc_num 1171} true;
  v901 := $$d_common[82];
  assert {:sourceloc} {:sourceloc_num 1172} true;
  v902 := $$d_common[83];
  assert {:sourceloc} {:sourceloc_num 1173} true;
  $$denomT_all[v0] := FMUL32(FSQRT32(SI32_TO_FP32(BV32_SUB(BV_CONCAT(BV_CONCAT(BV_CONCAT(v902, v901), v900), v899), 1))), FSQRT32(FSUB32(FDIV32(v894, SI32_TO_FP32(BV_CONCAT(BV_CONCAT(BV_CONCAT(v898, v897), v896), v895))), FMUL32(v893, v893))));
  goto $190;
$190:
  assert {:block_sourceloc} {:sourceloc_num 1174} true;
  call {:sourceloc_num 1175} $bugle_barrier(-1, -1);
  $ei_new.27 := v1;
  goto $191;
$191:
  assert {:block_sourceloc} {:sourceloc_num 1176} true;
  assert {:sourceloc} {:sourceloc_num 1177} true;
  v903 := $$d_common[276];
  assert {:sourceloc} {:sourceloc_num 1178} true;
  v904 := $$d_common[277];
  assert {:sourceloc} {:sourceloc_num 1179} true;
  v905 := $$d_common[278];
  assert {:sourceloc} {:sourceloc_num 1180} true;
  v906 := $$d_common[279];
  v907 := BV32_SLT($ei_new.27, BV_CONCAT(BV_CONCAT(BV_CONCAT(v906, v905), v904), v903));
  goto $truebb70, $falsebb70;
$192:
  assert {:block_sourceloc} {:sourceloc_num 1181} true;
  assert {:sourceloc} {:sourceloc_num 1182} true;
  v908 := $$d_in2_sqr_sub2_all[BV32_ADD(v64, $ei_new.27)];
  assert {:sourceloc} {:sourceloc_num 1183} true;
  v909 := $$denomT_all[v0];
  assert {:sourceloc} {:sourceloc_num 1184} true;
  $$d_in2_sqr_sub2_all[BV32_ADD(v64, $ei_new.27)] := FMUL32(v908, v909);
  $ei_new.27 := BV32_ADD($ei_new.27, 256);
  goto $191;
$193:
  assert {:block_sourceloc} {:sourceloc_num 1185} true;
  call {:sourceloc_num 1186} $bugle_barrier(-1, -1);
  $ei_new.28 := v1;
  goto $194;
$194:
  assert {:block_sourceloc} {:sourceloc_num 1187} true;
  assert {:sourceloc} {:sourceloc_num 1188} true;
  v910 := $$d_common[116];
  assert {:sourceloc} {:sourceloc_num 1189} true;
  v911 := $$d_common[117];
  assert {:sourceloc} {:sourceloc_num 1190} true;
  v912 := $$d_common[118];
  assert {:sourceloc} {:sourceloc_num 1191} true;
  v913 := $$d_common[119];
  v914 := BV32_SLT($ei_new.28, BV_CONCAT(BV_CONCAT(BV_CONCAT(v913, v912), v911), v910));
  goto $truebb71, $falsebb71;
$195:
  assert {:block_sourceloc} {:sourceloc_num 1192} true;
  assert {:sourceloc} {:sourceloc_num 1193} true;
  v915 := $$d_conv_all[BV32_ADD(v29, $ei_new.28)];
  assert {:sourceloc} {:sourceloc_num 1194} true;
  v916 := $$d_in2_sub2_all[BV32_ADD(v54, $ei_new.28)];
  assert {:sourceloc} {:sourceloc_num 1195} true;
  v917 := $$in_final_sum_all[v0];
  assert {:sourceloc} {:sourceloc_num 1196} true;
  v918 := $$d_common[80];
  assert {:sourceloc} {:sourceloc_num 1197} true;
  v919 := $$d_common[81];
  assert {:sourceloc} {:sourceloc_num 1198} true;
  v920 := $$d_common[82];
  assert {:sourceloc} {:sourceloc_num 1199} true;
  v921 := $$d_common[83];
  assert {:sourceloc} {:sourceloc_num 1200} true;
  $$d_conv_all[BV32_ADD(v29, $ei_new.28)] := FSUB32(v915, FDIV32(FMUL32(v916, v917), SI32_TO_FP32(BV_CONCAT(BV_CONCAT(BV_CONCAT(v921, v920), v919), v918))));
  $ei_new.28 := BV32_ADD($ei_new.28, 256);
  goto $194;
$196:
  assert {:block_sourceloc} {:sourceloc_num 1201} true;
  call {:sourceloc_num 1202} $bugle_barrier(-1, -1);
  $ei_new.29 := v1;
  goto $197;
$197:
  assert {:block_sourceloc} {:sourceloc_num 1203} true;
  assert {:sourceloc} {:sourceloc_num 1204} true;
  v922 := $$d_common[276];
  assert {:sourceloc} {:sourceloc_num 1205} true;
  v923 := $$d_common[277];
  assert {:sourceloc} {:sourceloc_num 1206} true;
  v924 := $$d_common[278];
  assert {:sourceloc} {:sourceloc_num 1207} true;
  v925 := $$d_common[279];
  v926 := BV32_SLT($ei_new.29, BV_CONCAT(BV_CONCAT(BV_CONCAT(v925, v924), v923), v922));
  goto $truebb72, $falsebb72;
$198:
  assert {:block_sourceloc} {:sourceloc_num 1208} true;
  assert {:sourceloc} {:sourceloc_num 1209} true;
  v927 := $$d_conv_all[BV32_ADD(v29, $ei_new.29)];
  assert {:sourceloc} {:sourceloc_num 1210} true;
  v928 := $$d_in2_sqr_sub2_all[BV32_ADD(v64, $ei_new.29)];
  assert {:sourceloc} {:sourceloc_num 1211} true;
  $$d_in2_sqr_sub2_all[BV32_ADD(v64, $ei_new.29)] := FDIV32(v927, v928);
  $ei_new.29 := BV32_ADD($ei_new.29, 256);
  goto $197;
$199:
  assert {:block_sourceloc} {:sourceloc_num 1212} true;
  call {:sourceloc_num 1213} $bugle_barrier(-1, -1);
  assert {:sourceloc} {:sourceloc_num 1214} true;
  v929 := $$d_common[16];
  assert {:sourceloc} {:sourceloc_num 1215} true;
  v930 := $$d_common[17];
  assert {:sourceloc} {:sourceloc_num 1216} true;
  v931 := $$d_common[18];
  assert {:sourceloc} {:sourceloc_num 1217} true;
  v932 := $$d_common[19];
  assert {:sourceloc} {:sourceloc_num 1218} true;
  v933 := $$d_common[20];
  assert {:sourceloc} {:sourceloc_num 1219} true;
  v934 := $$d_common[21];
  assert {:sourceloc} {:sourceloc_num 1220} true;
  v935 := $$d_common[22];
  assert {:sourceloc} {:sourceloc_num 1221} true;
  v936 := $$d_common[23];
  v937 := BV32_ADD(BV32_ADD(BV_CONCAT(BV_CONCAT(BV_CONCAT(v932, v931), v930), v929), BV_CONCAT(BV_CONCAT(BV_CONCAT(v936, v935), v934), v933)), 1);
  v938 := $d_frame_no == 0;
  goto $truebb73, $falsebb73;
$200:
  assert {:block_sourceloc} {:sourceloc_num 1222} true;
  if (base#MKPTR($d_unique_d_Row.0) == $arrayId$$d_epiRow) {
    assert {:sourceloc} {:sourceloc_num 1223} true;
    v939 := $$d_epiRow[BV32_ADD(offset#MKPTR($d_unique_d_Row.0), $d_unique_point_no.0)];
  } else if (base#MKPTR($d_unique_d_Row.0) == $arrayId$$d_endoRow) {
    assert {:sourceloc} {:sourceloc_num 1224} true;
    v939 := $$d_endoRow[BV32_ADD(offset#MKPTR($d_unique_d_Row.0), $d_unique_point_no.0)];
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 1225} false;
  }
  if (base#MKPTR($d_unique_d_Row.0) == $arrayId$$d_epiRow) {
    assert {:sourceloc} {:sourceloc_num 1226} true;
    v940 := $$d_epiRow[BV32_ADD(offset#MKPTR($d_unique_d_Row.0), $d_unique_point_no.0)];
  } else if (base#MKPTR($d_unique_d_Row.0) == $arrayId$$d_endoRow) {
    assert {:sourceloc} {:sourceloc_num 1227} true;
    v940 := $$d_endoRow[BV32_ADD(offset#MKPTR($d_unique_d_Row.0), $d_unique_point_no.0)];
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 1228} false;
  }
  if (base#MKPTR($d_unique_d_Col.0) == $arrayId$$d_epiCol) {
    assert {:sourceloc} {:sourceloc_num 1229} true;
    v941 := $$d_epiCol[BV32_ADD(offset#MKPTR($d_unique_d_Col.0), $d_unique_point_no.0)];
  } else if (base#MKPTR($d_unique_d_Col.0) == $arrayId$$d_endoCol) {
    assert {:sourceloc} {:sourceloc_num 1230} true;
    v941 := $$d_endoCol[BV32_ADD(offset#MKPTR($d_unique_d_Col.0), $d_unique_point_no.0)];
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 1231} false;
  }
  if (base#MKPTR($d_unique_d_Col.0) == $arrayId$$d_epiCol) {
    assert {:sourceloc} {:sourceloc_num 1232} true;
    v942 := $$d_epiCol[BV32_ADD(offset#MKPTR($d_unique_d_Col.0), $d_unique_point_no.0)];
  } else if (base#MKPTR($d_unique_d_Col.0) == $arrayId$$d_endoCol) {
    assert {:sourceloc} {:sourceloc_num 1233} true;
    v942 := $$d_endoCol[BV32_ADD(offset#MKPTR($d_unique_d_Col.0), $d_unique_point_no.0)];
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 1234} false;
  }
  $tMask_row.0, $tMask_col.0 := BV32_SUB(BV32_SUB(BV32_ADD(v937, v939), v940), 1), BV32_SUB(BV32_SUB(BV32_ADD(v937, v941), v942), 1);
  goto $202;
$201:
  assert {:block_sourceloc} {:sourceloc_num 1235} true;
  assert {:sourceloc} {:sourceloc_num 1236} true;
  v943 := $$d_common[32];
  assert {:sourceloc} {:sourceloc_num 1237} true;
  v944 := $$d_common[33];
  assert {:sourceloc} {:sourceloc_num 1238} true;
  v945 := $$d_common[34];
  assert {:sourceloc} {:sourceloc_num 1239} true;
  v946 := $$d_common[35];
  v947 := BV32_SUB(BV32_ADD(BV32_MUL($d_unique_point_no.0, BV_CONCAT(BV_CONCAT(BV_CONCAT(v946, v945), v944), v943)), $d_frame_no), 1);
  if (base#MKPTR($d_unique_d_tRowLoc.0) == $arrayId$$d_tEndoRowLoc) {
    assert {:sourceloc} {:sourceloc_num 1240} true;
    v948 := $$d_tEndoRowLoc[BV32_ADD(offset#MKPTR($d_unique_d_tRowLoc.0), v947)];
  } else if (base#MKPTR($d_unique_d_tRowLoc.0) == $arrayId$$d_tEpiRowLoc) {
    assert {:sourceloc} {:sourceloc_num 1241} true;
    v948 := $$d_tEpiRowLoc[BV32_ADD(offset#MKPTR($d_unique_d_tRowLoc.0), v947)];
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 1242} false;
  }
  if (base#MKPTR($d_unique_d_Row.0) == $arrayId$$d_epiRow) {
    assert {:sourceloc} {:sourceloc_num 1243} true;
    v949 := $$d_epiRow[BV32_ADD(offset#MKPTR($d_unique_d_Row.0), $d_unique_point_no.0)];
  } else if (base#MKPTR($d_unique_d_Row.0) == $arrayId$$d_endoRow) {
    assert {:sourceloc} {:sourceloc_num 1244} true;
    v949 := $$d_endoRow[BV32_ADD(offset#MKPTR($d_unique_d_Row.0), $d_unique_point_no.0)];
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 1245} false;
  }
  if (base#MKPTR($d_unique_d_tColLoc.0) == $arrayId$$d_tEndoColLoc) {
    assert {:sourceloc} {:sourceloc_num 1246} true;
    v950 := $$d_tEndoColLoc[BV32_ADD(offset#MKPTR($d_unique_d_tColLoc.0), v947)];
  } else if (base#MKPTR($d_unique_d_tColLoc.0) == $arrayId$$d_tEpiColLoc) {
    assert {:sourceloc} {:sourceloc_num 1247} true;
    v950 := $$d_tEpiColLoc[BV32_ADD(offset#MKPTR($d_unique_d_tColLoc.0), v947)];
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 1248} false;
  }
  if (base#MKPTR($d_unique_d_Col.0) == $arrayId$$d_epiCol) {
    assert {:sourceloc} {:sourceloc_num 1249} true;
    v951 := $$d_epiCol[BV32_ADD(offset#MKPTR($d_unique_d_Col.0), $d_unique_point_no.0)];
  } else if (base#MKPTR($d_unique_d_Col.0) == $arrayId$$d_endoCol) {
    assert {:sourceloc} {:sourceloc_num 1250} true;
    v951 := $$d_endoCol[BV32_ADD(offset#MKPTR($d_unique_d_Col.0), $d_unique_point_no.0)];
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 1251} false;
  }
  $tMask_row.0, $tMask_col.0 := BV32_SUB(BV32_SUB(BV32_ADD(v937, v948), v949), 1), BV32_SUB(BV32_SUB(BV32_ADD(v937, v950), v951), 1);
  goto $202;
$202:
  assert {:block_sourceloc} {:sourceloc_num 1252} true;
  $ei_new.30 := v1;
  goto $203;
$203:
  assert {:block_sourceloc} {:sourceloc_num 1253} true;
  assert {:sourceloc} {:sourceloc_num 1254} true;
  v952 := $$d_common[340];
  assert {:sourceloc} {:sourceloc_num 1255} true;
  v953 := $$d_common[341];
  assert {:sourceloc} {:sourceloc_num 1256} true;
  v954 := $$d_common[342];
  assert {:sourceloc} {:sourceloc_num 1257} true;
  v955 := $$d_common[343];
  v956 := BV32_SLT($ei_new.30, BV_CONCAT(BV_CONCAT(BV_CONCAT(v955, v954), v953), v952));
  goto $truebb74, $falsebb74;
$204:
  assert {:block_sourceloc} {:sourceloc_num 1258} true;
  assert {:sourceloc} {:sourceloc_num 1259} true;
  v957 := $$d_common[332];
  assert {:sourceloc} {:sourceloc_num 1260} true;
  v958 := $$d_common[333];
  assert {:sourceloc} {:sourceloc_num 1261} true;
  v959 := $$d_common[334];
  assert {:sourceloc} {:sourceloc_num 1262} true;
  v960 := $$d_common[335];
  v961 := $ei_new.30 == BV32_ADD(BV32_MUL($tMask_col.0, BV_CONCAT(BV_CONCAT(BV_CONCAT(v960, v959), v958), v957)), $tMask_row.0);
  goto $truebb75, $falsebb75;
$205:
  assert {:block_sourceloc} {:sourceloc_num 1263} true;
  assert {:sourceloc} {:sourceloc_num 1264} true;
  $$d_tMask_all[BV32_ADD(v74, $ei_new.30)] := 1065353216;
  goto $207;
$206:
  assert {:block_sourceloc} {:sourceloc_num 1265} true;
  assert {:sourceloc} {:sourceloc_num 1266} true;
  $$d_tMask_all[BV32_ADD(v74, $ei_new.30)] := 0;
  goto $207;
$207:
  assert {:block_sourceloc} {:sourceloc_num 1267} true;
  $ei_new.30 := BV32_ADD($ei_new.30, 256);
  goto $203;
$208:
  assert {:block_sourceloc} {:sourceloc_num 1268} true;
  call {:sourceloc_num 1269} $bugle_barrier(-1, -1);
  $ei_new.31 := v1;
  goto $209;
$209:
  assert {:block_sourceloc} {:sourceloc_num 1270} true;
  assert {:sourceloc} {:sourceloc_num 1271} true;
  v962 := $$d_common[372];
  assert {:sourceloc} {:sourceloc_num 1272} true;
  v963 := $$d_common[373];
  assert {:sourceloc} {:sourceloc_num 1273} true;
  v964 := $$d_common[374];
  assert {:sourceloc} {:sourceloc_num 1274} true;
  v965 := $$d_common[375];
  v966 := BV32_SLT($ei_new.31, BV_CONCAT(BV_CONCAT(BV_CONCAT(v965, v964), v963), v962));
  goto $truebb76, $falsebb76;
$210:
  assert {:block_sourceloc} {:sourceloc_num 1275} true;
  assert {:sourceloc} {:sourceloc_num 1276} true;
  v967 := $$d_common[364];
  assert {:sourceloc} {:sourceloc_num 1277} true;
  v968 := $$d_common[365];
  assert {:sourceloc} {:sourceloc_num 1278} true;
  v969 := $$d_common[366];
  assert {:sourceloc} {:sourceloc_num 1279} true;
  v970 := $$d_common[367];
  assert {:sourceloc} {:sourceloc_num 1280} true;
  v971 := $$d_common[364];
  assert {:sourceloc} {:sourceloc_num 1281} true;
  v972 := $$d_common[365];
  assert {:sourceloc} {:sourceloc_num 1282} true;
  v973 := $$d_common[366];
  assert {:sourceloc} {:sourceloc_num 1283} true;
  v974 := $$d_common[367];
  v975 := BV32_ADD(BV32_SDIV(BV32_ADD($ei_new.31, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v974, v973), v972), v971)), 1);
  assert {:sourceloc} {:sourceloc_num 1284} true;
  v976 := $$d_common[364];
  assert {:sourceloc} {:sourceloc_num 1285} true;
  v977 := $$d_common[365];
  assert {:sourceloc} {:sourceloc_num 1286} true;
  v978 := $$d_common[366];
  assert {:sourceloc} {:sourceloc_num 1287} true;
  v979 := $$d_common[367];
  v980 := BV32_SREM(BV32_ADD($ei_new.31, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v979, v978), v977), v976)) == 0;
  goto $truebb77, $falsebb77;
$211:
  assert {:block_sourceloc} {:sourceloc_num 1288} true;
  assert {:sourceloc} {:sourceloc_num 1289} true;
  v981 := $$d_common[364];
  assert {:sourceloc} {:sourceloc_num 1290} true;
  v982 := $$d_common[365];
  assert {:sourceloc} {:sourceloc_num 1291} true;
  v983 := $$d_common[366];
  assert {:sourceloc} {:sourceloc_num 1292} true;
  v984 := $$d_common[367];
  $ic.1, $jc.1 := BV_CONCAT(BV_CONCAT(BV_CONCAT(v984, v983), v982), v981), BV32_SUB(v975, 1);
  goto $212;
$212:
  assert {:block_sourceloc} {:sourceloc_num 1293} true;
  assert {:sourceloc} {:sourceloc_num 1294} true;
  v985 := $$d_common[384];
  assert {:sourceloc} {:sourceloc_num 1295} true;
  v986 := $$d_common[385];
  assert {:sourceloc} {:sourceloc_num 1296} true;
  v987 := $$d_common[386];
  assert {:sourceloc} {:sourceloc_num 1297} true;
  v988 := $$d_common[387];
  v989 := BV32_ADD($jc.1, BV_CONCAT(BV_CONCAT(BV_CONCAT(v988, v987), v986), v985));
  v990 := BV32_ADD(v989, 1);
  assert {:sourceloc} {:sourceloc_num 1298} true;
  v991 := $$d_common[352];
  assert {:sourceloc} {:sourceloc_num 1299} true;
  v992 := $$d_common[353];
  assert {:sourceloc} {:sourceloc_num 1300} true;
  v993 := $$d_common[354];
  assert {:sourceloc} {:sourceloc_num 1301} true;
  v994 := $$d_common[355];
  v995 := BV32_SLT(BV_CONCAT(BV_CONCAT(BV_CONCAT(v994, v993), v992), v991), v990);
  goto $truebb78, $falsebb78;
$213:
  assert {:block_sourceloc} {:sourceloc_num 1302} true;
  assert {:sourceloc} {:sourceloc_num 1303} true;
  v996 := $$d_common[352];
  assert {:sourceloc} {:sourceloc_num 1304} true;
  v997 := $$d_common[353];
  assert {:sourceloc} {:sourceloc_num 1305} true;
  v998 := $$d_common[354];
  assert {:sourceloc} {:sourceloc_num 1306} true;
  v999 := $$d_common[355];
  $ja1.1 := BV32_SUB(v990, BV_CONCAT(BV_CONCAT(BV_CONCAT(v999, v998), v997), v996));
  goto $215;
$214:
  assert {:block_sourceloc} {:sourceloc_num 1307} true;
  $ja1.1 := 1;
  goto $215;
$215:
  assert {:block_sourceloc} {:sourceloc_num 1308} true;
  assert {:sourceloc} {:sourceloc_num 1309} true;
  v1000 := $$d_common[336];
  assert {:sourceloc} {:sourceloc_num 1310} true;
  v1001 := $$d_common[337];
  assert {:sourceloc} {:sourceloc_num 1311} true;
  v1002 := $$d_common[338];
  assert {:sourceloc} {:sourceloc_num 1312} true;
  v1003 := $$d_common[339];
  v1004 := BV32_SLT(BV_CONCAT(BV_CONCAT(BV_CONCAT(v1003, v1002), v1001), v1000), v989);
  goto $truebb79, $falsebb79;
$216:
  assert {:block_sourceloc} {:sourceloc_num 1313} true;
  assert {:sourceloc} {:sourceloc_num 1314} true;
  v1005 := $$d_common[336];
  assert {:sourceloc} {:sourceloc_num 1315} true;
  v1006 := $$d_common[337];
  assert {:sourceloc} {:sourceloc_num 1316} true;
  v1007 := $$d_common[338];
  assert {:sourceloc} {:sourceloc_num 1317} true;
  v1008 := $$d_common[339];
  $ja2.1 := BV_CONCAT(BV_CONCAT(BV_CONCAT(v1008, v1007), v1006), v1005);
  goto $218;
$217:
  assert {:block_sourceloc} {:sourceloc_num 1318} true;
  $ja2.1 := v989;
  goto $218;
$218:
  assert {:block_sourceloc} {:sourceloc_num 1319} true;
  assert {:sourceloc} {:sourceloc_num 1320} true;
  v1009 := $$d_common[380];
  assert {:sourceloc} {:sourceloc_num 1321} true;
  v1010 := $$d_common[381];
  assert {:sourceloc} {:sourceloc_num 1322} true;
  v1011 := $$d_common[382];
  assert {:sourceloc} {:sourceloc_num 1323} true;
  v1012 := $$d_common[383];
  v1013 := BV32_ADD($ic.1, BV_CONCAT(BV_CONCAT(BV_CONCAT(v1012, v1011), v1010), v1009));
  v1014 := BV32_ADD(v1013, 1);
  assert {:sourceloc} {:sourceloc_num 1324} true;
  v1015 := $$d_common[348];
  assert {:sourceloc} {:sourceloc_num 1325} true;
  v1016 := $$d_common[349];
  assert {:sourceloc} {:sourceloc_num 1326} true;
  v1017 := $$d_common[350];
  assert {:sourceloc} {:sourceloc_num 1327} true;
  v1018 := $$d_common[351];
  v1019 := BV32_SLT(BV_CONCAT(BV_CONCAT(BV_CONCAT(v1018, v1017), v1016), v1015), v1014);
  goto $truebb80, $falsebb80;
$219:
  assert {:block_sourceloc} {:sourceloc_num 1328} true;
  assert {:sourceloc} {:sourceloc_num 1329} true;
  v1020 := $$d_common[348];
  assert {:sourceloc} {:sourceloc_num 1330} true;
  v1021 := $$d_common[349];
  assert {:sourceloc} {:sourceloc_num 1331} true;
  v1022 := $$d_common[350];
  assert {:sourceloc} {:sourceloc_num 1332} true;
  v1023 := $$d_common[351];
  $ia1.1 := BV32_SUB(v1014, BV_CONCAT(BV_CONCAT(BV_CONCAT(v1023, v1022), v1021), v1020));
  goto $221;
$220:
  assert {:block_sourceloc} {:sourceloc_num 1333} true;
  $ia1.1 := 1;
  goto $221;
$221:
  assert {:block_sourceloc} {:sourceloc_num 1334} true;
  assert {:sourceloc} {:sourceloc_num 1335} true;
  v1024 := $$d_common[332];
  assert {:sourceloc} {:sourceloc_num 1336} true;
  v1025 := $$d_common[333];
  assert {:sourceloc} {:sourceloc_num 1337} true;
  v1026 := $$d_common[334];
  assert {:sourceloc} {:sourceloc_num 1338} true;
  v1027 := $$d_common[335];
  v1028 := BV32_SLT(BV_CONCAT(BV_CONCAT(BV_CONCAT(v1027, v1026), v1025), v1024), v1013);
  goto $truebb81, $falsebb81;
$222:
  assert {:block_sourceloc} {:sourceloc_num 1339} true;
  assert {:sourceloc} {:sourceloc_num 1340} true;
  v1029 := $$d_common[332];
  assert {:sourceloc} {:sourceloc_num 1341} true;
  v1030 := $$d_common[333];
  assert {:sourceloc} {:sourceloc_num 1342} true;
  v1031 := $$d_common[334];
  assert {:sourceloc} {:sourceloc_num 1343} true;
  v1032 := $$d_common[335];
  $ia2.1 := BV_CONCAT(BV_CONCAT(BV_CONCAT(v1032, v1031), v1030), v1029);
  goto $224;
$223:
  assert {:block_sourceloc} {:sourceloc_num 1344} true;
  $ia2.1 := v1013;
  goto $224;
$224:
  assert {:block_sourceloc} {:sourceloc_num 1345} true;
  $ja.1, $s.2 := $ja1.1, 0;
  goto $225;
$225:
  assert {:block_sourceloc} {:sourceloc_num 1346} true;
  v1033 := BV32_SLE($ja.1, $ja2.1);
  goto $truebb82, $falsebb82;
$226:
  assert {:block_sourceloc} {:sourceloc_num 1347} true;
  $ia.1, $s.3 := $ia1.1, $s.2;
  goto $227;
$227:
  assert {:block_sourceloc} {:sourceloc_num 1348} true;
  v1034 := BV32_SLE($ia.1, $ia2.1);
  goto $truebb83, $falsebb83;
$228:
  assert {:block_sourceloc} {:sourceloc_num 1349} true;
  assert {:sourceloc} {:sourceloc_num 1350} true;
  v1035 := $$d_common[332];
  assert {:sourceloc} {:sourceloc_num 1351} true;
  v1036 := $$d_common[333];
  assert {:sourceloc} {:sourceloc_num 1352} true;
  v1037 := $$d_common[334];
  assert {:sourceloc} {:sourceloc_num 1353} true;
  v1038 := $$d_common[335];
  assert {:sourceloc} {:sourceloc_num 1354} true;
  v1039 := $$d_tMask_all[BV32_ADD(v74, BV32_SUB(BV32_ADD(BV32_MUL(BV_CONCAT(BV_CONCAT(BV_CONCAT(v1038, v1037), v1036), v1035), BV32_SUB($ja.1, 1)), $ia.1), 1))];
  goto $229;
$229:
  assert {:block_sourceloc} {:sourceloc_num 1355} true;
  $ia.1, $s.3 := BV32_ADD($ia.1, 1), FADD32(FMUL32(v1039, 1065353216), $s.3);
  goto $227;
$230:
  assert {:block_sourceloc} {:sourceloc_num 1356} true;
  goto $231;
$231:
  assert {:block_sourceloc} {:sourceloc_num 1357} true;
  $ja.1, $s.2 := BV32_ADD($ja.1, 1), $s.3;
  goto $225;
$232:
  assert {:block_sourceloc} {:sourceloc_num 1358} true;
  assert {:sourceloc} {:sourceloc_num 1359} true;
  v1040 := $$d_in2_sqr_sub2_all[BV32_ADD(v64, $ei_new.31)];
  assert {:sourceloc} {:sourceloc_num 1360} true;
  $$d_mask_conv_all[BV32_ADD(v79, $ei_new.31)] := FMUL32(v1040, $s.2);
  $ei_new.31 := BV32_ADD($ei_new.31, 256);
  goto $209;
$233:
  assert {:block_sourceloc} {:sourceloc_num 1361} true;
  call {:sourceloc_num 1362} $bugle_barrier(-1, -1);
  $largest_value.0, $largest_coordinate.0, $ei_new.32 := 0, 0, v1;
  goto $234;
$234:
  assert {:block_sourceloc} {:sourceloc_num 1363} true;
  assert {:sourceloc} {:sourceloc_num 1364} true;
  v1041 := $$d_common[364];
  assert {:sourceloc} {:sourceloc_num 1365} true;
  v1042 := $$d_common[365];
  assert {:sourceloc} {:sourceloc_num 1366} true;
  v1043 := $$d_common[366];
  assert {:sourceloc} {:sourceloc_num 1367} true;
  v1044 := $$d_common[367];
  v1045 := BV32_SLT($ei_new.32, BV_CONCAT(BV_CONCAT(BV_CONCAT(v1044, v1043), v1042), v1041));
  goto $truebb84, $falsebb84;
$235:
  assert {:block_sourceloc} {:sourceloc_num 1368} true;
  $i.4, $largest_value.1, $largest_coordinate.1 := 0, $largest_value.0, $largest_coordinate.0;
  goto $236;
$236:
  assert {:block_sourceloc} {:sourceloc_num 1369} true;
  assert {:sourceloc} {:sourceloc_num 1370} true;
  v1046 := $$d_common[368];
  assert {:sourceloc} {:sourceloc_num 1371} true;
  v1047 := $$d_common[369];
  assert {:sourceloc} {:sourceloc_num 1372} true;
  v1048 := $$d_common[370];
  assert {:sourceloc} {:sourceloc_num 1373} true;
  v1049 := $$d_common[371];
  v1050 := BV32_SLT($i.4, BV_CONCAT(BV_CONCAT(BV_CONCAT(v1049, v1048), v1047), v1046));
  goto $truebb85, $falsebb85;
$237:
  assert {:block_sourceloc} {:sourceloc_num 1374} true;
  assert {:sourceloc} {:sourceloc_num 1375} true;
  v1051 := $$d_common[364];
  assert {:sourceloc} {:sourceloc_num 1376} true;
  v1052 := $$d_common[365];
  assert {:sourceloc} {:sourceloc_num 1377} true;
  v1053 := $$d_common[366];
  assert {:sourceloc} {:sourceloc_num 1378} true;
  v1054 := $$d_common[367];
  v1055 := BV32_ADD(BV32_MUL($ei_new.32, BV_CONCAT(BV_CONCAT(BV_CONCAT(v1054, v1053), v1052), v1051)), $i.4);
  assert {:sourceloc} {:sourceloc_num 1379} true;
  v1056 := $$d_mask_conv_all[BV32_ADD(v79, v1055)];
  v1057 := FABS32(v1056);
  v1058 := FLT32($largest_value.1, v1057);
  goto $truebb86, $falsebb86;
$238:
  assert {:block_sourceloc} {:sourceloc_num 1380} true;
  $largest_value.2, $largest_coordinate.2 := v1057, v1055;
  goto $239;
$239:
  assert {:block_sourceloc} {:sourceloc_num 1381} true;
  goto $240;
$240:
  assert {:block_sourceloc} {:sourceloc_num 1382} true;
  $i.4, $largest_value.1, $largest_coordinate.1 := BV32_ADD($i.4, 1), $largest_value.2, $largest_coordinate.2;
  goto $236;
$241:
  assert {:block_sourceloc} {:sourceloc_num 1383} true;
  assert {:sourceloc} {:sourceloc_num 1384} true;
  $$par_max_coo_all[BV32_ADD(v104, $ei_new.32)] := $largest_coordinate.1;
  assert {:sourceloc} {:sourceloc_num 1385} true;
  $$par_max_val_all[BV32_ADD(v99, $ei_new.32)] := $largest_value.1;
  $largest_value.0, $largest_coordinate.0, $ei_new.32 := $largest_value.1, $largest_coordinate.1, BV32_ADD($ei_new.32, 256);
  goto $234;
$242:
  assert {:block_sourceloc} {:sourceloc_num 1386} true;
  call {:sourceloc_num 1387} $bugle_barrier(-1, -1);
  v1059 := v1 == 0;
  goto $truebb87, $falsebb87;
$243:
  assert {:block_sourceloc} {:sourceloc_num 1388} true;
  $i.5, $fin_max_val.0, $fin_max_coo.0 := 0, 0, 0;
  goto $244;
$244:
  assert {:block_sourceloc} {:sourceloc_num 1389} true;
  assert {:sourceloc} {:sourceloc_num 1390} true;
  v1060 := $$d_common[364];
  assert {:sourceloc} {:sourceloc_num 1391} true;
  v1061 := $$d_common[365];
  assert {:sourceloc} {:sourceloc_num 1392} true;
  v1062 := $$d_common[366];
  assert {:sourceloc} {:sourceloc_num 1393} true;
  v1063 := $$d_common[367];
  v1064 := BV32_SLT($i.5, BV_CONCAT(BV_CONCAT(BV_CONCAT(v1063, v1062), v1061), v1060));
  goto $truebb88, $falsebb88;
$245:
  assert {:block_sourceloc} {:sourceloc_num 1394} true;
  assert {:sourceloc} {:sourceloc_num 1395} true;
  v1065 := $$par_max_val_all[BV32_ADD(v99, $i.5)];
  v1066 := FLT32($fin_max_val.0, v1065);
  goto $truebb89, $falsebb89;
$246:
  assert {:block_sourceloc} {:sourceloc_num 1396} true;
  assert {:sourceloc} {:sourceloc_num 1397} true;
  v1067 := $$par_max_val_all[BV32_ADD(v99, $i.5)];
  assert {:sourceloc} {:sourceloc_num 1398} true;
  v1068 := $$par_max_coo_all[BV32_ADD(v104, $i.5)];
  $fin_max_val.1, $fin_max_coo.1 := v1067, v1068;
  goto $247;
$247:
  assert {:block_sourceloc} {:sourceloc_num 1399} true;
  goto $248;
$248:
  assert {:block_sourceloc} {:sourceloc_num 1400} true;
  $i.5, $fin_max_val.0, $fin_max_coo.0 := BV32_ADD($i.5, 1), $fin_max_val.1, $fin_max_coo.1;
  goto $244;
$249:
  assert {:block_sourceloc} {:sourceloc_num 1401} true;
  assert {:sourceloc} {:sourceloc_num 1402} true;
  v1069 := $$d_common[364];
  assert {:sourceloc} {:sourceloc_num 1403} true;
  v1070 := $$d_common[365];
  assert {:sourceloc} {:sourceloc_num 1404} true;
  v1071 := $$d_common[366];
  assert {:sourceloc} {:sourceloc_num 1405} true;
  v1072 := $$d_common[367];
  assert {:sourceloc} {:sourceloc_num 1406} true;
  v1073 := $$d_common[364];
  assert {:sourceloc} {:sourceloc_num 1407} true;
  v1074 := $$d_common[365];
  assert {:sourceloc} {:sourceloc_num 1408} true;
  v1075 := $$d_common[366];
  assert {:sourceloc} {:sourceloc_num 1409} true;
  v1076 := $$d_common[367];
  v1077 := BV32_SDIV(BV32_ADD($fin_max_coo.0, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v1076, v1075), v1074), v1073));
  assert {:sourceloc} {:sourceloc_num 1410} true;
  v1078 := $$d_common[364];
  assert {:sourceloc} {:sourceloc_num 1411} true;
  v1079 := $$d_common[365];
  assert {:sourceloc} {:sourceloc_num 1412} true;
  v1080 := $$d_common[366];
  assert {:sourceloc} {:sourceloc_num 1413} true;
  v1081 := $$d_common[367];
  v1082 := BV32_SREM(BV32_ADD($fin_max_coo.0, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v1081, v1080), v1079), v1078)) == 0;
  goto $truebb90, $falsebb90;
$250:
  assert {:block_sourceloc} {:sourceloc_num 1414} true;
  assert {:sourceloc} {:sourceloc_num 1415} true;
  v1083 := $$d_common[364];
  assert {:sourceloc} {:sourceloc_num 1416} true;
  v1084 := $$d_common[365];
  assert {:sourceloc} {:sourceloc_num 1417} true;
  v1085 := $$d_common[366];
  assert {:sourceloc} {:sourceloc_num 1418} true;
  v1086 := $$d_common[367];
  $largest_row.0, $largest_col.0 := BV32_SUB(BV_CONCAT(BV_CONCAT(BV_CONCAT(v1086, v1085), v1084), v1083), 1), BV32_SUB(v1077, 1);
  goto $251;
$251:
  assert {:block_sourceloc} {:sourceloc_num 1419} true;
  assert {:sourceloc} {:sourceloc_num 1420} true;
  v1087 := $$d_common[72];
  assert {:sourceloc} {:sourceloc_num 1421} true;
  v1088 := $$d_common[73];
  assert {:sourceloc} {:sourceloc_num 1422} true;
  v1089 := $$d_common[74];
  assert {:sourceloc} {:sourceloc_num 1423} true;
  v1090 := $$d_common[75];
  assert {:sourceloc} {:sourceloc_num 1424} true;
  v1091 := $$d_common[16];
  assert {:sourceloc} {:sourceloc_num 1425} true;
  v1092 := $$d_common[17];
  assert {:sourceloc} {:sourceloc_num 1426} true;
  v1093 := $$d_common[18];
  assert {:sourceloc} {:sourceloc_num 1427} true;
  v1094 := $$d_common[19];
  assert {:sourceloc} {:sourceloc_num 1428} true;
  v1095 := $$d_common[20];
  assert {:sourceloc} {:sourceloc_num 1429} true;
  v1096 := $$d_common[21];
  assert {:sourceloc} {:sourceloc_num 1430} true;
  v1097 := $$d_common[22];
  assert {:sourceloc} {:sourceloc_num 1431} true;
  v1098 := $$d_common[23];
  assert {:sourceloc} {:sourceloc_num 1432} true;
  v1099 := $$d_common[76];
  assert {:sourceloc} {:sourceloc_num 1433} true;
  v1100 := $$d_common[77];
  assert {:sourceloc} {:sourceloc_num 1434} true;
  v1101 := $$d_common[78];
  assert {:sourceloc} {:sourceloc_num 1435} true;
  v1102 := $$d_common[79];
  assert {:sourceloc} {:sourceloc_num 1436} true;
  v1103 := $$d_common[16];
  assert {:sourceloc} {:sourceloc_num 1437} true;
  v1104 := $$d_common[17];
  assert {:sourceloc} {:sourceloc_num 1438} true;
  v1105 := $$d_common[18];
  assert {:sourceloc} {:sourceloc_num 1439} true;
  v1106 := $$d_common[19];
  assert {:sourceloc} {:sourceloc_num 1440} true;
  v1107 := $$d_common[20];
  assert {:sourceloc} {:sourceloc_num 1441} true;
  v1108 := $$d_common[21];
  assert {:sourceloc} {:sourceloc_num 1442} true;
  v1109 := $$d_common[22];
  assert {:sourceloc} {:sourceloc_num 1443} true;
  v1110 := $$d_common[23];
  assert {:sourceloc} {:sourceloc_num 1444} true;
  v1111 := $$d_common[32];
  assert {:sourceloc} {:sourceloc_num 1445} true;
  v1112 := $$d_common[33];
  assert {:sourceloc} {:sourceloc_num 1446} true;
  v1113 := $$d_common[34];
  assert {:sourceloc} {:sourceloc_num 1447} true;
  v1114 := $$d_common[35];
  v1115 := BV32_ADD(BV32_MUL($d_unique_point_no.0, BV_CONCAT(BV_CONCAT(BV_CONCAT(v1114, v1113), v1112), v1111)), $d_frame_no);
  if (base#MKPTR($d_unique_d_Row.0) == $arrayId$$d_epiRow) {
    assert {:sourceloc} {:sourceloc_num 1448} true;
    v1116 := $$d_epiRow[BV32_ADD(offset#MKPTR($d_unique_d_Row.0), $d_unique_point_no.0)];
  } else if (base#MKPTR($d_unique_d_Row.0) == $arrayId$$d_endoRow) {
    assert {:sourceloc} {:sourceloc_num 1449} true;
    v1116 := $$d_endoRow[BV32_ADD(offset#MKPTR($d_unique_d_Row.0), $d_unique_point_no.0)];
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 1450} false;
  }
  if (base#MKPTR($d_unique_d_tRowLoc.0) == $arrayId$$d_tEndoRowLoc) {
    assert {:sourceloc} {:sourceloc_num 1451} true;
    $$d_tEndoRowLoc[BV32_ADD(offset#MKPTR($d_unique_d_tRowLoc.0), v1115)] := BV32_ADD(v1116, BV32_SUB(BV32_SUB(BV32_ADD($largest_row.0, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v1090, v1089), v1088), v1087)), BV32_SUB(BV_CONCAT(BV_CONCAT(BV_CONCAT(v1094, v1093), v1092), v1091), BV_CONCAT(BV_CONCAT(BV_CONCAT(v1098, v1097), v1096), v1095))));
  } else if (base#MKPTR($d_unique_d_tRowLoc.0) == $arrayId$$d_tEpiRowLoc) {
    assert {:sourceloc} {:sourceloc_num 1452} true;
    $$d_tEpiRowLoc[BV32_ADD(offset#MKPTR($d_unique_d_tRowLoc.0), v1115)] := BV32_ADD(v1116, BV32_SUB(BV32_SUB(BV32_ADD($largest_row.0, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v1090, v1089), v1088), v1087)), BV32_SUB(BV_CONCAT(BV_CONCAT(BV_CONCAT(v1094, v1093), v1092), v1091), BV_CONCAT(BV_CONCAT(BV_CONCAT(v1098, v1097), v1096), v1095))));
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 1453} false;
  }
  if (base#MKPTR($d_unique_d_Col.0) == $arrayId$$d_epiCol) {
    assert {:sourceloc} {:sourceloc_num 1454} true;
    v1117 := $$d_epiCol[BV32_ADD(offset#MKPTR($d_unique_d_Col.0), $d_unique_point_no.0)];
  } else if (base#MKPTR($d_unique_d_Col.0) == $arrayId$$d_endoCol) {
    assert {:sourceloc} {:sourceloc_num 1455} true;
    v1117 := $$d_endoCol[BV32_ADD(offset#MKPTR($d_unique_d_Col.0), $d_unique_point_no.0)];
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 1456} false;
  }
  if (base#MKPTR($d_unique_d_tColLoc.0) == $arrayId$$d_tEndoColLoc) {
    assert {:sourceloc} {:sourceloc_num 1457} true;
    $$d_tEndoColLoc[BV32_ADD(offset#MKPTR($d_unique_d_tColLoc.0), v1115)] := BV32_ADD(v1117, BV32_SUB(BV32_SUB(BV32_ADD($largest_col.0, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v1102, v1101), v1100), v1099)), BV32_SUB(BV_CONCAT(BV_CONCAT(BV_CONCAT(v1106, v1105), v1104), v1103), BV_CONCAT(BV_CONCAT(BV_CONCAT(v1110, v1109), v1108), v1107))));
  } else if (base#MKPTR($d_unique_d_tColLoc.0) == $arrayId$$d_tEpiColLoc) {
    assert {:sourceloc} {:sourceloc_num 1458} true;
    $$d_tEpiColLoc[BV32_ADD(offset#MKPTR($d_unique_d_tColLoc.0), v1115)] := BV32_ADD(v1117, BV32_SUB(BV32_SUB(BV32_ADD($largest_col.0, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v1102, v1101), v1100), v1099)), BV32_SUB(BV_CONCAT(BV_CONCAT(BV_CONCAT(v1106, v1105), v1104), v1103), BV_CONCAT(BV_CONCAT(BV_CONCAT(v1110, v1109), v1108), v1107))));
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 1459} false;
  }
  goto $252;
$252:
  assert {:block_sourceloc} {:sourceloc_num 1460} true;
  call {:sourceloc_num 1461} $bugle_barrier(-1, -1);
  goto $253;
$253:
  assert {:block_sourceloc} {:sourceloc_num 1462} true;
  v1118 := $d_frame_no != 0;
  goto $truebb91, $falsebb91;
$254:
  assert {:block_sourceloc} {:sourceloc_num 1463} true;
  v1119 := BV32_SREM($d_frame_no, 10) == 0;
  goto $truebb92, $falsebb92;
$255:
  assert {:block_sourceloc} {:sourceloc_num 1464} true;
  call {:sourceloc_num 1465} $bugle_barrier(-1, -1);
  assert {:sourceloc} {:sourceloc_num 1466} true;
  v1120 := $$d_common[32];
  assert {:sourceloc} {:sourceloc_num 1467} true;
  v1121 := $$d_common[33];
  assert {:sourceloc} {:sourceloc_num 1468} true;
  v1122 := $$d_common[34];
  assert {:sourceloc} {:sourceloc_num 1469} true;
  v1123 := $$d_common[35];
  v1124 := BV32_ADD(BV32_MUL($d_unique_point_no.0, BV_CONCAT(BV_CONCAT(BV_CONCAT(v1123, v1122), v1121), v1120)), $d_frame_no);
  if (base#MKPTR($d_unique_d_tRowLoc.0) == $arrayId$$d_tEndoRowLoc) {
    assert {:sourceloc} {:sourceloc_num 1470} true;
    v1125 := $$d_tEndoRowLoc[BV32_ADD(offset#MKPTR($d_unique_d_tRowLoc.0), v1124)];
  } else if (base#MKPTR($d_unique_d_tRowLoc.0) == $arrayId$$d_tEpiRowLoc) {
    assert {:sourceloc} {:sourceloc_num 1471} true;
    v1125 := $$d_tEpiRowLoc[BV32_ADD(offset#MKPTR($d_unique_d_tRowLoc.0), v1124)];
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 1472} false;
  }
  if (base#MKPTR($d_unique_d_Row.0) == $arrayId$$d_epiRow) {
    assert {:sourceloc} {:sourceloc_num 1473} true;
    $$d_epiRow[BV32_ADD(offset#MKPTR($d_unique_d_Row.0), $d_unique_point_no.0)] := v1125;
  } else if (base#MKPTR($d_unique_d_Row.0) == $arrayId$$d_endoRow) {
    assert {:sourceloc} {:sourceloc_num 1474} true;
    $$d_endoRow[BV32_ADD(offset#MKPTR($d_unique_d_Row.0), $d_unique_point_no.0)] := v1125;
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 1475} false;
  }
  if (base#MKPTR($d_unique_d_tColLoc.0) == $arrayId$$d_tEndoColLoc) {
    assert {:sourceloc} {:sourceloc_num 1476} true;
    v1126 := $$d_tEndoColLoc[BV32_ADD(offset#MKPTR($d_unique_d_tColLoc.0), v1124)];
  } else if (base#MKPTR($d_unique_d_tColLoc.0) == $arrayId$$d_tEpiColLoc) {
    assert {:sourceloc} {:sourceloc_num 1477} true;
    v1126 := $$d_tEpiColLoc[BV32_ADD(offset#MKPTR($d_unique_d_tColLoc.0), v1124)];
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 1478} false;
  }
  if (base#MKPTR($d_unique_d_Col.0) == $arrayId$$d_epiCol) {
    assert {:sourceloc} {:sourceloc_num 1479} true;
    $$d_epiCol[BV32_ADD(offset#MKPTR($d_unique_d_Col.0), $d_unique_point_no.0)] := v1126;
  } else if (base#MKPTR($d_unique_d_Col.0) == $arrayId$$d_endoCol) {
    assert {:sourceloc} {:sourceloc_num 1480} true;
    $$d_endoCol[BV32_ADD(offset#MKPTR($d_unique_d_Col.0), $d_unique_point_no.0)] := v1126;
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 1481} false;
  }
  $ei_new.33 := v1;
  goto $256;
$256:
  assert {:block_sourceloc} {:sourceloc_num 1482} true;
  assert {:sourceloc} {:sourceloc_num 1483} true;
  v1127 := $$d_common[80];
  assert {:sourceloc} {:sourceloc_num 1484} true;
  v1128 := $$d_common[81];
  assert {:sourceloc} {:sourceloc_num 1485} true;
  v1129 := $$d_common[82];
  assert {:sourceloc} {:sourceloc_num 1486} true;
  v1130 := $$d_common[83];
  v1131 := BV32_SLT($ei_new.33, BV_CONCAT(BV_CONCAT(BV_CONCAT(v1130, v1129), v1128), v1127));
  goto $truebb93, $falsebb93;
$257:
  assert {:block_sourceloc} {:sourceloc_num 1487} true;
  assert {:sourceloc} {:sourceloc_num 1488} true;
  v1132 := $$d_common[72];
  assert {:sourceloc} {:sourceloc_num 1489} true;
  v1133 := $$d_common[73];
  assert {:sourceloc} {:sourceloc_num 1490} true;
  v1134 := $$d_common[74];
  assert {:sourceloc} {:sourceloc_num 1491} true;
  v1135 := $$d_common[75];
  assert {:sourceloc} {:sourceloc_num 1492} true;
  v1136 := $$d_common[72];
  assert {:sourceloc} {:sourceloc_num 1493} true;
  v1137 := $$d_common[73];
  assert {:sourceloc} {:sourceloc_num 1494} true;
  v1138 := $$d_common[74];
  assert {:sourceloc} {:sourceloc_num 1495} true;
  v1139 := $$d_common[75];
  v1140 := BV32_SUB(BV32_ADD(BV32_SDIV(BV32_ADD($ei_new.33, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v1139, v1138), v1137), v1136)), 1), 1);
  assert {:sourceloc} {:sourceloc_num 1496} true;
  v1141 := $$d_common[72];
  assert {:sourceloc} {:sourceloc_num 1497} true;
  v1142 := $$d_common[73];
  assert {:sourceloc} {:sourceloc_num 1498} true;
  v1143 := $$d_common[74];
  assert {:sourceloc} {:sourceloc_num 1499} true;
  v1144 := $$d_common[75];
  v1145 := BV32_SREM(BV32_ADD($ei_new.33, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v1144, v1143), v1142), v1141)) == 0;
  goto $truebb94, $falsebb94;
$258:
  assert {:block_sourceloc} {:sourceloc_num 1500} true;
  assert {:sourceloc} {:sourceloc_num 1501} true;
  v1146 := $$d_common[72];
  assert {:sourceloc} {:sourceloc_num 1502} true;
  v1147 := $$d_common[73];
  assert {:sourceloc} {:sourceloc_num 1503} true;
  v1148 := $$d_common[74];
  assert {:sourceloc} {:sourceloc_num 1504} true;
  v1149 := $$d_common[75];
  $row.13, $col.13 := BV32_SUB(BV_CONCAT(BV_CONCAT(BV_CONCAT(v1149, v1148), v1147), v1146), 1), BV32_SUB(v1140, 1);
  goto $259;
$259:
  assert {:block_sourceloc} {:sourceloc_num 1505} true;
  if (base#MKPTR($d_unique_d_Row.0) == $arrayId$$d_epiRow) {
    assert {:sourceloc} {:sourceloc_num 1506} true;
    v1150 := $$d_epiRow[BV32_ADD(offset#MKPTR($d_unique_d_Row.0), $d_unique_point_no.0)];
  } else if (base#MKPTR($d_unique_d_Row.0) == $arrayId$$d_endoRow) {
    assert {:sourceloc} {:sourceloc_num 1507} true;
    v1150 := $$d_endoRow[BV32_ADD(offset#MKPTR($d_unique_d_Row.0), $d_unique_point_no.0)];
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 1508} false;
  }
  if (base#MKPTR($d_unique_d_Col.0) == $arrayId$$d_epiCol) {
    assert {:sourceloc} {:sourceloc_num 1509} true;
    v1151 := $$d_epiCol[BV32_ADD(offset#MKPTR($d_unique_d_Col.0), $d_unique_point_no.0)];
  } else if (base#MKPTR($d_unique_d_Col.0) == $arrayId$$d_endoCol) {
    assert {:sourceloc} {:sourceloc_num 1510} true;
    v1151 := $$d_endoCol[BV32_ADD(offset#MKPTR($d_unique_d_Col.0), $d_unique_point_no.0)];
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 1511} false;
  }
  assert {:sourceloc} {:sourceloc_num 1512} true;
  v1152 := $$d_common[36];
  assert {:sourceloc} {:sourceloc_num 1513} true;
  v1153 := $$d_common[37];
  assert {:sourceloc} {:sourceloc_num 1514} true;
  v1154 := $$d_common[38];
  assert {:sourceloc} {:sourceloc_num 1515} true;
  v1155 := $$d_common[39];
  assert {:sourceloc} {:sourceloc_num 1516} true;
  v1156 := $$d_common[28];
  assert {:sourceloc} {:sourceloc_num 1517} true;
  v1157 := $$d_common[29];
  assert {:sourceloc} {:sourceloc_num 1518} true;
  v1158 := $$d_common[30];
  assert {:sourceloc} {:sourceloc_num 1519} true;
  v1159 := $$d_common[31];
  if (base#MKPTR($d_in.0) == $arrayId$$d_endoT) {
    assert {:sourceloc} {:sourceloc_num 1520} true;
    v1160 := $$d_endoT[BV32_ADD(offset#MKPTR($d_in.0), $ei_new.33)];
  } else if (base#MKPTR($d_in.0) == $arrayId$$d_epiT) {
    assert {:sourceloc} {:sourceloc_num 1521} true;
    v1160 := $$d_epiT[BV32_ADD(offset#MKPTR($d_in.0), $ei_new.33)];
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 1522} false;
  }
  assert {:sourceloc} {:sourceloc_num 1523} true;
  v1161 := $$d_common[28];
  assert {:sourceloc} {:sourceloc_num 1524} true;
  v1162 := $$d_common[29];
  assert {:sourceloc} {:sourceloc_num 1525} true;
  v1163 := $$d_common[30];
  assert {:sourceloc} {:sourceloc_num 1526} true;
  v1164 := $$d_common[31];
  assert {:sourceloc} {:sourceloc_num 1527} true;
  v1165 := $$d_frame[BV32_ADD(BV32_MUL(BV32_SUB(BV32_ADD(BV32_SUB(v1151, 25), $col.13), 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v1155, v1154), v1153), v1152)), BV32_SUB(BV32_ADD(BV32_SUB(v1150, 25), $row.13), 1))];
  if (base#MKPTR($d_in.0) == $arrayId$$d_endoT) {
    assert {:sourceloc} {:sourceloc_num 1528} true;
    $$d_endoT[BV32_ADD(offset#MKPTR($d_in.0), $ei_new.33)] := FADD32(FMUL32(BV_CONCAT(BV_CONCAT(BV_CONCAT(v1159, v1158), v1157), v1156), v1160), FMUL32(FSUB32(1065353216, BV_CONCAT(BV_CONCAT(BV_CONCAT(v1164, v1163), v1162), v1161)), v1165));
  } else if (base#MKPTR($d_in.0) == $arrayId$$d_epiT) {
    assert {:sourceloc} {:sourceloc_num 1529} true;
    $$d_epiT[BV32_ADD(offset#MKPTR($d_in.0), $ei_new.33)] := FADD32(FMUL32(BV_CONCAT(BV_CONCAT(BV_CONCAT(v1159, v1158), v1157), v1156), v1160), FMUL32(FSUB32(1065353216, BV_CONCAT(BV_CONCAT(BV_CONCAT(v1164, v1163), v1162), v1161)), v1165));
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 1530} false;
  }
  $ei_new.33 := BV32_ADD($ei_new.33, 256);
  goto $256;
$260:
  assert {:block_sourceloc} {:sourceloc_num 1531} true;
  call {:sourceloc_num 1532} $bugle_barrier(-1, -1);
  goto $261;
$261:
  assert {:block_sourceloc} {:sourceloc_num 1533} true;
  return;
$truebb:
  assume {:partition} v6;
  assert {:block_sourceloc} {:sourceloc_num 1534} true;
  goto $1;
$falsebb:
  assume {:partition} !v6;
  assert {:block_sourceloc} {:sourceloc_num 1535} true;
  goto $2;
$truebb0:
  assume {:partition} v105;
  assert {:block_sourceloc} {:sourceloc_num 1536} true;
  goto $4;
$falsebb0:
  assume {:partition} !v105;
  assert {:block_sourceloc} {:sourceloc_num 1537} true;
  goto $12;
$truebb1:
  assume {:partition} v106;
  assert {:block_sourceloc} {:sourceloc_num 1538} true;
  goto $5;
$falsebb1:
  assume {:partition} !v106;
  assert {:block_sourceloc} {:sourceloc_num 1539} true;
  goto $6;
$truebb2:
  assume {:partition} v118;
  assert {:block_sourceloc} {:sourceloc_num 1540} true;
  goto $8;
$falsebb2:
  assume {:partition} !v118;
  assert {:block_sourceloc} {:sourceloc_num 1541} true;
  goto $11;
$truebb3:
  assume {:partition} v132;
  assert {:block_sourceloc} {:sourceloc_num 1542} true;
  goto $9;
$falsebb3:
  assume {:partition} !v132;
  assert {:block_sourceloc} {:sourceloc_num 1543} true;
  $row.0, $col.0 := BV32_SUB(BV32_SREM(BV32_ADD($ei_new.0, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v122, v121), v120), v119)), 1), v127;
  goto $10;
$truebb4:
  assume {:partition} v148;
  assert {:block_sourceloc} {:sourceloc_num 1544} true;
  goto $13;
$falsebb4:
  assume {:partition} !v148;
  assert {:block_sourceloc} {:sourceloc_num 1545} true;
  goto $253;
$truebb5:
  assume {:partition} v163;
  assert {:block_sourceloc} {:sourceloc_num 1546} true;
  goto $15;
$falsebb5:
  assume {:partition} !v163;
  assert {:block_sourceloc} {:sourceloc_num 1547} true;
  goto $18;
$truebb6:
  assume {:partition} v177;
  assert {:block_sourceloc} {:sourceloc_num 1548} true;
  goto $16;
$falsebb6:
  assume {:partition} !v177;
  assert {:block_sourceloc} {:sourceloc_num 1549} true;
  $row.1, $col.1 := BV32_SUB(BV32_SREM(BV32_ADD($ei_new.1, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v167, v166), v165), v164)), 1), v172;
  goto $17;
$truebb7:
  assume {:partition} v191;
  assert {:block_sourceloc} {:sourceloc_num 1550} true;
  goto $20;
$falsebb7:
  assume {:partition} !v191;
  assert {:block_sourceloc} {:sourceloc_num 1551} true;
  goto $23;
$truebb8:
  assume {:partition} v205;
  assert {:block_sourceloc} {:sourceloc_num 1552} true;
  goto $21;
$falsebb8:
  assume {:partition} !v205;
  assert {:block_sourceloc} {:sourceloc_num 1553} true;
  $row.2, $col.2 := BV32_SUB(BV32_SREM(BV32_ADD($ei_new.2, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v195, v194), v193), v192)), 1), v200;
  goto $22;
$truebb9:
  assume {:partition} v227;
  assert {:block_sourceloc} {:sourceloc_num 1554} true;
  goto $25;
$falsebb9:
  assume {:partition} !v227;
  assert {:block_sourceloc} {:sourceloc_num 1555} true;
  goto $48;
$truebb10:
  assume {:partition} v241;
  assert {:block_sourceloc} {:sourceloc_num 1556} true;
  goto $26;
$falsebb10:
  assume {:partition} !v241;
  assert {:block_sourceloc} {:sourceloc_num 1557} true;
  $ic.0, $jc.0 := BV32_SREM(BV32_ADD($ei_new.3, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v231, v230), v229), v228)), v236;
  goto $27;
$truebb11:
  assume {:partition} v256;
  assert {:block_sourceloc} {:sourceloc_num 1558} true;
  goto $28;
$falsebb11:
  assume {:partition} !v256;
  assert {:block_sourceloc} {:sourceloc_num 1559} true;
  goto $29;
$truebb12:
  assume {:partition} v265;
  assert {:block_sourceloc} {:sourceloc_num 1560} true;
  goto $31;
$falsebb12:
  assume {:partition} !v265;
  assert {:block_sourceloc} {:sourceloc_num 1561} true;
  goto $32;
$truebb13:
  assume {:partition} v280;
  assert {:block_sourceloc} {:sourceloc_num 1562} true;
  goto $34;
$falsebb13:
  assume {:partition} !v280;
  assert {:block_sourceloc} {:sourceloc_num 1563} true;
  goto $35;
$truebb14:
  assume {:partition} v289;
  assert {:block_sourceloc} {:sourceloc_num 1564} true;
  goto $37;
$falsebb14:
  assume {:partition} !v289;
  assert {:block_sourceloc} {:sourceloc_num 1565} true;
  goto $38;
$truebb15:
  assume {:partition} v294;
  assert {:block_sourceloc} {:sourceloc_num 1566} true;
  goto $41;
$falsebb15:
  assume {:partition} !v294;
  assert {:block_sourceloc} {:sourceloc_num 1567} true;
  goto $47;
$truebb16:
  assume {:partition} v295;
  assert {:block_sourceloc} {:sourceloc_num 1568} true;
  goto $43;
$falsebb16:
  assume {:partition} !v295;
  assert {:block_sourceloc} {:sourceloc_num 1569} true;
  goto $45;
$truebb17:
  assume {:partition} v310;
  assert {:block_sourceloc} {:sourceloc_num 1570} true;
  goto $50;
$falsebb17:
  assume {:partition} !v310;
  assert {:block_sourceloc} {:sourceloc_num 1571} true;
  goto $59;
$truebb18:
  assume {:partition} v324;
  assert {:block_sourceloc} {:sourceloc_num 1572} true;
  goto $51;
$falsebb18:
  assume {:partition} !v324;
  assert {:block_sourceloc} {:sourceloc_num 1573} true;
  $row.3, $col.3 := BV32_SUB(BV32_SREM(BV32_ADD($ei_new.4, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v314, v313), v312), v311)), 1), v319;
  goto $52;
$truebb19:
  assume {:partition} v333;
  assert {:block_sourceloc} {:sourceloc_num 1574} true;
  goto $53;
$falsebb19:
  assume {:partition} !v333;
  assert {:block_sourceloc} {:sourceloc_num 1575} true;
  goto $57;
$truebb20:
  assume {:partition} v342;
  assert {:block_sourceloc} {:sourceloc_num 1576} true;
  goto $54;
$falsebb20:
  assume {:partition} !v342;
  assert {:block_sourceloc} {:sourceloc_num 1577} true;
  goto $57;
$truebb21:
  assume {:partition} v347;
  assert {:block_sourceloc} {:sourceloc_num 1578} true;
  goto $55;
$falsebb21:
  assume {:partition} !v347;
  assert {:block_sourceloc} {:sourceloc_num 1579} true;
  goto $57;
$truebb22:
  assume {:partition} v356;
  assert {:block_sourceloc} {:sourceloc_num 1580} true;
  goto $56;
$falsebb22:
  assume {:partition} !v356;
  assert {:block_sourceloc} {:sourceloc_num 1581} true;
  goto $57;
$truebb23:
  assume {:partition} v374;
  assert {:block_sourceloc} {:sourceloc_num 1582} true;
  goto $61;
$falsebb23:
  assume {:partition} !v374;
  assert {:block_sourceloc} {:sourceloc_num 1583} true;
  goto $66;
$truebb24:
  assume {:partition} v384;
  assert {:block_sourceloc} {:sourceloc_num 1584} true;
  goto $63;
$falsebb24:
  assume {:partition} !v384;
  assert {:block_sourceloc} {:sourceloc_num 1585} true;
  goto $65;
$truebb25:
  assume {:partition} v391;
  assert {:block_sourceloc} {:sourceloc_num 1586} true;
  goto $68;
$falsebb25:
  assume {:partition} !v391;
  assert {:block_sourceloc} {:sourceloc_num 1587} true;
  goto $71;
$truebb26:
  assume {:partition} v405;
  assert {:block_sourceloc} {:sourceloc_num 1588} true;
  goto $69;
$falsebb26:
  assume {:partition} !v405;
  assert {:block_sourceloc} {:sourceloc_num 1589} true;
  $row.4, $col.4 := BV32_SUB(BV32_SREM(BV32_ADD($ei_new.6, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v395, v394), v393), v392)), 1), v400;
  goto $70;
$truebb27:
  assume {:partition} v427;
  assert {:block_sourceloc} {:sourceloc_num 1590} true;
  goto $73;
$falsebb27:
  assume {:partition} !v427;
  assert {:block_sourceloc} {:sourceloc_num 1591} true;
  goto $76;
$truebb28:
  assume {:partition} v441;
  assert {:block_sourceloc} {:sourceloc_num 1592} true;
  goto $74;
$falsebb28:
  assume {:partition} !v441;
  assert {:block_sourceloc} {:sourceloc_num 1593} true;
  $row.5, $col.5 := BV32_SUB(BV32_SREM(BV32_ADD($ei_new.7, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v431, v430), v429), v428)), 1), v436;
  goto $75;
$truebb29:
  assume {:partition} v463;
  assert {:block_sourceloc} {:sourceloc_num 1594} true;
  goto $78;
$falsebb29:
  assume {:partition} !v463;
  assert {:block_sourceloc} {:sourceloc_num 1595} true;
  goto $79;
$truebb30:
  assume {:partition} v470;
  assert {:block_sourceloc} {:sourceloc_num 1596} true;
  goto $81;
$falsebb30:
  assume {:partition} !v470;
  assert {:block_sourceloc} {:sourceloc_num 1597} true;
  goto $86;
$truebb31:
  assume {:partition} v475;
  assert {:block_sourceloc} {:sourceloc_num 1598} true;
  goto $83;
$falsebb31:
  assume {:partition} !v475;
  assert {:block_sourceloc} {:sourceloc_num 1599} true;
  goto $85;
$truebb32:
  assume {:partition} v486;
  assert {:block_sourceloc} {:sourceloc_num 1600} true;
  goto $88;
$falsebb32:
  assume {:partition} !v486;
  assert {:block_sourceloc} {:sourceloc_num 1601} true;
  goto $91;
$truebb33:
  assume {:partition} v500;
  assert {:block_sourceloc} {:sourceloc_num 1602} true;
  goto $89;
$falsebb33:
  assume {:partition} !v500;
  assert {:block_sourceloc} {:sourceloc_num 1603} true;
  $row.6, $col.6 := BV32_SUB(BV32_SREM(BV32_ADD($ei_new.10, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v490, v489), v488), v487)), 1), v495;
  goto $90;
$truebb34:
  assume {:partition} v522;
  assert {:block_sourceloc} {:sourceloc_num 1604} true;
  goto $93;
$falsebb34:
  assume {:partition} !v522;
  assert {:block_sourceloc} {:sourceloc_num 1605} true;
  goto $96;
$truebb35:
  assume {:partition} v536;
  assert {:block_sourceloc} {:sourceloc_num 1606} true;
  goto $94;
$falsebb35:
  assume {:partition} !v536;
  assert {:block_sourceloc} {:sourceloc_num 1607} true;
  $row.7, $col.7 := BV32_SUB(BV32_SREM(BV32_ADD($ei_new.11, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v526, v525), v524), v523)), 1), v531;
  goto $95;
$truebb36:
  assume {:partition} v558;
  assert {:block_sourceloc} {:sourceloc_num 1608} true;
  goto $98;
$falsebb36:
  assume {:partition} !v558;
  assert {:block_sourceloc} {:sourceloc_num 1609} true;
  goto $99;
$truebb37:
  assume {:partition} v565;
  assert {:block_sourceloc} {:sourceloc_num 1610} true;
  goto $101;
$falsebb37:
  assume {:partition} !v565;
  assert {:block_sourceloc} {:sourceloc_num 1611} true;
  goto $102;
$truebb38:
  assume {:partition} v571;
  assert {:block_sourceloc} {:sourceloc_num 1612} true;
  goto $104;
$falsebb38:
  assume {:partition} !v571;
  assert {:block_sourceloc} {:sourceloc_num 1613} true;
  goto $113;
$truebb39:
  assume {:partition} v585;
  assert {:block_sourceloc} {:sourceloc_num 1614} true;
  goto $105;
$falsebb39:
  assume {:partition} !v585;
  assert {:block_sourceloc} {:sourceloc_num 1615} true;
  $row.8, $col.8 := BV32_SUB(BV32_SREM(BV32_ADD($ei_new.14, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v575, v574), v573), v572)), 1), v580;
  goto $106;
$truebb40:
  assume {:partition} v594;
  assert {:block_sourceloc} {:sourceloc_num 1616} true;
  goto $107;
$falsebb40:
  assume {:partition} !v594;
  assert {:block_sourceloc} {:sourceloc_num 1617} true;
  goto $111;
$truebb41:
  assume {:partition} v603;
  assert {:block_sourceloc} {:sourceloc_num 1618} true;
  goto $108;
$falsebb41:
  assume {:partition} !v603;
  assert {:block_sourceloc} {:sourceloc_num 1619} true;
  goto $111;
$truebb42:
  assume {:partition} v608;
  assert {:block_sourceloc} {:sourceloc_num 1620} true;
  goto $109;
$falsebb42:
  assume {:partition} !v608;
  assert {:block_sourceloc} {:sourceloc_num 1621} true;
  goto $111;
$truebb43:
  assume {:partition} v617;
  assert {:block_sourceloc} {:sourceloc_num 1622} true;
  goto $110;
$falsebb43:
  assume {:partition} !v617;
  assert {:block_sourceloc} {:sourceloc_num 1623} true;
  goto $111;
$truebb44:
  assume {:partition} v635;
  assert {:block_sourceloc} {:sourceloc_num 1624} true;
  goto $115;
$falsebb44:
  assume {:partition} !v635;
  assert {:block_sourceloc} {:sourceloc_num 1625} true;
  goto $120;
$truebb45:
  assume {:partition} v645;
  assert {:block_sourceloc} {:sourceloc_num 1626} true;
  goto $117;
$falsebb45:
  assume {:partition} !v645;
  assert {:block_sourceloc} {:sourceloc_num 1627} true;
  goto $119;
$truebb46:
  assume {:partition} v652;
  assert {:block_sourceloc} {:sourceloc_num 1628} true;
  goto $122;
$falsebb46:
  assume {:partition} !v652;
  assert {:block_sourceloc} {:sourceloc_num 1629} true;
  goto $125;
$truebb47:
  assume {:partition} v666;
  assert {:block_sourceloc} {:sourceloc_num 1630} true;
  goto $123;
$falsebb47:
  assume {:partition} !v666;
  assert {:block_sourceloc} {:sourceloc_num 1631} true;
  $row.9, $col.9 := BV32_SUB(BV32_SREM(BV32_ADD($ei_new.16, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v656, v655), v654), v653)), 1), v661;
  goto $124;
$truebb48:
  assume {:partition} v688;
  assert {:block_sourceloc} {:sourceloc_num 1632} true;
  goto $127;
$falsebb48:
  assume {:partition} !v688;
  assert {:block_sourceloc} {:sourceloc_num 1633} true;
  goto $130;
$truebb49:
  assume {:partition} v702;
  assert {:block_sourceloc} {:sourceloc_num 1634} true;
  goto $128;
$falsebb49:
  assume {:partition} !v702;
  assert {:block_sourceloc} {:sourceloc_num 1635} true;
  $row.10, $col.10 := BV32_SUB(BV32_SREM(BV32_ADD($ei_new.17, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v692, v691), v690), v689)), 1), v697;
  goto $129;
$truebb50:
  assume {:partition} v724;
  assert {:block_sourceloc} {:sourceloc_num 1636} true;
  goto $132;
$falsebb50:
  assume {:partition} !v724;
  assert {:block_sourceloc} {:sourceloc_num 1637} true;
  goto $133;
$truebb51:
  assume {:partition} v731;
  assert {:block_sourceloc} {:sourceloc_num 1638} true;
  goto $135;
$falsebb51:
  assume {:partition} !v731;
  assert {:block_sourceloc} {:sourceloc_num 1639} true;
  goto $140;
$truebb52:
  assume {:partition} v736;
  assert {:block_sourceloc} {:sourceloc_num 1640} true;
  goto $137;
$falsebb52:
  assume {:partition} !v736;
  assert {:block_sourceloc} {:sourceloc_num 1641} true;
  goto $139;
$truebb53:
  assume {:partition} v747;
  assert {:block_sourceloc} {:sourceloc_num 1642} true;
  goto $142;
$falsebb53:
  assume {:partition} !v747;
  assert {:block_sourceloc} {:sourceloc_num 1643} true;
  goto $145;
$truebb54:
  assume {:partition} v761;
  assert {:block_sourceloc} {:sourceloc_num 1644} true;
  goto $143;
$falsebb54:
  assume {:partition} !v761;
  assert {:block_sourceloc} {:sourceloc_num 1645} true;
  $row.11, $col.11 := BV32_SUB(BV32_SREM(BV32_ADD($ei_new.20, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v751, v750), v749), v748)), 1), v756;
  goto $144;
$truebb55:
  assume {:partition} v783;
  assert {:block_sourceloc} {:sourceloc_num 1646} true;
  goto $147;
$falsebb55:
  assume {:partition} !v783;
  assert {:block_sourceloc} {:sourceloc_num 1647} true;
  goto $150;
$truebb56:
  assume {:partition} v797;
  assert {:block_sourceloc} {:sourceloc_num 1648} true;
  goto $148;
$falsebb56:
  assume {:partition} !v797;
  assert {:block_sourceloc} {:sourceloc_num 1649} true;
  $row.12, $col.12 := BV32_SUB(BV32_SREM(BV32_ADD($ei_new.21, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v787, v786), v785), v784)), 1), v792;
  goto $149;
$truebb57:
  assume {:partition} v819;
  assert {:block_sourceloc} {:sourceloc_num 1650} true;
  goto $152;
$falsebb57:
  assume {:partition} !v819;
  assert {:block_sourceloc} {:sourceloc_num 1651} true;
  goto $153;
$truebb58:
  assume {:partition} v826;
  assert {:block_sourceloc} {:sourceloc_num 1652} true;
  goto $155;
$falsebb58:
  assume {:partition} !v826;
  assert {:block_sourceloc} {:sourceloc_num 1653} true;
  goto $158;
$truebb59:
  assume {:partition} v834;
  assert {:block_sourceloc} {:sourceloc_num 1654} true;
  goto $156;
$falsebb59:
  assume {:partition} !v834;
  assert {:block_sourceloc} {:sourceloc_num 1655} true;
  $temp2.0 := v833;
  goto $157;
$truebb60:
  assume {:partition} v839;
  assert {:block_sourceloc} {:sourceloc_num 1656} true;
  goto $160;
$falsebb60:
  assume {:partition} !v839;
  assert {:block_sourceloc} {:sourceloc_num 1657} true;
  goto $161;
$truebb61:
  assume {:partition} v845;
  assert {:block_sourceloc} {:sourceloc_num 1658} true;
  goto $163;
$falsebb61:
  assume {:partition} !v845;
  assert {:block_sourceloc} {:sourceloc_num 1659} true;
  goto $168;
$truebb62:
  assume {:partition} v850;
  assert {:block_sourceloc} {:sourceloc_num 1660} true;
  goto $165;
$falsebb62:
  assume {:partition} !v850;
  assert {:block_sourceloc} {:sourceloc_num 1661} true;
  goto $167;
$truebb63:
  assume {:partition} v860;
  assert {:block_sourceloc} {:sourceloc_num 1662} true;
  goto $170;
$falsebb63:
  assume {:partition} !v860;
  assert {:block_sourceloc} {:sourceloc_num 1663} true;
  goto $175;
$truebb64:
  assume {:partition} v865;
  assert {:block_sourceloc} {:sourceloc_num 1664} true;
  goto $172;
$falsebb64:
  assume {:partition} !v865;
  assert {:block_sourceloc} {:sourceloc_num 1665} true;
  goto $174;
$truebb65:
  assume {:partition} v871;
  assert {:block_sourceloc} {:sourceloc_num 1666} true;
  goto $176;
$falsebb65:
  assume {:partition} !v871;
  assert {:block_sourceloc} {:sourceloc_num 1667} true;
  goto $181;
$truebb66:
  assume {:partition} v876;
  assert {:block_sourceloc} {:sourceloc_num 1668} true;
  goto $178;
$falsebb66:
  assume {:partition} !v876;
  assert {:block_sourceloc} {:sourceloc_num 1669} true;
  goto $180;
$truebb67:
  assume {:partition} v879;
  assert {:block_sourceloc} {:sourceloc_num 1670} true;
  goto $182;
$falsebb67:
  assume {:partition} !v879;
  assert {:block_sourceloc} {:sourceloc_num 1671} true;
  goto $187;
$truebb68:
  assume {:partition} v884;
  assert {:block_sourceloc} {:sourceloc_num 1672} true;
  goto $184;
$falsebb68:
  assume {:partition} !v884;
  assert {:block_sourceloc} {:sourceloc_num 1673} true;
  goto $186;
$truebb69:
  assume {:partition} v887;
  assert {:block_sourceloc} {:sourceloc_num 1674} true;
  goto $189;
$falsebb69:
  assume {:partition} !v887;
  assert {:block_sourceloc} {:sourceloc_num 1675} true;
  goto $190;
$truebb70:
  assume {:partition} v907;
  assert {:block_sourceloc} {:sourceloc_num 1676} true;
  goto $192;
$falsebb70:
  assume {:partition} !v907;
  assert {:block_sourceloc} {:sourceloc_num 1677} true;
  goto $193;
$truebb71:
  assume {:partition} v914;
  assert {:block_sourceloc} {:sourceloc_num 1678} true;
  goto $195;
$falsebb71:
  assume {:partition} !v914;
  assert {:block_sourceloc} {:sourceloc_num 1679} true;
  goto $196;
$truebb72:
  assume {:partition} v926;
  assert {:block_sourceloc} {:sourceloc_num 1680} true;
  goto $198;
$falsebb72:
  assume {:partition} !v926;
  assert {:block_sourceloc} {:sourceloc_num 1681} true;
  goto $199;
$truebb73:
  assume {:partition} v938;
  assert {:block_sourceloc} {:sourceloc_num 1682} true;
  goto $200;
$falsebb73:
  assume {:partition} !v938;
  assert {:block_sourceloc} {:sourceloc_num 1683} true;
  goto $201;
$truebb74:
  assume {:partition} v956;
  assert {:block_sourceloc} {:sourceloc_num 1684} true;
  goto $204;
$falsebb74:
  assume {:partition} !v956;
  assert {:block_sourceloc} {:sourceloc_num 1685} true;
  goto $208;
$truebb75:
  assume {:partition} v961;
  assert {:block_sourceloc} {:sourceloc_num 1686} true;
  goto $205;
$falsebb75:
  assume {:partition} !v961;
  assert {:block_sourceloc} {:sourceloc_num 1687} true;
  goto $206;
$truebb76:
  assume {:partition} v966;
  assert {:block_sourceloc} {:sourceloc_num 1688} true;
  goto $210;
$falsebb76:
  assume {:partition} !v966;
  assert {:block_sourceloc} {:sourceloc_num 1689} true;
  goto $233;
$truebb77:
  assume {:partition} v980;
  assert {:block_sourceloc} {:sourceloc_num 1690} true;
  goto $211;
$falsebb77:
  assume {:partition} !v980;
  assert {:block_sourceloc} {:sourceloc_num 1691} true;
  $ic.1, $jc.1 := BV32_SREM(BV32_ADD($ei_new.31, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v970, v969), v968), v967)), v975;
  goto $212;
$truebb78:
  assume {:partition} v995;
  assert {:block_sourceloc} {:sourceloc_num 1692} true;
  goto $213;
$falsebb78:
  assume {:partition} !v995;
  assert {:block_sourceloc} {:sourceloc_num 1693} true;
  goto $214;
$truebb79:
  assume {:partition} v1004;
  assert {:block_sourceloc} {:sourceloc_num 1694} true;
  goto $216;
$falsebb79:
  assume {:partition} !v1004;
  assert {:block_sourceloc} {:sourceloc_num 1695} true;
  goto $217;
$truebb80:
  assume {:partition} v1019;
  assert {:block_sourceloc} {:sourceloc_num 1696} true;
  goto $219;
$falsebb80:
  assume {:partition} !v1019;
  assert {:block_sourceloc} {:sourceloc_num 1697} true;
  goto $220;
$truebb81:
  assume {:partition} v1028;
  assert {:block_sourceloc} {:sourceloc_num 1698} true;
  goto $222;
$falsebb81:
  assume {:partition} !v1028;
  assert {:block_sourceloc} {:sourceloc_num 1699} true;
  goto $223;
$truebb82:
  assume {:partition} v1033;
  assert {:block_sourceloc} {:sourceloc_num 1700} true;
  goto $226;
$falsebb82:
  assume {:partition} !v1033;
  assert {:block_sourceloc} {:sourceloc_num 1701} true;
  goto $232;
$truebb83:
  assume {:partition} v1034;
  assert {:block_sourceloc} {:sourceloc_num 1702} true;
  goto $228;
$falsebb83:
  assume {:partition} !v1034;
  assert {:block_sourceloc} {:sourceloc_num 1703} true;
  goto $230;
$truebb84:
  assume {:partition} v1045;
  assert {:block_sourceloc} {:sourceloc_num 1704} true;
  goto $235;
$falsebb84:
  assume {:partition} !v1045;
  assert {:block_sourceloc} {:sourceloc_num 1705} true;
  goto $242;
$truebb85:
  assume {:partition} v1050;
  assert {:block_sourceloc} {:sourceloc_num 1706} true;
  goto $237;
$falsebb85:
  assume {:partition} !v1050;
  assert {:block_sourceloc} {:sourceloc_num 1707} true;
  goto $241;
$truebb86:
  assume {:partition} v1058;
  assert {:block_sourceloc} {:sourceloc_num 1708} true;
  goto $238;
$falsebb86:
  assume {:partition} !v1058;
  assert {:block_sourceloc} {:sourceloc_num 1709} true;
  $largest_value.2, $largest_coordinate.2 := $largest_value.1, $largest_coordinate.1;
  goto $239;
$truebb87:
  assume {:partition} v1059;
  assert {:block_sourceloc} {:sourceloc_num 1710} true;
  goto $243;
$falsebb87:
  assume {:partition} !v1059;
  assert {:block_sourceloc} {:sourceloc_num 1711} true;
  goto $252;
$truebb88:
  assume {:partition} v1064;
  assert {:block_sourceloc} {:sourceloc_num 1712} true;
  goto $245;
$falsebb88:
  assume {:partition} !v1064;
  assert {:block_sourceloc} {:sourceloc_num 1713} true;
  goto $249;
$truebb89:
  assume {:partition} v1066;
  assert {:block_sourceloc} {:sourceloc_num 1714} true;
  goto $246;
$falsebb89:
  assume {:partition} !v1066;
  assert {:block_sourceloc} {:sourceloc_num 1715} true;
  $fin_max_val.1, $fin_max_coo.1 := $fin_max_val.0, $fin_max_coo.0;
  goto $247;
$truebb90:
  assume {:partition} v1082;
  assert {:block_sourceloc} {:sourceloc_num 1716} true;
  goto $250;
$falsebb90:
  assume {:partition} !v1082;
  assert {:block_sourceloc} {:sourceloc_num 1717} true;
  $largest_row.0, $largest_col.0 := BV32_SUB(BV32_SREM(BV32_ADD($fin_max_coo.0, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v1072, v1071), v1070), v1069)), 1), v1077;
  goto $251;
$truebb91:
  assume {:partition} v1118;
  assert {:block_sourceloc} {:sourceloc_num 1718} true;
  goto $254;
$falsebb91:
  assume {:partition} !v1118;
  assert {:block_sourceloc} {:sourceloc_num 1719} true;
  goto $261;
$truebb92:
  assume {:partition} v1119;
  assert {:block_sourceloc} {:sourceloc_num 1720} true;
  goto $255;
$falsebb92:
  assume {:partition} !v1119;
  assert {:block_sourceloc} {:sourceloc_num 1721} true;
  goto $261;
$truebb93:
  assume {:partition} v1131;
  assert {:block_sourceloc} {:sourceloc_num 1722} true;
  goto $257;
$falsebb93:
  assume {:partition} !v1131;
  assert {:block_sourceloc} {:sourceloc_num 1723} true;
  goto $260;
$truebb94:
  assume {:partition} v1145;
  assert {:block_sourceloc} {:sourceloc_num 1724} true;
  goto $258;
$falsebb94:
  assume {:partition} !v1145;
  assert {:block_sourceloc} {:sourceloc_num 1725} true;
  $row.13, $col.13 := BV32_SUB(BV32_SREM(BV32_ADD($ei_new.33, 1), BV_CONCAT(BV_CONCAT(BV_CONCAT(v1135, v1134), v1133), v1132)), 1), v1140;
  goto $259;
}
procedure {:source_name "bugle_barrier"} {:barrier} $bugle_barrier($0:int, $1:int);
axiom (if group_size_y == 1 then 1 else 0) != 0;
axiom (if group_size_z == 1 then 1 else 0) != 0;
axiom (if num_groups_y == 1 then 1 else 0) != 0;
axiom (if num_groups_z == 1 then 1 else 0) != 0;
axiom (if group_size_x == 256 then 1 else 0) != 0;
axiom (if num_groups_x == 51 then 1 else 0) != 0;
axiom (if global_offset_x == 0 then 1 else 0) != 0;
axiom (if global_offset_y == 0 then 1 else 0) != 0;
axiom (if global_offset_z == 0 then 1 else 0) != 0;
