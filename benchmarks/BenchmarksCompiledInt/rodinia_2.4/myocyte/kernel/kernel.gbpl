type _SIZE_T_TYPE = bv32;

procedure _ATOMIC_OP32(x : [int]int, y : int) returns (z : int, A : [int]int);
var {:source_name "d_initvalu"} {:global} $$d_initvalu : [int]int;
axiom {:array_info "$$d_initvalu"} {:global} {:elem_width 32} {:source_name "d_initvalu"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$d_initvalu : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$d_initvalu : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$d_initvalu : bool;

var {:source_name "d_finavalu"} {:global} $$d_finavalu : [int]int;
axiom {:array_info "$$d_finavalu"} {:global} {:elem_width 32} {:source_name "d_finavalu"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$d_finavalu : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$d_finavalu : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$d_finavalu : bool;

var {:source_name "d_params"} {:global} $$d_params : [int]int;
axiom {:array_info "$$d_params"} {:global} {:elem_width 32} {:source_name "d_params"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$d_params : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$d_params : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$d_params : bool;

var {:source_name "d_com"} {:global} $$d_com : [int]int;
axiom {:array_info "$$d_com"} {:global} {:elem_width 32} {:source_name "d_com"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$d_com : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$d_com : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$d_com : bool;

const _WATCHED_OFFSET : int;
const {:global_offset_x} global_offset_x : int;
const {:global_offset_y} global_offset_y : int;
const {:global_offset_z} global_offset_z : int;
const {:group_id_x} group_id_x : int;
const {:group_size_x} group_size_x : int;
const {:group_size_y} group_size_y : int;
const {:group_size_z} group_size_z : int;
const {:local_id_x} local_id_x : int;
const {:num_groups_x} num_groups_x : int;
const {:num_groups_y} num_groups_y : int;
const {:num_groups_z} num_groups_z : int;
function FADD32(int, int) : int;
function FADD64(int, int) : int;
function FDIV32(int, int) : int;
function FDIV64(int, int) : int;
function FEQ32(int, int) : bool;
function FEXP32(int) : int;
function FEXP64(int) : int;
function FLOG32(int) : int;
function FLT32(int, int) : bool;
function FLT64(int, int) : bool;
function FMUL32(int, int) : int;
function FMUL64(int, int) : int;
function FP32_CONV64(int) : int;
function FP64_CONV32(int) : int;
function FPOW32(int, int) : int;
function FPOW64(int, int) : int;
function FSQRT64(int) : int;
function FSUB32(int, int) : int;
function FSUB64(int, int) : int;
function SI32_TO_FP32(int) : int;
function {:inline true} BV1_ZEXT32(x : int) : int {
  x
}
function {:inline true} BV32_AND(x : int, y : int) : int {
  if x == y then x else (if x == 0 || y == 0 then 0 else BV32_AND_UF(x, y))
}
function BV32_AND_UF(int, int) : int;
procedure {:source_name "kernel_gpu_opencl"} {:kernel} $kernel_gpu_opencl($timeinst:int)
{
  var $ah.i.0:int;
  var $bh.i.0:int;
  var $aj.i.0:int;
  var $bj.i.0:int;
  var $I_app.i.1:int;
  var $I_app.i.0:int;
  var $V_clamp.i.0:int;
  var $Kd02.i.0:int;
  var $Kd24.i.0:int;
  var $Kd02.i52.0:int;
  var $Kd24.i53.0:int;
  var $Kd02.i173.0:int;
  var $Kd24.i174.0:int;
  var v4:int;
  var v5:int;
  var v103:int;
  var v104:int;
  var v32:int;
  var v33:int;
  var v34:int;
  var v35:int;
  var v37:int;
  var v38:int;
  var v39:int;
  var v40:int;
  var v41:int;
  var v42:int;
  var v43:int;
  var v44:int;
  var v45:int;
  var v46:int;
  var v47:int;
  var v48:int;
  var v49:int;
  var v50:int;
  var v51:int;
  var v52:int;
  var v53:int;
  var v54:int;
  var v55:int;
  var v56:int;
  var v6:int;
  var v7:int;
  var v8:int;
  var v9:int;
  var v10:int;
  var v11:int;
  var v20:int;
  var v12:int;
  var v13:int;
  var v14:int;
  var v15:int;
  var v16:int;
  var v17:int;
  var v18:int;
  var v19:int;
  var v36:int;
  var v21:int;
  var v22:int;
  var v23:int;
  var v24:int;
  var v25:int;
  var v26:int;
  var v27:int;
  var v28:int;
  var v29:int;
  var v30:int;
  var v31:int;
  var v57:int;
  var v58:bool;
  var v0:int;
  var v1:int;
  var v2:bool;
  var v3:bool;
  var v59:int;
  var v60:int;
  var v61:int;
  var v62:int;
  var v63:int;
  var v64:int;
  var v65:int;
  var v66:int;
  var v67:int;
  var v68:int;
  var v69:int;
  var v98:int;
  var v70:int;
  var v71:int;
  var v72:int;
  var v73:int;
  var v74:int;
  var v75:int;
  var v76:int;
  var v77:int;
  var v78:int;
  var v79:int;
  var v80:int;
  var v81:int;
  var v82:int;
  var v83:int;
  var v84:int;
  var v85:int;
  var v86:int;
  var v87:int;
  var v88:int;
  var v89:int;
  var v90:int;
  var v91:int;
  var v92:int;
  var v93:int;
  var v94:int;
  var v95:int;
  var v96:int;
  var v97:int;
  var v99:int;
  var v100:int;
  var v101:int;
  var v102:int;
  var v272:int;
  var v105:int;
  var v106:bool;
  var v107:bool;
  var v108:bool;
  var v109:bool;
  var v110:int;
  var v111:int;
  var v112:int;
  var v113:int;
  var v114:int;
  var v115:int;
  var v116:int;
  var v117:int;
  var v118:int;
  var v119:int;
  var v120:int;
  var v121:int;
  var v122:int;
  var v123:int;
  var v124:int;
  var v125:int;
  var v126:int;
  var v127:int;
  var v128:int;
  var v129:int;
  var v130:int;
  var v131:int;
  var v132:int;
  var v133:bool;
  var v134:int;
  var v135:int;
  var v136:int;
  var v137:int;
  var v138:int;
  var v139:int;
  var v140:int;
  var v141:int;
  var v142:int;
  var v143:int;
  var v144:int;
  var v145:int;
  var v146:int;
  var v147:int;
  var v148:int;
  var v149:int;
  var v150:int;
  var v151:int;
  var v152:int;
  var v153:int;
  var v154:int;
  var v155:int;
  var v156:int;
  var v157:int;
  var v158:int;
  var v159:int;
  var v160:int;
  var v161:int;
  var v162:int;
  var v163:int;
  var v164:int;
  var v165:int;
  var v166:int;
  var v167:int;
  var v168:int;
  var v169:int;
  var v170:int;
  var v171:int;
  var v172:int;
  var v173:int;
  var v174:int;
  var v175:int;
  var v176:int;
  var v177:int;
  var v178:int;
  var v179:int;
  var v180:int;
  var v181:int;
  var v182:int;
  var v183:int;
  var v184:int;
  var v185:int;
  var v186:int;
  var v187:bool;
  var v188:int;
  var v189:int;
  var v190:int;
  var v191:int;
  var v192:int;
  var v193:int;
  var v194:int;
  var v195:int;
  var v196:int;
  var v197:int;
  var v198:int;
  var v199:int;
  var v200:int;
  var v201:int;
  var v202:int;
  var v203:int;
  var v204:int;
  var v205:int;
  var v206:int;
  var v207:int;
  var v208:int;
  var v209:int;
  var v210:int;
  var v211:int;
  var v212:int;
  var v213:int;
  var v214:int;
  var v215:int;
  var v216:int;
  var v217:int;
  var v218:int;
  var v219:int;
  var v220:int;
  var v221:int;
  var v222:int;
  var v223:int;
  var v224:int;
  var v225:int;
  var v226:int;
  var v227:int;
  var v228:int;
  var v229:int;
  var v230:int;
  var v231:int;
  var v232:int;
  var v233:int;
  var v234:int;
  var v235:int;
  var v236:int;
  var v237:int;
  var v238:int;
  var v239:int;
  var v240:int;
  var v241:bool;
  var v242:int;
  var v243:int;
  var v244:int;
  var v245:int;
  var v246:int;
  var v247:int;
  var v248:int;
  var v249:int;
  var v250:int;
  var v251:int;
  var v252:int;
  var v253:int;
  var v254:int;
  var v255:int;
  var v256:int;
  var v257:int;
  var v258:int;
  var v259:int;
  var v260:int;
  var v261:int;
  var v262:int;
  var v263:int;
  var v264:int;
  var v265:int;
  var v266:int;
  var v267:int;
  var v268:int;
  var v269:int;
  var v270:int;
  var v271:int;
$0:
  assert {:block_sourceloc} {:sourceloc_num 0} true;
  v0 := group_id_x;
  v1 := local_id_x;
  v2 := v0 == 0;
  goto $truebb, $falsebb;
$1:
  assert {:block_sourceloc} {:sourceloc_num 1} true;
  v3 := v1 == 0;
  goto $truebb0, $falsebb0;
$2:
  assert {:block_sourceloc} {:sourceloc_num 2} true;
  v4 := SI32_TO_FP32($timeinst);
  assert {:sourceloc} {:sourceloc_num 3} true;
  v5 := $$d_params[15];
  assert {:sourceloc} {:sourceloc_num 4} true;
  v6 := $$d_initvalu[0];
  assert {:sourceloc} {:sourceloc_num 5} true;
  v7 := $$d_initvalu[1];
  assert {:sourceloc} {:sourceloc_num 6} true;
  v8 := $$d_initvalu[2];
  assert {:sourceloc} {:sourceloc_num 7} true;
  v9 := $$d_initvalu[3];
  assert {:sourceloc} {:sourceloc_num 8} true;
  v10 := $$d_initvalu[4];
  assert {:sourceloc} {:sourceloc_num 9} true;
  v11 := $$d_initvalu[5];
  assert {:sourceloc} {:sourceloc_num 10} true;
  v12 := $$d_initvalu[6];
  assert {:sourceloc} {:sourceloc_num 11} true;
  v13 := $$d_initvalu[7];
  assert {:sourceloc} {:sourceloc_num 12} true;
  v14 := $$d_initvalu[8];
  assert {:sourceloc} {:sourceloc_num 13} true;
  v15 := $$d_initvalu[9];
  assert {:sourceloc} {:sourceloc_num 14} true;
  v16 := $$d_initvalu[10];
  assert {:sourceloc} {:sourceloc_num 15} true;
  v17 := $$d_initvalu[11];
  assert {:sourceloc} {:sourceloc_num 16} true;
  v18 := $$d_initvalu[12];
  assert {:sourceloc} {:sourceloc_num 17} true;
  v19 := $$d_initvalu[13];
  assert {:sourceloc} {:sourceloc_num 18} true;
  v20 := $$d_initvalu[14];
  assert {:sourceloc} {:sourceloc_num 19} true;
  v21 := $$d_initvalu[15];
  assert {:sourceloc} {:sourceloc_num 20} true;
  v22 := $$d_initvalu[16];
  assert {:sourceloc} {:sourceloc_num 21} true;
  v23 := $$d_initvalu[17];
  assert {:sourceloc} {:sourceloc_num 22} true;
  v24 := $$d_initvalu[18];
  assert {:sourceloc} {:sourceloc_num 23} true;
  v25 := $$d_initvalu[19];
  assert {:sourceloc} {:sourceloc_num 24} true;
  v26 := $$d_initvalu[20];
  assert {:sourceloc} {:sourceloc_num 25} true;
  v27 := $$d_initvalu[22];
  assert {:sourceloc} {:sourceloc_num 26} true;
  v28 := $$d_initvalu[23];
  assert {:sourceloc} {:sourceloc_num 27} true;
  v29 := $$d_initvalu[24];
  assert {:sourceloc} {:sourceloc_num 28} true;
  v30 := $$d_initvalu[25];
  assert {:sourceloc} {:sourceloc_num 29} true;
  v31 := $$d_initvalu[26];
  assert {:sourceloc} {:sourceloc_num 30} true;
  v32 := $$d_initvalu[27];
  assert {:sourceloc} {:sourceloc_num 31} true;
  v33 := $$d_initvalu[28];
  assert {:sourceloc} {:sourceloc_num 32} true;
  v34 := $$d_initvalu[29];
  assert {:sourceloc} {:sourceloc_num 33} true;
  v35 := $$d_initvalu[30];
  assert {:sourceloc} {:sourceloc_num 34} true;
  v36 := $$d_initvalu[31];
  assert {:sourceloc} {:sourceloc_num 35} true;
  v37 := $$d_initvalu[32];
  assert {:sourceloc} {:sourceloc_num 36} true;
  v38 := $$d_initvalu[33];
  assert {:sourceloc} {:sourceloc_num 37} true;
  v39 := $$d_initvalu[34];
  assert {:sourceloc} {:sourceloc_num 38} true;
  v40 := $$d_initvalu[35];
  assert {:sourceloc} {:sourceloc_num 39} true;
  v41 := $$d_initvalu[36];
  assert {:sourceloc} {:sourceloc_num 40} true;
  v42 := $$d_initvalu[37];
  assert {:sourceloc} {:sourceloc_num 41} true;
  v43 := $$d_initvalu[38];
  assert {:sourceloc} {:sourceloc_num 42} true;
  v44 := $$d_initvalu[39];
  v45 := FDIV32(FDIV32(1203532416, 1174530048), 1134231552);
  v46 := FDIV32(FSUB32(1134231552, 1134231552), 1092616192);
  v47 := FP64_CONV32(FMUL64(FP32_CONV64(FMUL32(FMUL32(1078530041, FPOW32(1092878336, 1073741824)), 1120403456)), 4382569440205035030));
  v48 := FP64_CONV32(FMUL64(4604029899060858061, FP32_CONV64(v47)));
  v49 := FP64_CONV32(FMUL64(4585204852618449388, FP32_CONV64(v47)));
  v50 := FP64_CONV32(FMUL64(4581421828931458171, FP32_CONV64(v47)));
  v51 := FP64_CONV32(FMUL64(4558110620799436181, FP32_CONV64(v47)));
  v52 := FSUB32(1065353216, 1038174126);
  v53 := FSUB32(1065353216, 1063675494);
  v54 := FMUL32(FDIV32(1065353216, v45), FMUL32(FLOG32(FDIV32(1124859904, v36)), 1060205080));
  v55 := FMUL32(FDIV32(1065353216, v45), FMUL32(FLOG32(FDIV32(1124859904, v37)), 1060205080));
  v56 := FMUL32(FDIV32(1065353216, v45), FMUL32(FLOG32(FDIV32(1085066445, v39)), 1060205080));
  v57 := FMUL32(FDIV32(1065353216, v45), FMUL32(FLOG32(FDIV32(1097859072, 1125515264)), 1060205080));
  v58 := FEQ32(v43, -1038090240) || FLT32(-1038090240, v43);
  goto $truebb1, $falsebb1;
$3:
  assert {:block_sourceloc} {:sourceloc_num 43} true;
  $ah.i.0, $bh.i.0, $aj.i.0, $bj.i.0 := 0, FP64_CONV32(FDIV64(4607182418800017408, FMUL64(4593851763903000740, FADD64(4607182418800017408, FEXP64(FMUL64(FDIV64(FSUB64(-9223372036854775808, FADD64(FP32_CONV64(v43), 4622190664558229586)), 4622438362537734963), 4609176140021203710)))))), 0, FP64_CONV32(FDIV64(FMUL64(4599075939470750515, FEXP64(FMUL64(FMUL64(-4714983929870649988, FP32_CONV64(v43)), 4609176140021203710))), FADD64(4607182418800017408, FEXP64(FMUL64(FMUL64(-4631501856787818086, FP32_CONV64(FADD32(v43, 1107296256))), 4609176140021203710)))));
  goto $5;
$4:
  assert {:block_sourceloc} {:sourceloc_num 44} true;
  $ah.i.0, $bh.i.0, $aj.i.0, $bj.i.0 := FP64_CONV32(FMUL64(4594031907888095560, FEXP64(FMUL64(FDIV64(FP32_CONV64(FADD32(1117782016, v43)), -4604029899060858061), 4609176140021203710)))), FP64_CONV32(FADD64(FMUL64(4615198826136736891, FEXP64(FMUL64(FMUL64(4590356970592161235, FP32_CONV64(v43)), 4609176140021203710))), FMUL64(4689069371912355840, FEXP64(FMUL64(FMUL64(4599976659396224614, FP32_CONV64(v43)), 4609176140021203710))))), FP64_CONV32(FDIV64(FMUL64(FADD64(FMUL64(-4539898629371985920, FEXP64(FMUL64(FMUL64(4597973458281970218, FP32_CONV64(v43)), 4609176140021203710))), FSUB64(-9223372036854775808, FMUL64(4540251543875054831, FEXP64(FMUL64(FMUL64(-4636883117910570545, FP32_CONV64(v43)), 4609176140021203710))))), FADD64(FP32_CONV64(v43), 4630513879619563684)), FADD64(4607182418800017408, FEXP64(FMUL64(FMUL64(4599274097854354817, FADD64(FP32_CONV64(v43), 4635275732538066207)), 4609176140021203710))))), FP64_CONV32(FDIV64(FMUL64(4593397801060561794, FEXP64(FMUL64(FMUL64(-4646154047959490353, FP32_CONV64(v43)), 4609176140021203710))), FADD64(4607182418800017408, FEXP64(FMUL64(FMUL64(-4629239248335027149, FADD64(FP32_CONV64(v43), 4630846020092082258)), 4609176140021203710)))));
  goto $5;
$5:
  assert {:block_sourceloc} {:sourceloc_num 45} true;
  assert {:sourceloc} {:sourceloc_num 46} true;
  $$d_finavalu[0] := FADD32(FMUL32(FP64_CONV32(FDIV64(FMUL64(4599436227440940155, FADD64(FP32_CONV64(v43), 4631829775135686001)), FSUB64(4607182418800017408, FEXP64(FMUL64(FMUL64(-4631501856787818086, FADD64(FP32_CONV64(v43), 4631829775135686001)), 4609176140021203710))))), FSUB32(1065353216, v6)), FSUB32(-2147483648, FMUL32(FP64_CONV32(FMUL64(4590429028186199163, FP32_CONV64(FEXP32(FMUL32(FDIV32(FSUB32(-2147483648, v43), 1093664768), 1069066811))))), v6)));
  assert {:sourceloc} {:sourceloc_num 47} true;
  $$d_finavalu[1] := FADD32(FMUL32($ah.i.0, FSUB32(1065353216, v7)), FSUB32(-2147483648, FMUL32($bh.i.0, v7)));
  assert {:sourceloc} {:sourceloc_num 48} true;
  $$d_finavalu[2] := FADD32(FMUL32($aj.i.0, FSUB32(1065353216, v8)), FSUB32(-2147483648, FMUL32($bj.i.0, v8)));
  v59 := FP64_CONV32(FDIV64(4607182418800017408, FADD64(FMUL64(FMUL64(4585421025400563171, FP32_CONV64(FP64_CONV32(FDIV64(FSUB64(FEXP64(FMUL64(FDIV64(FP32_CONV64(1124859904), 4634436233420026675), 4609176140021203710)), 4607182418800017408), 4619567317775286272)))), FP32_CONV64(FEXP32(FMUL32(FMUL32(FSUB32(-2147483648, v43), v45), 1069066811)))), FADD64(FMUL64(4593635591120886956, FEXP64(FMUL64(FMUL64(FMUL64(-4631501856787818086, FP32_CONV64(v43)), FP32_CONV64(v45)), 4609176140021203710))), 4607182418800017408))));
  v60 := FDIV32(FDIV32(FMUL32(FMUL32(FMUL32(1038174126, 1072963277), v59), 1085066445), FADD32(1065353216, FPOW32(FDIV32(1093664768, v36), 1082130432))), FADD32(1085066445, 1069547520));
  v61 := FDIV32(FDIV32(FMUL32(FMUL32(FMUL32(v52, 1072963277), v59), 1085066445), FADD32(1065353216, FPOW32(FDIV32(1093664768, v37), 1082130432))), FADD32(1085066445, 1069547520));
  assert {:sourceloc} {:sourceloc_num 49} true;
  $$d_finavalu[11] := FDIV32(FSUB32(FP64_CONV32(FDIV64(4607182418800017408, FADD64(4607182418800017408, FEXP64(FMUL64(FDIV64(FP32_CONV64(FSUB32(-2147483648, FADD32(v43, 1112014848))), 4620130267728707584), 4609176140021203710))))), v17), FP64_CONV32(FDIV64(4607182418800017408, FADD64(FDIV64(FMUL64(4564006949604371747, FP32_CONV64(FADD32(v43, 1088421888))), FSUB64(4607182418800017408, FEXP64(FMUL64(FMUL64(-4629844532124945744, FP32_CONV64(FADD32(v43, 1088421888))), 4609176140021203710)))), FDIV64(FMUL64(4558765480214052869, FP32_CONV64(FADD32(v43, 1092616192))), FSUB64(FEXP64(FMUL64(FMUL64(4594392195858285199, FP32_CONV64(FADD32(v43, 1092616192))), 4609176140021203710)), 4607182418800017408))))));
  call {:sourceloc_num 50}   v62 := $__log10_float(v40);
  call {:sourceloc_num 51}   v63 := $__log10_float(v41);
  v64 := FMUL32(FDIV32(1065353216, v45), FMUL32(FLOG32(FDIV32(FADD32(FMUL32(1016473804, 1124859904), 1085066445), FADD32(FMUL32(1016473804, v38), v39))), 1060205080));
  assert {:sourceloc} {:sourceloc_num 52} true;
  $$d_finavalu[12] := FDIV32(FSUB32(FP64_CONV32(FDIV64(4607182418800017408, FADD64(4607182418800017408, FEXP64(FMUL64(FDIV64(FSUB64(-9223372036854775808, FSUB64(FP32_CONV64(v43), 4609434218613702656)), 4625393849793196851), 4609176140021203710))))), v18), FP64_CONV32(FDIV64(4607182418800017408, FADD64(FDIV64(FMUL64(4544933707985058835, FP32_CONV64(FADD32(v43, 1106247680))), FSUB64(4607182418800017408, FEXP64(FMUL64(FMUL64(-4628871754605433717, FP32_CONV64(FADD32(v43, 1106247680))), 4609176140021203710)))), FDIV64(FMUL64(4548965070964142367, FP32_CONV64(FADD32(v43, 1106247680))), FSUB64(FEXP64(FMUL64(FMUL64(4589614777373570577, FP32_CONV64(FADD32(v43, 1106247680))), 4609176140021203710)), 4607182418800017408))))));
  v65 := FP64_CONV32(FDIV64(4607182418800017408, FADD64(4607182418800017408, FEXP64(FMUL64(FSUB64(4620116756929825473, FDIV64(FP32_CONV64(v43), 4618418899870306796)), 4609176140021203710)))));
  v66 := FP64_CONV32(FDIV64(4607182418800017408, FADD64(4607182418800017408, FEXP64(FMUL64(FDIV64(FSUB64(-9223372036854775808, FADD64(FP32_CONV64(v43), 4613937818241073152)), 4624633867356078080), 4609176140021203710)))));
  v67 := FP64_CONV32(FDIV64(4607182418800017408, FADD64(4607182418800017408, FEXP64(FMUL64(FDIV64(FADD64(FP32_CONV64(v43), 4629911523169402880), 4621819117588971520), 4609176140021203710)))));
  assert {:sourceloc} {:sourceloc_num 53} true;
  $$d_finavalu[7] := FDIV32(FSUB32(v66, v13), FP64_CONV32(FADD64(FDIV64(4621256167635550208, FADD64(4607182418800017408, FEXP64(FMUL64(FDIV64(FADD64(FP32_CONV64(v43), 4613937818241073152), 4624633867356078080), 4609176140021203710)))), 4602678819172646912)));
  assert {:sourceloc} {:sourceloc_num 54} true;
  $$d_finavalu[8] := FDIV32(FSUB32(v67, v14), FP64_CONV32(FADD64(FDIV64(4658815484840378368, FADD64(4607182418800017408, FEXP64(FMUL64(FDIV64(FADD64(FP32_CONV64(v43), 4633641066610819072), 4621819117588971520), 4609176140021203710)))), 4629137466983448576)));
  assert {:sourceloc} {:sourceloc_num 55} true;
  $$d_finavalu[39] := FDIV32(FSUB32(FP64_CONV32(FDIV64(4607182418800017408, FADD64(4607182418800017408, FEXP64(FMUL64(FDIV64(FADD64(FP32_CONV64(v43), 4629911523169402880), 4621819117588971520), 4609176140021203710))))), v44), FP64_CONV32(FADD64(FDIV64(4658375680189267968, FADD64(4607182418800017408, FEXP64(FMUL64(FDIV64(FADD64(FP32_CONV64(v43), 4633641066610819072), 4621819117588971520), 4609176140021203710)))), 4641944578423783424)));
  assert {:sourceloc} {:sourceloc_num 56} true;
  $$d_finavalu[9] := FDIV32(FSUB32(v66, v15), FP64_CONV32(FADD64(FMUL64(4615063718147915776, FP32_CONV64(FEXP32(FMUL32(FDIV32(FDIV32(FMUL32(FSUB32(-2147483648, v43), v43), 1106247680), 1106247680), 1069066811)))), 4609434218613702656)));
  assert {:sourceloc} {:sourceloc_num 57} true;
  $$d_finavalu[10] := FDIV32(FSUB32(v67, v16), FP64_CONV32(FADD64(FDIV64(4626322717216342016, FADD64(4607182418800017408, FEXP64(FMUL64(FDIV64(FADD64(FP32_CONV64(v43), 4629911523169402880), 4621819117588971520), 4609176140021203710)))), 4626322717216342016)));
  v68 := FP64_CONV32(FDIV64(4607272490792564818, FADD64(4607182418800017408, FEXP64(FMUL64(FMUL64(4597760888379558330, FSUB64(FP32_CONV64(FSUB32(v43, v56)), 4633530587682460140)), 4609176140021203710)))));
  v69 := FP64_CONV32(FDIV64(4607182418800017408, FADD64(4607182418800017408, FEXP64(FMUL64(FDIV64(FSUB64(-9223372036854775808, FADD64(FP32_CONV64(v43), 4624352392379367424)), 4618441417868443648), 4609176140021203710)))));
  assert {:sourceloc} {:sourceloc_num 58} true;
  $$d_finavalu[3] := FDIV32(FSUB32(v69, v9), FP64_CONV32(FDIV64(FMUL64(FP32_CONV64(v69), FSUB64(4607182418800017408, FEXP64(FMUL64(FDIV64(FSUB64(-9223372036854775808, FADD64(FP32_CONV64(v43), 4624352392379367424)), 4618441417868443648), 4609176140021203710)))), FMUL64(4585204852618449388, FADD64(FP32_CONV64(v43), 4624352392379367424)))));
  assert {:sourceloc} {:sourceloc_num 59} true;
  $$d_finavalu[4] := FDIV32(FSUB32(FP64_CONV32(FADD64(FDIV64(4607182418800017408, FADD64(4607182418800017408, FEXP64(FMUL64(FDIV64(FADD64(FP32_CONV64(v43), 4630131073651237192), 4615288898129284301), 4609176140021203710)))), FDIV64(4603579539098121011, FP32_CONV64(FADD32(1065353216, FEXP32(FMUL32(FDIV32(FSUB32(1112014848, v43), 1101004800), 1069066811))))))), v10), FP64_CONV32(FDIV64(4607182418800017408, FADD64(FMUL64(4581335359818612657, FEXP64(FMUL64(FSUB64(-9223372036854775808, FPOW64(FMUL64(4585017502873950775, FADD64(FP32_CONV64(v43), 4624352392379367424)), 4611686018427387904)), 4609176140021203710))), 4581421828931458171))));
  assert {:sourceloc} {:sourceloc_num 60} true;
  $$d_finavalu[5] := FP64_CONV32(FADD64(FMUL64(FMUL64(4610334938539176755, FP32_CONV64(v40)), FP32_CONV64(FSUB32(1065353216, v11))), FSUB64(-9223372036854775808, FMUL64(4578013504733464180, FP32_CONV64(v11)))));
  assert {:sourceloc} {:sourceloc_num 61} true;
  $$d_finavalu[6] := FP64_CONV32(FADD64(FMUL64(FMUL64(4610334938539176755, FP32_CONV64(v41)), FP32_CONV64(FSUB32(1065353216, v12))), FSUB64(-9223372036854775808, FMUL64(4578013504733464180, FP32_CONV64(v12)))));
  v70 := FP64_CONV32(FMUL64(FP32_CONV64(FMUL32(FMUL32(FMUL32(FMUL32(FMUL32(1063675494, FP64_CONV32(FDIV64(FMUL64(FP32_CONV64(FMUL32(FMUL32(973967049, 1082130432), FMUL32(FMUL32(v43, 1203532416), v45))), FADD64(FMUL64(FMUL64(4599814529809639277, FP32_CONV64(v40)), FP32_CONV64(FEXP32(FMUL32(FMUL32(FMUL32(1073741824, v43), v45), 1069066811)))), FSUB64(-9223372036854775808, FMUL64(4599814529809639277, FP32_CONV64(1072064102))))), FP32_CONV64(FSUB32(FEXP32(FMUL32(FMUL32(FMUL32(1073741824, v43), v45), 1069066811)), 1065353216))))), v9), v10), FSUB32(1065353216, v11)), FPOW32(1072064102, v46))), 4601778099247172813));
  v71 := FP64_CONV32(FMUL64(FP32_CONV64(FMUL32(FMUL32(FMUL32(FMUL32(FMUL32(v53, FP64_CONV32(FDIV64(FMUL64(FP32_CONV64(FMUL32(FMUL32(973967049, 1082130432), FMUL32(FMUL32(v43, 1203532416), v45))), FADD64(FMUL64(FMUL64(4599814529809639277, FP32_CONV64(v41)), FP32_CONV64(FEXP32(FMUL32(FMUL32(FMUL32(1073741824, v43), v45), 1069066811)))), FSUB64(-9223372036854775808, FMUL64(4599814529809639277, FP32_CONV64(1072064102))))), FP32_CONV64(FSUB32(FEXP32(FMUL32(FMUL32(FMUL32(1073741824, v43), v45), 1069066811)), 1065353216))))), v9), v10), FSUB32(1065353216, v12)), FPOW32(1072064102, v46))), 4601778099247172813));
  assert {:sourceloc} {:sourceloc_num 62} true;
  $$d_finavalu[42] := FP64_CONV32(FMUL64(FP32_CONV64(FDIV32(FMUL32(FSUB32(-2147483648, FADD32(v70, v71)), 790091698), FMUL32(FMUL32(v48, 1073741824), 1203532416))), 4652007308841189376));
  v72 := FDIV32(FMUL32(FMUL32(FMUL32(FMUL32(1038174126, 1091567616), FPOW32(1070134723, v46)), FDIV32(1065353216, FADD32(1065353216, FPOW32(FDIV32(965097405, v40), 1077936128)))), FSUB32(FMUL32(FMUL32(FEXP32(FMUL32(FMUL32(FMUL32(1051931443, v43), v45), 1069066811)), FPOW32(v36, 1077936128)), 1072064102), FMUL32(FMUL32(FEXP32(FMUL32(FMUL32(FMUL32(FSUB32(1051931443, 1065353216), v43), v45), 1069066811)), FPOW32(1124859904, 1077936128)), v40))), FMUL32(FADD32(FMUL32(FPOW32(1124859904, 1077936128), v40), FADD32(FMUL32(FPOW32(v36, 1077936128), 1072064102), FADD32(FMUL32(1067869798, FPOW32(v36, 1077936128)), FADD32(FMUL32(FMUL32(FPOW32(1095017431, 1077936128), 1072064102), FADD32(1065353216, FDIV32(v40, 996886069))), FADD32(FMUL32(FMUL32(996886069, FPOW32(1124859904, 1077936128)), FADD32(1065353216, FPOW32(FDIV32(v36, 1095017431), 1077936128))), FMUL32(FPOW32(1118765056, 1077936128), v40)))))), FADD32(FMUL32(1049247089, FEXP32(FMUL32(FMUL32(FMUL32(FSUB32(1051931443, 1065353216), v43), v45), 1069066811))), 1065353216)));
  v73 := FDIV32(FMUL32(FMUL32(FMUL32(FMUL32(v52, 1091567616), FPOW32(1070134723, v46)), FDIV32(1065353216, FADD32(1065353216, FPOW32(FDIV32(965097405, v41), 1077936128)))), FSUB32(FMUL32(FMUL32(FEXP32(FMUL32(FMUL32(FMUL32(1051931443, v43), v45), 1069066811)), FPOW32(v37, 1077936128)), 1072064102), FMUL32(FMUL32(FEXP32(FMUL32(FMUL32(FMUL32(FSUB32(1051931443, 1065353216), v43), v45), 1069066811)), FPOW32(1124859904, 1077936128)), v41))), FMUL32(FADD32(FMUL32(FPOW32(1124859904, 1077936128), v41), FADD32(FMUL32(FPOW32(v37, 1077936128), 1072064102), FADD32(FMUL32(1067869798, FPOW32(v37, 1077936128)), FADD32(FMUL32(FMUL32(FPOW32(1095017431, 1077936128), 1072064102), FADD32(1065353216, FDIV32(v41, 996886069))), FADD32(FMUL32(FMUL32(996886069, FPOW32(1124859904, 1077936128)), FADD32(1065353216, FPOW32(FDIV32(v37, 1095017431), 1077936128))), FMUL32(FPOW32(1118765056, 1077936128), v41)))))), FADD32(FMUL32(1049247089, FEXP32(FMUL32(FMUL32(FMUL32(FSUB32(1051931443, 1065353216), v43), v45), 1069066811))), 1065353216)));
  assert {:sourceloc} {:sourceloc_num 63} true;
  $$d_finavalu[44] := FP64_CONV32(FMUL64(FP32_CONV64(FDIV32(FMUL32(FMUL32(1073741824, FADD32(v72, v73)), 790091698), FMUL32(FMUL32(v48, 1073741824), 1203532416))), 4652007308841189376));
  v74 := FDIV32(FMUL32(FMUL32(FMUL32(1038174126, FPOW32(1075209830, v46)), 1032443029), FPOW32(v40, 1070386381)), FADD32(FPOW32(973279855, 1070386381), FPOW32(v40, 1070386381)));
  v75 := FDIV32(FMUL32(FMUL32(FMUL32(v52, FPOW32(1075209830, v46)), 1032443029), FPOW32(v41, 1070386381)), FADD32(FPOW32(973279855, 1070386381), FPOW32(v41, 1070386381)));
  assert {:sourceloc} {:sourceloc_num 64} true;
  $$d_finavalu[43] := FP64_CONV32(FMUL64(FP32_CONV64(FDIV32(FMUL32(FSUB32(-2147483648, FADD32(v74, v75)), 790091698), FMUL32(FMUL32(v48, 1073741824), 1203532416))), 4652007308841189376));
  v76 := FMUL32(FMUL32(1038174126, 964935914), FSUB32(v43, FMUL32(FDIV32(FDIV32(1065353216, v45), 1073741824), FMUL32(FLOG32(FDIV32(1072064102, v40)), 1060205080))));
  v77 := FMUL32(FMUL32(v52, 964935914), FSUB32(v43, FMUL32(FDIV32(FDIV32(1065353216, v45), 1073741824), FMUL32(FLOG32(FDIV32(1072064102, v41)), 1060205080))));
  assert {:sourceloc} {:sourceloc_num 65} true;
  $$d_finavalu[45] := FP64_CONV32(FMUL64(FP32_CONV64(FDIV32(FMUL32(FSUB32(-2147483648, FADD32(v76, v77)), 790091698), FMUL32(FMUL32(v48, 1073741824), 1203532416))), 4652007308841189376));
  v78 := FSUB32(1097859072, FDIV32(FSUB32(1097859072, 1065353216), FADD32(1065353216, FPOW32(FDIV32(1055286886, v35), 1075838976))));
  v79 := FDIV32(1092616192, v78);
  v80 := FMUL32(1056964608, v78);
  v81 := FSUB32(FSUB32(FSUB32(1065353216, v19), v20), v21);
  assert {:sourceloc} {:sourceloc_num 66} true;
  $$d_finavalu[13] := FSUB32(FADD32(FMUL32(1000593162, v81), FSUB32(-2147483648, FMUL32(FMUL32(v80, v40), v19))), FADD32(FMUL32(FMUL32(v79, FPOW32(v40, 1073741824)), v19), FSUB32(-2147483648, FMUL32(1031127695, v20))));
  assert {:sourceloc} {:sourceloc_num 67} true;
  $$d_finavalu[14] := FSUB32(FADD32(FMUL32(FMUL32(v79, FPOW32(v40, 1073741824)), v19), FSUB32(-2147483648, FMUL32(1031127695, v20))), FADD32(FMUL32(FMUL32(v80, v40), v20), FSUB32(-2147483648, FMUL32(1000593162, v21))));
  assert {:sourceloc} {:sourceloc_num 68} true;
  $$d_finavalu[15] := FSUB32(FADD32(FMUL32(FMUL32(v80, v40), v20), FSUB32(-2147483648, FMUL32(1000593162, v21))), FADD32(FMUL32(1031127695, v21), FSUB32(-2147483648, FMUL32(FMUL32(v79, FPOW32(v40, 1073741824)), v81))));
  v82 := FMUL32(FMUL32(1103626240, v20), FSUB32(v35, v40));
  v83 := FDIV32(FMUL32(FMUL32(FPOW32(1076258406, v46), 966128197), FSUB32(FPOW32(FDIV32(v42, 964753808), 1071955050), FPOW32(FDIV32(v35, 1071225242), 1071955050))), FADD32(FADD32(1065353216, FPOW32(FDIV32(v42, 964753808), 1071955050)), FPOW32(FDIV32(v35, 1071225242), 1071955050)));
  v84 := FP64_CONV32(FMUL64(4527927829867574700, FP32_CONV64(FSUB32(v35, v40))));
  assert {:sourceloc} {:sourceloc_num 69} true;
  $$d_finavalu[16] := FADD32(FMUL32(FMUL32(953267991, v36), FSUB32(1089598390, v22)), FSUB32(-2147483648, FMUL32(981668463, v22)));
  assert {:sourceloc} {:sourceloc_num 70} true;
  $$d_finavalu[17] := FADD32(FMUL32(FMUL32(953267991, v37), FSUB32(1070805811, v23)), FSUB32(-2147483648, FMUL32(981668463, v23)));
  assert {:sourceloc} {:sourceloc_num 71} true;
  $$d_finavalu[18] := FADD32(FMUL32(FMUL32(1107479757, v42), FSUB32(1032805417, v24)), FSUB32(-2147483648, FMUL32(1017155630, v24)));
  assert {:sourceloc} {:sourceloc_num 72} true;
  $$d_finavalu[19] := FADD32(FMUL32(FMUL32(1075293716, v42), FSUB32(FSUB32(1041194025, v25), v26)), FSUB32(-2147483648, FMUL32(939931581, v25)));
  assert {:sourceloc} {:sourceloc_num 73} true;
  $$d_finavalu[20] := FADD32(FMUL32(FMUL32(994352038, 1065353216), FSUB32(FSUB32(1041194025, v25), v26)), FSUB32(-2147483648, FMUL32(995769377, v26)));
  assert {:sourceloc} {:sourceloc_num 74} true;
  $$d_finavalu[21] := 0;
  assert {:sourceloc} {:sourceloc_num 75} true;
  $$d_finavalu[22] := FADD32(FMUL32(FMUL32(1096600781, v42), FSUB32(FSUB32(1041194025, v27), v28)), FSUB32(-2147483648, FMUL32(972106792, v27)));
  assert {:sourceloc} {:sourceloc_num 76} true;
  $$d_finavalu[23] := FADD32(FMUL32(FMUL32(1015061833, 1065353216), FSUB32(FSUB32(1041194025, v27), v28)), FSUB32(-2147483648, FMUL32(946803529, v28)));
  assert {:sourceloc} {:sourceloc_num 77} true;
  $$d_finavalu[24] := FADD32(FMUL32(FMUL32(1120403456, v42), FSUB32(1015813453, v29)), FSUB32(-2147483648, FMUL32(1031127695, v29)));
  assert {:sourceloc} {:sourceloc_num 78} true;
  v85 := $$d_finavalu[18];
  assert {:sourceloc} {:sourceloc_num 79} true;
  v86 := $$d_finavalu[19];
  assert {:sourceloc} {:sourceloc_num 80} true;
  v87 := $$d_finavalu[20];
  assert {:sourceloc} {:sourceloc_num 81} true;
  v88 := $$d_finavalu[21];
  assert {:sourceloc} {:sourceloc_num 82} true;
  v89 := $$d_finavalu[22];
  assert {:sourceloc} {:sourceloc_num 83} true;
  v90 := $$d_finavalu[23];
  assert {:sourceloc} {:sourceloc_num 84} true;
  v91 := $$d_finavalu[24];
  assert {:sourceloc} {:sourceloc_num 85} true;
  $$d_finavalu[25] := FADD32(FMUL32(FMUL32(1120403456, v40), FSUB32(FP64_CONV32(FMUL64(FDIV64(FMUL64(4571976519504966577, FP32_CONV64(v48)), FP32_CONV64(v51)), 4591870180066957722)), v30)), FSUB32(-2147483648, FMUL32(1067869798, v30)));
  assert {:sourceloc} {:sourceloc_num 86} true;
  $$d_finavalu[26] := FADD32(FMUL32(FMUL32(1120403456, v41), FSUB32(FP64_CONV32(FDIV64(FMUL64(4585547846766069924, FP32_CONV64(v48)), FP32_CONV64(v50))), v31)), FSUB32(-2147483648, FMUL32(1067869798, v31)));
  assert {:sourceloc} {:sourceloc_num 87} true;
  $$d_finavalu[27] := FADD32(FMUL32(FMUL32(1120403456, v40), FSUB32(FP64_CONV32(FMUL64(FDIV64(FMUL64(4565252104829347142, FP32_CONV64(v48)), FP32_CONV64(v51)), 4591870180066957722)), v32)), FSUB32(-2147483648, FMUL32(1022739087, v32)));
  assert {:sourceloc} {:sourceloc_num 88} true;
  $$d_finavalu[28] := FADD32(FMUL32(FMUL32(1120403456, v41), FSUB32(FP64_CONV32(FDIV64(FMUL64(4578849372824304144, FP32_CONV64(v48)), FP32_CONV64(v50))), v33)), FSUB32(-2147483648, FMUL32(1022739087, v33)));
  assert {:sourceloc} {:sourceloc_num 89} true;
  v92 := $$d_finavalu[25];
  assert {:sourceloc} {:sourceloc_num 90} true;
  v93 := $$d_finavalu[27];
  assert {:sourceloc} {:sourceloc_num 91} true;
  v94 := $$d_finavalu[26];
  assert {:sourceloc} {:sourceloc_num 92} true;
  v95 := $$d_finavalu[28];
  assert {:sourceloc} {:sourceloc_num 93} true;
  $$d_finavalu[29] := FADD32(FMUL32(FMUL32(1120403456, v35), FSUB32(1076677837, v34)), FSUB32(-2147483648, FMUL32(1115815936, v34)));
  v96 := FDIV32(1065353216, v49);
  assert {:sourceloc} {:sourceloc_num 94} true;
  v97 := $$d_finavalu[29];
  assert {:sourceloc} {:sourceloc_num 95} true;
  $$d_finavalu[30] := FSUB32(FADD32(FMUL32(FMUL32(v83, v48), v96), FSUB32(-2147483648, FADD32(FMUL32(FMUL32(v84, v48), v96), v82))), v97);
  v98 := FADD32(FADD32(FADD32(FADD32(FMUL32(FMUL32(FMUL32(FMUL32(FMUL32(1038174126, 1098907648), FPOW32(v6, 1077936128)), v7), v8), FSUB32(v43, v54)), FMUL32(FMUL32(1038174126, 966506154), FSUB32(v43, v54))), FMUL32(1077936128, v72)), FMUL32(1077936128, v60)), FP64_CONV32(FMUL64(FP32_CONV64(FMUL32(FMUL32(FMUL32(FMUL32(FMUL32(1063675494, FP64_CONV32(FDIV64(FMUL64(FP32_CONV64(FMUL32(847305049, FMUL32(FMUL32(v43, 1203532416), v45))), FADD64(FMUL64(FMUL64(4604930618986332160, FP32_CONV64(v36)), FP32_CONV64(FEXP32(FMUL32(FMUL32(v43, v45), 1069066811)))), FSUB64(-9223372036854775808, FMUL64(4604930618986332160, FP32_CONV64(1124859904))))), FP32_CONV64(FSUB32(FEXP32(FMUL32(FMUL32(v43, v45), 1069066811)), 1065353216))))), v9), v10), FSUB32(1065353216, v11)), FPOW32(1072064102, v46))), 4601778099247172813)));
  v99 := FADD32(FADD32(FADD32(FADD32(FMUL32(FMUL32(FMUL32(FMUL32(FMUL32(v52, 1098907648), FPOW32(v6, 1077936128)), v7), v8), FSUB32(v43, v55)), FMUL32(FMUL32(v52, 966506154), FSUB32(v43, v55))), FMUL32(1077936128, v73)), FMUL32(1077936128, v61)), FP64_CONV32(FMUL64(FP32_CONV64(FMUL32(FMUL32(FMUL32(FMUL32(FMUL32(v53, FP64_CONV32(FDIV64(FMUL64(FP32_CONV64(FMUL32(847305049, FMUL32(FMUL32(v43, 1203532416), v45))), FADD64(FMUL64(FMUL64(4604930618986332160, FP32_CONV64(v37)), FP32_CONV64(FEXP32(FMUL32(FMUL32(v43, v45), 1069066811)))), FSUB64(-9223372036854775808, FMUL64(4604930618986332160, FP32_CONV64(1124859904))))), FP32_CONV64(FSUB32(FEXP32(FMUL32(FMUL32(v43, v45), 1069066811)), 1065353216))))), v9), v10), FSUB32(1065353216, v12)), FPOW32(1072064102, v46))), 4601778099247172813)));
  assert {:sourceloc} {:sourceloc_num 96} true;
  v100 := $$d_finavalu[16];
  assert {:sourceloc} {:sourceloc_num 97} true;
  $$d_finavalu[31] := FSUB32(FADD32(FDIV32(FMUL32(FSUB32(-2147483648, v98), 790091698), FMUL32(v51, 1203532416)), FMUL32(FDIV32(681898599, v51), FSUB32(v37, v36))), v100);
  v101 := FDIV32(1065353216, v50);
  assert {:sourceloc} {:sourceloc_num 98} true;
  v102 := $$d_finavalu[17];
  assert {:sourceloc} {:sourceloc_num 99} true;
  $$d_finavalu[32] := FSUB32(FADD32(FADD32(FDIV32(FMUL32(FMUL32(FSUB32(-2147483648, v99), 790091698), v101), 1203532416), FMUL32(FMUL32(681898599, v101), FSUB32(v36, v37))), FMUL32(FMUL32(736533963, v101), FSUB32(v38, v37))), v102);
  assert {:sourceloc} {:sourceloc_num 100} true;
  $$d_finavalu[33] := FMUL32(FDIV32(736533963, v48), FSUB32(v37, v38));
  assert {:sourceloc} {:sourceloc_num 101} true;
  $$d_finavalu[34] := 0;
  v103 := FSUB32(FADD32(FADD32(v70, v76), v74), FMUL32(1073741824, v72));
  v104 := FSUB32(FADD32(FADD32(v71, v77), v75), FMUL32(1073741824, v73));
  assert {:sourceloc} {:sourceloc_num 102} true;
  $$d_finavalu[35] := FADD32(FADD32(FSUB32(FADD32(FDIV32(FMUL32(FSUB32(-2147483648, v103), 790091698), FMUL32(FMUL32(v51, 1073741824), 1203532416)), FMUL32(FDIV32(728234205, v51), FSUB32(v41, v40))), FADD32(v92, v93)), FDIV32(FMUL32(v82, v49), v51)), FDIV32(FMUL32(v84, v48), v51));
  assert {:sourceloc} {:sourceloc_num 103} true;
  $$d_finavalu[36] := FSUB32(FADD32(FADD32(FDIV32(FMUL32(FSUB32(-2147483648, v104), 790091698), FMUL32(FMUL32(v50, 1073741824), 1203532416)), FMUL32(FDIV32(728234205, v50), FSUB32(v40, v41))), FMUL32(FDIV32(746785054, v50), FSUB32(v42, v41))), FADD32(v94, v95));
  assert {:sourceloc} {:sourceloc_num 104} true;
  $$d_finavalu[37] := FADD32(FSUB32(FSUB32(-2147483648, v83), FADD32(FADD32(FADD32(FADD32(FADD32(FADD32(v85, v86), v87), v88), v89), v90), v91)), FMUL32(FDIV32(746785054, v48), FSUB32(v41, v42)));
  goto $casebb, $casebb0, $casebb1, $defaultbb;
$6:
  assert {:block_sourceloc} {:sourceloc_num 105} true;
  $I_app.i.1 := 0;
  goto $kernel_ecc.exit;
$7:
  assert {:block_sourceloc} {:sourceloc_num 106} true;
  call {:sourceloc_num 107}   v105 := $fmodf(v4, v5);
  v106 := FEQ32(v105, 1084227584) || FLT32(v105, 1084227584);
  goto $truebb2, $falsebb2;
$8:
  assert {:block_sourceloc} {:sourceloc_num 108} true;
  $I_app.i.0 := 1092091904;
  goto $10;
$9:
  assert {:block_sourceloc} {:sourceloc_num 109} true;
  $I_app.i.0 := 0;
  goto $10;
$10:
  assert {:block_sourceloc} {:sourceloc_num 110} true;
  $I_app.i.1 := $I_app.i.0;
  goto $kernel_ecc.exit;
$11:
  assert {:block_sourceloc} {:sourceloc_num 111} true;
  v107 := BV32_AND(BV1_ZEXT32((if FLT64(4602678819172646912, FP32_CONV64(v4)) then 1 else 0)), BV1_ZEXT32((if FLT64(FP32_CONV64(v4), 4641258483168051200) then 1 else 0))) != 0;
  goto $truebb3, $falsebb3;
$12:
  assert {:block_sourceloc} {:sourceloc_num 112} true;
  $V_clamp.i.0 := 0;
  goto $14;
$13:
  assert {:block_sourceloc} {:sourceloc_num 113} true;
  $V_clamp.i.0 := -1034158080;
  goto $14;
$14:
  assert {:block_sourceloc} {:sourceloc_num 114} true;
  $I_app.i.1 := FDIV32(FSUB32($V_clamp.i.0, v43), 1025758986);
  goto $kernel_ecc.exit;
$kernel_ecc.exit:
  assert {:block_sourceloc} {:sourceloc_num 115} true;
  assert {:sourceloc} {:sourceloc_num 116} true;
  $$d_finavalu[38] := FSUB32(-2147483648, FSUB32(FADD32(FADD32(FADD32(FADD32(v98, v99), FADD32(FADD32(FMUL32(FDIV32(FMUL32(1038174126, 1038123794), FADD32(1065353216, FDIV32(1036831949, v40))), FSUB32(v43, v57)), FMUL32(FDIV32(FMUL32(v52, 1038123794), FADD32(1065353216, FDIV32(1036831949, v41))), FSUB32(v43, v57))), FMUL32(1007908028, FSUB32(v43, v57)))), FADD32(v103, v104)), FADD32(FADD32(FSUB32(FADD32(FADD32(FADD32(FADD32(FP64_CONV32(FMUL64(FMUL64(FP32_CONV64(FMUL32(1031127695, v13)), FADD64(FMUL64(4602678819172646912, FP32_CONV64(v44)), FP32_CONV64(v14))), FP32_CONV64(FSUB32(v43, v56)))), FMUL32(FMUL32(FMUL32(1017370378, v15), v16), FSUB32(v43, v56))), FMUL32(FMUL32(FMUL32(FP64_CONV32(FMUL64(4584304132692975288, FSQRT64(FDIV64(FP32_CONV64(1085066445), 4617765877924338074)))), v17), FP64_CONV32(FDIV64(4607182418800017408, FADD64(4607182418800017408, FEXP64(FMUL64(FDIV64(FP32_CONV64(FADD32(v43, 1107558400)), 4626998257160447590), 4609176140021203710)))))), FSUB32(v43, v56))), FADD32(FMUL32(FMUL32(FMUL32(1038174126, FP64_CONV32(FMUL64(4589708452245819884, FADD64(4588375386756118217, FDIV64(4596013491724138578, FADD64(4607182418800017408, FEXP64(FMUL64(FDIV64(FADD64(-4603579539098121011, FP32_CONV64(FP64_CONV32(FADD64(FP32_CONV64(FSUB32(-2147483648, v62)), 4613937818241073152)))), 4603579539098121011), 4609176140021203710)))))))), FPOW32(v17, 1073741824)), FSUB32(v43, v64)), FMUL32(FMUL32(FMUL32(v52, FP64_CONV32(FMUL64(4589708452245819884, FADD64(4588375386756118217, FDIV64(4596013491724138578, FADD64(4607182418800017408, FEXP64(FMUL64(FDIV64(FADD64(-4603579539098121011, FP32_CONV64(FP64_CONV32(FADD64(FP32_CONV64(FSUB32(-2147483648, v63)), 4613937818241073152)))), 4603579539098121011), 4609176140021203710)))))))), FPOW32(v18, 1073741824)), FSUB32(v43, v64)))), FP64_CONV32(FMUL64(FMUL64(FMUL64(4606281698874543309, FSQRT64(FDIV64(FP32_CONV64(1085066445), 4617765877924338074))), FP32_CONV64(FDIV32(v68, FADD32(v68, FP64_CONV32(FDIV64(FADD64(FMUL64(4602521013041703850, FEXP64(FMUL64(FMUL64(4590452086616291300, FSUB64(FADD64(FP32_CONV64(v43), 4617851446317258113), FP32_CONV64(v56))), 4609176140021203710))), FEXP64(FMUL64(FMUL64(4589059933899478532, FSUB64(FP32_CONV64(FSUB32(v43, v56)), 4648438821863009812)), 4609176140021203710))), FADD64(4607182418800017408, FEXP64(FMUL64(FMUL64(-4620564414732786100, FADD64(FP32_CONV64(FSUB32(v43, v56)), 4617037420684610896)), 4609176140021203710))))))))), FP32_CONV64(FSUB32(v43, v56))))), FMUL32(1073741824, FADD32(v60, v61))), FP64_CONV32(FMUL64(FP32_CONV64(FMUL32(FMUL32(FMUL32(FMUL32(FP64_CONV32(FDIV64(FMUL64(FP32_CONV64(FMUL32(881915012, FMUL32(FMUL32(v43, 1203532416), v45))), FADD64(FMUL64(FMUL64(4604930618986332160, FP32_CONV64(v39)), FP32_CONV64(FEXP32(FMUL32(FMUL32(v43, v45), 1069066811)))), FSUB64(-9223372036854775808, FMUL64(4604930618986332160, FP32_CONV64(1085066445))))), FP32_CONV64(FSUB32(FEXP32(FMUL32(FMUL32(v43, v45), 1069066811)), 1065353216)))), v9), v10), FADD32(FMUL32(1063675494, FSUB32(1065353216, v11)), FMUL32(v53, FSUB32(1065353216, v12)))), FPOW32(1072064102, v46))), 4601778099247172813))), FADD32(FMUL32(FMUL32(FMUL32(1038174126, 981668463), v65), FSUB32(v43, v56)), FMUL32(FMUL32(FMUL32(v52, 981668463), v65), FSUB32(v43, v56))))), $I_app.i.1));
  assert {:sourceloc} {:sourceloc_num 117} true;
  $$d_finavalu[40] := 0;
  assert {:sourceloc} {:sourceloc_num 118} true;
  $$d_finavalu[41] := 0;
  goto $15;
$15:
  assert {:block_sourceloc} {:sourceloc_num 119} true;
  goto $27;
$16:
  assert {:block_sourceloc} {:sourceloc_num 120} true;
  v108 := v0 == 1;
  goto $truebb4, $falsebb4;
$17:
  assert {:block_sourceloc} {:sourceloc_num 121} true;
  v109 := v1 == 0;
  goto $truebb5, $falsebb5;
$18:
  assert {:block_sourceloc} {:sourceloc_num 122} true;
  assert {:sourceloc} {:sourceloc_num 123} true;
  v110 := $$d_initvalu[35];
  v111 := FP64_CONV32(FMUL64(FP32_CONV64(v110), 4652007308841189376));
  assert {:sourceloc} {:sourceloc_num 124} true;
  v112 := $$d_params[1];
  assert {:sourceloc} {:sourceloc_num 125} true;
  v113 := $$d_params[2];
  assert {:sourceloc} {:sourceloc_num 126} true;
  v114 := $$d_params[3];
  assert {:sourceloc} {:sourceloc_num 127} true;
  v115 := $$d_params[4];
  assert {:sourceloc} {:sourceloc_num 128} true;
  v116 := $$d_params[16];
  assert {:sourceloc} {:sourceloc_num 129} true;
  v117 := $$d_params[17];
  assert {:sourceloc} {:sourceloc_num 130} true;
  v118 := $$d_initvalu[46];
  assert {:sourceloc} {:sourceloc_num 131} true;
  v119 := $$d_initvalu[47];
  assert {:sourceloc} {:sourceloc_num 132} true;
  v120 := $$d_initvalu[48];
  assert {:sourceloc} {:sourceloc_num 133} true;
  v121 := $$d_initvalu[49];
  assert {:sourceloc} {:sourceloc_num 134} true;
  v122 := $$d_initvalu[50];
  assert {:sourceloc} {:sourceloc_num 135} true;
  v123 := $$d_initvalu[51];
  assert {:sourceloc} {:sourceloc_num 136} true;
  v124 := $$d_initvalu[52];
  assert {:sourceloc} {:sourceloc_num 137} true;
  v125 := $$d_initvalu[53];
  assert {:sourceloc} {:sourceloc_num 138} true;
  v126 := $$d_initvalu[54];
  assert {:sourceloc} {:sourceloc_num 139} true;
  v127 := $$d_initvalu[55];
  assert {:sourceloc} {:sourceloc_num 140} true;
  v128 := $$d_initvalu[56];
  assert {:sourceloc} {:sourceloc_num 141} true;
  v129 := $$d_initvalu[57];
  assert {:sourceloc} {:sourceloc_num 142} true;
  v130 := $$d_initvalu[58];
  assert {:sourceloc} {:sourceloc_num 143} true;
  v131 := $$d_initvalu[59];
  assert {:sourceloc} {:sourceloc_num 144} true;
  v132 := $$d_initvalu[60];
  v133 := FEQ32(v117, 1065353216) || FLT32(v117, 1065353216);
  goto $truebb6, $falsebb6;
$19:
  assert {:block_sourceloc} {:sourceloc_num 145} true;
  $Kd02.i.0, $Kd24.i.0 := FP64_CONV32(FMUL64(FMUL64(4567911030049346683, FSUB64(FADD64(4607182418800017408, FDIV64(FP32_CONV64(v116), 4606641986844732948)), FDIV64(FP32_CONV64(v117), 4578071150808694522))), FADD64(FADD64(4607182418800017408, FDIV64(FP32_CONV64(v116), 4620749512677471027)), FDIV64(FP32_CONV64(v117), 4581998289683761594)))), FP64_CONV32(FMUL64(FMUL64(4593779706308962812, FADD64(FADD64(4607182418800017408, FDIV64(FP32_CONV64(v116), 4603939827068310651)), FDIV64(FP32_CONV64(v117), 4564099183324740295))), FSUB64(FADD64(4607182418800017408, FDIV64(FP32_CONV64(v116), 4623507967449235456)), FDIV64(FP32_CONV64(v117), 4594680426234436911))));
  goto $kernel_cam.exit;
$20:
  assert {:block_sourceloc} {:sourceloc_num 146} true;
  $Kd02.i.0, $Kd24.i.0 := FP64_CONV32(FMUL64(FMUL64(4567911030049346683, FADD64(FSUB64(FADD64(4607182418800017408, FDIV64(FP32_CONV64(v116), 4606641986844732948)), 4635564478951675221), FDIV64(FP32_CONV64(FSUB32(v117, 1065353216)), 4588807732320345784))), FADD64(FADD64(FADD64(4607182418800017408, FDIV64(FP32_CONV64(v116), 4620749512677471027)), 4631593975871105211), FDIV64(FP32_CONV64(FSUB32(v117, 1065353216)), 4589564337057744028)))), FP64_CONV32(FMUL64(FMUL64(4593779706308962812, FADD64(FADD64(FADD64(4607182418800017408, FDIV64(FP32_CONV64(v116), 4603939827068310651)), 4649494139406272805), FDIV64(FP32_CONV64(FSUB32(v117, 1065353216)), 4572414629676717179))), FADD64(FSUB64(FADD64(4607182418800017408, FDIV64(FP32_CONV64(v116), 4623507967449235456)), 4619044841347927930), FDIV64(FP32_CONV64(FSUB32(v117, 1065353216)), 4594572339843380019))));
  goto $kernel_cam.exit;
$kernel_cam.exit:
  assert {:block_sourceloc} {:sourceloc_num 147} true;
  v134 := FDIV32(1092616192, $Kd02.i.0);
  v135 := FDIV32(1140457472, $Kd24.i.0);
  v136 := FP64_CONV32(FDIV64(FP32_CONV64(985104436), 4596373779694328218));
  v137 := FDIV32(985104436, 1120403456);
  v138 := FP64_CONV32(FDIV64(FP32_CONV64(1074580685), 4584988679836335604));
  v139 := FMUL32(1159512064, 984245443);
  v140 := FADD32(FMUL32(FMUL32(v134, FPOW32(v111, 1073741824)), v118), FSUB32(-2147483648, FMUL32(1092616192, v119)));
  v141 := FADD32(FMUL32(FMUL32(v135, FPOW32(v111, 1073741824)), v119), FSUB32(-2147483648, FMUL32(1140457472, v120)));
  v142 := FSUB32(FSUB32(FSUB32(v112, v121), v122), v123);
  v143 := FADD32(FMUL32(FMUL32(v134, FPOW32(v111, 1073741824)), v121), FSUB32(-2147483648, FMUL32(FDIV32(1092616192, 1120403456), v122)));
  v144 := FADD32(FMUL32(FMUL32(v135, FPOW32(v111, 1073741824)), v122), FSUB32(-2147483648, FMUL32(1140457472, v123)));
  v145 := FADD32(FMUL32(FMUL32(v136, v118), v142), FSUB32(-2147483648, FMUL32(985104436, v121)));
  v146 := FADD32(FMUL32(FMUL32(v136, v119), v142), FSUB32(-2147483648, FMUL32(v137, v122)));
  v147 := FADD32(FMUL32(FMUL32(v136, v120), v142), FSUB32(-2147483648, FMUL32(v137, v123)));
  v148 := FADD32(FMUL32(FMUL32(FP64_CONV32(FDIV64(FP32_CONV64(1065353216), 4602678819172646912)), FPOW32(v111, 1073741824)), FSUB32(FSUB32(FSUB32(FSUB32(v114, v129), v130), v131), v132)), FSUB32(-2147483648, FMUL32(1065353216, v129)));
  v149 := FADD32(FMUL32(FMUL32(v134, FPOW32(v111, 1073741824)), v130), FSUB32(-2147483648, FMUL32(FDIV32(1092616192, 1126498304), v131)));
  v150 := FADD32(FMUL32(FMUL32(v135, FPOW32(v111, 1073741824)), v131), FSUB32(-2147483648, FMUL32(FDIV32(1092616192, 1159512064), v132)));
  v151 := FADD32(FMUL32(FMUL32(1110966272, v118), v129), FSUB32(-2147483648, FMUL32(FMUL32(1126498304, v139), v130)));
  v152 := FADD32(FMUL32(FMUL32(1110966272, v119), v129), FSUB32(-2147483648, FMUL32(v139, v131)));
  v153 := FADD32(FMUL32(FMUL32(1110966272, v120), v129), FSUB32(-2147483648, FMUL32(984245443, v132)));
  v154 := FSUB32(FSUB32(FSUB32(FSUB32(FSUB32(1065353216, v124), v125), v126), v127), v128);
  v155 := FADD32(FMUL32(FMUL32(v138, v119), v154), FSUB32(-2147483648, FMUL32(FMUL32(v138, 1084227584), v124)));
  v156 := FADD32(FMUL32(FMUL32(v135, FPOW32(v111, 1073741824)), v124), FSUB32(-2147483648, FMUL32(FP64_CONV32(FDIV64(FMUL64(FP32_CONV64(1140457472), 4584988679836335604), 4617315517961601024)), v125)));
  v157 := FADD32(FMUL32(FMUL32(v138, v120), v154), FSUB32(-2147483648, FMUL32(1074580685, v125)));
  v158 := FADD32(FADD32(FADD32(v125, v126), v127), v128);
  v159 := FADD32(FMUL32(FP64_CONV32(FADD64(FMUL64(4579800533065604792, FP32_CONV64(FPOW32(v158, 1077936128))), FADD64(FMUL64(4588087156379966505, FP32_CONV64(v158)), FMUL64(4575181641287773612, FP32_CONV64(FPOW32(v158, 1073741824)))))), v125), FSUB32(-2147483648, FDIV32(FMUL32(FMUL32(1071393014, v115), v126), FADD32(FMUL32(v113, v126), 1094189056))));
  v160 := FADD32(FMUL32(FP64_CONV32(FDIV64(FMUL64(FP32_CONV64(1140457472), 4540068552173843632), 4617315517961601024)), v126), FSUB32(-2147483648, FMUL32(FMUL32(v135, FPOW32(v111, 1073741824)), v127)));
  v161 := FADD32(FMUL32(FDIV32(1074580685, 1148846080), v126), FSUB32(-2147483648, FMUL32(FMUL32(v138, v120), v128)));
  v162 := FADD32(FMUL32(FMUL32(v138, 1084227584), v127), FSUB32(-2147483648, FMUL32(FMUL32(v138, v119), v128)));
  v163 := FDIV32(FMUL32(FMUL32(1071393014, v115), v127), FADD32(FMUL32(v113, v127), 1094189056));
  assert {:sourceloc} {:sourceloc_num 148} true;
  $$d_finavalu[46] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FSUB32(FSUB32(FSUB32(-2147483648, v140), v145), v151))));
  assert {:sourceloc} {:sourceloc_num 149} true;
  $$d_finavalu[47] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FADD32(FSUB32(FSUB32(FSUB32(v140, v141), v146), v152), FMUL32(v113, FADD32(FSUB32(-2147483648, v155), v162))))));
  assert {:sourceloc} {:sourceloc_num 150} true;
  $$d_finavalu[48] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FADD32(FSUB32(FSUB32(v141, v147), v153), FMUL32(v113, FADD32(FSUB32(-2147483648, v157), v161))))));
  assert {:sourceloc} {:sourceloc_num 151} true;
  $$d_finavalu[49] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FSUB32(v145, v143))));
  assert {:sourceloc} {:sourceloc_num 152} true;
  $$d_finavalu[50] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FSUB32(FADD32(v143, v146), v144))));
  assert {:sourceloc} {:sourceloc_num 153} true;
  $$d_finavalu[51] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FADD32(v144, v147))));
  assert {:sourceloc} {:sourceloc_num 154} true;
  $$d_finavalu[52] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FADD32(FSUB32(v155, v156), v163))));
  assert {:sourceloc} {:sourceloc_num 155} true;
  $$d_finavalu[53] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FSUB32(FADD32(v157, v156), v159))));
  assert {:sourceloc} {:sourceloc_num 156} true;
  $$d_finavalu[54] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FSUB32(FSUB32(v159, v161), v160))));
  assert {:sourceloc} {:sourceloc_num 157} true;
  $$d_finavalu[55] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FSUB32(FSUB32(v160, v162), v163))));
  assert {:sourceloc} {:sourceloc_num 158} true;
  $$d_finavalu[56] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FSUB32(FADD32(v161, v162), FDIV32(FMUL32(FMUL32(1071393014, v115), v128), FADD32(FMUL32(v113, v128), 1094189056))))));
  assert {:sourceloc} {:sourceloc_num 159} true;
  $$d_finavalu[57] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FSUB32(FSUB32(FSUB32(v148, v151), v152), v153))));
  assert {:sourceloc} {:sourceloc_num 160} true;
  $$d_finavalu[58] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FSUB32(v151, v149))));
  assert {:sourceloc} {:sourceloc_num 161} true;
  $$d_finavalu[59] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FSUB32(FADD32(v152, v149), v150))));
  assert {:sourceloc} {:sourceloc_num 162} true;
  $$d_finavalu[60] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FADD32(v153, v150))));
  assert {:sourceloc} {:sourceloc_num 163} true;
  $$d_com[0] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FADD32(FMUL32(FMUL32(1073741824, v113), FSUB32(v160, v156)), FSUB32(-2147483648, FMUL32(1073741824, FADD32(FADD32(FADD32(FADD32(FADD32(FADD32(v140, v141), v143), v144), v148), v149), v150)))))));
  assert {:sourceloc} {:sourceloc_num 164} true;
  v164 := $$d_initvalu[36];
  v165 := FP64_CONV32(FMUL64(FP32_CONV64(v164), 4652007308841189376));
  assert {:sourceloc} {:sourceloc_num 165} true;
  v166 := $$d_params[6];
  assert {:sourceloc} {:sourceloc_num 166} true;
  v167 := $$d_params[7];
  assert {:sourceloc} {:sourceloc_num 167} true;
  v168 := $$d_params[8];
  assert {:sourceloc} {:sourceloc_num 168} true;
  v169 := $$d_params[9];
  assert {:sourceloc} {:sourceloc_num 169} true;
  v170 := $$d_params[16];
  assert {:sourceloc} {:sourceloc_num 170} true;
  v171 := $$d_params[17];
  assert {:sourceloc} {:sourceloc_num 171} true;
  v172 := $$d_initvalu[61];
  assert {:sourceloc} {:sourceloc_num 172} true;
  v173 := $$d_initvalu[62];
  assert {:sourceloc} {:sourceloc_num 173} true;
  v174 := $$d_initvalu[63];
  assert {:sourceloc} {:sourceloc_num 174} true;
  v175 := $$d_initvalu[64];
  assert {:sourceloc} {:sourceloc_num 175} true;
  v176 := $$d_initvalu[65];
  assert {:sourceloc} {:sourceloc_num 176} true;
  v177 := $$d_initvalu[66];
  assert {:sourceloc} {:sourceloc_num 177} true;
  v178 := $$d_initvalu[67];
  assert {:sourceloc} {:sourceloc_num 178} true;
  v179 := $$d_initvalu[68];
  assert {:sourceloc} {:sourceloc_num 179} true;
  v180 := $$d_initvalu[69];
  assert {:sourceloc} {:sourceloc_num 180} true;
  v181 := $$d_initvalu[70];
  assert {:sourceloc} {:sourceloc_num 181} true;
  v182 := $$d_initvalu[71];
  assert {:sourceloc} {:sourceloc_num 182} true;
  v183 := $$d_initvalu[72];
  assert {:sourceloc} {:sourceloc_num 183} true;
  v184 := $$d_initvalu[73];
  assert {:sourceloc} {:sourceloc_num 184} true;
  v185 := $$d_initvalu[74];
  assert {:sourceloc} {:sourceloc_num 185} true;
  v186 := $$d_initvalu[75];
  v187 := FEQ32(v171, 1065353216) || FLT32(v171, 1065353216);
  goto $truebb7, $falsebb7;
$21:
  assert {:block_sourceloc} {:sourceloc_num 186} true;
  $Kd02.i52.0, $Kd24.i53.0 := FP64_CONV32(FMUL64(FMUL64(4567911030049346683, FSUB64(FADD64(4607182418800017408, FDIV64(FP32_CONV64(v170), 4606641986844732948)), FDIV64(FP32_CONV64(v171), 4578071150808694522))), FADD64(FADD64(4607182418800017408, FDIV64(FP32_CONV64(v170), 4620749512677471027)), FDIV64(FP32_CONV64(v171), 4581998289683761594)))), FP64_CONV32(FMUL64(FMUL64(4593779706308962812, FADD64(FADD64(4607182418800017408, FDIV64(FP32_CONV64(v170), 4603939827068310651)), FDIV64(FP32_CONV64(v171), 4564099183324740295))), FSUB64(FADD64(4607182418800017408, FDIV64(FP32_CONV64(v170), 4623507967449235456)), FDIV64(FP32_CONV64(v171), 4594680426234436911))));
  goto $kernel_cam.exit136;
$22:
  assert {:block_sourceloc} {:sourceloc_num 187} true;
  $Kd02.i52.0, $Kd24.i53.0 := FP64_CONV32(FMUL64(FMUL64(4567911030049346683, FADD64(FSUB64(FADD64(4607182418800017408, FDIV64(FP32_CONV64(v170), 4606641986844732948)), 4635564478951675221), FDIV64(FP32_CONV64(FSUB32(v171, 1065353216)), 4588807732320345784))), FADD64(FADD64(FADD64(4607182418800017408, FDIV64(FP32_CONV64(v170), 4620749512677471027)), 4631593975871105211), FDIV64(FP32_CONV64(FSUB32(v171, 1065353216)), 4589564337057744028)))), FP64_CONV32(FMUL64(FMUL64(4593779706308962812, FADD64(FADD64(FADD64(4607182418800017408, FDIV64(FP32_CONV64(v170), 4603939827068310651)), 4649494139406272805), FDIV64(FP32_CONV64(FSUB32(v171, 1065353216)), 4572414629676717179))), FADD64(FSUB64(FADD64(4607182418800017408, FDIV64(FP32_CONV64(v170), 4623507967449235456)), 4619044841347927930), FDIV64(FP32_CONV64(FSUB32(v171, 1065353216)), 4594572339843380019))));
  goto $kernel_cam.exit136;
$kernel_cam.exit136:
  assert {:block_sourceloc} {:sourceloc_num 188} true;
  v188 := FDIV32(1092616192, $Kd02.i52.0);
  v189 := FDIV32(1140457472, $Kd24.i53.0);
  v190 := FP64_CONV32(FDIV64(FP32_CONV64(985104436), 4596373779694328218));
  v191 := FDIV32(985104436, 1120403456);
  v192 := FP64_CONV32(FDIV64(FP32_CONV64(1074580685), 4584988679836335604));
  v193 := FMUL32(1159512064, 984245443);
  v194 := FADD32(FMUL32(FMUL32(v188, FPOW32(v165, 1073741824)), v172), FSUB32(-2147483648, FMUL32(1092616192, v173)));
  v195 := FADD32(FMUL32(FMUL32(v189, FPOW32(v165, 1073741824)), v173), FSUB32(-2147483648, FMUL32(1140457472, v174)));
  v196 := FSUB32(FSUB32(FSUB32(v166, v175), v176), v177);
  v197 := FADD32(FMUL32(FMUL32(v188, FPOW32(v165, 1073741824)), v175), FSUB32(-2147483648, FMUL32(FDIV32(1092616192, 1120403456), v176)));
  v198 := FADD32(FMUL32(FMUL32(v189, FPOW32(v165, 1073741824)), v176), FSUB32(-2147483648, FMUL32(1140457472, v177)));
  v199 := FADD32(FMUL32(FMUL32(v190, v172), v196), FSUB32(-2147483648, FMUL32(985104436, v175)));
  v200 := FADD32(FMUL32(FMUL32(v190, v173), v196), FSUB32(-2147483648, FMUL32(v191, v176)));
  v201 := FADD32(FMUL32(FMUL32(v190, v174), v196), FSUB32(-2147483648, FMUL32(v191, v177)));
  v202 := FADD32(FMUL32(FMUL32(FP64_CONV32(FDIV64(FP32_CONV64(1065353216), 4602678819172646912)), FPOW32(v165, 1073741824)), FSUB32(FSUB32(FSUB32(FSUB32(v168, v183), v184), v185), v186)), FSUB32(-2147483648, FMUL32(1065353216, v183)));
  v203 := FADD32(FMUL32(FMUL32(v188, FPOW32(v165, 1073741824)), v184), FSUB32(-2147483648, FMUL32(FDIV32(1092616192, 1126498304), v185)));
  v204 := FADD32(FMUL32(FMUL32(v189, FPOW32(v165, 1073741824)), v185), FSUB32(-2147483648, FMUL32(FDIV32(1092616192, 1159512064), v186)));
  v205 := FADD32(FMUL32(FMUL32(1110966272, v172), v183), FSUB32(-2147483648, FMUL32(FMUL32(1126498304, v193), v184)));
  v206 := FADD32(FMUL32(FMUL32(1110966272, v173), v183), FSUB32(-2147483648, FMUL32(v193, v185)));
  v207 := FADD32(FMUL32(FMUL32(1110966272, v174), v183), FSUB32(-2147483648, FMUL32(984245443, v186)));
  v208 := FSUB32(FSUB32(FSUB32(FSUB32(FSUB32(1065353216, v178), v179), v180), v181), v182);
  v209 := FADD32(FMUL32(FMUL32(v192, v173), v208), FSUB32(-2147483648, FMUL32(FMUL32(v192, 1084227584), v178)));
  v210 := FADD32(FMUL32(FMUL32(v189, FPOW32(v165, 1073741824)), v178), FSUB32(-2147483648, FMUL32(FP64_CONV32(FDIV64(FMUL64(FP32_CONV64(1140457472), 4584988679836335604), 4617315517961601024)), v179)));
  v211 := FADD32(FMUL32(FMUL32(v192, v174), v208), FSUB32(-2147483648, FMUL32(1074580685, v179)));
  v212 := FADD32(FADD32(FADD32(v179, v180), v181), v182);
  v213 := FADD32(FMUL32(FP64_CONV32(FADD64(FMUL64(4579800533065604792, FP32_CONV64(FPOW32(v212, 1077936128))), FADD64(FMUL64(4588087156379966505, FP32_CONV64(v212)), FMUL64(4575181641287773612, FP32_CONV64(FPOW32(v212, 1073741824)))))), v179), FSUB32(-2147483648, FDIV32(FMUL32(FMUL32(1071393014, v169), v180), FADD32(FMUL32(v167, v180), 1094189056))));
  v214 := FADD32(FMUL32(FP64_CONV32(FDIV64(FMUL64(FP32_CONV64(1140457472), 4540068552173843632), 4617315517961601024)), v180), FSUB32(-2147483648, FMUL32(FMUL32(v189, FPOW32(v165, 1073741824)), v181)));
  v215 := FADD32(FMUL32(FDIV32(1074580685, 1148846080), v180), FSUB32(-2147483648, FMUL32(FMUL32(v192, v174), v182)));
  v216 := FADD32(FMUL32(FMUL32(v192, 1084227584), v181), FSUB32(-2147483648, FMUL32(FMUL32(v192, v173), v182)));
  v217 := FDIV32(FMUL32(FMUL32(1071393014, v169), v181), FADD32(FMUL32(v167, v181), 1094189056));
  assert {:sourceloc} {:sourceloc_num 189} true;
  $$d_finavalu[61] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FSUB32(FSUB32(FSUB32(-2147483648, v194), v199), v205))));
  assert {:sourceloc} {:sourceloc_num 190} true;
  $$d_finavalu[62] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FADD32(FSUB32(FSUB32(FSUB32(v194, v195), v200), v206), FMUL32(v167, FADD32(FSUB32(-2147483648, v209), v216))))));
  assert {:sourceloc} {:sourceloc_num 191} true;
  $$d_finavalu[63] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FADD32(FSUB32(FSUB32(v195, v201), v207), FMUL32(v167, FADD32(FSUB32(-2147483648, v211), v215))))));
  assert {:sourceloc} {:sourceloc_num 192} true;
  $$d_finavalu[64] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FSUB32(v199, v197))));
  assert {:sourceloc} {:sourceloc_num 193} true;
  $$d_finavalu[65] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FSUB32(FADD32(v197, v200), v198))));
  assert {:sourceloc} {:sourceloc_num 194} true;
  $$d_finavalu[66] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FADD32(v198, v201))));
  assert {:sourceloc} {:sourceloc_num 195} true;
  $$d_finavalu[67] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FADD32(FSUB32(v209, v210), v217))));
  assert {:sourceloc} {:sourceloc_num 196} true;
  $$d_finavalu[68] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FSUB32(FADD32(v211, v210), v213))));
  assert {:sourceloc} {:sourceloc_num 197} true;
  $$d_finavalu[69] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FSUB32(FSUB32(v213, v215), v214))));
  assert {:sourceloc} {:sourceloc_num 198} true;
  $$d_finavalu[70] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FSUB32(FSUB32(v214, v216), v217))));
  assert {:sourceloc} {:sourceloc_num 199} true;
  $$d_finavalu[71] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FSUB32(FADD32(v215, v216), FDIV32(FMUL32(FMUL32(1071393014, v169), v182), FADD32(FMUL32(v167, v182), 1094189056))))));
  assert {:sourceloc} {:sourceloc_num 200} true;
  $$d_finavalu[72] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FSUB32(FSUB32(FSUB32(v202, v205), v206), v207))));
  assert {:sourceloc} {:sourceloc_num 201} true;
  $$d_finavalu[73] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FSUB32(v205, v203))));
  assert {:sourceloc} {:sourceloc_num 202} true;
  $$d_finavalu[74] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FSUB32(FADD32(v206, v203), v204))));
  assert {:sourceloc} {:sourceloc_num 203} true;
  $$d_finavalu[75] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FADD32(v207, v204))));
  assert {:sourceloc} {:sourceloc_num 204} true;
  $$d_com[1] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FADD32(FMUL32(FMUL32(1073741824, v167), FSUB32(v214, v210)), FSUB32(-2147483648, FMUL32(1073741824, FADD32(FADD32(FADD32(FADD32(FADD32(FADD32(v194, v195), v197), v198), v202), v203), v204)))))));
  assert {:sourceloc} {:sourceloc_num 205} true;
  v218 := $$d_initvalu[37];
  v219 := FP64_CONV32(FMUL64(FP32_CONV64(v218), 4652007308841189376));
  assert {:sourceloc} {:sourceloc_num 206} true;
  v220 := $$d_params[11];
  assert {:sourceloc} {:sourceloc_num 207} true;
  v221 := $$d_params[12];
  assert {:sourceloc} {:sourceloc_num 208} true;
  v222 := $$d_params[13];
  assert {:sourceloc} {:sourceloc_num 209} true;
  v223 := $$d_params[14];
  assert {:sourceloc} {:sourceloc_num 210} true;
  v224 := $$d_params[16];
  assert {:sourceloc} {:sourceloc_num 211} true;
  v225 := $$d_params[17];
  assert {:sourceloc} {:sourceloc_num 212} true;
  v226 := $$d_initvalu[76];
  assert {:sourceloc} {:sourceloc_num 213} true;
  v227 := $$d_initvalu[77];
  assert {:sourceloc} {:sourceloc_num 214} true;
  v228 := $$d_initvalu[78];
  assert {:sourceloc} {:sourceloc_num 215} true;
  v229 := $$d_initvalu[79];
  assert {:sourceloc} {:sourceloc_num 216} true;
  v230 := $$d_initvalu[80];
  assert {:sourceloc} {:sourceloc_num 217} true;
  v231 := $$d_initvalu[81];
  assert {:sourceloc} {:sourceloc_num 218} true;
  v232 := $$d_initvalu[82];
  assert {:sourceloc} {:sourceloc_num 219} true;
  v233 := $$d_initvalu[83];
  assert {:sourceloc} {:sourceloc_num 220} true;
  v234 := $$d_initvalu[84];
  assert {:sourceloc} {:sourceloc_num 221} true;
  v235 := $$d_initvalu[85];
  assert {:sourceloc} {:sourceloc_num 222} true;
  v236 := $$d_initvalu[86];
  assert {:sourceloc} {:sourceloc_num 223} true;
  v237 := $$d_initvalu[87];
  assert {:sourceloc} {:sourceloc_num 224} true;
  v238 := $$d_initvalu[88];
  assert {:sourceloc} {:sourceloc_num 225} true;
  v239 := $$d_initvalu[89];
  assert {:sourceloc} {:sourceloc_num 226} true;
  v240 := $$d_initvalu[90];
  v241 := FEQ32(v225, 1065353216) || FLT32(v225, 1065353216);
  goto $truebb8, $falsebb8;
$23:
  assert {:block_sourceloc} {:sourceloc_num 227} true;
  $Kd02.i173.0, $Kd24.i174.0 := FP64_CONV32(FMUL64(FMUL64(4567911030049346683, FSUB64(FADD64(4607182418800017408, FDIV64(FP32_CONV64(v224), 4606641986844732948)), FDIV64(FP32_CONV64(v225), 4578071150808694522))), FADD64(FADD64(4607182418800017408, FDIV64(FP32_CONV64(v224), 4620749512677471027)), FDIV64(FP32_CONV64(v225), 4581998289683761594)))), FP64_CONV32(FMUL64(FMUL64(4593779706308962812, FADD64(FADD64(4607182418800017408, FDIV64(FP32_CONV64(v224), 4603939827068310651)), FDIV64(FP32_CONV64(v225), 4564099183324740295))), FSUB64(FADD64(4607182418800017408, FDIV64(FP32_CONV64(v224), 4623507967449235456)), FDIV64(FP32_CONV64(v225), 4594680426234436911))));
  goto $kernel_cam.exit257;
$24:
  assert {:block_sourceloc} {:sourceloc_num 228} true;
  $Kd02.i173.0, $Kd24.i174.0 := FP64_CONV32(FMUL64(FMUL64(4567911030049346683, FADD64(FSUB64(FADD64(4607182418800017408, FDIV64(FP32_CONV64(v224), 4606641986844732948)), 4635564478951675221), FDIV64(FP32_CONV64(FSUB32(v225, 1065353216)), 4588807732320345784))), FADD64(FADD64(FADD64(4607182418800017408, FDIV64(FP32_CONV64(v224), 4620749512677471027)), 4631593975871105211), FDIV64(FP32_CONV64(FSUB32(v225, 1065353216)), 4589564337057744028)))), FP64_CONV32(FMUL64(FMUL64(4593779706308962812, FADD64(FADD64(FADD64(4607182418800017408, FDIV64(FP32_CONV64(v224), 4603939827068310651)), 4649494139406272805), FDIV64(FP32_CONV64(FSUB32(v225, 1065353216)), 4572414629676717179))), FADD64(FSUB64(FADD64(4607182418800017408, FDIV64(FP32_CONV64(v224), 4623507967449235456)), 4619044841347927930), FDIV64(FP32_CONV64(FSUB32(v225, 1065353216)), 4594572339843380019))));
  goto $kernel_cam.exit257;
$kernel_cam.exit257:
  assert {:block_sourceloc} {:sourceloc_num 229} true;
  v242 := FDIV32(1092616192, $Kd02.i173.0);
  v243 := FDIV32(1140457472, $Kd24.i174.0);
  v244 := FP64_CONV32(FDIV64(FP32_CONV64(985104436), 4596373779694328218));
  v245 := FDIV32(985104436, 1120403456);
  v246 := FP64_CONV32(FDIV64(FP32_CONV64(1074580685), 4584988679836335604));
  v247 := FMUL32(1159512064, 984245443);
  v248 := FADD32(FMUL32(FMUL32(v242, FPOW32(v219, 1073741824)), v226), FSUB32(-2147483648, FMUL32(1092616192, v227)));
  v249 := FADD32(FMUL32(FMUL32(v243, FPOW32(v219, 1073741824)), v227), FSUB32(-2147483648, FMUL32(1140457472, v228)));
  v250 := FSUB32(FSUB32(FSUB32(v220, v229), v230), v231);
  v251 := FADD32(FMUL32(FMUL32(v242, FPOW32(v219, 1073741824)), v229), FSUB32(-2147483648, FMUL32(FDIV32(1092616192, 1120403456), v230)));
  v252 := FADD32(FMUL32(FMUL32(v243, FPOW32(v219, 1073741824)), v230), FSUB32(-2147483648, FMUL32(1140457472, v231)));
  v253 := FADD32(FMUL32(FMUL32(v244, v226), v250), FSUB32(-2147483648, FMUL32(985104436, v229)));
  v254 := FADD32(FMUL32(FMUL32(v244, v227), v250), FSUB32(-2147483648, FMUL32(v245, v230)));
  v255 := FADD32(FMUL32(FMUL32(v244, v228), v250), FSUB32(-2147483648, FMUL32(v245, v231)));
  v256 := FADD32(FMUL32(FMUL32(FP64_CONV32(FDIV64(FP32_CONV64(1065353216), 4602678819172646912)), FPOW32(v219, 1073741824)), FSUB32(FSUB32(FSUB32(FSUB32(v222, v237), v238), v239), v240)), FSUB32(-2147483648, FMUL32(1065353216, v237)));
  v257 := FADD32(FMUL32(FMUL32(v242, FPOW32(v219, 1073741824)), v238), FSUB32(-2147483648, FMUL32(FDIV32(1092616192, 1126498304), v239)));
  v258 := FADD32(FMUL32(FMUL32(v243, FPOW32(v219, 1073741824)), v239), FSUB32(-2147483648, FMUL32(FDIV32(1092616192, 1159512064), v240)));
  v259 := FADD32(FMUL32(FMUL32(1110966272, v226), v237), FSUB32(-2147483648, FMUL32(FMUL32(1126498304, v247), v238)));
  v260 := FADD32(FMUL32(FMUL32(1110966272, v227), v237), FSUB32(-2147483648, FMUL32(v247, v239)));
  v261 := FADD32(FMUL32(FMUL32(1110966272, v228), v237), FSUB32(-2147483648, FMUL32(984245443, v240)));
  v262 := FSUB32(FSUB32(FSUB32(FSUB32(FSUB32(1065353216, v232), v233), v234), v235), v236);
  v263 := FADD32(FMUL32(FMUL32(v246, v227), v262), FSUB32(-2147483648, FMUL32(FMUL32(v246, 1084227584), v232)));
  v264 := FADD32(FMUL32(FMUL32(v243, FPOW32(v219, 1073741824)), v232), FSUB32(-2147483648, FMUL32(FP64_CONV32(FDIV64(FMUL64(FP32_CONV64(1140457472), 4584988679836335604), 4617315517961601024)), v233)));
  v265 := FADD32(FMUL32(FMUL32(v246, v228), v262), FSUB32(-2147483648, FMUL32(1074580685, v233)));
  v266 := FADD32(FADD32(FADD32(v233, v234), v235), v236);
  v267 := FADD32(FMUL32(FP64_CONV32(FADD64(FMUL64(4579800533065604792, FP32_CONV64(FPOW32(v266, 1077936128))), FADD64(FMUL64(4588087156379966505, FP32_CONV64(v266)), FMUL64(4575181641287773612, FP32_CONV64(FPOW32(v266, 1073741824)))))), v233), FSUB32(-2147483648, FDIV32(FMUL32(FMUL32(1071393014, v223), v234), FADD32(FMUL32(v221, v234), 1094189056))));
  v268 := FADD32(FMUL32(FP64_CONV32(FDIV64(FMUL64(FP32_CONV64(1140457472), 4540068552173843632), 4617315517961601024)), v234), FSUB32(-2147483648, FMUL32(FMUL32(v243, FPOW32(v219, 1073741824)), v235)));
  v269 := FADD32(FMUL32(FDIV32(1074580685, 1148846080), v234), FSUB32(-2147483648, FMUL32(FMUL32(v246, v228), v236)));
  v270 := FADD32(FMUL32(FMUL32(v246, 1084227584), v235), FSUB32(-2147483648, FMUL32(FMUL32(v246, v227), v236)));
  v271 := FDIV32(FMUL32(FMUL32(1071393014, v223), v235), FADD32(FMUL32(v221, v235), 1094189056));
  assert {:sourceloc} {:sourceloc_num 230} true;
  $$d_finavalu[76] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FSUB32(FSUB32(FSUB32(-2147483648, v248), v253), v259))));
  assert {:sourceloc} {:sourceloc_num 231} true;
  $$d_finavalu[77] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FADD32(FSUB32(FSUB32(FSUB32(v248, v249), v254), v260), FMUL32(v221, FADD32(FSUB32(-2147483648, v263), v270))))));
  assert {:sourceloc} {:sourceloc_num 232} true;
  $$d_finavalu[78] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FADD32(FSUB32(FSUB32(v249, v255), v261), FMUL32(v221, FADD32(FSUB32(-2147483648, v265), v269))))));
  assert {:sourceloc} {:sourceloc_num 233} true;
  $$d_finavalu[79] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FSUB32(v253, v251))));
  assert {:sourceloc} {:sourceloc_num 234} true;
  $$d_finavalu[80] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FSUB32(FADD32(v251, v254), v252))));
  assert {:sourceloc} {:sourceloc_num 235} true;
  $$d_finavalu[81] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FADD32(v252, v255))));
  assert {:sourceloc} {:sourceloc_num 236} true;
  $$d_finavalu[82] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FADD32(FSUB32(v263, v264), v271))));
  assert {:sourceloc} {:sourceloc_num 237} true;
  $$d_finavalu[83] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FSUB32(FADD32(v265, v264), v267))));
  assert {:sourceloc} {:sourceloc_num 238} true;
  $$d_finavalu[84] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FSUB32(FSUB32(v267, v269), v268))));
  assert {:sourceloc} {:sourceloc_num 239} true;
  $$d_finavalu[85] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FSUB32(FSUB32(v268, v270), v271))));
  assert {:sourceloc} {:sourceloc_num 240} true;
  $$d_finavalu[86] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FSUB32(FADD32(v269, v270), FDIV32(FMUL32(FMUL32(1071393014, v223), v236), FADD32(FMUL32(v221, v236), 1094189056))))));
  assert {:sourceloc} {:sourceloc_num 241} true;
  $$d_finavalu[87] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FSUB32(FSUB32(FSUB32(v256, v259), v260), v261))));
  assert {:sourceloc} {:sourceloc_num 242} true;
  $$d_finavalu[88] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FSUB32(v259, v257))));
  assert {:sourceloc} {:sourceloc_num 243} true;
  $$d_finavalu[89] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FSUB32(FADD32(v260, v257), v258))));
  assert {:sourceloc} {:sourceloc_num 244} true;
  $$d_finavalu[90] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FADD32(v261, v258))));
  assert {:sourceloc} {:sourceloc_num 245} true;
  $$d_com[2] := FP64_CONV32(FMUL64(4562254508917369340, FP32_CONV64(FADD32(FMUL32(FMUL32(1073741824, v221), FSUB32(v268, v264)), FSUB32(-2147483648, FMUL32(1073741824, FADD32(FADD32(FADD32(FADD32(FADD32(FADD32(v248, v249), v251), v252), v256), v257), v258)))))));
  goto $25;
$25:
  assert {:block_sourceloc} {:sourceloc_num 246} true;
  goto $26;
$26:
  assert {:block_sourceloc} true;
  goto $27;
$27:
  assert {:block_sourceloc} {:sourceloc_num 247} true;
  return;
$truebb:
  assume {:partition} v2;
  assert {:block_sourceloc} {:sourceloc_num 248} true;
  goto $1;
$falsebb:
  assume {:partition} !v2;
  assert {:block_sourceloc} {:sourceloc_num 249} true;
  goto $16;
$truebb0:
  assume {:partition} v3;
  assert {:block_sourceloc} {:sourceloc_num 250} true;
  goto $2;
$falsebb0:
  assume {:partition} !v3;
  assert {:block_sourceloc} {:sourceloc_num 251} true;
  goto $15;
$truebb1:
  assume {:partition} v58;
  assert {:block_sourceloc} {:sourceloc_num 252} true;
  goto $3;
$falsebb1:
  assume {:partition} !v58;
  assert {:block_sourceloc} {:sourceloc_num 253} true;
  goto $4;
$casebb:
  assume {:partition} false;
  assert {:block_sourceloc} {:sourceloc_num 254} true;
  goto $6;
$casebb0:
  assume {:partition} true;
  assert {:block_sourceloc} {:sourceloc_num 255} true;
  goto $7;
$casebb1:
  assume {:partition} false;
  assert {:block_sourceloc} {:sourceloc_num 256} true;
  goto $11;
$defaultbb:
  assert {:block_sourceloc} {:sourceloc_num 257} true;
  assume {:partition} false;
  havoc v272;
  $I_app.i.1 := v272;
  goto $kernel_ecc.exit;
$truebb2:
  assume {:partition} v106;
  assert {:block_sourceloc} {:sourceloc_num 258} true;
  goto $8;
$falsebb2:
  assume {:partition} !v106;
  assert {:block_sourceloc} {:sourceloc_num 259} true;
  goto $9;
$truebb3:
  assume {:partition} v107;
  assert {:block_sourceloc} {:sourceloc_num 260} true;
  goto $12;
$falsebb3:
  assume {:partition} !v107;
  assert {:block_sourceloc} {:sourceloc_num 261} true;
  goto $13;
$truebb4:
  assume {:partition} v108;
  assert {:block_sourceloc} {:sourceloc_num 262} true;
  goto $17;
$falsebb4:
  assume {:partition} !v108;
  assert {:block_sourceloc} {:sourceloc_num 263} true;
  goto $26;
$truebb5:
  assume {:partition} v109;
  assert {:block_sourceloc} {:sourceloc_num 264} true;
  goto $18;
$falsebb5:
  assume {:partition} !v109;
  assert {:block_sourceloc} {:sourceloc_num 265} true;
  goto $25;
$truebb6:
  assume {:partition} v133;
  assert {:block_sourceloc} {:sourceloc_num 266} true;
  goto $19;
$falsebb6:
  assume {:partition} !v133;
  assert {:block_sourceloc} {:sourceloc_num 267} true;
  goto $20;
$truebb7:
  assume {:partition} v187;
  assert {:block_sourceloc} {:sourceloc_num 268} true;
  goto $21;
$falsebb7:
  assume {:partition} !v187;
  assert {:block_sourceloc} {:sourceloc_num 269} true;
  goto $22;
$truebb8:
  assume {:partition} v241;
  assert {:block_sourceloc} {:sourceloc_num 270} true;
  goto $23;
$falsebb8:
  assume {:partition} !v241;
  assert {:block_sourceloc} {:sourceloc_num 271} true;
  goto $24;
}
procedure {:source_name "__log10_float"} $__log10_float($0:int) returns ($ret:int);
procedure {:source_name "fmodf"} $fmodf($0:int, $1:int) returns ($ret:int);
axiom (if group_size_y == 1 then 1 else 0) != 0;
axiom (if group_size_z == 1 then 1 else 0) != 0;
axiom (if num_groups_y == 1 then 1 else 0) != 0;
axiom (if num_groups_z == 1 then 1 else 0) != 0;
axiom (if group_size_x == 2 then 1 else 0) != 0;
axiom (if num_groups_x == 2 then 1 else 0) != 0;
axiom (if global_offset_x == 0 then 1 else 0) != 0;
axiom (if global_offset_y == 0 then 1 else 0) != 0;
axiom (if global_offset_z == 0 then 1 else 0) != 0;
