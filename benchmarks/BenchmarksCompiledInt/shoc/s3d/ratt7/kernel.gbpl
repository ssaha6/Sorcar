type _SIZE_T_TYPE = bv32;

procedure _ATOMIC_OP32(x : [int]int, y : int) returns (z : int, A : [int]int);
var {:source_name "T"} {:global} $$T : [int]int;
axiom {:array_info "$$T"} {:global} {:elem_width 32} {:source_name "T"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$T : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$T : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$T : bool;

var {:source_name "RF"} {:global} $$RF : [int]int;
axiom {:array_info "$$RF"} {:global} {:elem_width 32} {:source_name "RF"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$RF : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$RF : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$RF : bool;

var {:source_name "RB"} {:global} $$RB : [int]int;
axiom {:array_info "$$RB"} {:global} {:elem_width 32} {:source_name "RB"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$RB : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$RB : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$RB : bool;

var {:source_name "EG"} {:global} $$EG : [int]int;
axiom {:array_info "$$EG"} {:global} {:elem_width 32} {:source_name "EG"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$EG : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$EG : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$EG : bool;

const _WATCHED_OFFSET : int;
const {:global_offset_x} global_offset_x : int;
const {:global_offset_y} global_offset_y : int;
const {:global_offset_z} global_offset_z : int;
const {:group_id_x} group_id_x : int;
const {:group_size_x} group_size_x : int;
const {:group_size_y} group_size_y : int;
const {:group_size_z} group_size_z : int;
const {:local_id_x} local_id_x : int;
const {:num_groups_x} num_groups_x : int;
const {:num_groups_y} num_groups_y : int;
const {:num_groups_z} num_groups_z : int;
function FDIV32(int, int) : int;
function FLT32(int, int) : bool;
function FMUL32(int, int) : int;
function {:inline true} BV32_ADD(x : int, y : int) : int {
  x + y
}
function {:inline true} BV32_MUL(x : int, y : int) : int {
  x * y
}
procedure {:source_name "ratt7_kernel"} {:kernel} $ratt7_kernel($TCONV:int)
{
  var v0:int;
  var v1:int;
  var v2:int;
  var v3:int;
  var v4:int;
  var v5:int;
  var v6:int;
  var v7:int;
  var v8:int;
  var v9:int;
  var v10:int;
  var v11:int;
  var v12:int;
  var v13:int;
  var v14:int;
  var v15:int;
  var v16:int;
  var v17:int;
  var v18:int;
  var v19:int;
  var v20:int;
  var v21:int;
  var v22:int;
  var v23:int;
  var v24:int;
  var v25:int;
  var v26:int;
  var v27:int;
  var v55:int;
  var v28:int;
  var v29:int;
  var v30:int;
  var v31:int;
  var v32:int;
  var v33:int;
  var v34:int;
  var v35:int;
  var v36:int;
  var v37:int;
  var v38:int;
  var v39:int;
  var v40:int;
  var v41:int;
  var v42:int;
  var v43:int;
  var v44:int;
  var v45:int;
  var v46:int;
  var v47:int;
  var v48:int;
  var v49:int;
  var v50:int;
  var v51:int;
  var v52:int;
  var v53:int;
  var v54:int;
  var v110:int;
  var v111:int;
  var v112:int;
  var v56:int;
  var v57:int;
  var v58:int;
  var v59:int;
  var v60:int;
  var v61:int;
  var v62:int;
  var v63:int;
  var v64:int;
  var v65:int;
  var v66:int;
  var v67:int;
  var v68:int;
  var v69:int;
  var v70:int;
  var v71:int;
  var v72:int;
  var v73:int;
  var v74:int;
  var v75:int;
  var v76:int;
  var v77:int;
  var v78:int;
  var v79:int;
  var v80:int;
  var v81:int;
  var v82:int;
  var v83:int;
  var v84:int;
  var v85:int;
  var v86:int;
  var v87:int;
  var v88:int;
  var v89:int;
  var v90:int;
  var v91:int;
  var v92:int;
  var v93:int;
  var v94:int;
  var v95:int;
  var v96:int;
  var v97:int;
  var v98:int;
  var v99:int;
  var v100:int;
  var v101:int;
  var v102:int;
  var v103:int;
  var v104:int;
  var v105:int;
  var v106:int;
  var v107:int;
  var v108:int;
  var v109:int;
  var v113:int;
  var v114:int;
  var v115:int;
  var v116:int;
  var v117:int;
  var v118:int;
  var v119:int;
  var v120:int;
  var v121:int;
  var v122:int;
  var v123:int;
  var v124:int;
  var v125:int;
  var v126:int;
  var v127:int;
  var v128:int;
  var v129:int;
  var v130:int;
  var v131:int;
  var v132:int;
  var v133:int;
  var v134:int;
  var v135:int;
  var v136:int;
  var v137:int;
  var v138:int;
  var v139:int;
  var v140:int;
  var v141:int;
  var v142:int;
  var v143:int;
  var v144:int;
  var v145:int;
  var v146:int;
$0:
  assert {:block_sourceloc} {:sourceloc_num 0} true;
  assert {:sourceloc} {:sourceloc_num 1} true;
  v0 := $$T[BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x)];
  v1 := FMUL32(1232560160, FDIV32(1065353216, FMUL32(1285461554, FMUL32(v0, $TCONV))));
  assert {:sourceloc} {:sourceloc_num 2} true;
  v2 := $$EG[BV32_ADD(13824, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 3} true;
  v3 := $$EG[BV32_ADD(345600, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 4} true;
  v4 := $$EG[BV32_ADD(359424, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v5 := FMUL32(FMUL32(FMUL32(v2, v3), v1), FDIV32(1065353216, v4));
  assert {:sourceloc} {:sourceloc_num 5} true;
  v6 := $$RF[BV32_ADD(1728000, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 6} true;
  $$RB[BV32_ADD(1728000, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v6, (if FLT32(1621981420, v5) then 1621981420 else v5));
  assert {:sourceloc} {:sourceloc_num 7} true;
  v7 := $$EG[BV32_ADD(13824, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 8} true;
  v8 := $$EG[BV32_ADD(345600, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 9} true;
  v9 := $$EG[BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x)];
  assert {:sourceloc} {:sourceloc_num 10} true;
  v10 := $$EG[BV32_ADD(331776, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v11 := FMUL32(FMUL32(v7, v8), FDIV32(1065353216, FMUL32(v9, v10)));
  assert {:sourceloc} {:sourceloc_num 11} true;
  v12 := $$RF[BV32_ADD(1741824, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 12} true;
  $$RB[BV32_ADD(1741824, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v12, (if FLT32(1621981420, v11) then 1621981420 else v11));
  assert {:sourceloc} {:sourceloc_num 13} true;
  v13 := $$EG[BV32_ADD(13824, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 14} true;
  v14 := $$EG[BV32_ADD(345600, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 15} true;
  v15 := $$EG[BV32_ADD(152064, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 16} true;
  v16 := $$EG[BV32_ADD(179712, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v17 := FMUL32(FMUL32(v13, v14), FDIV32(1065353216, FMUL32(v15, v16)));
  assert {:sourceloc} {:sourceloc_num 17} true;
  v18 := $$RF[BV32_ADD(1755648, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 18} true;
  $$RB[BV32_ADD(1755648, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v18, (if FLT32(1621981420, v17) then 1621981420 else v17));
  assert {:sourceloc} {:sourceloc_num 19} true;
  v19 := $$EG[BV32_ADD(27648, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 20} true;
  v20 := $$EG[BV32_ADD(345600, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 21} true;
  v21 := $$EG[BV32_ADD(55296, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 22} true;
  v22 := $$EG[BV32_ADD(331776, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v23 := FMUL32(FMUL32(v19, v20), FDIV32(1065353216, FMUL32(v21, v22)));
  assert {:sourceloc} {:sourceloc_num 23} true;
  v24 := $$RF[BV32_ADD(1769472, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 24} true;
  $$RB[BV32_ADD(1769472, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v24, (if FLT32(1621981420, v23) then 1621981420 else v23));
  assert {:sourceloc} {:sourceloc_num 25} true;
  v25 := $$EG[BV32_ADD(27648, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 26} true;
  v26 := $$EG[BV32_ADD(345600, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 27} true;
  v27 := $$EG[BV32_ADD(124416, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 28} true;
  v28 := $$EG[BV32_ADD(193536, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v29 := FMUL32(FMUL32(v25, v26), FDIV32(1065353216, FMUL32(v27, v28)));
  assert {:sourceloc} {:sourceloc_num 29} true;
  v30 := $$RF[BV32_ADD(1783296, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 30} true;
  $$RB[BV32_ADD(1783296, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v30, (if FLT32(1621981420, v29) then 1621981420 else v29));
  assert {:sourceloc} {:sourceloc_num 31} true;
  v31 := $$EG[BV32_ADD(55296, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 32} true;
  v32 := $$EG[BV32_ADD(345600, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 33} true;
  v33 := $$EG[BV32_ADD(69120, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 34} true;
  v34 := $$EG[BV32_ADD(331776, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v35 := FMUL32(FMUL32(v31, v32), FDIV32(1065353216, FMUL32(v33, v34)));
  assert {:sourceloc} {:sourceloc_num 35} true;
  v36 := $$RF[BV32_ADD(1797120, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 36} true;
  $$RB[BV32_ADD(1797120, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v36, (if FLT32(1621981420, v35) then 1621981420 else v35));
  assert {:sourceloc} {:sourceloc_num 37} true;
  v37 := $$EG[BV32_ADD(13824, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 38} true;
  v38 := $$EG[BV32_ADD(276480, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 39} true;
  v39 := $$EG[BV32_ADD(290304, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v40 := FMUL32(FMUL32(FMUL32(v37, v38), v1), FDIV32(1065353216, v39));
  assert {:sourceloc} {:sourceloc_num 40} true;
  v41 := $$RF[BV32_ADD(1810944, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 41} true;
  $$RB[BV32_ADD(1810944, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v41, (if FLT32(1621981420, v40) then 1621981420 else v40));
  assert {:sourceloc} {:sourceloc_num 42} true;
  v42 := $$EG[BV32_ADD(13824, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 43} true;
  v43 := $$EG[BV32_ADD(276480, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 44} true;
  v44 := $$EG[BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x)];
  assert {:sourceloc} {:sourceloc_num 45} true;
  v45 := $$EG[BV32_ADD(248832, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v46 := FMUL32(FMUL32(v42, v43), FDIV32(1065353216, FMUL32(v44, v45)));
  assert {:sourceloc} {:sourceloc_num 46} true;
  v47 := $$RF[BV32_ADD(1824768, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 47} true;
  $$RB[BV32_ADD(1824768, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v47, (if FLT32(1621981420, v46) then 1621981420 else v46));
  assert {:sourceloc} {:sourceloc_num 48} true;
  v48 := $$EG[BV32_ADD(13824, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 49} true;
  v49 := $$EG[BV32_ADD(276480, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 50} true;
  v50 := $$EG[BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x)];
  assert {:sourceloc} {:sourceloc_num 51} true;
  v51 := $$EG[BV32_ADD(262656, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v52 := FMUL32(FMUL32(v48, v49), FDIV32(1065353216, FMUL32(v50, v51)));
  assert {:sourceloc} {:sourceloc_num 52} true;
  v53 := $$RF[BV32_ADD(1838592, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 53} true;
  $$RB[BV32_ADD(1838592, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v53, (if FLT32(1621981420, v52) then 1621981420 else v52));
  assert {:sourceloc} {:sourceloc_num 54} true;
  v54 := $$EG[BV32_ADD(27648, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 55} true;
  v55 := $$EG[BV32_ADD(276480, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 56} true;
  v56 := $$EG[BV32_ADD(13824, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 57} true;
  v57 := $$EG[BV32_ADD(345600, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v58 := FMUL32(FMUL32(v54, v55), FDIV32(1065353216, FMUL32(v56, v57)));
  assert {:sourceloc} {:sourceloc_num 58} true;
  v59 := $$RF[BV32_ADD(1852416, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 59} true;
  $$RB[BV32_ADD(1852416, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v59, (if FLT32(1621981420, v58) then 1621981420 else v58));
  assert {:sourceloc} {:sourceloc_num 60} true;
  v60 := $$EG[BV32_ADD(27648, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 61} true;
  v61 := $$EG[BV32_ADD(276480, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 62} true;
  v62 := $$EG[BV32_ADD(152064, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 63} true;
  v63 := $$EG[BV32_ADD(179712, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v64 := FMUL32(FMUL32(v60, v61), FDIV32(1065353216, FMUL32(v62, v63)));
  assert {:sourceloc} {:sourceloc_num 64} true;
  v65 := $$RF[BV32_ADD(1866240, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 65} true;
  $$RB[BV32_ADD(1866240, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v65, (if FLT32(1621981420, v64) then 1621981420 else v64));
  assert {:sourceloc} {:sourceloc_num 66} true;
  v66 := $$EG[BV32_ADD(55296, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 67} true;
  v67 := $$EG[BV32_ADD(276480, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 68} true;
  v68 := $$EG[BV32_ADD(69120, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 69} true;
  v69 := $$EG[BV32_ADD(248832, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v70 := FMUL32(FMUL32(v66, v67), FDIV32(1065353216, FMUL32(v68, v69)));
  assert {:sourceloc} {:sourceloc_num 70} true;
  v71 := $$RF[BV32_ADD(1880064, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 71} true;
  $$RB[BV32_ADD(1880064, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v71, (if FLT32(1621981420, v70) then 1621981420 else v70));
  assert {:sourceloc} {:sourceloc_num 72} true;
  v72 := $$EG[BV32_ADD(41472, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 73} true;
  v73 := $$EG[BV32_ADD(276480, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 74} true;
  v74 := $$EG[BV32_ADD(82944, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 75} true;
  v75 := $$EG[BV32_ADD(248832, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v76 := FMUL32(FMUL32(v72, v73), FDIV32(1065353216, FMUL32(v74, v75)));
  assert {:sourceloc} {:sourceloc_num 76} true;
  v77 := $$RF[BV32_ADD(1893888, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 77} true;
  $$RB[BV32_ADD(1893888, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v77, (if FLT32(1621981420, v76) then 1621981420 else v76));
  assert {:sourceloc} {:sourceloc_num 78} true;
  v78 := $$EG[BV32_ADD(41472, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 79} true;
  v79 := $$EG[BV32_ADD(276480, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 80} true;
  v80 := $$EG[BV32_ADD(27648, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 81} true;
  v81 := $$EG[BV32_ADD(359424, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v82 := FMUL32(FMUL32(v78, v79), FDIV32(1065353216, FMUL32(v80, v81)));
  assert {:sourceloc} {:sourceloc_num 82} true;
  v83 := $$RF[BV32_ADD(1907712, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 83} true;
  $$RB[BV32_ADD(1907712, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v83, (if FLT32(1621981420, v82) then 1621981420 else v82));
  assert {:sourceloc} {:sourceloc_num 84} true;
  v84 := $$EG[BV32_ADD(41472, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 85} true;
  v85 := $$EG[BV32_ADD(276480, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 86} true;
  v86 := $$EG[BV32_ADD(207360, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 87} true;
  v87 := $$EG[BV32_ADD(221184, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v88 := FMUL32(FMUL32(v84, v85), FDIV32(1065353216, FMUL32(v86, v87)));
  assert {:sourceloc} {:sourceloc_num 88} true;
  v89 := $$RF[BV32_ADD(1921536, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 89} true;
  $$RB[BV32_ADD(1921536, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v89, (if FLT32(1621981420, v88) then 1621981420 else v88));
  assert {:sourceloc} {:sourceloc_num 90} true;
  v90 := $$EG[BV32_ADD(82944, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 91} true;
  v91 := $$EG[BV32_ADD(276480, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 92} true;
  v92 := $$EG[BV32_ADD(55296, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 93} true;
  v93 := $$EG[BV32_ADD(359424, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v94 := FMUL32(FMUL32(v90, v91), FDIV32(1065353216, FMUL32(v92, v93)));
  assert {:sourceloc} {:sourceloc_num 94} true;
  v95 := $$RF[BV32_ADD(1935360, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 95} true;
  $$RB[BV32_ADD(1935360, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v95, (if FLT32(1621981420, v94) then 1621981420 else v94));
  assert {:sourceloc} {:sourceloc_num 96} true;
  v96 := $$EG[BV32_ADD(96768, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 97} true;
  v97 := $$EG[BV32_ADD(276480, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 98} true;
  v98 := $$EG[BV32_ADD(82944, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 99} true;
  v99 := $$EG[BV32_ADD(290304, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v100 := FMUL32(FMUL32(v96, v97), FDIV32(1065353216, FMUL32(v98, v99)));
  assert {:sourceloc} {:sourceloc_num 100} true;
  v101 := $$RF[BV32_ADD(1949184, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 101} true;
  $$RB[BV32_ADD(1949184, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v101, (if FLT32(1621981420, v100) then 1621981420 else v100));
  assert {:sourceloc} {:sourceloc_num 102} true;
  v102 := $$EG[BV32_ADD(207360, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 103} true;
  v103 := $$EG[BV32_ADD(276480, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 104} true;
  v104 := $$EG[BV32_ADD(179712, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 105} true;
  v105 := $$EG[BV32_ADD(290304, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v106 := FMUL32(FMUL32(v102, v103), FDIV32(1065353216, FMUL32(v104, v105)));
  assert {:sourceloc} {:sourceloc_num 106} true;
  v107 := $$RF[BV32_ADD(1963008, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 107} true;
  $$RB[BV32_ADD(1963008, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v107, (if FLT32(1621981420, v106) then 1621981420 else v106));
  assert {:sourceloc} {:sourceloc_num 108} true;
  v108 := $$EG[BV32_ADD(152064, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 109} true;
  v109 := $$EG[BV32_ADD(276480, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 110} true;
  v110 := $$EG[BV32_ADD(165888, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 111} true;
  v111 := $$EG[BV32_ADD(248832, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v112 := FMUL32(FMUL32(v108, v109), FDIV32(1065353216, FMUL32(v110, v111)));
  assert {:sourceloc} {:sourceloc_num 112} true;
  v113 := $$RF[BV32_ADD(1976832, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 113} true;
  $$RB[BV32_ADD(1976832, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v113, (if FLT32(1621981420, v112) then 1621981420 else v112));
  assert {:sourceloc} {:sourceloc_num 114} true;
  v114 := $$EG[BV32_ADD(152064, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 115} true;
  v115 := $$EG[BV32_ADD(276480, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 116} true;
  v116 := $$EG[BV32_ADD(400896, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v117 := FMUL32(FMUL32(FMUL32(v114, v115), v1), FDIV32(1065353216, v116));
  assert {:sourceloc} {:sourceloc_num 117} true;
  v118 := $$RF[BV32_ADD(1990656, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 118} true;
  $$RB[BV32_ADD(1990656, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v118, (if FLT32(1621981420, v117) then 1621981420 else v117));
  assert {:sourceloc} {:sourceloc_num 119} true;
  v119 := $$EG[BV32_ADD(152064, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 120} true;
  v120 := $$EG[BV32_ADD(276480, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 121} true;
  v121 := $$EG[BV32_ADD(13824, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 122} true;
  v122 := $$EG[BV32_ADD(387072, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v123 := FMUL32(FMUL32(v119, v120), FDIV32(1065353216, FMUL32(v121, v122)));
  assert {:sourceloc} {:sourceloc_num 123} true;
  v124 := $$RF[BV32_ADD(2004480, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 124} true;
  $$RB[BV32_ADD(2004480, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v124, (if FLT32(1621981420, v123) then 1621981420 else v123));
  assert {:sourceloc} {:sourceloc_num 125} true;
  v125 := $$EG[BV32_ADD(359424, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 126} true;
  v126 := $$EG[BV32_ADD(152064, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 127} true;
  v127 := $$EG[BV32_ADD(179712, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v128 := FMUL32(v125, FDIV32(1065353216, FMUL32(FMUL32(v126, v127), v1)));
  assert {:sourceloc} {:sourceloc_num 128} true;
  v129 := $$RF[BV32_ADD(2018304, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 129} true;
  $$RB[BV32_ADD(2018304, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v129, (if FLT32(1621981420, v128) then 1621981420 else v128));
  assert {:sourceloc} {:sourceloc_num 130} true;
  v130 := $$EG[BV32_ADD(13824, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 131} true;
  v131 := $$EG[BV32_ADD(359424, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 132} true;
  v132 := $$EG[BV32_ADD(373248, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v133 := FMUL32(FMUL32(FMUL32(v130, v131), v1), FDIV32(1065353216, v132));
  assert {:sourceloc} {:sourceloc_num 133} true;
  v134 := $$RF[BV32_ADD(2032128, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 134} true;
  $$RB[BV32_ADD(2032128, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v134, (if FLT32(1621981420, v133) then 1621981420 else v133));
  assert {:sourceloc} {:sourceloc_num 135} true;
  v135 := $$EG[BV32_ADD(13824, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 136} true;
  v136 := $$EG[BV32_ADD(359424, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 137} true;
  v137 := $$EG[BV32_ADD(152064, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 138} true;
  v138 := $$EG[BV32_ADD(207360, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v139 := FMUL32(FMUL32(v135, v136), FDIV32(1065353216, FMUL32(v137, v138)));
  assert {:sourceloc} {:sourceloc_num 139} true;
  v140 := $$RF[BV32_ADD(2045952, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 140} true;
  $$RB[BV32_ADD(2045952, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v140, (if FLT32(1621981420, v139) then 1621981420 else v139));
  assert {:sourceloc} {:sourceloc_num 141} true;
  v141 := $$EG[BV32_ADD(13824, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 142} true;
  v142 := $$EG[BV32_ADD(359424, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 143} true;
  v143 := $$EG[BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x)];
  assert {:sourceloc} {:sourceloc_num 144} true;
  v144 := $$EG[BV32_ADD(345600, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v145 := FMUL32(FMUL32(v141, v142), FDIV32(1065353216, FMUL32(v143, v144)));
  assert {:sourceloc} {:sourceloc_num 145} true;
  v146 := $$RF[BV32_ADD(2059776, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 146} true;
  $$RB[BV32_ADD(2059776, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v146, (if FLT32(1621981420, v145) then 1621981420 else v145));
  return;
}
axiom (if group_size_y == 1 then 1 else 0) != 0;
axiom (if group_size_z == 1 then 1 else 0) != 0;
axiom (if num_groups_y == 1 then 1 else 0) != 0;
axiom (if num_groups_z == 1 then 1 else 0) != 0;
axiom (if group_size_x == 128 then 1 else 0) != 0;
axiom (if num_groups_x == 108 then 1 else 0) != 0;
axiom (if global_offset_x == 0 then 1 else 0) != 0;
axiom (if global_offset_y == 0 then 1 else 0) != 0;
axiom (if global_offset_z == 0 then 1 else 0) != 0;
