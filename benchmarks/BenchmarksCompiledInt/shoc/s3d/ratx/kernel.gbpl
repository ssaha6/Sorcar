type _SIZE_T_TYPE = bv32;

procedure _ATOMIC_OP32(x : [int]int, y : int) returns (z : int, A : [int]int);
var {:source_name "T"} {:global} $$T : [int]int;
axiom {:array_info "$$T"} {:global} {:elem_width 32} {:source_name "T"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$T : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$T : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$T : bool;

var {:source_name "C"} {:global} $$C : [int]int;
axiom {:array_info "$$C"} {:global} {:elem_width 32} {:source_name "C"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$C : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$C : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$C : bool;

var {:source_name "RF"} {:global} $$RF : [int]int;
axiom {:array_info "$$RF"} {:global} {:elem_width 32} {:source_name "RF"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$RF : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$RF : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$RF : bool;

var {:source_name "RB"} {:global} $$RB : [int]int;
axiom {:array_info "$$RB"} {:global} {:elem_width 32} {:source_name "RB"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$RB : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$RB : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$RB : bool;

var {:source_name "RKLOW"} {:global} $$RKLOW : [int]int;
axiom {:array_info "$$RKLOW"} {:global} {:elem_width 32} {:source_name "RKLOW"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$RKLOW : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$RKLOW : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$RKLOW : bool;

const _WATCHED_OFFSET : int;
const {:global_offset_x} global_offset_x : int;
const {:global_offset_y} global_offset_y : int;
const {:global_offset_z} global_offset_z : int;
const {:group_id_x} group_id_x : int;
const {:group_size_x} group_size_x : int;
const {:group_size_y} group_size_y : int;
const {:group_size_z} group_size_z : int;
const {:local_id_x} local_id_x : int;
const {:num_groups_x} num_groups_x : int;
const {:num_groups_y} num_groups_y : int;
const {:num_groups_z} num_groups_z : int;
function FADD32(int, int) : int;
function FADD64(int, int) : int;
function FDIV32(int, int) : int;
function FDIV64(int, int) : int;
function FEXP32(int) : int;
function FLT32(int, int) : bool;
function FMUL32(int, int) : int;
function FMUL64(int, int) : int;
function FP32_CONV64(int) : int;
function FP64_CONV32(int) : int;
function FSUB32(int, int) : int;
function FSUB64(int, int) : int;
function {:inline true} BV32_ADD(x : int, y : int) : int {
  x + y
}
function {:inline true} BV32_MUL(x : int, y : int) : int {
  x * y
}
function {:inline true} BV32_SUB(x : int, y : int) : int {
  x - y
}
function {:inline true} BV32_ULE(x : int, y : int) : bool {
  x <= y
}
procedure {:source_name "ratx_kernel"} {:kernel} $ratx_kernel($TCONV:int)
{
  var $CTOT.0:int;
  var $k.0:int;
  var v47:int;
  var v48:int;
  var v35:int;
  var v0:int;
  var v1:int;
  var v2:bool;
  var v3:int;
  var v4:int;
  var v5:int;
  var v6:int;
  var v7:int;
  var v8:int;
  var v9:int;
  var v10:int;
  var v11:int;
  var v12:int;
  var v13:int;
  var v14:int;
  var v15:int;
  var v16:int;
  var v29:int;
  var v17:int;
  var v18:int;
  var v19:int;
  var v20:int;
  var v21:int;
  var v22:int;
  var v23:int;
  var v24:int;
  var v25:int;
  var v26:int;
  var v27:int;
  var v28:int;
  var v56:int;
  var v30:int;
  var v31:int;
  var v32:int;
  var v33:int;
  var v34:int;
  var v36:int;
  var v37:int;
  var v38:int;
  var v39:int;
  var v40:int;
  var v41:int;
  var v42:int;
  var v43:int;
  var v44:int;
  var v45:int;
  var v46:int;
  var v49:int;
  var v50:int;
  var v51:int;
  var v52:int;
  var v53:int;
  var v54:int;
  var v55:int;
  var v109:int;
  var v57:int;
  var v58:int;
  var v59:int;
  var v60:int;
  var v61:int;
  var v62:int;
  var v63:int;
  var v64:int;
  var v65:int;
  var v66:int;
  var v67:int;
  var v68:int;
  var v69:int;
  var v70:int;
  var v71:int;
  var v72:int;
  var v73:int;
  var v74:int;
  var v75:int;
  var v76:int;
  var v77:int;
  var v78:int;
  var v79:int;
  var v80:int;
  var v81:int;
  var v82:int;
  var v83:int;
  var v84:int;
  var v85:int;
  var v86:int;
  var v87:int;
  var v88:int;
  var v89:int;
  var v90:int;
  var v91:int;
  var v92:int;
  var v93:int;
  var v94:int;
  var v95:int;
  var v96:int;
  var v97:int;
  var v98:int;
  var v99:int;
  var v100:int;
  var v101:int;
  var v102:int;
  var v103:int;
  var v104:int;
  var v105:int;
  var v106:int;
  var v107:int;
  var v108:int;
  var v110:int;
  var v111:int;
  var v112:int;
  var v113:int;
  var v114:int;
  var v115:int;
  var v116:int;
  var v117:int;
  var v118:int;
  var v119:int;
  var v120:int;
  var v121:int;
  var v122:int;
  var v123:int;
  var v124:int;
  var v125:int;
  var v126:int;
  var v127:int;
  var v128:int;
  var v129:int;
  var v130:int;
  var v131:int;
  var v132:int;
  var v133:int;
  var v134:int;
  var v135:int;
  var v136:int;
  var v137:int;
  var v138:int;
  var v139:int;
  var v140:int;
  var v141:int;
  var v142:int;
  var v143:int;
  var v144:int;
  var v145:int;
  var v146:int;
  var v147:int;
  var v148:int;
  var v149:int;
  var v150:int;
  var v151:int;
  var v152:int;
  var v153:int;
  var v154:int;
  var v155:int;
$0:
  assert {:block_sourceloc} {:sourceloc_num 0} true;
  assert {:sourceloc} {:sourceloc_num 1} true;
  v0 := $$T[BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x)];
  v1 := FMUL32(v0, $TCONV);
  $CTOT.0, $k.0 := 0, 1;
  goto $1;
$1:
  assert {:block_sourceloc} {:sourceloc_num 2} true;
  v2 := BV32_ULE($k.0, 22);
  goto $truebb, $falsebb;
$2:
  assert {:block_sourceloc} {:sourceloc_num 3} true;
  assert {:sourceloc} {:sourceloc_num 4} true;
  v3 := $$C[BV32_ADD(BV32_MUL(BV32_SUB($k.0, 1), 13824), BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  goto $3;
$3:
  assert {:block_sourceloc} {:sourceloc_num 5} true;
  $CTOT.0, $k.0 := FADD32($CTOT.0, v3), BV32_ADD($k.0, 1);
  goto $1;
$4:
  assert {:block_sourceloc} {:sourceloc_num 6} true;
  assert {:sourceloc} {:sourceloc_num 7} true;
  v4 := $$C[BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x)];
  assert {:sourceloc} {:sourceloc_num 8} true;
  v5 := $$C[BV32_ADD(69120, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 9} true;
  v6 := $$C[BV32_ADD(124416, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 10} true;
  v7 := $$C[BV32_ADD(138240, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 11} true;
  v8 := $$C[BV32_ADD(152064, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 12} true;
  v9 := $$C[BV32_ADD(207360, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 13} true;
  v10 := $$C[BV32_ADD(179712, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 14} true;
  v11 := $$C[BV32_ADD(193536, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v12 := FP64_CONV32(FADD64(FADD64(FADD64(FADD64(FADD64(FADD64(FADD64(FMUL64(4617315517961601024, FP32_CONV64(v5)), FP32_CONV64(FADD32($CTOT.0, v4))), FP32_CONV64(v6)), FMUL64(4602678819172646912, FP32_CONV64(v7))), FP32_CONV64(v8)), FMUL64(4611686018427387904, FP32_CONV64(v9))), FMUL64(4611686018427387904, FP32_CONV64(v10))), FMUL64(4611686018427387904, FP32_CONV64(v11))));
  assert {:sourceloc} {:sourceloc_num 15} true;
  v13 := $$C[BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x)];
  assert {:sourceloc} {:sourceloc_num 16} true;
  v14 := $$C[BV32_ADD(69120, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 17} true;
  v15 := $$C[BV32_ADD(124416, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 18} true;
  v16 := $$C[BV32_ADD(138240, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 19} true;
  v17 := $$C[BV32_ADD(152064, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 20} true;
  v18 := $$C[BV32_ADD(207360, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 21} true;
  v19 := $$C[BV32_ADD(179712, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 22} true;
  v20 := $$C[BV32_ADD(193536, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 23} true;
  v21 := $$C[BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x)];
  assert {:sourceloc} {:sourceloc_num 24} true;
  v22 := $$C[BV32_ADD(69120, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 25} true;
  v23 := $$C[BV32_ADD(124416, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 26} true;
  v24 := $$C[BV32_ADD(138240, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 27} true;
  v25 := $$C[BV32_ADD(152064, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 28} true;
  v26 := $$C[BV32_ADD(207360, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 29} true;
  v27 := $$C[BV32_ADD(179712, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 30} true;
  v28 := $$C[BV32_ADD(193536, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 31} true;
  v29 := $$RKLOW[BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x)];
  assert {:sourceloc} {:sourceloc_num 32} true;
  v30 := $$RF[BV32_ADD(207360, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v31 := FMUL32(v29, FMUL32(FP64_CONV32(FADD64(FADD64(FADD64(FADD64(FADD64(FADD64(FADD64(FMUL64(4617315517961601024, FP32_CONV64(v22)), FP32_CONV64(FADD32($CTOT.0, v21))), FP32_CONV64(v23)), FMUL64(4602678819172646912, FP32_CONV64(v24))), FP32_CONV64(v25)), FMUL64(4611686018427387904, FP32_CONV64(v26))), FMUL64(4611686018427387904, FP32_CONV64(v27))), FMUL64(4611686018427387904, FP32_CONV64(v28)))), FDIV32(1065353216, v30)));
  call {:sourceloc_num 33}   v32 := $__log10_float((if FLT32(v31, 8388608) then 8388608 else v31));
  v33 := FADD32(FADD32(FMUL32(1049092738, FEXP32(FMUL32(FMUL32(FSUB32(-2147483648, v1), 1009667137), 1069066811))), FMUL32(1060900543, FEXP32(FMUL32(FMUL32(FSUB32(-2147483648, v1), 974473445), 1069066811)))), FEXP32(FMUL32(FMUL32(-979243008, FDIV32(1065353216, v1)), 1069066811)));
  call {:sourceloc_num 34}   v34 := $__log10_float((if FLT32(v33, 8388608) then 8388608 else v33));
  v35 := FP64_CONV32(FSUB64(FP32_CONV64(v32), FADD64(FMUL64(4604210043045952881, FP32_CONV64(v34)), 4600877379321698714)));
  v36 := FP64_CONV32(FMUL64(FP32_CONV64(v35), FDIV64(4607182418800017408, FADD64(FMUL64(-4629159984981585428, FP32_CONV64(v35)), FP32_CONV64(FP64_CONV32(FADD64(FMUL64(-4614973646155368366, FP32_CONV64(v34)), 4604930618986332160)))))));
  v37 := FMUL32(FEXP32(FMUL32(FP64_CONV32(FMUL64(FP32_CONV64(v34), FDIV64(4607182418800017408, FADD64(4607182418800017408, FP32_CONV64(FMUL32(v36, v36)))))), 1079286392)), FP64_CONV32(FMUL64(FP32_CONV64(v31), FDIV64(4607182418800017408, FADD64(4607182418800017408, FP32_CONV64(v31))))));
  assert {:sourceloc} {:sourceloc_num 35} true;
  v38 := $$RF[BV32_ADD(207360, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 36} true;
  $$RF[BV32_ADD(207360, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v38, v37);
  assert {:sourceloc} {:sourceloc_num 37} true;
  v39 := $$RB[BV32_ADD(207360, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 38} true;
  $$RB[BV32_ADD(207360, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v39, v37);
  assert {:sourceloc} {:sourceloc_num 39} true;
  v40 := $$RKLOW[BV32_ADD(13824, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 40} true;
  v41 := $$RF[BV32_ADD(414720, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v42 := FMUL32(v40, FMUL32(v12, FDIV32(1065353216, v41)));
  call {:sourceloc_num 41}   v43 := $__log10_float((if FLT32(v42, 8388608) then 8388608 else v42));
  v44 := FADD32(FADD32(FMUL32(1032536982, FEXP32(FMUL32(FMUL32(FSUB32(-2147483648, v1), 1000756676), 1069066811))), FMUL32(1064212365, FEXP32(FMUL32(FMUL32(FSUB32(-2147483648, v1), 975845679), 1069066811)))), FEXP32(FMUL32(FMUL32(-970919936, FDIV32(1065353216, v1)), 1069066811)));
  call {:sourceloc_num 42}   v45 := $__log10_float((if FLT32(v44, 8388608) then 8388608 else v44));
  v46 := FP64_CONV32(FSUB64(FP32_CONV64(v43), FADD64(FMUL64(4604210043045952881, FP32_CONV64(v45)), 4600877379321698714)));
  v47 := FP64_CONV32(FMUL64(FP32_CONV64(v46), FDIV64(4607182418800017408, FADD64(FMUL64(-4629159984981585428, FP32_CONV64(v46)), FP32_CONV64(FP64_CONV32(FADD64(FMUL64(-4614973646155368366, FP32_CONV64(v45)), 4604930618986332160)))))));
  v48 := FMUL32(FEXP32(FMUL32(FP64_CONV32(FMUL64(FP32_CONV64(v45), FDIV64(4607182418800017408, FADD64(4607182418800017408, FP32_CONV64(FMUL32(v47, v47)))))), 1079286392)), FP64_CONV32(FMUL64(FP32_CONV64(v42), FDIV64(4607182418800017408, FADD64(4607182418800017408, FP32_CONV64(v42))))));
  assert {:sourceloc} {:sourceloc_num 43} true;
  v49 := $$RF[BV32_ADD(414720, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 44} true;
  $$RF[BV32_ADD(414720, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v49, v48);
  assert {:sourceloc} {:sourceloc_num 45} true;
  v50 := $$RB[BV32_ADD(414720, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 46} true;
  $$RB[BV32_ADD(414720, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v50, v48);
  assert {:sourceloc} {:sourceloc_num 47} true;
  v51 := $$RKLOW[BV32_ADD(27648, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 48} true;
  v52 := $$RF[BV32_ADD(525312, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v53 := FMUL32(v51, FMUL32(v12, FDIV32(1065353216, v52)));
  call {:sourceloc_num 49}   v54 := $__log10_float((if FLT32(v53, 8388608) then 8388608 else v53));
  v55 := FADD32(FADD32(FMUL32(1054424537, FEXP32(FMUL32(FMUL32(FSUB32(-2147483648, v1), 998916856), 1069066811))), FMUL32(1058234643, FEXP32(FMUL32(FMUL32(FSUB32(-2147483648, v1), 975089357), 1069066811)))), FEXP32(FMUL32(FMUL32(-979474432, FDIV32(1065353216, v1)), 1069066811)));
  call {:sourceloc_num 50}   v56 := $__log10_float((if FLT32(v55, 8388608) then 8388608 else v55));
  v57 := FP64_CONV32(FSUB64(FP32_CONV64(v54), FADD64(FMUL64(4604210043045952881, FP32_CONV64(v56)), 4600877379321698714)));
  v58 := FP64_CONV32(FMUL64(FP32_CONV64(v57), FDIV64(4607182418800017408, FADD64(FMUL64(-4629159984981585428, FP32_CONV64(v57)), FP32_CONV64(FP64_CONV32(FADD64(FMUL64(-4614973646155368366, FP32_CONV64(v56)), 4604930618986332160)))))));
  v59 := FMUL32(FEXP32(FMUL32(FP64_CONV32(FMUL64(FP32_CONV64(v56), FDIV64(4607182418800017408, FADD64(4607182418800017408, FP32_CONV64(FMUL32(v58, v58)))))), 1079286392)), FP64_CONV32(FMUL64(FP32_CONV64(v53), FDIV64(4607182418800017408, FADD64(4607182418800017408, FP32_CONV64(v53))))));
  assert {:sourceloc} {:sourceloc_num 51} true;
  v60 := $$RF[BV32_ADD(525312, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 52} true;
  $$RF[BV32_ADD(525312, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v60, v59);
  assert {:sourceloc} {:sourceloc_num 53} true;
  v61 := $$RB[BV32_ADD(525312, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 54} true;
  $$RB[BV32_ADD(525312, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v61, v59);
  assert {:sourceloc} {:sourceloc_num 55} true;
  v62 := $$RKLOW[BV32_ADD(41472, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 56} true;
  v63 := $$RF[BV32_ADD(552960, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v64 := FMUL32(v62, FMUL32(v12, FDIV32(1065353216, v63)));
  call {:sourceloc_num 57}   v65 := $__log10_float((if FLT32(v64, 8388608) then 8388608 else v64));
  v66 := FADD32(FADD32(FMUL32(1046401673, FEXP32(FMUL32(FMUL32(FSUB32(-2147483648, v1), 997315724), 1069066811))), FMUL32(1061702494, FEXP32(FMUL32(FMUL32(FSUB32(-2147483648, v1), 968773086), 1069066811)))), FEXP32(FMUL32(FMUL32(-976400384, FDIV32(1065353216, v1)), 1069066811)));
  call {:sourceloc_num 58}   v67 := $__log10_float((if FLT32(v66, 8388608) then 8388608 else v66));
  v68 := FP64_CONV32(FSUB64(FP32_CONV64(v65), FADD64(FMUL64(4604210043045952881, FP32_CONV64(v67)), 4600877379321698714)));
  v69 := FP64_CONV32(FMUL64(FP32_CONV64(v68), FDIV64(4607182418800017408, FADD64(FMUL64(-4629159984981585428, FP32_CONV64(v68)), FP32_CONV64(FP64_CONV32(FADD64(FMUL64(-4614973646155368366, FP32_CONV64(v67)), 4604930618986332160)))))));
  v70 := FMUL32(FEXP32(FMUL32(FP64_CONV32(FMUL64(FP32_CONV64(v67), FDIV64(4607182418800017408, FADD64(4607182418800017408, FP32_CONV64(FMUL32(v69, v69)))))), 1079286392)), FP64_CONV32(FMUL64(FP32_CONV64(v64), FDIV64(4607182418800017408, FADD64(4607182418800017408, FP32_CONV64(v64))))));
  assert {:sourceloc} {:sourceloc_num 59} true;
  v71 := $$RF[BV32_ADD(552960, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 60} true;
  $$RF[BV32_ADD(552960, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v71, v70);
  assert {:sourceloc} {:sourceloc_num 61} true;
  v72 := $$RB[BV32_ADD(552960, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 62} true;
  $$RB[BV32_ADD(552960, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v72, v70);
  assert {:sourceloc} {:sourceloc_num 63} true;
  v73 := $$RKLOW[BV32_ADD(55296, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 64} true;
  v74 := $$RF[BV32_ADD(649728, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v75 := FMUL32(v73, FMUL32(v12, FDIV32(1065353216, v74)));
  call {:sourceloc_num 65}   v76 := $__log10_float((if FLT32(v75, 8388608) then 8388608 else v75));
  v77 := FADD32(FADD32(FMUL32(1050924810, FEXP32(FMUL32(FMUL32(FSUB32(-2147483648, v1), 1012010273), 1069066811))), FMUL32(1059984507, FEXP32(FMUL32(FMUL32(FSUB32(-2147483648, v1), 973301383), 1069066811)))), FEXP32(FMUL32(FMUL32(-978407424, FDIV32(1065353216, v1)), 1069066811)));
  call {:sourceloc_num 66}   v78 := $__log10_float((if FLT32(v77, 8388608) then 8388608 else v77));
  v79 := FP64_CONV32(FSUB64(FP32_CONV64(v76), FADD64(FMUL64(4604210043045952881, FP32_CONV64(v78)), 4600877379321698714)));
  v80 := FP64_CONV32(FMUL64(FP32_CONV64(v79), FDIV64(4607182418800017408, FADD64(FMUL64(-4629159984981585428, FP32_CONV64(v79)), FP32_CONV64(FP64_CONV32(FADD64(FMUL64(-4614973646155368366, FP32_CONV64(v78)), 4604930618986332160)))))));
  v81 := FMUL32(FEXP32(FMUL32(FP64_CONV32(FMUL64(FP32_CONV64(v78), FDIV64(4607182418800017408, FADD64(4607182418800017408, FP32_CONV64(FMUL32(v80, v80)))))), 1079286392)), FP64_CONV32(FMUL64(FP32_CONV64(v75), FDIV64(4607182418800017408, FADD64(4607182418800017408, FP32_CONV64(v75))))));
  assert {:sourceloc} {:sourceloc_num 67} true;
  v82 := $$RF[BV32_ADD(649728, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 68} true;
  $$RF[BV32_ADD(649728, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v82, v81);
  assert {:sourceloc} {:sourceloc_num 69} true;
  v83 := $$RB[BV32_ADD(649728, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 70} true;
  $$RB[BV32_ADD(649728, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v83, v81);
  assert {:sourceloc} {:sourceloc_num 71} true;
  v84 := $$RKLOW[BV32_ADD(69120, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 72} true;
  v85 := $$RF[BV32_ADD(760320, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v86 := FMUL32(v84, FMUL32(v12, FDIV32(1065353216, v85)));
  call {:sourceloc_num 73}   v87 := $__log10_float((if FLT32(v86, 8388608) then 8388608 else v86));
  v88 := FADD32(FADD32(FMUL32(1053921221, FEXP32(FMUL32(FMUL32(FSUB32(-2147483648, v1), 997085199), 1069066811))), FMUL32(1058486301, FEXP32(FMUL32(FMUL32(FSUB32(-2147483648, v1), 978702864), 1069066811)))), FEXP32(FMUL32(FMUL32(-979236864, FDIV32(1065353216, v1)), 1069066811)));
  call {:sourceloc_num 74}   v89 := $__log10_float((if FLT32(v88, 8388608) then 8388608 else v88));
  v90 := FP64_CONV32(FSUB64(FP32_CONV64(v87), FADD64(FMUL64(4604210043045952881, FP32_CONV64(v89)), 4600877379321698714)));
  v91 := FP64_CONV32(FMUL64(FP32_CONV64(v90), FDIV64(4607182418800017408, FADD64(FMUL64(-4629159984981585428, FP32_CONV64(v90)), FP32_CONV64(FP64_CONV32(FADD64(FMUL64(-4614973646155368366, FP32_CONV64(v89)), 4604930618986332160)))))));
  v92 := FMUL32(FEXP32(FMUL32(FP64_CONV32(FMUL64(FP32_CONV64(v89), FDIV64(4607182418800017408, FADD64(4607182418800017408, FP32_CONV64(FMUL32(v91, v91)))))), 1079286392)), FP64_CONV32(FMUL64(FP32_CONV64(v86), FDIV64(4607182418800017408, FADD64(4607182418800017408, FP32_CONV64(v86))))));
  assert {:sourceloc} {:sourceloc_num 75} true;
  v93 := $$RF[BV32_ADD(760320, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 76} true;
  $$RF[BV32_ADD(760320, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v93, v92);
  assert {:sourceloc} {:sourceloc_num 77} true;
  v94 := $$RB[BV32_ADD(760320, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 78} true;
  $$RB[BV32_ADD(760320, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v94, v92);
  assert {:sourceloc} {:sourceloc_num 79} true;
  v95 := $$RKLOW[BV32_ADD(82944, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 80} true;
  v96 := $$RF[BV32_ADD(967680, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v97 := FMUL32(v95, FMUL32(v12, FDIV32(1065353216, v96)));
  call {:sourceloc_num 81}   v98 := $__log10_float((if FLT32(v97, 8388608) then 8388608 else v97));
  v99 := FADD32(FADD32(FMUL32(1048039129, FEXP32(FMUL32(FMUL32(FSUB32(-2147483648, v1), 1009667137), 1069066811))), FMUL32(1061293130, FEXP32(FMUL32(FMUL32(FSUB32(-2147483648, v1), 975738067), 1069066811)))), FEXP32(FMUL32(FMUL32(-981254144, FDIV32(1065353216, v1)), 1069066811)));
  call {:sourceloc_num 82}   v100 := $__log10_float((if FLT32(v99, 8388608) then 8388608 else v99));
  v101 := FP64_CONV32(FSUB64(FP32_CONV64(v98), FADD64(FMUL64(4604210043045952881, FP32_CONV64(v100)), 4600877379321698714)));
  v102 := FP64_CONV32(FMUL64(FP32_CONV64(v101), FDIV64(4607182418800017408, FADD64(FMUL64(-4629159984981585428, FP32_CONV64(v101)), FP32_CONV64(FP64_CONV32(FADD64(FMUL64(-4614973646155368366, FP32_CONV64(v100)), 4604930618986332160)))))));
  v103 := FMUL32(FEXP32(FMUL32(FP64_CONV32(FMUL64(FP32_CONV64(v100), FDIV64(4607182418800017408, FADD64(4607182418800017408, FP32_CONV64(FMUL32(v102, v102)))))), 1079286392)), FP64_CONV32(FMUL64(FP32_CONV64(v97), FDIV64(4607182418800017408, FADD64(4607182418800017408, FP32_CONV64(v97))))));
  assert {:sourceloc} {:sourceloc_num 83} true;
  v104 := $$RF[BV32_ADD(967680, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 84} true;
  $$RF[BV32_ADD(967680, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v104, v103);
  assert {:sourceloc} {:sourceloc_num 85} true;
  v105 := $$RB[BV32_ADD(967680, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 86} true;
  $$RB[BV32_ADD(967680, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v105, v103);
  assert {:sourceloc} {:sourceloc_num 87} true;
  v106 := $$RKLOW[BV32_ADD(96768, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 88} true;
  v107 := $$RF[BV32_ADD(1064448, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v108 := FMUL32(v106, FMUL32(v12, FDIV32(1065353216, v107)));
  call {:sourceloc_num 89}   v109 := $__log10_float((if FLT32(v108, 8388608) then 8388608 else v108));
  v110 := FADD32(FADD32(FMUL32(1046361407, FEXP32(FMUL32(FMUL32(FSUB32(-2147483648, v1), 1012754377), 1069066811))), FMUL32(1061712560, FEXP32(FMUL32(FMUL32(FSUB32(-2147483648, v1), 967984324), 1069066811)))), FEXP32(FMUL32(FMUL32(-975593472, FDIV32(1065353216, v1)), 1069066811)));
  call {:sourceloc_num 90}   v111 := $__log10_float((if FLT32(v110, 8388608) then 8388608 else v110));
  v112 := FP64_CONV32(FSUB64(FP32_CONV64(v109), FADD64(FMUL64(4604210043045952881, FP32_CONV64(v111)), 4600877379321698714)));
  v113 := FP64_CONV32(FMUL64(FP32_CONV64(v112), FDIV64(4607182418800017408, FADD64(FMUL64(-4629159984981585428, FP32_CONV64(v112)), FP32_CONV64(FP64_CONV32(FADD64(FMUL64(-4614973646155368366, FP32_CONV64(v111)), 4604930618986332160)))))));
  v114 := FMUL32(FEXP32(FMUL32(FP64_CONV32(FMUL64(FP32_CONV64(v111), FDIV64(4607182418800017408, FADD64(4607182418800017408, FP32_CONV64(FMUL32(v113, v113)))))), 1079286392)), FP64_CONV32(FMUL64(FP32_CONV64(v108), FDIV64(4607182418800017408, FADD64(4607182418800017408, FP32_CONV64(v108))))));
  assert {:sourceloc} {:sourceloc_num 91} true;
  v115 := $$RF[BV32_ADD(1064448, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 92} true;
  $$RF[BV32_ADD(1064448, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v115, v114);
  assert {:sourceloc} {:sourceloc_num 93} true;
  v116 := $$RB[BV32_ADD(1064448, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 94} true;
  $$RB[BV32_ADD(1064448, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v116, v114);
  assert {:sourceloc} {:sourceloc_num 95} true;
  v117 := $$RKLOW[BV32_ADD(110592, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 96} true;
  v118 := $$RF[BV32_ADD(1216512, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v119 := FMUL32(v117, FMUL32(v12, FDIV32(1065353216, v118)));
  call {:sourceloc_num 97}   v120 := $__log10_float((if FLT32(v119, 8388608) then 8388608 else v119));
  v121 := FADD32(FADD32(FMUL32(1053028673, FEXP32(FMUL32(FMUL32(FSUB32(-2147483648, v1), 1033674609), 1069066811))), FMUL32(1058932575, FEXP32(FMUL32(FMUL32(FSUB32(-2147483648, v1), 972836316), 1069066811)))), FEXP32(FMUL32(FMUL32(-979425280, FDIV32(1065353216, v1)), 1069066811)));
  call {:sourceloc_num 98}   v122 := $__log10_float((if FLT32(v121, 8388608) then 8388608 else v121));
  v123 := FP64_CONV32(FSUB64(FP32_CONV64(v120), FADD64(FMUL64(4604210043045952881, FP32_CONV64(v122)), 4600877379321698714)));
  v124 := FP64_CONV32(FMUL64(FP32_CONV64(v123), FDIV64(4607182418800017408, FADD64(FMUL64(-4629159984981585428, FP32_CONV64(v123)), FP32_CONV64(FP64_CONV32(FADD64(FMUL64(-4614973646155368366, FP32_CONV64(v122)), 4604930618986332160)))))));
  v125 := FMUL32(FEXP32(FMUL32(FP64_CONV32(FMUL64(FP32_CONV64(v122), FDIV64(4607182418800017408, FADD64(4607182418800017408, FP32_CONV64(FMUL32(v124, v124)))))), 1079286392)), FP64_CONV32(FMUL64(FP32_CONV64(v119), FDIV64(4607182418800017408, FADD64(4607182418800017408, FP32_CONV64(v119))))));
  assert {:sourceloc} {:sourceloc_num 99} true;
  v126 := $$RF[BV32_ADD(1216512, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 100} true;
  $$RF[BV32_ADD(1216512, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v126, v125);
  assert {:sourceloc} {:sourceloc_num 101} true;
  v127 := $$RB[BV32_ADD(1216512, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 102} true;
  $$RB[BV32_ADD(1216512, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v127, v125);
  assert {:sourceloc} {:sourceloc_num 103} true;
  v128 := $$RKLOW[BV32_ADD(124416, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 104} true;
  v129 := $$RF[BV32_ADD(1271808, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v130 := FMUL32(v128, FMUL32(v12, FDIV32(1065353216, v129)));
  call {:sourceloc_num 105}   v131 := $__log10_float((if FLT32(v130, 8388608) then 8388608 else v130));
  v132 := FADD32(FADD32(FMUL32(1055874089, FEXP32(FMUL32(FMUL32(FSUB32(-2147483648, v1), 1004077490), 1069066811))), FMUL32(1057509868, FEXP32(FMUL32(FMUL32(FSUB32(-2147483648, v1), 981240854), 1069066811)))), FEXP32(FMUL32(FMUL32(-979677184, FDIV32(1065353216, v1)), 1069066811)));
  call {:sourceloc_num 106}   v133 := $__log10_float((if FLT32(v132, 8388608) then 8388608 else v132));
  v134 := FP64_CONV32(FSUB64(FP32_CONV64(v131), FADD64(FMUL64(4604210043045952881, FP32_CONV64(v133)), 4600877379321698714)));
  v135 := FP64_CONV32(FMUL64(FP32_CONV64(v134), FDIV64(4607182418800017408, FADD64(FMUL64(-4629159984981585428, FP32_CONV64(v134)), FP32_CONV64(FP64_CONV32(FADD64(FMUL64(-4614973646155368366, FP32_CONV64(v133)), 4604930618986332160)))))));
  v136 := FMUL32(FEXP32(FMUL32(FP64_CONV32(FMUL64(FP32_CONV64(v133), FDIV64(4607182418800017408, FADD64(4607182418800017408, FP32_CONV64(FMUL32(v135, v135)))))), 1079286392)), FP64_CONV32(FMUL64(FP32_CONV64(v130), FDIV64(4607182418800017408, FADD64(4607182418800017408, FP32_CONV64(v130))))));
  assert {:sourceloc} {:sourceloc_num 107} true;
  v137 := $$RF[BV32_ADD(1271808, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 108} true;
  $$RF[BV32_ADD(1271808, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v137, v136);
  assert {:sourceloc} {:sourceloc_num 109} true;
  v138 := $$RB[BV32_ADD(1271808, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 110} true;
  $$RB[BV32_ADD(1271808, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v138, v136);
  assert {:sourceloc} {:sourceloc_num 111} true;
  v139 := $$RKLOW[BV32_ADD(138240, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 112} true;
  v140 := $$RF[BV32_ADD(1562112, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v141 := FMUL32(v139, FMUL32(FP64_CONV32(FADD64(FADD64(FADD64(FADD64(FADD64(FADD64(FADD64(FMUL64(4617315517961601024, FP32_CONV64(v14)), FP32_CONV64(FADD32($CTOT.0, v13))), FP32_CONV64(v15)), FMUL64(4602678819172646912, FP32_CONV64(v16))), FP32_CONV64(v17)), FMUL64(4611686018427387904, FP32_CONV64(v18))), FP32_CONV64(FMUL32(1069547520, v19))), FP32_CONV64(FMUL32(1069547520, v20)))), FDIV32(1065353216, v140)));
  v142 := FP64_CONV32(FMUL64(FP32_CONV64(v141), FDIV64(4607182418800017408, FADD64(4607182418800017408, FP32_CONV64(v141)))));
  assert {:sourceloc} {:sourceloc_num 113} true;
  v143 := $$RF[BV32_ADD(1562112, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 114} true;
  $$RF[BV32_ADD(1562112, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v143, v142);
  assert {:sourceloc} {:sourceloc_num 115} true;
  v144 := $$RB[BV32_ADD(1562112, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 116} true;
  $$RB[BV32_ADD(1562112, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v144, v142);
  assert {:sourceloc} {:sourceloc_num 117} true;
  v145 := $$RKLOW[BV32_ADD(152064, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 118} true;
  v146 := $$RF[BV32_ADD(1575936, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v147 := FMUL32(v145, FMUL32(v12, FDIV32(1065353216, v146)));
  call {:sourceloc_num 119}   v148 := $__log10_float((if FLT32(v147, 8388608) then 8388608 else v147));
  v149 := FADD32(FADD32(FMUL32(-1082439133, FEXP32(FMUL32(FMUL32(FSUB32(-2147483648, v1), 960677062), 1069066811))), FMUL32(1073587474, FEXP32(FMUL32(FMUL32(FSUB32(-2147483648, v1), 1047430216), 1069066811)))), FEXP32(FMUL32(FMUL32(1034080485, FDIV32(1065353216, v1)), 1069066811)));
  call {:sourceloc_num 120}   v150 := $__log10_float((if FLT32(v149, 8388608) then 8388608 else v149));
  v151 := FP64_CONV32(FSUB64(FP32_CONV64(v148), FADD64(FMUL64(4604210043045952881, FP32_CONV64(v150)), 4600877379321698714)));
  v152 := FP64_CONV32(FMUL64(FP32_CONV64(v151), FDIV64(4607182418800017408, FADD64(FMUL64(-4629159984981585428, FP32_CONV64(v151)), FP32_CONV64(FP64_CONV32(FADD64(FMUL64(-4614973646155368366, FP32_CONV64(v150)), 4604930618986332160)))))));
  v153 := FMUL32(FEXP32(FMUL32(FP64_CONV32(FMUL64(FP32_CONV64(v150), FDIV64(4607182418800017408, FADD64(4607182418800017408, FP32_CONV64(FMUL32(v152, v152)))))), 1079286392)), FP64_CONV32(FMUL64(FP32_CONV64(v147), FDIV64(4607182418800017408, FADD64(4607182418800017408, FP32_CONV64(v147))))));
  assert {:sourceloc} {:sourceloc_num 121} true;
  v154 := $$RF[BV32_ADD(1575936, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 122} true;
  $$RF[BV32_ADD(1575936, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v154, v153);
  assert {:sourceloc} {:sourceloc_num 123} true;
  v155 := $$RB[BV32_ADD(1575936, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 124} true;
  $$RB[BV32_ADD(1575936, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v155, v153);
  return;
$truebb:
  assume {:partition} v2;
  assert {:block_sourceloc} {:sourceloc_num 125} true;
  goto $2;
$falsebb:
  assume {:partition} !v2;
  assert {:block_sourceloc} {:sourceloc_num 126} true;
  goto $4;
}
procedure {:source_name "__log10_float"} $__log10_float($0:int) returns ($ret:int);
axiom (if group_size_y == 1 then 1 else 0) != 0;
axiom (if group_size_z == 1 then 1 else 0) != 0;
axiom (if num_groups_y == 1 then 1 else 0) != 0;
axiom (if num_groups_z == 1 then 1 else 0) != 0;
axiom (if group_size_x == 128 then 1 else 0) != 0;
axiom (if num_groups_x == 108 then 1 else 0) != 0;
axiom (if global_offset_x == 0 then 1 else 0) != 0;
axiom (if global_offset_y == 0 then 1 else 0) != 0;
axiom (if global_offset_z == 0 then 1 else 0) != 0;
