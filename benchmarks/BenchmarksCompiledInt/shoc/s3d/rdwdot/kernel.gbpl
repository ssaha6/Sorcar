type _SIZE_T_TYPE = bv32;

procedure _ATOMIC_OP32(x : [int]int, y : int) returns (z : int, A : [int]int);
var {:source_name "RKF"} {:global} $$RKF : [int]int;
axiom {:array_info "$$RKF"} {:global} {:elem_width 32} {:source_name "RKF"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$RKF : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$RKF : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$RKF : bool;

var {:source_name "RKR"} {:global} $$RKR : [int]int;
axiom {:array_info "$$RKR"} {:global} {:elem_width 32} {:source_name "RKR"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$RKR : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$RKR : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$RKR : bool;

var {:source_name "WDOT"} {:global} $$WDOT : [int]int;
axiom {:array_info "$$WDOT"} {:global} {:elem_width 32} {:source_name "WDOT"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$WDOT : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$WDOT : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$WDOT : bool;

var {:source_name "molwt"} {:global} $$molwt : [int]int;
axiom {:array_info "$$molwt"} {:global} {:elem_width 32} {:source_name "molwt"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$molwt : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$molwt : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$molwt : bool;

const _WATCHED_OFFSET : int;
const {:global_offset_x} global_offset_x : int;
const {:global_offset_y} global_offset_y : int;
const {:global_offset_z} global_offset_z : int;
const {:group_id_x} group_id_x : int;
const {:group_size_x} group_size_x : int;
const {:group_size_y} group_size_y : int;
const {:group_size_z} group_size_z : int;
const {:local_id_x} local_id_x : int;
const {:num_groups_x} num_groups_x : int;
const {:num_groups_y} num_groups_y : int;
const {:num_groups_z} num_groups_z : int;
function FADD32(int, int) : int;
function FMUL32(int, int) : int;
function FSUB32(int, int) : int;
function {:inline true} BV32_ADD(x : int, y : int) : int {
  x + y
}
function {:inline true} BV32_MUL(x : int, y : int) : int {
  x * y
}
procedure {:source_name "rdwdot_kernel"} {:kernel} $rdwdot_kernel($rateconv:int)
{
  var v0:int;
  var v1:int;
  var v2:int;
  var v3:int;
  var v4:int;
  var v5:int;
  var v6:int;
  var v7:int;
  var v8:int;
  var v9:int;
  var v10:int;
  var v11:int;
  var v12:int;
  var v13:int;
  var v14:int;
  var v29:int;
  var v15:int;
  var v16:int;
  var v17:int;
  var v18:int;
  var v19:int;
  var v20:int;
  var v21:int;
  var v22:int;
  var v23:int;
  var v24:int;
  var v25:int;
  var v26:int;
  var v27:int;
  var v28:int;
  var v58:int;
  var v30:int;
  var v31:int;
  var v32:int;
  var v33:int;
  var v34:int;
  var v35:int;
  var v36:int;
  var v37:int;
  var v38:int;
  var v39:int;
  var v40:int;
  var v41:int;
  var v42:int;
  var v43:int;
  var v44:int;
  var v45:int;
  var v46:int;
  var v47:int;
  var v48:int;
  var v49:int;
  var v50:int;
  var v51:int;
  var v52:int;
  var v53:int;
  var v54:int;
  var v55:int;
  var v56:int;
  var v57:int;
  var v115:int;
  var v59:int;
  var v60:int;
  var v61:int;
  var v62:int;
  var v63:int;
  var v64:int;
  var v65:int;
  var v66:int;
  var v67:int;
  var v68:int;
  var v69:int;
  var v70:int;
  var v71:int;
  var v72:int;
  var v73:int;
  var v74:int;
  var v75:int;
  var v76:int;
  var v77:int;
  var v78:int;
  var v79:int;
  var v80:int;
  var v81:int;
  var v82:int;
  var v83:int;
  var v84:int;
  var v85:int;
  var v86:int;
  var v87:int;
  var v88:int;
  var v89:int;
  var v90:int;
  var v91:int;
  var v92:int;
  var v93:int;
  var v94:int;
  var v95:int;
  var v96:int;
  var v97:int;
  var v98:int;
  var v99:int;
  var v100:int;
  var v101:int;
  var v102:int;
  var v103:int;
  var v104:int;
  var v105:int;
  var v106:int;
  var v107:int;
  var v108:int;
  var v109:int;
  var v110:int;
  var v111:int;
  var v112:int;
  var v113:int;
  var v114:int;
  var v116:int;
  var v117:int;
  var v118:int;
  var v119:int;
  var v120:int;
  var v121:int;
  var v122:int;
  var v123:int;
  var v124:int;
  var v125:int;
  var v126:int;
  var v127:int;
  var v128:int;
  var v129:int;
  var v130:int;
  var v131:int;
  var v132:int;
  var v133:int;
  var v134:int;
  var v135:int;
  var v136:int;
  var v137:int;
  var v138:int;
  var v139:int;
  var v140:int;
  var v141:int;
  var v142:int;
  var v143:int;
  var v144:int;
  var v145:int;
  var v146:int;
  var v147:int;
  var v148:int;
  var v149:int;
  var v150:int;
  var v151:int;
  var v152:int;
  var v153:int;
  var v154:int;
  var v155:int;
  var v156:int;
  var v157:int;
  var v158:int;
  var v159:int;
  var v160:int;
  var v161:int;
  var v162:int;
  var v163:int;
  var v164:int;
  var v165:int;
  var v166:int;
  var v167:int;
  var v168:int;
  var v169:int;
  var v170:int;
  var v171:int;
  var v172:int;
  var v173:int;
$0:
  assert {:block_sourceloc} {:sourceloc_num 0} true;
  assert {:sourceloc} {:sourceloc_num 1} true;
  v0 := $$RKF[BV32_ADD(55296, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 2} true;
  v1 := $$RKR[BV32_ADD(55296, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 3} true;
  v2 := $$RKF[BV32_ADD(69120, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 4} true;
  v3 := $$RKR[BV32_ADD(69120, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 5} true;
  v4 := $$RKF[BV32_ADD(82944, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 6} true;
  v5 := $$RKR[BV32_ADD(82944, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 7} true;
  v6 := $$RKF[BV32_ADD(96768, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 8} true;
  v7 := $$RKR[BV32_ADD(96768, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v8 := FADD32(FADD32(FADD32(FSUB32(v0, v1), FSUB32(v2, v3)), FSUB32(v4, v5)), FSUB32(v6, v7));
  assert {:sourceloc} {:sourceloc_num 9} true;
  v9 := $$RKF[BV32_ADD(152064, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 10} true;
  v10 := $$RKR[BV32_ADD(152064, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 11} true;
  v11 := $$RKF[BV32_ADD(165888, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 12} true;
  v12 := $$RKR[BV32_ADD(165888, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 13} true;
  v13 := $$RKF[BV32_ADD(179712, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 14} true;
  v14 := $$RKR[BV32_ADD(179712, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 15} true;
  v15 := $$RKF[BV32_ADD(193536, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 16} true;
  v16 := $$RKR[BV32_ADD(193536, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 17} true;
  v17 := $$RKF[BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x)];
  assert {:sourceloc} {:sourceloc_num 18} true;
  v18 := $$RKR[BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x)];
  assert {:sourceloc} {:sourceloc_num 19} true;
  v19 := $$RKF[BV32_ADD(13824, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 20} true;
  v20 := $$RKR[BV32_ADD(13824, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 21} true;
  v21 := $$RKF[BV32_ADD(27648, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 22} true;
  v22 := $$RKR[BV32_ADD(27648, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 23} true;
  v23 := $$RKF[BV32_ADD(110592, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 24} true;
  v24 := $$RKR[BV32_ADD(110592, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 25} true;
  v25 := $$RKF[BV32_ADD(124416, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 26} true;
  v26 := $$RKR[BV32_ADD(124416, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 27} true;
  v27 := $$RKF[BV32_ADD(221184, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 28} true;
  v28 := $$RKR[BV32_ADD(221184, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 29} true;
  v29 := $$RKF[BV32_ADD(235008, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 30} true;
  v30 := $$RKR[BV32_ADD(235008, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 31} true;
  v31 := $$RKF[BV32_ADD(248832, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 32} true;
  v32 := $$RKR[BV32_ADD(248832, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 33} true;
  v33 := $$RKF[BV32_ADD(317952, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 34} true;
  v34 := $$RKR[BV32_ADD(317952, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 35} true;
  v35 := $$RKF[BV32_ADD(331776, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 36} true;
  v36 := $$RKR[BV32_ADD(331776, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 37} true;
  v37 := $$RKF[BV32_ADD(400896, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 38} true;
  v38 := $$RKR[BV32_ADD(400896, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 39} true;
  v39 := $$RKF[BV32_ADD(456192, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 40} true;
  v40 := $$RKR[BV32_ADD(456192, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 41} true;
  v41 := $$RKF[BV32_ADD(470016, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 42} true;
  v42 := $$RKR[BV32_ADD(470016, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 43} true;
  v43 := $$RKF[BV32_ADD(483840, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 44} true;
  v44 := $$RKR[BV32_ADD(483840, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 45} true;
  v45 := $$RKF[BV32_ADD(497664, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 46} true;
  v46 := $$RKR[BV32_ADD(497664, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 47} true;
  v47 := $$RKF[BV32_ADD(552960, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 48} true;
  v48 := $$RKR[BV32_ADD(552960, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 49} true;
  v49 := $$RKF[BV32_ADD(566784, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 50} true;
  v50 := $$RKR[BV32_ADD(566784, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 51} true;
  v51 := $$RKF[BV32_ADD(594432, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 52} true;
  v52 := $$RKR[BV32_ADD(594432, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 53} true;
  v53 := $$RKF[BV32_ADD(622080, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 54} true;
  v54 := $$RKR[BV32_ADD(622080, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 55} true;
  v55 := $$RKF[BV32_ADD(649728, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 56} true;
  v56 := $$RKR[BV32_ADD(649728, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 57} true;
  v57 := $$RKF[BV32_ADD(663552, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 58} true;
  v58 := $$RKR[BV32_ADD(663552, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 59} true;
  v59 := $$RKF[BV32_ADD(677376, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 60} true;
  v60 := $$RKR[BV32_ADD(677376, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 61} true;
  v61 := $$RKF[BV32_ADD(705024, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 62} true;
  v62 := $$RKR[BV32_ADD(705024, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 63} true;
  v63 := $$RKF[BV32_ADD(705024, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 64} true;
  v64 := $$RKR[BV32_ADD(705024, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 65} true;
  v65 := $$RKF[BV32_ADD(718848, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 66} true;
  v66 := $$RKR[BV32_ADD(718848, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 67} true;
  v67 := $$RKF[BV32_ADD(774144, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 68} true;
  v68 := $$RKR[BV32_ADD(774144, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 69} true;
  v69 := $$RKF[BV32_ADD(815616, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 70} true;
  v70 := $$RKR[BV32_ADD(815616, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 71} true;
  v71 := $$RKF[BV32_ADD(843264, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 72} true;
  v72 := $$RKR[BV32_ADD(843264, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 73} true;
  v73 := $$RKF[BV32_ADD(857088, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 74} true;
  v74 := $$RKR[BV32_ADD(857088, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 75} true;
  v75 := $$RKF[BV32_ADD(870912, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 76} true;
  v76 := $$RKR[BV32_ADD(870912, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 77} true;
  v77 := $$RKF[BV32_ADD(884736, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 78} true;
  v78 := $$RKR[BV32_ADD(884736, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 79} true;
  v79 := $$RKF[BV32_ADD(967680, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 80} true;
  v80 := $$RKR[BV32_ADD(967680, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 81} true;
  v81 := $$RKF[BV32_ADD(981504, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 82} true;
  v82 := $$RKR[BV32_ADD(981504, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 83} true;
  v83 := $$RKF[BV32_ADD(1050624, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 84} true;
  v84 := $$RKR[BV32_ADD(1050624, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 85} true;
  v85 := $$RKF[BV32_ADD(1064448, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 86} true;
  v86 := $$RKR[BV32_ADD(1064448, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 87} true;
  v87 := $$RKF[BV32_ADD(1078272, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 88} true;
  v88 := $$RKR[BV32_ADD(1078272, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 89} true;
  v89 := $$RKF[BV32_ADD(1188864, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 90} true;
  v90 := $$RKR[BV32_ADD(1188864, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 91} true;
  v91 := $$RKF[BV32_ADD(1244160, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 92} true;
  v92 := $$RKR[BV32_ADD(1244160, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 93} true;
  v93 := $$RKF[BV32_ADD(1257984, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 94} true;
  v94 := $$RKR[BV32_ADD(1257984, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 95} true;
  v95 := $$RKF[BV32_ADD(1285632, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 96} true;
  v96 := $$RKR[BV32_ADD(1285632, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 97} true;
  v97 := $$RKF[BV32_ADD(1313280, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 98} true;
  v98 := $$RKR[BV32_ADD(1313280, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 99} true;
  v99 := $$RKF[BV32_ADD(1327104, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 100} true;
  v100 := $$RKR[BV32_ADD(1327104, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 101} true;
  v101 := $$RKF[BV32_ADD(1340928, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 102} true;
  v102 := $$RKR[BV32_ADD(1340928, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 103} true;
  v103 := $$RKF[BV32_ADD(1396224, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 104} true;
  v104 := $$RKR[BV32_ADD(1396224, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 105} true;
  v105 := $$RKF[BV32_ADD(1437696, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 106} true;
  v106 := $$RKR[BV32_ADD(1437696, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 107} true;
  v107 := $$RKF[BV32_ADD(1479168, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 108} true;
  v108 := $$RKR[BV32_ADD(1479168, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 109} true;
  v109 := $$RKF[BV32_ADD(1492992, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 110} true;
  v110 := $$RKR[BV32_ADD(1492992, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 111} true;
  v111 := $$RKF[BV32_ADD(1575936, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 112} true;
  v112 := $$RKR[BV32_ADD(1575936, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 113} true;
  v113 := $$RKF[BV32_ADD(1589760, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 114} true;
  v114 := $$RKR[BV32_ADD(1589760, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 115} true;
  v115 := $$RKF[BV32_ADD(1617408, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 116} true;
  v116 := $$RKR[BV32_ADD(1617408, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 117} true;
  v117 := $$RKF[BV32_ADD(1700352, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 118} true;
  v118 := $$RKR[BV32_ADD(1700352, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 119} true;
  v119 := $$RKF[BV32_ADD(1728000, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 120} true;
  v120 := $$RKR[BV32_ADD(1728000, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 121} true;
  v121 := $$RKF[BV32_ADD(1741824, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 122} true;
  v122 := $$RKR[BV32_ADD(1741824, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 123} true;
  v123 := $$RKF[BV32_ADD(1755648, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 124} true;
  v124 := $$RKR[BV32_ADD(1755648, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 125} true;
  v125 := $$RKF[BV32_ADD(1810944, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 126} true;
  v126 := $$RKR[BV32_ADD(1810944, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 127} true;
  v127 := $$RKF[BV32_ADD(1824768, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 128} true;
  v128 := $$RKR[BV32_ADD(1824768, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 129} true;
  v129 := $$RKF[BV32_ADD(1838592, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 130} true;
  v130 := $$RKR[BV32_ADD(1838592, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 131} true;
  v131 := $$RKF[BV32_ADD(1852416, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 132} true;
  v132 := $$RKR[BV32_ADD(1852416, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 133} true;
  v133 := $$RKF[BV32_ADD(2004480, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 134} true;
  v134 := $$RKR[BV32_ADD(2004480, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 135} true;
  v135 := $$RKF[BV32_ADD(2032128, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 136} true;
  v136 := $$RKR[BV32_ADD(2032128, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 137} true;
  v137 := $$RKF[BV32_ADD(2045952, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 138} true;
  v138 := $$RKR[BV32_ADD(2045952, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 139} true;
  v139 := $$RKF[BV32_ADD(2059776, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 140} true;
  v140 := $$RKR[BV32_ADD(2059776, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 141} true;
  v141 := $$RKF[BV32_ADD(2142720, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 142} true;
  v142 := $$RKR[BV32_ADD(2142720, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 143} true;
  v143 := $$RKF[BV32_ADD(2156544, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 144} true;
  v144 := $$RKR[BV32_ADD(2156544, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 145} true;
  v145 := $$RKF[BV32_ADD(2267136, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 146} true;
  v146 := $$RKR[BV32_ADD(2267136, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 147} true;
  v147 := $$RKF[BV32_ADD(2294784, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 148} true;
  v148 := $$RKR[BV32_ADD(2294784, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 149} true;
  v149 := $$RKF[BV32_ADD(2336256, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 150} true;
  v150 := $$RKR[BV32_ADD(2336256, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 151} true;
  v151 := $$RKF[BV32_ADD(2350080, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 152} true;
  v152 := $$RKR[BV32_ADD(2350080, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 153} true;
  v153 := $$RKF[BV32_ADD(2377728, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 154} true;
  v154 := $$RKR[BV32_ADD(2377728, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 155} true;
  v155 := $$RKF[BV32_ADD(2474496, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 156} true;
  v156 := $$RKR[BV32_ADD(2474496, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 157} true;
  v157 := $$RKF[BV32_ADD(2543616, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 158} true;
  v158 := $$RKR[BV32_ADD(2543616, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 159} true;
  v159 := $$RKF[BV32_ADD(2557440, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 160} true;
  v160 := $$RKR[BV32_ADD(2557440, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 161} true;
  v161 := $$RKF[BV32_ADD(2612736, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 162} true;
  v162 := $$RKR[BV32_ADD(2612736, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 163} true;
  v163 := $$RKF[BV32_ADD(2626560, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 164} true;
  v164 := $$RKR[BV32_ADD(2626560, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 165} true;
  v165 := $$RKF[BV32_ADD(2640384, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 166} true;
  v166 := $$RKR[BV32_ADD(2640384, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 167} true;
  v167 := $$RKF[BV32_ADD(2654208, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 168} true;
  v168 := $$RKR[BV32_ADD(2654208, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 169} true;
  v169 := $$RKF[BV32_ADD(2737152, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 170} true;
  v170 := $$RKR[BV32_ADD(2737152, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 171} true;
  v171 := $$RKF[BV32_ADD(2750976, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 172} true;
  v172 := $$RKR[BV32_ADD(2750976, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 173} true;
  v173 := $$molwt[1];
  assert {:sourceloc} {:sourceloc_num 174} true;
  $$WDOT[BV32_ADD(13824, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(FMUL32(FSUB32(FSUB32(FADD32(FSUB32(FSUB32(FSUB32(FSUB32(FSUB32(FSUB32(FADD32(FSUB32(FSUB32(FADD32(FADD32(FSUB32(FSUB32(FSUB32(FSUB32(FSUB32(FADD32(FADD32(FSUB32(FSUB32(FSUB32(FSUB32(FSUB32(FSUB32(FADD32(FADD32(FADD32(FADD32(FADD32(FSUB32(FADD32(FSUB32(FSUB32(FSUB32(FSUB32(FADD32(FADD32(FADD32(FADD32(FADD32(FSUB32(FADD32(FSUB32(FSUB32(FADD32(FADD32(FADD32(FADD32(FSUB32(FADD32(FADD32(FADD32(FADD32(FADD32(FADD32(FSUB32(FADD32(FADD32(FSUB32(FSUB32(FADD32(FADD32(FADD32(FADD32(FADD32(FSUB32(FSUB32(FSUB32(FSUB32(FSUB32(FSUB32(FSUB32(FSUB32(FSUB32(FSUB32(FADD32(FADD32(FSUB32(-2147483648, FSUB32(v17, v18)), FSUB32(v19, v20)), FSUB32(v21, v22)), v8), v8), FSUB32(v23, v24)), FSUB32(v25, v26)), FADD32(FADD32(FADD32(FSUB32(v9, v10), FSUB32(v11, v12)), FSUB32(v13, v14)), FSUB32(v15, v16))), FSUB32(v27, v28)), FSUB32(v29, v30)), FSUB32(v31, v32)), FSUB32(v33, v34)), FSUB32(v35, v36)), FSUB32(v37, v38)), FSUB32(v39, v40)), FSUB32(v41, v42)), FSUB32(v43, v44)), FSUB32(v45, v46)), FSUB32(v47, v48)), FSUB32(v49, v50)), FSUB32(v51, v52)), FSUB32(v53, v54)), FSUB32(v55, v56)), FSUB32(v57, v58)), FSUB32(v59, v60)), FSUB32(v61, v62)), FSUB32(v63, v64)), FSUB32(v65, v66)), FSUB32(v67, v68)), FSUB32(v69, v70)), FSUB32(v71, v72)), FSUB32(v73, v74)), FSUB32(v75, v76)), FSUB32(v77, v78)), FSUB32(v79, v80)), FSUB32(v81, v82)), FSUB32(v83, v84)), FSUB32(v85, v86)), FSUB32(v87, v88)), FSUB32(v89, v90)), FSUB32(v91, v92)), FSUB32(v93, v94)), FSUB32(v95, v96)), FSUB32(v97, v98)), FSUB32(v99, v100)), FSUB32(v101, v102)), FSUB32(v103, v104)), FSUB32(v105, v106)), FSUB32(v107, v108)), FSUB32(v109, v110)), FSUB32(v111, v112)), FSUB32(v113, v114)), FSUB32(v115, v116)), FSUB32(v117, v118)), FSUB32(v119, v120)), FSUB32(v121, v122)), FSUB32(v123, v124)), FSUB32(v125, v126)), FSUB32(v127, v128)), FSUB32(v129, v130)), FSUB32(v131, v132)), FSUB32(v133, v134)), FSUB32(v135, v136)), FSUB32(v137, v138)), FSUB32(v139, v140)), FSUB32(v141, v142)), FSUB32(v143, v144)), FSUB32(v145, v146)), FSUB32(v147, v148)), FSUB32(v149, v150)), FSUB32(v151, v152)), FSUB32(v153, v154)), FSUB32(v155, v156)), FSUB32(v157, v158)), FSUB32(v159, v160)), FSUB32(v161, v162)), FSUB32(v163, v164)), FSUB32(v165, v166)), FSUB32(v167, v168)), FSUB32(v169, v170)), FSUB32(v171, v172)), $rateconv), v173);
  return;
}
axiom (if group_size_y == 1 then 1 else 0) != 0;
axiom (if group_size_z == 1 then 1 else 0) != 0;
axiom (if num_groups_y == 1 then 1 else 0) != 0;
axiom (if num_groups_z == 1 then 1 else 0) != 0;
axiom (if group_size_x == 128 then 1 else 0) != 0;
axiom (if num_groups_x == 108 then 1 else 0) != 0;
axiom (if global_offset_x == 0 then 1 else 0) != 0;
axiom (if global_offset_y == 0 then 1 else 0) != 0;
axiom (if global_offset_z == 0 then 1 else 0) != 0;
