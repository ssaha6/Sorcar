type _SIZE_T_TYPE = bv32;

procedure _ATOMIC_OP32(x : [int]int, y : int) returns (z : int, A : [int]int);
var {:source_name "T"} {:global} $$T : [int]int;
axiom {:array_info "$$T"} {:global} {:elem_width 32} {:source_name "T"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$T : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$T : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$T : bool;

var {:source_name "RF"} {:global} $$RF : [int]int;
axiom {:array_info "$$RF"} {:global} {:elem_width 32} {:source_name "RF"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$RF : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$RF : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$RF : bool;

var {:source_name "RB"} {:global} $$RB : [int]int;
axiom {:array_info "$$RB"} {:global} {:elem_width 32} {:source_name "RB"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$RB : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$RB : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$RB : bool;

var {:source_name "EG"} {:global} $$EG : [int]int;
axiom {:array_info "$$EG"} {:global} {:elem_width 32} {:source_name "EG"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$EG : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$EG : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$EG : bool;

const _WATCHED_OFFSET : int;
const {:global_offset_x} global_offset_x : int;
const {:global_offset_y} global_offset_y : int;
const {:global_offset_z} global_offset_z : int;
const {:group_id_x} group_id_x : int;
const {:group_size_x} group_size_x : int;
const {:group_size_y} group_size_y : int;
const {:group_size_z} group_size_z : int;
const {:local_id_x} local_id_x : int;
const {:num_groups_x} num_groups_x : int;
const {:num_groups_y} num_groups_y : int;
const {:num_groups_z} num_groups_z : int;
function FDIV32(int, int) : int;
function FLT32(int, int) : bool;
function FMUL32(int, int) : int;
function {:inline true} BV32_ADD(x : int, y : int) : int {
  x + y
}
function {:inline true} BV32_MUL(x : int, y : int) : int {
  x * y
}
procedure {:source_name "ratt4_kernel"} {:kernel} $ratt4_kernel($TCONV:int)
{
  var v4:int;
  var v5:int;
  var v6:int;
  var v7:int;
  var v8:int;
  var v9:int;
  var v1:int;
  var v2:int;
  var v3:int;
  var v0:int;
  var v10:int;
  var v11:int;
  var v12:int;
  var v13:int;
  var v14:int;
  var v15:int;
  var v16:int;
  var v17:int;
  var v18:int;
  var v19:int;
  var v20:int;
  var v21:int;
  var v22:int;
  var v23:int;
  var v24:int;
  var v25:int;
  var v26:int;
  var v27:int;
  var v55:int;
  var v28:int;
  var v29:int;
  var v30:int;
  var v31:int;
  var v32:int;
  var v33:int;
  var v34:int;
  var v35:int;
  var v36:int;
  var v37:int;
  var v38:int;
  var v39:int;
  var v40:int;
  var v41:int;
  var v42:int;
  var v43:int;
  var v44:int;
  var v45:int;
  var v46:int;
  var v47:int;
  var v48:int;
  var v49:int;
  var v50:int;
  var v51:int;
  var v52:int;
  var v53:int;
  var v54:int;
  var v110:int;
  var v111:int;
  var v56:int;
  var v57:int;
  var v58:int;
  var v59:int;
  var v60:int;
  var v61:int;
  var v62:int;
  var v63:int;
  var v64:int;
  var v65:int;
  var v66:int;
  var v67:int;
  var v68:int;
  var v69:int;
  var v70:int;
  var v71:int;
  var v72:int;
  var v73:int;
  var v74:int;
  var v75:int;
  var v76:int;
  var v77:int;
  var v78:int;
  var v79:int;
  var v80:int;
  var v81:int;
  var v82:int;
  var v83:int;
  var v84:int;
  var v85:int;
  var v86:int;
  var v87:int;
  var v88:int;
  var v89:int;
  var v90:int;
  var v91:int;
  var v92:int;
  var v93:int;
  var v94:int;
  var v95:int;
  var v96:int;
  var v97:int;
  var v98:int;
  var v99:int;
  var v100:int;
  var v101:int;
  var v102:int;
  var v103:int;
  var v104:int;
  var v105:int;
  var v106:int;
  var v107:int;
  var v108:int;
  var v109:int;
  var v112:int;
  var v113:int;
  var v114:int;
  var v115:int;
  var v116:int;
  var v117:int;
  var v118:int;
  var v119:int;
  var v120:int;
  var v121:int;
  var v122:int;
  var v123:int;
  var v124:int;
  var v125:int;
  var v126:int;
  var v127:int;
  var v128:int;
  var v129:int;
  var v130:int;
  var v131:int;
  var v132:int;
  var v133:int;
  var v134:int;
  var v135:int;
  var v136:int;
  var v137:int;
  var v138:int;
  var v139:int;
  var v140:int;
  var v141:int;
  var v142:int;
  var v143:int;
$0:
  assert {:block_sourceloc} {:sourceloc_num 0} true;
  assert {:sourceloc} {:sourceloc_num 1} true;
  v0 := $$T[BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x)];
  v1 := FMUL32(1232560160, FDIV32(1065353216, FMUL32(1285461554, FMUL32(v0, $TCONV))));
  assert {:sourceloc} {:sourceloc_num 2} true;
  v2 := $$EG[BV32_ADD(41472, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 3} true;
  v3 := $$EG[BV32_ADD(124416, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 4} true;
  v4 := $$EG[BV32_ADD(55296, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 5} true;
  v5 := $$EG[BV32_ADD(207360, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v6 := FMUL32(FMUL32(v2, v3), FDIV32(1065353216, FMUL32(v4, v5)));
  assert {:sourceloc} {:sourceloc_num 6} true;
  v7 := $$RF[BV32_ADD(691200, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 7} true;
  $$RB[BV32_ADD(691200, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v7, (if FLT32(1621981420, v6) then 1621981420 else v6));
  assert {:sourceloc} {:sourceloc_num 8} true;
  v8 := $$EG[BV32_ADD(41472, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 9} true;
  v9 := $$EG[BV32_ADD(124416, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 10} true;
  v10 := $$EG[BV32_ADD(13824, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 11} true;
  v11 := $$EG[BV32_ADD(13824, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 12} true;
  v12 := $$EG[BV32_ADD(193536, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v13 := FMUL32(FMUL32(v8, v9), FDIV32(1065353216, FMUL32(FMUL32(FMUL32(v10, v11), v12), v1)));
  assert {:sourceloc} {:sourceloc_num 13} true;
  v14 := $$RF[BV32_ADD(705024, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 14} true;
  $$RB[BV32_ADD(705024, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v14, (if FLT32(1621981420, v13) then 1621981420 else v13));
  assert {:sourceloc} {:sourceloc_num 15} true;
  v15 := $$EG[BV32_ADD(55296, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 16} true;
  v16 := $$EG[BV32_ADD(124416, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 17} true;
  v17 := $$EG[BV32_ADD(13824, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 18} true;
  v18 := $$EG[BV32_ADD(221184, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v19 := FMUL32(FMUL32(v15, v16), FDIV32(1065353216, FMUL32(v17, v18)));
  assert {:sourceloc} {:sourceloc_num 19} true;
  v20 := $$RF[BV32_ADD(718848, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 20} true;
  $$RB[BV32_ADD(718848, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v20, (if FLT32(1621981420, v19) then 1621981420 else v19));
  assert {:sourceloc} {:sourceloc_num 21} true;
  v21 := $$EG[BV32_ADD(55296, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 22} true;
  v22 := $$EG[BV32_ADD(124416, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 23} true;
  v23 := $$EG[BV32_ADD(69120, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 24} true;
  v24 := $$EG[BV32_ADD(110592, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v25 := FMUL32(FMUL32(v21, v22), FDIV32(1065353216, FMUL32(v23, v24)));
  assert {:sourceloc} {:sourceloc_num 25} true;
  v26 := $$RF[BV32_ADD(732672, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 26} true;
  $$RB[BV32_ADD(732672, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v26, (if FLT32(1621981420, v25) then 1621981420 else v25));
  assert {:sourceloc} {:sourceloc_num 27} true;
  v27 := $$EG[BV32_ADD(82944, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 28} true;
  v28 := $$EG[BV32_ADD(124416, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 29} true;
  v29 := $$EG[BV32_ADD(55296, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 30} true;
  v30 := $$EG[BV32_ADD(221184, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v31 := FMUL32(FMUL32(v27, v28), FDIV32(1065353216, FMUL32(v29, v30)));
  assert {:sourceloc} {:sourceloc_num 31} true;
  v32 := $$RF[BV32_ADD(746496, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 32} true;
  $$RB[BV32_ADD(746496, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v32, (if FLT32(1621981420, v31) then 1621981420 else v31));
  assert {:sourceloc} {:sourceloc_num 33} true;
  v33 := $$EG[BV32_ADD(124416, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 34} true;
  v34 := $$EG[BV32_ADD(179712, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 35} true;
  v35 := $$EG[BV32_ADD(345600, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v36 := FMUL32(FMUL32(FMUL32(v33, v34), v1), FDIV32(1065353216, v35));
  assert {:sourceloc} {:sourceloc_num 36} true;
  v37 := $$RF[BV32_ADD(760320, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 37} true;
  $$RB[BV32_ADD(760320, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v37, (if FLT32(1621981420, v36) then 1621981420 else v36));
  assert {:sourceloc} {:sourceloc_num 38} true;
  v38 := $$EG[BV32_ADD(110592, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 39} true;
  v39 := $$EG[BV32_ADD(124416, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 40} true;
  v40 := $$EG[BV32_ADD(13824, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 41} true;
  v41 := $$EG[BV32_ADD(248832, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v42 := FMUL32(FMUL32(v38, v39), FDIV32(1065353216, FMUL32(v40, v41)));
  assert {:sourceloc} {:sourceloc_num 42} true;
  v43 := $$RF[BV32_ADD(774144, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 43} true;
  $$RB[BV32_ADD(774144, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v43, (if FLT32(1621981420, v42) then 1621981420 else v42));
  assert {:sourceloc} {:sourceloc_num 44} true;
  v44 := $$EG[BV32_ADD(124416, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 45} true;
  v45 := $$EG[BV32_ADD(124416, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 46} true;
  v46 := $$EG[BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x)];
  assert {:sourceloc} {:sourceloc_num 47} true;
  v47 := $$EG[BV32_ADD(248832, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v48 := FMUL32(FMUL32(v44, v45), FDIV32(1065353216, FMUL32(v46, v47)));
  assert {:sourceloc} {:sourceloc_num 48} true;
  v49 := $$RF[BV32_ADD(787968, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 49} true;
  $$RB[BV32_ADD(787968, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v49, (if FLT32(1621981420, v48) then 1621981420 else v48));
  assert {:sourceloc} {:sourceloc_num 50} true;
  v50 := $$EG[BV32_ADD(138240, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 51} true;
  v51 := $$EG[BV32_ADD(124416, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v52 := FMUL32(v50, FDIV32(1065353216, v51));
  assert {:sourceloc} {:sourceloc_num 52} true;
  v53 := $$RF[BV32_ADD(801792, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 53} true;
  $$RB[BV32_ADD(801792, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v53, (if FLT32(1621981420, v52) then 1621981420 else v52));
  assert {:sourceloc} {:sourceloc_num 54} true;
  v54 := $$EG[BV32_ADD(13824, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 55} true;
  v55 := $$EG[BV32_ADD(138240, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 56} true;
  v56 := $$EG[BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x)];
  assert {:sourceloc} {:sourceloc_num 57} true;
  v57 := $$EG[BV32_ADD(110592, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v58 := FMUL32(FMUL32(v54, v55), FDIV32(1065353216, FMUL32(v56, v57)));
  assert {:sourceloc} {:sourceloc_num 58} true;
  v59 := $$RF[BV32_ADD(815616, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 59} true;
  $$RB[BV32_ADD(815616, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v59, (if FLT32(1621981420, v58) then 1621981420 else v58));
  assert {:sourceloc} {:sourceloc_num 60} true;
  v60 := $$EG[BV32_ADD(27648, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 61} true;
  v61 := $$EG[BV32_ADD(138240, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 62} true;
  v62 := $$EG[BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x)];
  assert {:sourceloc} {:sourceloc_num 63} true;
  v63 := $$EG[BV32_ADD(179712, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v64 := FMUL32(FMUL32(v60, v61), FDIV32(1065353216, FMUL32(v62, v63)));
  assert {:sourceloc} {:sourceloc_num 64} true;
  v65 := $$RF[BV32_ADD(829440, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 65} true;
  $$RB[BV32_ADD(829440, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v65, (if FLT32(1621981420, v64) then 1621981420 else v64));
  assert {:sourceloc} {:sourceloc_num 66} true;
  v66 := $$EG[BV32_ADD(27648, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 67} true;
  v67 := $$EG[BV32_ADD(138240, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 68} true;
  v68 := $$EG[BV32_ADD(13824, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 69} true;
  v69 := $$EG[BV32_ADD(207360, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v70 := FMUL32(FMUL32(v66, v67), FDIV32(1065353216, FMUL32(v68, v69)));
  assert {:sourceloc} {:sourceloc_num 70} true;
  v71 := $$RF[BV32_ADD(843264, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 71} true;
  $$RB[BV32_ADD(843264, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v71, (if FLT32(1621981420, v70) then 1621981420 else v70));
  assert {:sourceloc} {:sourceloc_num 72} true;
  v72 := $$EG[BV32_ADD(55296, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 73} true;
  v73 := $$EG[BV32_ADD(138240, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 74} true;
  v74 := $$EG[BV32_ADD(13824, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 75} true;
  v75 := $$EG[BV32_ADD(221184, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v76 := FMUL32(FMUL32(v72, v73), FDIV32(1065353216, FMUL32(v74, v75)));
  assert {:sourceloc} {:sourceloc_num 76} true;
  v77 := $$RF[BV32_ADD(857088, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 77} true;
  $$RB[BV32_ADD(857088, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v77, (if FLT32(1621981420, v76) then 1621981420 else v76));
  assert {:sourceloc} {:sourceloc_num 78} true;
  v78 := $$EG[BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x)];
  assert {:sourceloc} {:sourceloc_num 79} true;
  v79 := $$EG[BV32_ADD(138240, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 80} true;
  v80 := $$EG[BV32_ADD(13824, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 81} true;
  v81 := $$EG[BV32_ADD(152064, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v82 := FMUL32(FMUL32(v78, v79), FDIV32(1065353216, FMUL32(v80, v81)));
  assert {:sourceloc} {:sourceloc_num 82} true;
  v83 := $$RF[BV32_ADD(870912, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 83} true;
  $$RB[BV32_ADD(870912, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v83, (if FLT32(1621981420, v82) then 1621981420 else v82));
  assert {:sourceloc} {:sourceloc_num 84} true;
  v84 := $$EG[BV32_ADD(41472, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 85} true;
  v85 := $$EG[BV32_ADD(138240, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 86} true;
  v86 := $$EG[BV32_ADD(13824, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 87} true;
  v87 := $$EG[BV32_ADD(55296, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 88} true;
  v88 := $$EG[BV32_ADD(179712, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v89 := FMUL32(FMUL32(v84, v85), FDIV32(1065353216, FMUL32(FMUL32(FMUL32(v86, v87), v88), v1)));
  assert {:sourceloc} {:sourceloc_num 89} true;
  v90 := $$RF[BV32_ADD(884736, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 90} true;
  $$RB[BV32_ADD(884736, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v90, (if FLT32(1621981420, v89) then 1621981420 else v89));
  assert {:sourceloc} {:sourceloc_num 91} true;
  v91 := $$EG[BV32_ADD(41472, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 92} true;
  v92 := $$EG[BV32_ADD(138240, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 93} true;
  v93 := $$EG[BV32_ADD(69120, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 94} true;
  v94 := $$EG[BV32_ADD(179712, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v95 := FMUL32(FMUL32(v91, v92), FDIV32(1065353216, FMUL32(v93, v94)));
  assert {:sourceloc} {:sourceloc_num 95} true;
  v96 := $$RF[BV32_ADD(898560, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 96} true;
  $$RB[BV32_ADD(898560, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v96, (if FLT32(1621981420, v95) then 1621981420 else v95));
  assert {:sourceloc} {:sourceloc_num 97} true;
  v97 := $$EG[BV32_ADD(138240, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 98} true;
  v98 := $$EG[BV32_ADD(124416, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v99 := FMUL32(v97, FDIV32(1065353216, v98));
  assert {:sourceloc} {:sourceloc_num 99} true;
  v100 := $$RF[BV32_ADD(912384, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 100} true;
  $$RB[BV32_ADD(912384, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v100, (if FLT32(1621981420, v99) then 1621981420 else v99));
  assert {:sourceloc} {:sourceloc_num 101} true;
  v101 := $$EG[BV32_ADD(138240, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 102} true;
  v102 := $$EG[BV32_ADD(124416, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v103 := FMUL32(v101, FDIV32(1065353216, v102));
  assert {:sourceloc} {:sourceloc_num 103} true;
  v104 := $$RF[BV32_ADD(926208, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 104} true;
  $$RB[BV32_ADD(926208, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v104, (if FLT32(1621981420, v103) then 1621981420 else v103));
  assert {:sourceloc} {:sourceloc_num 105} true;
  v105 := $$EG[BV32_ADD(138240, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 106} true;
  v106 := $$EG[BV32_ADD(124416, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v107 := FMUL32(v105, FDIV32(1065353216, v106));
  assert {:sourceloc} {:sourceloc_num 107} true;
  v108 := $$RF[BV32_ADD(940032, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 108} true;
  $$RB[BV32_ADD(940032, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v108, (if FLT32(1621981420, v107) then 1621981420 else v107));
  assert {:sourceloc} {:sourceloc_num 109} true;
  v109 := $$EG[BV32_ADD(138240, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 110} true;
  v110 := $$EG[BV32_ADD(193536, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 111} true;
  v111 := $$EG[BV32_ADD(179712, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 112} true;
  v112 := $$EG[BV32_ADD(221184, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v113 := FMUL32(FMUL32(v109, v110), FDIV32(1065353216, FMUL32(v111, v112)));
  assert {:sourceloc} {:sourceloc_num 113} true;
  v114 := $$RF[BV32_ADD(953856, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 114} true;
  $$RB[BV32_ADD(953856, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v114, (if FLT32(1621981420, v113) then 1621981420 else v113));
  assert {:sourceloc} {:sourceloc_num 115} true;
  v115 := $$EG[BV32_ADD(13824, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 116} true;
  v116 := $$EG[BV32_ADD(221184, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 117} true;
  v117 := $$EG[BV32_ADD(235008, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v118 := FMUL32(FMUL32(FMUL32(v115, v116), v1), FDIV32(1065353216, v117));
  assert {:sourceloc} {:sourceloc_num 118} true;
  v119 := $$RF[BV32_ADD(967680, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 119} true;
  $$RB[BV32_ADD(967680, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v119, (if FLT32(1621981420, v118) then 1621981420 else v118));
  assert {:sourceloc} {:sourceloc_num 120} true;
  v120 := $$EG[BV32_ADD(13824, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 121} true;
  v121 := $$EG[BV32_ADD(221184, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 122} true;
  v122 := $$EG[BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x)];
  assert {:sourceloc} {:sourceloc_num 123} true;
  v123 := $$EG[BV32_ADD(207360, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v124 := FMUL32(FMUL32(v120, v121), FDIV32(1065353216, FMUL32(v122, v123)));
  assert {:sourceloc} {:sourceloc_num 124} true;
  v125 := $$RF[BV32_ADD(981504, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 125} true;
  $$RB[BV32_ADD(981504, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v125, (if FLT32(1621981420, v124) then 1621981420 else v124));
  assert {:sourceloc} {:sourceloc_num 126} true;
  v126 := $$EG[BV32_ADD(27648, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 127} true;
  v127 := $$EG[BV32_ADD(221184, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 128} true;
  v128 := $$EG[BV32_ADD(55296, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 129} true;
  v129 := $$EG[BV32_ADD(207360, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v130 := FMUL32(FMUL32(v126, v127), FDIV32(1065353216, FMUL32(v128, v129)));
  assert {:sourceloc} {:sourceloc_num 130} true;
  v131 := $$RF[BV32_ADD(995328, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 131} true;
  $$RB[BV32_ADD(995328, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v131, (if FLT32(1621981420, v130) then 1621981420 else v130));
  assert {:sourceloc} {:sourceloc_num 132} true;
  v132 := $$EG[BV32_ADD(55296, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 133} true;
  v133 := $$EG[BV32_ADD(221184, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 134} true;
  v134 := $$EG[BV32_ADD(69120, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 135} true;
  v135 := $$EG[BV32_ADD(207360, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v136 := FMUL32(FMUL32(v132, v133), FDIV32(1065353216, FMUL32(v134, v135)));
  assert {:sourceloc} {:sourceloc_num 136} true;
  v137 := $$RF[BV32_ADD(1009152, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 137} true;
  $$RB[BV32_ADD(1009152, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v137, (if FLT32(1621981420, v136) then 1621981420 else v136));
  assert {:sourceloc} {:sourceloc_num 138} true;
  v138 := $$EG[BV32_ADD(41472, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 139} true;
  v139 := $$EG[BV32_ADD(221184, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 140} true;
  v140 := $$EG[BV32_ADD(82944, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 141} true;
  v141 := $$EG[BV32_ADD(207360, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  v142 := FMUL32(FMUL32(v138, v139), FDIV32(1065353216, FMUL32(v140, v141)));
  assert {:sourceloc} {:sourceloc_num 142} true;
  v143 := $$RF[BV32_ADD(1022976, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 143} true;
  $$RB[BV32_ADD(1022976, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(v143, (if FLT32(1621981420, v142) then 1621981420 else v142));
  return;
}
axiom (if group_size_y == 1 then 1 else 0) != 0;
axiom (if group_size_z == 1 then 1 else 0) != 0;
axiom (if num_groups_y == 1 then 1 else 0) != 0;
axiom (if num_groups_z == 1 then 1 else 0) != 0;
axiom (if group_size_x == 128 then 1 else 0) != 0;
axiom (if num_groups_x == 108 then 1 else 0) != 0;
axiom (if global_offset_x == 0 then 1 else 0) != 0;
axiom (if global_offset_y == 0 then 1 else 0) != 0;
axiom (if global_offset_z == 0 then 1 else 0) != 0;
