type _SIZE_T_TYPE = bv32;

procedure _ATOMIC_OP32(x : [int]int, y : int) returns (z : int, A : [int]int);
var {:source_name "RKF"} {:global} $$RKF : [int]int;
axiom {:array_info "$$RKF"} {:global} {:elem_width 32} {:source_name "RKF"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$RKF : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$RKF : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$RKF : bool;

var {:source_name "RKR"} {:global} $$RKR : [int]int;
axiom {:array_info "$$RKR"} {:global} {:elem_width 32} {:source_name "RKR"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$RKR : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$RKR : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$RKR : bool;

var {:source_name "WDOT"} {:global} $$WDOT : [int]int;
axiom {:array_info "$$WDOT"} {:global} {:elem_width 32} {:source_name "WDOT"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$WDOT : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$WDOT : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$WDOT : bool;

var {:source_name "molwt"} {:global} $$molwt : [int]int;
axiom {:array_info "$$molwt"} {:global} {:elem_width 32} {:source_name "molwt"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$molwt : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$molwt : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$molwt : bool;

const _WATCHED_OFFSET : int;
const {:global_offset_x} global_offset_x : int;
const {:global_offset_y} global_offset_y : int;
const {:global_offset_z} global_offset_z : int;
const {:group_id_x} group_id_x : int;
const {:group_size_x} group_size_x : int;
const {:group_size_y} group_size_y : int;
const {:group_size_z} group_size_z : int;
const {:local_id_x} local_id_x : int;
const {:num_groups_x} num_groups_x : int;
const {:num_groups_y} num_groups_y : int;
const {:num_groups_z} num_groups_z : int;
function FADD32(int, int) : int;
function FMUL32(int, int) : int;
function FSUB32(int, int) : int;
function {:inline true} BV32_ADD(x : int, y : int) : int {
  x + y
}
function {:inline true} BV32_MUL(x : int, y : int) : int {
  x * y
}
procedure {:source_name "rdwdot2_kernel"} {:kernel} $rdwdot2_kernel($rateconv:int)
{
  var v0:int;
  var v1:int;
  var v2:int;
  var v3:int;
  var v4:int;
  var v5:int;
  var v6:int;
  var v7:int;
  var v8:int;
  var v9:int;
  var v10:int;
  var v11:int;
  var v12:int;
  var v13:int;
  var v28:int;
  var v14:int;
  var v15:int;
  var v16:int;
  var v17:int;
  var v18:int;
  var v19:int;
  var v20:int;
  var v21:int;
  var v22:int;
  var v23:int;
  var v24:int;
  var v25:int;
  var v26:int;
  var v27:int;
  var v29:int;
  var v30:int;
  var v31:int;
  var v32:int;
  var v33:int;
  var v34:int;
  var v35:int;
  var v36:int;
  var v37:int;
  var v38:int;
  var v39:int;
  var v40:int;
  var v41:int;
  var v42:int;
  var v43:int;
  var v44:int;
  var v45:int;
  var v46:int;
  var v47:int;
  var v48:int;
  var v49:int;
  var v50:int;
  var v51:int;
  var v52:int;
  var v53:int;
  var v54:int;
  var v55:int;
  var v56:int;
  var v57:int;
  var v58:int;
  var v59:int;
  var v60:int;
  var v61:int;
  var v62:int;
  var v63:int;
  var v64:int;
  var v65:int;
$0:
  assert {:block_sourceloc} {:sourceloc_num 0} true;
  assert {:sourceloc} {:sourceloc_num 1} true;
  v0 := $$RKF[BV32_ADD(1990656, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 2} true;
  v1 := $$RKR[BV32_ADD(1990656, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 3} true;
  v2 := $$RKF[BV32_ADD(2543616, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 4} true;
  v3 := $$RKR[BV32_ADD(2543616, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 5} true;
  v4 := $$RKF[BV32_ADD(2571264, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 6} true;
  v5 := $$RKR[BV32_ADD(2571264, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 7} true;
  v6 := $$RKF[BV32_ADD(2598912, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 8} true;
  v7 := $$RKR[BV32_ADD(2598912, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 9} true;
  v8 := $$RKF[BV32_ADD(2612736, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 10} true;
  v9 := $$RKR[BV32_ADD(2612736, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 11} true;
  v10 := $$RKF[BV32_ADD(2626560, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 12} true;
  v11 := $$RKR[BV32_ADD(2626560, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 13} true;
  v12 := $$RKF[BV32_ADD(2640384, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 14} true;
  v13 := $$RKR[BV32_ADD(2640384, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 15} true;
  v14 := $$RKF[BV32_ADD(2654208, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 16} true;
  v15 := $$RKR[BV32_ADD(2654208, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 17} true;
  v16 := $$RKF[BV32_ADD(2668032, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 18} true;
  v17 := $$RKR[BV32_ADD(2668032, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 19} true;
  v18 := $$RKF[BV32_ADD(2681856, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 20} true;
  v19 := $$RKR[BV32_ADD(2681856, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 21} true;
  v20 := $$RKF[BV32_ADD(2695680, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 22} true;
  v21 := $$RKR[BV32_ADD(2695680, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 23} true;
  v22 := $$RKF[BV32_ADD(2709504, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 24} true;
  v23 := $$RKR[BV32_ADD(2709504, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 25} true;
  v24 := $$RKF[BV32_ADD(2723328, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 26} true;
  v25 := $$RKR[BV32_ADD(2723328, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 27} true;
  v26 := $$RKF[BV32_ADD(2750976, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 28} true;
  v27 := $$RKR[BV32_ADD(2750976, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 29} true;
  v28 := $$RKF[BV32_ADD(2778624, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 30} true;
  v29 := $$RKR[BV32_ADD(2778624, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 31} true;
  v30 := $$RKF[BV32_ADD(2792448, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 32} true;
  v31 := $$RKR[BV32_ADD(2792448, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 33} true;
  v32 := $$RKF[BV32_ADD(2820096, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 34} true;
  v33 := $$RKR[BV32_ADD(2820096, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 35} true;
  v34 := $$molwt[20];
  assert {:sourceloc} {:sourceloc_num 36} true;
  $$WDOT[BV32_ADD(276480, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(FMUL32(FADD32(FADD32(FADD32(FADD32(FSUB32(FSUB32(FSUB32(FSUB32(FSUB32(FSUB32(FSUB32(FSUB32(FSUB32(FADD32(FADD32(FADD32(FSUB32(v0, v1), FSUB32(v2, v3)), FSUB32(v4, v5)), FSUB32(v6, v7)), FSUB32(v8, v9)), FSUB32(v10, v11)), FSUB32(v12, v13)), FSUB32(v14, v15)), FSUB32(v16, v17)), FSUB32(v18, v19)), FSUB32(v20, v21)), FSUB32(v22, v23)), FSUB32(v24, v25)), FSUB32(v26, v27)), FSUB32(v28, v29)), FSUB32(v30, v31)), FSUB32(v32, v33)), $rateconv), v34);
  assert {:sourceloc} {:sourceloc_num 37} true;
  v35 := $$RKF[BV32_ADD(1658880, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 38} true;
  v36 := $$RKR[BV32_ADD(1658880, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 39} true;
  v37 := $$RKF[BV32_ADD(2004480, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 40} true;
  v38 := $$RKR[BV32_ADD(2004480, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 41} true;
  v39 := $$RKF[BV32_ADD(2267136, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 42} true;
  v40 := $$RKR[BV32_ADD(2267136, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 43} true;
  v41 := $$RKF[BV32_ADD(2294784, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 44} true;
  v42 := $$RKR[BV32_ADD(2294784, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 45} true;
  v43 := $$RKF[BV32_ADD(2543616, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 46} true;
  v44 := $$RKR[BV32_ADD(2543616, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 47} true;
  v45 := $$RKF[BV32_ADD(2557440, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 48} true;
  v46 := $$RKR[BV32_ADD(2557440, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 49} true;
  v47 := $$RKF[BV32_ADD(2571264, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 50} true;
  v48 := $$RKR[BV32_ADD(2571264, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 51} true;
  v49 := $$RKF[BV32_ADD(2585088, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 52} true;
  v50 := $$RKR[BV32_ADD(2585088, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 53} true;
  v51 := $$RKF[BV32_ADD(2598912, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 54} true;
  v52 := $$RKR[BV32_ADD(2598912, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 55} true;
  v53 := $$RKF[BV32_ADD(2640384, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 56} true;
  v54 := $$RKR[BV32_ADD(2640384, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 57} true;
  v55 := $$RKF[BV32_ADD(2681856, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 58} true;
  v56 := $$RKR[BV32_ADD(2681856, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 59} true;
  v57 := $$RKF[BV32_ADD(2695680, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 60} true;
  v58 := $$RKR[BV32_ADD(2695680, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 61} true;
  v59 := $$RKF[BV32_ADD(2709504, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 62} true;
  v60 := $$RKR[BV32_ADD(2709504, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 63} true;
  v61 := $$RKF[BV32_ADD(2723328, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 64} true;
  v62 := $$RKR[BV32_ADD(2723328, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 65} true;
  v63 := $$RKF[BV32_ADD(2833920, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 66} true;
  v64 := $$RKR[BV32_ADD(2833920, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))];
  assert {:sourceloc} {:sourceloc_num 67} true;
  v65 := $$molwt[19];
  assert {:sourceloc} {:sourceloc_num 68} true;
  $$WDOT[BV32_ADD(262656, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := FMUL32(FMUL32(FADD32(FADD32(FADD32(FADD32(FADD32(FADD32(FSUB32(FSUB32(FSUB32(FSUB32(FSUB32(FADD32(FADD32(FADD32(FSUB32(v35, v36), FSUB32(v37, v38)), FSUB32(v39, v40)), FSUB32(v41, v42)), FSUB32(v43, v44)), FSUB32(v45, v46)), FSUB32(v47, v48)), FSUB32(v49, v50)), FSUB32(v51, v52)), FSUB32(v53, v54)), FSUB32(v55, v56)), FSUB32(v57, v58)), FSUB32(v59, v60)), FSUB32(v61, v62)), FSUB32(v63, v64)), $rateconv), v65);
  assert {:sourceloc} {:sourceloc_num 69} true;
  $$WDOT[BV32_ADD(290304, BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x))] := 0;
  return;
}
axiom (if group_size_y == 1 then 1 else 0) != 0;
axiom (if group_size_z == 1 then 1 else 0) != 0;
axiom (if num_groups_y == 1 then 1 else 0) != 0;
axiom (if num_groups_z == 1 then 1 else 0) != 0;
axiom (if group_size_x == 128 then 1 else 0) != 0;
axiom (if num_groups_x == 108 then 1 else 0) != 0;
axiom (if global_offset_x == 0 then 1 else 0) != 0;
axiom (if global_offset_y == 0 then 1 else 0) != 0;
axiom (if global_offset_z == 0 then 1 else 0) != 0;
