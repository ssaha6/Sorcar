type _SIZE_T_TYPE = bv32;

procedure _ATOMIC_OP32(x : [int]int, y : int) returns (z : int, A : [int]int);
var {:source_name "work"} {:global} $$work : [int]int;
axiom {:array_info "$$work"} {:global} {:elem_width 32} {:source_name "work"} {:source_elem_width 64} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 64} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$work : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 64} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$work : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 64} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$work : bool;

var {:source_name "reversed.i"} $$reversed.i : [int]int;
axiom {:array_info "$$reversed.i"} {:elem_width 32} {:source_name "reversed.i"} {:source_elem_width 32} {:source_dimensions "8"} true;

var {:source_name "data"} $$data : [int]int;
axiom {:array_info "$$data"} {:elem_width 32} {:source_name "data"} {:source_elem_width 64} {:source_dimensions "8"} true;

var {:source_name "reversed8"} $$reversed8 : [int]int;
axiom {:array_info "$$reversed8"} {:elem_width 32} {:source_name "reversed8"} {:source_elem_width 32} {:source_dimensions "8"} true;

var {:source_name "reversed824"} $$reversed824 : [int]int;
axiom {:array_info "$$reversed824"} {:elem_width 32} {:source_name "reversed824"} {:source_elem_width 32} {:source_dimensions "8"} true;

var {:source_name "ifft1D_512.reversed8"} $$ifft1D_512.reversed8 : [int]int;
axiom {:array_info "$$ifft1D_512.reversed8"} {:elem_width 32} {:source_name "ifft1D_512.reversed8"} {:source_elem_width 32} {:source_dimensions "8"} true;

var {:source_name "smem"} {:group_shared} $$ifft1D_512.smem : [int]int;
axiom {:array_info "$$ifft1D_512.smem"} {:group_shared} {:elem_width 32} {:source_name "smem"} {:source_elem_width 32} {:source_dimensions "576"} true;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$ifft1D_512.smem : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$ifft1D_512.smem : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$ifft1D_512.smem : bool;

var {:source_name "storex8.reversed"} $$storex8.reversed : [int]int;
axiom {:array_info "$$storex8.reversed"} {:elem_width 32} {:source_name "storex8.reversed"} {:source_elem_width 32} {:source_dimensions "8"} true;

var {:source_name "storey8.reversed"} $$storey8.reversed : [int]int;
axiom {:array_info "$$storey8.reversed"} {:elem_width 32} {:source_name "storey8.reversed"} {:source_elem_width 32} {:source_dimensions "8"} true;

var {:source_name "ifft1D_512.reversed81"} $$ifft1D_512.reversed81 : [int]int;
axiom {:array_info "$$ifft1D_512.reversed81"} {:elem_width 32} {:source_name "ifft1D_512.reversed81"} {:source_elem_width 32} {:source_dimensions "8"} true;

var {:source_name "globalStores8.reversed"} $$globalStores8.reversed : [int]int;
axiom {:array_info "$$globalStores8.reversed"} {:elem_width 32} {:source_name "globalStores8.reversed"} {:source_elem_width 32} {:source_dimensions "8"} true;

const _WATCHED_OFFSET : int;
const {:global_offset_x} global_offset_x : int;
const {:global_offset_y} global_offset_y : int;
const {:global_offset_z} global_offset_z : int;
const {:group_id_x} group_id_x : int;
const {:group_size_x} group_size_x : int;
const {:group_size_y} group_size_y : int;
const {:group_size_z} group_size_z : int;
const {:local_id_x} local_id_x : int;
const {:num_groups_x} num_groups_x : int;
const {:num_groups_y} num_groups_y : int;
const {:num_groups_z} num_groups_z : int;
function  BV32_ASHR(int, int) : int;
function FADD32(int, int) : int;
function FCOS32(int) : int;
function FDIV32(int, int) : int;
function FDIV64(int, int) : int;
function FMUL32(int, int) : int;
function FMUL64(int, int) : int;
function FP64_CONV32(int) : int;
function FSIN32(int) : int;
function FSUB32(int, int) : int;
function SI32_TO_FP64(int) : int;
function {:inline true} BV32_ADD(x : int, y : int) : int {
  x + y
}
function {:inline true} BV32_AND(x : int, y : int) : int {
  if x == y then x else (if x == 0 || y == 0 then 0 else BV32_AND_UF(x, y))
}
function BV32_AND_UF(int, int) : int;
function {:inline true} BV32_MUL(x : int, y : int) : int {
  x * y
}
function {:inline true} BV32_SLT(x : int, y : int) : bool {
  x < y
}
function {:inline true} BV32_SUB(x : int, y : int) : int {
  x - y
}
function {:inline true} BV32_UDIV(x : int, y : int) : int {
  x div y
}
function {:inline true} BV32_ULT(x : int, y : int) : bool {
  x < y
}
function {:inline true} BV32_UREM(x : int, y : int) : int {
  x mod y
}
procedure {:source_name "ifft1D_512"} {:kernel} $ifft1D_512()
requires $$ifft1D_512.reversed8[0] == 0;
requires $$ifft1D_512.reversed8[1] == 4;
requires $$ifft1D_512.reversed8[2] == 2;
requires $$ifft1D_512.reversed8[3] == 6;
requires $$ifft1D_512.reversed8[4] == 1;
requires $$ifft1D_512.reversed8[5] == 5;
requires $$ifft1D_512.reversed8[6] == 3;
requires $$ifft1D_512.reversed8[7] == 7;
requires $$storex8.reversed[0] == 0;
requires $$storex8.reversed[1] == 4;
requires $$storex8.reversed[2] == 2;
requires $$storex8.reversed[3] == 6;
requires $$storex8.reversed[4] == 1;
requires $$storex8.reversed[5] == 5;
requires $$storex8.reversed[6] == 3;
requires $$storex8.reversed[7] == 7;
requires $$storey8.reversed[0] == 0;
requires $$storey8.reversed[1] == 4;
requires $$storey8.reversed[2] == 2;
requires $$storey8.reversed[3] == 6;
requires $$storey8.reversed[4] == 1;
requires $$storey8.reversed[5] == 5;
requires $$storey8.reversed[6] == 3;
requires $$storey8.reversed[7] == 7;
requires $$ifft1D_512.reversed81[0] == 0;
requires $$ifft1D_512.reversed81[1] == 4;
requires $$ifft1D_512.reversed81[2] == 2;
requires $$ifft1D_512.reversed81[3] == 6;
requires $$ifft1D_512.reversed81[4] == 1;
requires $$ifft1D_512.reversed81[5] == 5;
requires $$ifft1D_512.reversed81[6] == 3;
requires $$ifft1D_512.reversed81[7] == 7;
requires $$globalStores8.reversed[0] == 0;
requires $$globalStores8.reversed[1] == 4;
requires $$globalStores8.reversed[2] == 2;
requires $$globalStores8.reversed[3] == 6;
requires $$globalStores8.reversed[4] == 1;
requires $$globalStores8.reversed[5] == 5;
requires $$globalStores8.reversed[6] == 3;
requires $$globalStores8.reversed[7] == 7;
{
  var $i.i.0:int;
  var $j.0:int;
  var $i.i51.0:int;
  var $i.i53.0:int;
  var $i.i48.0:int;
  var $i.i45.0:int;
  var $j25.0:int;
  var $i.i44.0:int;
  var $i.i42.0:int;
  var $i.i41.0:int;
  var $i.i39.0:int;
  var $i.0:int;
  var $i.i38.0:int;
  var v3:int;
  var v372:bool;
  var v4:bool;
  var v5:int;
  var v6:int;
  var v7:int;
  var v8:int;
  var v9:int;
  var v10:int;
  var v11:int;
  var v12:int;
  var v13:int;
  var v14:int;
  var v15:int;
  var v16:int;
  var v17:int;
  var v18:int;
  var v0:int;
  var v1:int;
  var v2:int;
  var v19:int;
  var v20:int;
  var v21:int;
  var v22:int;
  var v23:int;
  var v24:int;
  var v25:int;
  var v26:int;
  var v27:int;
  var v28:int;
  var v29:int;
  var v30:int;
  var v31:int;
  var v32:int;
  var v52:int;
  var v53:int;
  var v54:int;
  var v33:int;
  var v34:int;
  var v35:int;
  var v36:int;
  var v37:int;
  var v38:int;
  var v39:int;
  var v40:int;
  var v41:int;
  var v42:int;
  var v43:int;
  var v44:int;
  var v45:int;
  var v46:int;
  var v47:int;
  var v48:int;
  var v49:int;
  var v50:int;
  var v51:int;
  var v55:int;
  var v56:int;
  var v57:int;
  var v58:int;
  var v59:int;
  var v60:int;
  var v61:int;
  var v62:int;
  var v63:int;
  var v64:int;
  var v65:int;
  var v66:int;
  var v67:int;
  var v68:int;
  var v69:int;
  var v70:int;
  var v71:int;
  var v72:int;
  var v73:int;
  var v74:int;
  var v75:int;
  var v76:int;
  var v77:int;
  var v78:int;
  var v79:int;
  var v80:int;
  var v81:int;
  var v82:int;
  var v83:int;
  var v84:int;
  var v85:int;
  var v86:int;
  var v87:int;
  var v88:int;
  var v105:int;
  var v89:int;
  var v90:int;
  var v91:int;
  var v92:int;
  var v93:int;
  var v94:int;
  var v95:int;
  var v96:int;
  var v97:bool;
  var v98:int;
  var v99:int;
  var v100:int;
  var v101:int;
  var v102:int;
  var v103:int;
  var v104:int;
  var v106:int;
  var v111:int;
  var v107:int;
  var v108:int;
  var v109:int;
  var v110:int;
  var v112:int;
  var v113:bool;
  var v114:int;
  var v115:int;
  var v116:int;
  var v117:int;
  var v118:bool;
  var v119:int;
  var v120:int;
  var v121:int;
  var v122:int;
  var v123:int;
  var v364:int;
  var v124:int;
  var v125:int;
  var v126:int;
  var v127:int;
  var v128:int;
  var v129:int;
  var v130:int;
  var v131:bool;
  var v132:int;
  var v133:int;
  var v134:int;
  var v135:int;
  var v136:bool;
  var v137:int;
  var v138:int;
  var v139:int;
  var v140:int;
  var v141:int;
  var v142:int;
  var v143:int;
  var v144:int;
  var v145:int;
  var v146:int;
  var v147:int;
  var v148:int;
  var v149:int;
  var v150:int;
  var v151:int;
  var v152:int;
  var v153:int;
  var v154:int;
  var v155:int;
  var v156:int;
  var v157:int;
  var v158:int;
  var v159:int;
  var v160:int;
  var v161:int;
  var v162:int;
  var v163:int;
  var v164:int;
  var v165:int;
  var v184:int;
  var v185:int;
  var v186:int;
  var v187:int;
  var v166:int;
  var v167:int;
  var v168:int;
  var v169:int;
  var v170:int;
  var v171:int;
  var v172:int;
  var v173:int;
  var v174:int;
  var v175:int;
  var v176:int;
  var v177:int;
  var v178:int;
  var v179:int;
  var v180:int;
  var v181:int;
  var v182:int;
  var v183:int;
  var v188:int;
  var v189:int;
  var v190:int;
  var v191:int;
  var v192:int;
  var v193:int;
  var v194:int;
  var v195:int;
  var v196:int;
  var v197:int;
  var v198:int;
  var v199:int;
  var v200:int;
  var v201:int;
  var v202:int;
  var v203:int;
  var v204:int;
  var v205:int;
  var v206:int;
  var v207:int;
  var v208:int;
  var v209:int;
  var v210:int;
  var v211:int;
  var v212:int;
  var v213:int;
  var v214:int;
  var v215:int;
  var v216:int;
  var v217:int;
  var v218:int;
  var v219:int;
  var v220:int;
  var v221:int;
  var v222:int;
  var v223:int;
  var v224:int;
  var v225:int;
  var v226:int;
  var v227:int;
  var v228:int;
  var v229:int;
  var v230:bool;
  var v231:int;
  var v232:int;
  var v233:int;
  var v234:int;
  var v235:int;
  var v236:int;
  var v237:int;
  var v238:int;
  var v239:int;
  var v244:int;
  var v240:int;
  var v241:int;
  var v242:int;
  var v243:int;
  var v245:int;
  var v246:bool;
  var v247:int;
  var v248:int;
  var v249:int;
  var v250:int;
  var v251:bool;
  var v252:int;
  var v253:int;
  var v254:int;
  var v255:int;
  var v256:int;
  var v257:int;
  var v258:int;
  var v259:int;
  var v260:int;
  var v261:int;
  var v262:int;
  var v263:int;
  var v264:bool;
  var v265:int;
  var v266:int;
  var v267:int;
  var v268:int;
  var v269:bool;
  var v270:int;
  var v271:int;
  var v272:int;
  var v273:int;
  var v274:int;
  var v275:int;
  var v276:int;
  var v277:int;
  var v278:int;
  var v279:int;
  var v280:int;
  var v281:int;
  var v282:int;
  var v283:int;
  var v284:int;
  var v285:int;
  var v286:int;
  var v287:int;
  var v288:int;
  var v289:int;
  var v290:int;
  var v291:int;
  var v292:int;
  var v293:int;
  var v294:int;
  var v295:int;
  var v296:int;
  var v297:int;
  var v298:int;
  var v318:int;
  var v319:int;
  var v320:int;
  var v299:int;
  var v300:int;
  var v301:int;
  var v302:int;
  var v303:int;
  var v304:int;
  var v305:int;
  var v306:int;
  var v307:int;
  var v308:int;
  var v309:int;
  var v310:int;
  var v311:int;
  var v312:int;
  var v313:int;
  var v314:int;
  var v315:int;
  var v316:int;
  var v317:int;
  var v321:int;
  var v322:int;
  var v323:int;
  var v324:int;
  var v325:int;
  var v326:int;
  var v327:int;
  var v328:int;
  var v329:int;
  var v330:int;
  var v331:int;
  var v332:int;
  var v333:int;
  var v334:int;
  var v335:int;
  var v336:int;
  var v337:int;
  var v338:int;
  var v339:int;
  var v340:int;
  var v341:int;
  var v342:int;
  var v343:int;
  var v344:int;
  var v345:int;
  var v346:int;
  var v347:int;
  var v348:int;
  var v349:int;
  var v350:int;
  var v351:int;
  var v352:int;
  var v353:int;
  var v354:int;
  var v355:bool;
  var v356:int;
  var v357:int;
  var v358:int;
  var v359:int;
  var v360:int;
  var v361:int;
  var v362:int;
  var v363:int;
  var v365:int;
  var v366:int;
  var v367:int;
  var v368:int;
  var v369:int;
  var v370:int;
  var v371:int;
  var v373:int;
  var v374:int;
  var v375:int;
$0:
  assert {:block_sourceloc} {:sourceloc_num 0} true;
  v0 := local_id_x;
  v1 := BV32_ADD(BV32_MUL(group_id_x, 512), v0);
  v2 := BV32_ASHR(v0, 3);
  v3 := BV32_AND(v0, 7);
  $i.i.0 := 0;
  goto $1;
$1:
  assert {:block_sourceloc} {:sourceloc_num 1} true;
  v4 := BV32_SLT($i.i.0, 8);
  goto $truebb, $falsebb;
$2:
  assert {:block_sourceloc} {:sourceloc_num 2} true;
  assert {:sourceloc} {:sourceloc_num 3} true;
  v5 := $$work[BV32_ADD(BV32_MUL(v1, 2), BV32_MUL(BV32_MUL($i.i.0, 64), 2))];
  assert {:sourceloc} {:sourceloc_num 4} true;
  v6 := $$work[BV32_ADD(BV32_ADD(BV32_MUL(v1, 2), BV32_MUL(BV32_MUL($i.i.0, 64), 2)), 1)];
  assert {:sourceloc} {:sourceloc_num 5} true;
  $$data[BV32_MUL($i.i.0, 2)] := v5;
  assert {:sourceloc} {:sourceloc_num 6} true;
  $$data[BV32_ADD(BV32_MUL($i.i.0, 2), 1)] := v6;
  $i.i.0 := BV32_ADD($i.i.0, 1);
  goto $1;
$globalLoads8.exit:
  assert {:block_sourceloc} {:sourceloc_num 7} true;
  assert {:sourceloc} {:sourceloc_num 8} true;
  v7 := $$data[0];
  assert {:sourceloc} {:sourceloc_num 9} true;
  v8 := $$data[1];
  assert {:sourceloc} {:sourceloc_num 10} true;
  v9 := $$data[8];
  assert {:sourceloc} {:sourceloc_num 11} true;
  v10 := $$data[9];
  assert {:sourceloc} {:sourceloc_num 12} true;
  $$data[0] := FADD32(v7, v9);
  assert {:sourceloc} {:sourceloc_num 13} true;
  $$data[1] := FADD32(v8, v10);
  assert {:sourceloc} {:sourceloc_num 14} true;
  v11 := $$data[8];
  assert {:sourceloc} {:sourceloc_num 15} true;
  v12 := $$data[9];
  assert {:sourceloc} {:sourceloc_num 16} true;
  $$data[8] := FSUB32(v7, v11);
  assert {:sourceloc} {:sourceloc_num 17} true;
  $$data[9] := FSUB32(v8, v12);
  assert {:sourceloc} {:sourceloc_num 18} true;
  v13 := $$data[2];
  assert {:sourceloc} {:sourceloc_num 19} true;
  v14 := $$data[3];
  assert {:sourceloc} {:sourceloc_num 20} true;
  v15 := $$data[10];
  assert {:sourceloc} {:sourceloc_num 21} true;
  v16 := $$data[11];
  assert {:sourceloc} {:sourceloc_num 22} true;
  $$data[2] := FADD32(v13, v15);
  assert {:sourceloc} {:sourceloc_num 23} true;
  $$data[3] := FADD32(v14, v16);
  assert {:sourceloc} {:sourceloc_num 24} true;
  v17 := $$data[10];
  assert {:sourceloc} {:sourceloc_num 25} true;
  v18 := $$data[11];
  assert {:sourceloc} {:sourceloc_num 26} true;
  $$data[10] := FSUB32(v13, v17);
  assert {:sourceloc} {:sourceloc_num 27} true;
  $$data[11] := FSUB32(v14, v18);
  assert {:sourceloc} {:sourceloc_num 28} true;
  v19 := $$data[4];
  assert {:sourceloc} {:sourceloc_num 29} true;
  v20 := $$data[5];
  assert {:sourceloc} {:sourceloc_num 30} true;
  v21 := $$data[12];
  assert {:sourceloc} {:sourceloc_num 31} true;
  v22 := $$data[13];
  assert {:sourceloc} {:sourceloc_num 32} true;
  $$data[4] := FADD32(v19, v21);
  assert {:sourceloc} {:sourceloc_num 33} true;
  $$data[5] := FADD32(v20, v22);
  assert {:sourceloc} {:sourceloc_num 34} true;
  v23 := $$data[12];
  assert {:sourceloc} {:sourceloc_num 35} true;
  v24 := $$data[13];
  assert {:sourceloc} {:sourceloc_num 36} true;
  $$data[12] := FSUB32(v19, v23);
  assert {:sourceloc} {:sourceloc_num 37} true;
  $$data[13] := FSUB32(v20, v24);
  assert {:sourceloc} {:sourceloc_num 38} true;
  v25 := $$data[6];
  assert {:sourceloc} {:sourceloc_num 39} true;
  v26 := $$data[7];
  assert {:sourceloc} {:sourceloc_num 40} true;
  v27 := $$data[14];
  assert {:sourceloc} {:sourceloc_num 41} true;
  v28 := $$data[15];
  assert {:sourceloc} {:sourceloc_num 42} true;
  $$data[6] := FADD32(v25, v27);
  assert {:sourceloc} {:sourceloc_num 43} true;
  $$data[7] := FADD32(v26, v28);
  assert {:sourceloc} {:sourceloc_num 44} true;
  v29 := $$data[14];
  assert {:sourceloc} {:sourceloc_num 45} true;
  v30 := $$data[15];
  assert {:sourceloc} {:sourceloc_num 46} true;
  $$data[14] := FSUB32(v25, v29);
  assert {:sourceloc} {:sourceloc_num 47} true;
  $$data[15] := FSUB32(v26, v30);
  assert {:sourceloc} {:sourceloc_num 48} true;
  v31 := $$data[10];
  assert {:sourceloc} {:sourceloc_num 49} true;
  v32 := $$data[11];
  assert {:sourceloc} {:sourceloc_num 50} true;
  $$data[10] := FMUL32(1060439283, FADD32(FMUL32(v31, 1065353216), FSUB32(-2147483648, FMUL32(v32, 1065353216))));
  assert {:sourceloc} {:sourceloc_num 51} true;
  $$data[11] := FMUL32(1060439283, FADD32(FMUL32(v31, 1065353216), FMUL32(v32, 1065353216)));
  assert {:sourceloc} {:sourceloc_num 52} true;
  v33 := $$data[12];
  assert {:sourceloc} {:sourceloc_num 53} true;
  v34 := $$data[13];
  assert {:sourceloc} {:sourceloc_num 54} true;
  $$data[12] := FADD32(FMUL32(v33, 0), FSUB32(-2147483648, FMUL32(v34, 1065353216)));
  assert {:sourceloc} {:sourceloc_num 55} true;
  $$data[13] := FADD32(FMUL32(v33, 1065353216), FMUL32(v34, 0));
  assert {:sourceloc} {:sourceloc_num 56} true;
  v35 := $$data[14];
  assert {:sourceloc} {:sourceloc_num 57} true;
  v36 := $$data[15];
  assert {:sourceloc} {:sourceloc_num 58} true;
  $$data[14] := FMUL32(1060439283, FADD32(FMUL32(v35, -1082130432), FSUB32(-2147483648, FMUL32(v36, 1065353216))));
  assert {:sourceloc} {:sourceloc_num 59} true;
  $$data[15] := FMUL32(1060439283, FADD32(FMUL32(v35, 1065353216), FMUL32(v36, -1082130432)));
  assert {:sourceloc} {:sourceloc_num 60} true;
  v37 := $$data[0];
  assert {:sourceloc} {:sourceloc_num 61} true;
  v38 := $$data[1];
  assert {:sourceloc} {:sourceloc_num 62} true;
  v39 := $$data[4];
  assert {:sourceloc} {:sourceloc_num 63} true;
  v40 := $$data[5];
  assert {:sourceloc} {:sourceloc_num 64} true;
  $$data[0] := FADD32(v37, v39);
  assert {:sourceloc} {:sourceloc_num 65} true;
  $$data[1] := FADD32(v38, v40);
  assert {:sourceloc} {:sourceloc_num 66} true;
  v41 := $$data[4];
  assert {:sourceloc} {:sourceloc_num 67} true;
  v42 := $$data[5];
  assert {:sourceloc} {:sourceloc_num 68} true;
  $$data[4] := FSUB32(v37, v41);
  assert {:sourceloc} {:sourceloc_num 69} true;
  $$data[5] := FSUB32(v38, v42);
  assert {:sourceloc} {:sourceloc_num 70} true;
  v43 := $$data[2];
  assert {:sourceloc} {:sourceloc_num 71} true;
  v44 := $$data[3];
  assert {:sourceloc} {:sourceloc_num 72} true;
  v45 := $$data[6];
  assert {:sourceloc} {:sourceloc_num 73} true;
  v46 := $$data[7];
  assert {:sourceloc} {:sourceloc_num 74} true;
  $$data[2] := FADD32(v43, v45);
  assert {:sourceloc} {:sourceloc_num 75} true;
  $$data[3] := FADD32(v44, v46);
  assert {:sourceloc} {:sourceloc_num 76} true;
  v47 := $$data[6];
  assert {:sourceloc} {:sourceloc_num 77} true;
  v48 := $$data[7];
  assert {:sourceloc} {:sourceloc_num 78} true;
  $$data[6] := FSUB32(v43, v47);
  assert {:sourceloc} {:sourceloc_num 79} true;
  $$data[7] := FSUB32(v44, v48);
  assert {:sourceloc} {:sourceloc_num 80} true;
  v49 := $$data[6];
  assert {:sourceloc} {:sourceloc_num 81} true;
  v50 := $$data[7];
  assert {:sourceloc} {:sourceloc_num 82} true;
  $$data[6] := FADD32(FMUL32(v49, 0), FSUB32(-2147483648, FMUL32(v50, 1065353216)));
  assert {:sourceloc} {:sourceloc_num 83} true;
  $$data[7] := FADD32(FMUL32(v49, 1065353216), FMUL32(v50, 0));
  assert {:sourceloc} {:sourceloc_num 84} true;
  v51 := $$data[0];
  assert {:sourceloc} {:sourceloc_num 85} true;
  v52 := $$data[1];
  assert {:sourceloc} {:sourceloc_num 86} true;
  v53 := $$data[2];
  assert {:sourceloc} {:sourceloc_num 87} true;
  v54 := $$data[3];
  assert {:sourceloc} {:sourceloc_num 88} true;
  $$data[0] := FADD32(v51, v53);
  assert {:sourceloc} {:sourceloc_num 89} true;
  $$data[1] := FADD32(v52, v54);
  assert {:sourceloc} {:sourceloc_num 90} true;
  v55 := $$data[2];
  assert {:sourceloc} {:sourceloc_num 91} true;
  v56 := $$data[3];
  assert {:sourceloc} {:sourceloc_num 92} true;
  $$data[2] := FSUB32(v51, v55);
  assert {:sourceloc} {:sourceloc_num 93} true;
  $$data[3] := FSUB32(v52, v56);
  assert {:sourceloc} {:sourceloc_num 94} true;
  v57 := $$data[4];
  assert {:sourceloc} {:sourceloc_num 95} true;
  v58 := $$data[5];
  assert {:sourceloc} {:sourceloc_num 96} true;
  v59 := $$data[6];
  assert {:sourceloc} {:sourceloc_num 97} true;
  v60 := $$data[7];
  assert {:sourceloc} {:sourceloc_num 98} true;
  $$data[4] := FADD32(v57, v59);
  assert {:sourceloc} {:sourceloc_num 99} true;
  $$data[5] := FADD32(v58, v60);
  assert {:sourceloc} {:sourceloc_num 100} true;
  v61 := $$data[6];
  assert {:sourceloc} {:sourceloc_num 101} true;
  v62 := $$data[7];
  assert {:sourceloc} {:sourceloc_num 102} true;
  $$data[6] := FSUB32(v57, v61);
  assert {:sourceloc} {:sourceloc_num 103} true;
  $$data[7] := FSUB32(v58, v62);
  assert {:sourceloc} {:sourceloc_num 104} true;
  v63 := $$data[8];
  assert {:sourceloc} {:sourceloc_num 105} true;
  v64 := $$data[9];
  assert {:sourceloc} {:sourceloc_num 106} true;
  v65 := $$data[12];
  assert {:sourceloc} {:sourceloc_num 107} true;
  v66 := $$data[13];
  assert {:sourceloc} {:sourceloc_num 108} true;
  $$data[8] := FADD32(v63, v65);
  assert {:sourceloc} {:sourceloc_num 109} true;
  $$data[9] := FADD32(v64, v66);
  assert {:sourceloc} {:sourceloc_num 110} true;
  v67 := $$data[12];
  assert {:sourceloc} {:sourceloc_num 111} true;
  v68 := $$data[13];
  assert {:sourceloc} {:sourceloc_num 112} true;
  $$data[12] := FSUB32(v63, v67);
  assert {:sourceloc} {:sourceloc_num 113} true;
  $$data[13] := FSUB32(v64, v68);
  assert {:sourceloc} {:sourceloc_num 114} true;
  v69 := $$data[10];
  assert {:sourceloc} {:sourceloc_num 115} true;
  v70 := $$data[11];
  assert {:sourceloc} {:sourceloc_num 116} true;
  v71 := $$data[14];
  assert {:sourceloc} {:sourceloc_num 117} true;
  v72 := $$data[15];
  assert {:sourceloc} {:sourceloc_num 118} true;
  $$data[10] := FADD32(v69, v71);
  assert {:sourceloc} {:sourceloc_num 119} true;
  $$data[11] := FADD32(v70, v72);
  assert {:sourceloc} {:sourceloc_num 120} true;
  v73 := $$data[14];
  assert {:sourceloc} {:sourceloc_num 121} true;
  v74 := $$data[15];
  assert {:sourceloc} {:sourceloc_num 122} true;
  $$data[14] := FSUB32(v69, v73);
  assert {:sourceloc} {:sourceloc_num 123} true;
  $$data[15] := FSUB32(v70, v74);
  assert {:sourceloc} {:sourceloc_num 124} true;
  v75 := $$data[14];
  assert {:sourceloc} {:sourceloc_num 125} true;
  v76 := $$data[15];
  assert {:sourceloc} {:sourceloc_num 126} true;
  $$data[14] := FADD32(FMUL32(v75, 0), FSUB32(-2147483648, FMUL32(v76, 1065353216)));
  assert {:sourceloc} {:sourceloc_num 127} true;
  $$data[15] := FADD32(FMUL32(v75, 1065353216), FMUL32(v76, 0));
  assert {:sourceloc} {:sourceloc_num 128} true;
  v77 := $$data[8];
  assert {:sourceloc} {:sourceloc_num 129} true;
  v78 := $$data[9];
  assert {:sourceloc} {:sourceloc_num 130} true;
  v79 := $$data[10];
  assert {:sourceloc} {:sourceloc_num 131} true;
  v80 := $$data[11];
  assert {:sourceloc} {:sourceloc_num 132} true;
  $$data[8] := FADD32(v77, v79);
  assert {:sourceloc} {:sourceloc_num 133} true;
  $$data[9] := FADD32(v78, v80);
  assert {:sourceloc} {:sourceloc_num 134} true;
  v81 := $$data[10];
  assert {:sourceloc} {:sourceloc_num 135} true;
  v82 := $$data[11];
  assert {:sourceloc} {:sourceloc_num 136} true;
  $$data[10] := FSUB32(v77, v81);
  assert {:sourceloc} {:sourceloc_num 137} true;
  $$data[11] := FSUB32(v78, v82);
  assert {:sourceloc} {:sourceloc_num 138} true;
  v83 := $$data[12];
  assert {:sourceloc} {:sourceloc_num 139} true;
  v84 := $$data[13];
  assert {:sourceloc} {:sourceloc_num 140} true;
  v85 := $$data[14];
  assert {:sourceloc} {:sourceloc_num 141} true;
  v86 := $$data[15];
  assert {:sourceloc} {:sourceloc_num 142} true;
  $$data[12] := FADD32(v83, v85);
  assert {:sourceloc} {:sourceloc_num 143} true;
  $$data[13] := FADD32(v84, v86);
  assert {:sourceloc} {:sourceloc_num 144} true;
  v87 := $$data[14];
  assert {:sourceloc} {:sourceloc_num 145} true;
  v88 := $$data[15];
  assert {:sourceloc} {:sourceloc_num 146} true;
  $$data[14] := FSUB32(v83, v87);
  assert {:sourceloc} {:sourceloc_num 147} true;
  $$data[15] := FSUB32(v84, v88);
  assert {:sourceloc} {:sourceloc_num 148} true;
  v89 := $$ifft1D_512.reversed8[0];
  assert {:sourceloc} {:sourceloc_num 149} true;
  $$reversed8[0] := v89;
  assert {:sourceloc} {:sourceloc_num 150} true;
  v90 := $$ifft1D_512.reversed8[1];
  assert {:sourceloc} {:sourceloc_num 151} true;
  $$reversed8[1] := v90;
  assert {:sourceloc} {:sourceloc_num 152} true;
  v91 := $$ifft1D_512.reversed8[2];
  assert {:sourceloc} {:sourceloc_num 153} true;
  $$reversed8[2] := v91;
  assert {:sourceloc} {:sourceloc_num 154} true;
  v92 := $$ifft1D_512.reversed8[3];
  assert {:sourceloc} {:sourceloc_num 155} true;
  $$reversed8[3] := v92;
  assert {:sourceloc} {:sourceloc_num 156} true;
  v93 := $$ifft1D_512.reversed8[4];
  assert {:sourceloc} {:sourceloc_num 157} true;
  $$reversed8[4] := v93;
  assert {:sourceloc} {:sourceloc_num 158} true;
  v94 := $$ifft1D_512.reversed8[5];
  assert {:sourceloc} {:sourceloc_num 159} true;
  $$reversed8[5] := v94;
  assert {:sourceloc} {:sourceloc_num 160} true;
  v95 := $$ifft1D_512.reversed8[6];
  assert {:sourceloc} {:sourceloc_num 161} true;
  $$reversed8[6] := v95;
  assert {:sourceloc} {:sourceloc_num 162} true;
  v96 := $$ifft1D_512.reversed8[7];
  assert {:sourceloc} {:sourceloc_num 163} true;
  $$reversed8[7] := v96;
  $j.0 := 1;
  goto $3;
$3:
  assert {:block_sourceloc} {:sourceloc_num 164} true;
  v97 := BV32_SLT($j.0, 8);
  goto $truebb0, $falsebb0;
$4:
  assert {:block_sourceloc} {:sourceloc_num 165} true;
  assert {:sourceloc} {:sourceloc_num 166} true;
  v98 := $$data[BV32_MUL($j.0, 2)];
  assert {:sourceloc} {:sourceloc_num 167} true;
  v99 := $$data[BV32_ADD(BV32_MUL($j.0, 2), 1)];
  assert {:sourceloc} {:sourceloc_num 168} true;
  v100 := $$reversed8[$j.0];
  v101 := FP64_CONV32(FMUL64(FDIV64(FMUL64(4618760256179416344, SI32_TO_FP64(v100)), 4647714815446351872), SI32_TO_FP64(v0)));
  v102 := FCOS32(v101);
  v103 := FSIN32(v101);
  assert {:sourceloc} {:sourceloc_num 169} true;
  $$data[BV32_MUL($j.0, 2)] := FADD32(FMUL32(v98, v102), FSUB32(-2147483648, FMUL32(v99, v103)));
  assert {:sourceloc} {:sourceloc_num 170} true;
  $$data[BV32_ADD(BV32_MUL($j.0, 2), 1)] := FADD32(FMUL32(v98, v103), FMUL32(v99, v102));
  goto $5;
$5:
  assert {:block_sourceloc} {:sourceloc_num 171} true;
  $j.0 := BV32_ADD($j.0, 1);
  goto $3;
$6:
  assert {:block_sourceloc} {:sourceloc_num 172} true;
  v104 := BV32_ADD(BV32_MUL(v2, 8), v3);
  assert {:sourceloc} {:sourceloc_num 173} true;
  v105 := $$storex8.reversed[0];
  assert {:sourceloc} {:sourceloc_num 174} true;
  $$reversed.i[0] := v105;
  assert {:sourceloc} {:sourceloc_num 175} true;
  v106 := $$storex8.reversed[1];
  assert {:sourceloc} {:sourceloc_num 176} true;
  $$reversed.i[1] := v106;
  assert {:sourceloc} {:sourceloc_num 177} true;
  v107 := $$storex8.reversed[2];
  assert {:sourceloc} {:sourceloc_num 178} true;
  $$reversed.i[2] := v107;
  assert {:sourceloc} {:sourceloc_num 179} true;
  v108 := $$storex8.reversed[3];
  assert {:sourceloc} {:sourceloc_num 180} true;
  $$reversed.i[3] := v108;
  assert {:sourceloc} {:sourceloc_num 181} true;
  v109 := $$storex8.reversed[4];
  assert {:sourceloc} {:sourceloc_num 182} true;
  $$reversed.i[4] := v109;
  assert {:sourceloc} {:sourceloc_num 183} true;
  v110 := $$storex8.reversed[5];
  assert {:sourceloc} {:sourceloc_num 184} true;
  $$reversed.i[5] := v110;
  assert {:sourceloc} {:sourceloc_num 185} true;
  v111 := $$storex8.reversed[6];
  assert {:sourceloc} {:sourceloc_num 186} true;
  $$reversed.i[6] := v111;
  assert {:sourceloc} {:sourceloc_num 187} true;
  v112 := $$storex8.reversed[7];
  assert {:sourceloc} {:sourceloc_num 188} true;
  $$reversed.i[7] := v112;
  $i.i51.0 := 0;
  goto $7;
$7:
  assert {:block_sourceloc} {:sourceloc_num 189} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 190} (if (_WRITE_HAS_OCCURRED_$$ifft1D_512.smem ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_UDIV(BV32_MUL(4, _WATCHED_OFFSET), 4), local_id_x), 66), 8)) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 191} (if (_WRITE_HAS_OCCURRED_$$ifft1D_512.smem ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_MUL(4, _WATCHED_OFFSET), 4), local_id_x), 66) == 0) then 1 else 0) != 0;
  v113 := BV32_SLT($i.i51.0, 8);
  goto $truebb1, $falsebb1;
$8:
  assert {:block_sourceloc} {:sourceloc_num 192} true;
  assert {:sourceloc} {:sourceloc_num 193} true;
  v114 := $$reversed.i[$i.i51.0];
  assert {:sourceloc} {:sourceloc_num 194} true;
  v115 := $$data[BV32_MUL(v114, 2)];
  assert {:sourceloc} {:sourceloc_num 195} true;
  v116 := $$data[BV32_ADD(BV32_MUL(v114, 2), 1)];
  assert {:sourceloc} {:sourceloc_num 196} true;
  $$ifft1D_512.smem[BV32_ADD(v104, BV32_MUL($i.i51.0, 66))] := v115;
  $i.i51.0 := BV32_ADD($i.i51.0, 1);
  goto $7;
$storex8.exit52:
  assert {:block_sourceloc} {:sourceloc_num 197} true;
  call {:sourceloc_num 198} $bugle_barrier(-1, 0);
  v117 := BV32_ADD(BV32_MUL(v3, 66), v2);
  $i.i53.0 := 0;
  goto $9;
$9:
  assert {:block_sourceloc} {:sourceloc_num 199} true;
  v118 := BV32_SLT($i.i53.0, 8);
  goto $truebb2, $falsebb2;
$10:
  assert {:block_sourceloc} {:sourceloc_num 200} true;
  assert {:sourceloc} {:sourceloc_num 201} true;
  v119 := $$ifft1D_512.smem[BV32_ADD(v117, BV32_MUL($i.i53.0, 8))];
  assert {:sourceloc} {:sourceloc_num 202} true;
  v120 := $$data[BV32_MUL($i.i53.0, 2)];
  assert {:sourceloc} {:sourceloc_num 203} true;
  v121 := $$data[BV32_ADD(BV32_MUL($i.i53.0, 2), 1)];
  assert {:sourceloc} {:sourceloc_num 204} true;
  $$data[BV32_MUL($i.i53.0, 2)] := v119;
  assert {:sourceloc} {:sourceloc_num 205} true;
  $$data[BV32_ADD(BV32_MUL($i.i53.0, 2), 1)] := v121;
  $i.i53.0 := BV32_ADD($i.i53.0, 1);
  goto $9;
$loadx8.exit54:
  assert {:block_sourceloc} {:sourceloc_num 206} true;
  call {:sourceloc_num 207} $bugle_barrier(-1, 0);
  v122 := BV32_ADD(BV32_MUL(v2, 8), v3);
  assert {:sourceloc} {:sourceloc_num 208} true;
  v123 := $$storey8.reversed[0];
  assert {:sourceloc} {:sourceloc_num 209} true;
  $$reversed.i[0] := v123;
  assert {:sourceloc} {:sourceloc_num 210} true;
  v124 := $$storey8.reversed[1];
  assert {:sourceloc} {:sourceloc_num 211} true;
  $$reversed.i[1] := v124;
  assert {:sourceloc} {:sourceloc_num 212} true;
  v125 := $$storey8.reversed[2];
  assert {:sourceloc} {:sourceloc_num 213} true;
  $$reversed.i[2] := v125;
  assert {:sourceloc} {:sourceloc_num 214} true;
  v126 := $$storey8.reversed[3];
  assert {:sourceloc} {:sourceloc_num 215} true;
  $$reversed.i[3] := v126;
  assert {:sourceloc} {:sourceloc_num 216} true;
  v127 := $$storey8.reversed[4];
  assert {:sourceloc} {:sourceloc_num 217} true;
  $$reversed.i[4] := v127;
  assert {:sourceloc} {:sourceloc_num 218} true;
  v128 := $$storey8.reversed[5];
  assert {:sourceloc} {:sourceloc_num 219} true;
  $$reversed.i[5] := v128;
  assert {:sourceloc} {:sourceloc_num 220} true;
  v129 := $$storey8.reversed[6];
  assert {:sourceloc} {:sourceloc_num 221} true;
  $$reversed.i[6] := v129;
  assert {:sourceloc} {:sourceloc_num 222} true;
  v130 := $$storey8.reversed[7];
  assert {:sourceloc} {:sourceloc_num 223} true;
  $$reversed.i[7] := v130;
  $i.i48.0 := 0;
  goto $11;
$11:
  assert {:block_sourceloc} {:sourceloc_num 224} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 225} (if (_WRITE_HAS_OCCURRED_$$ifft1D_512.smem ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_UDIV(BV32_MUL(4, _WATCHED_OFFSET), 4), local_id_x), 66), 8)) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 226} (if (_WRITE_HAS_OCCURRED_$$ifft1D_512.smem ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_MUL(4, _WATCHED_OFFSET), 4), local_id_x), 66) == 0) then 1 else 0) != 0;
  v131 := BV32_SLT($i.i48.0, 8);
  goto $truebb3, $falsebb3;
$12:
  assert {:block_sourceloc} {:sourceloc_num 227} true;
  assert {:sourceloc} {:sourceloc_num 228} true;
  v132 := $$reversed.i[$i.i48.0];
  assert {:sourceloc} {:sourceloc_num 229} true;
  v133 := $$data[BV32_MUL(v132, 2)];
  assert {:sourceloc} {:sourceloc_num 230} true;
  v134 := $$data[BV32_ADD(BV32_MUL(v132, 2), 1)];
  assert {:sourceloc} {:sourceloc_num 231} true;
  $$ifft1D_512.smem[BV32_ADD(v122, BV32_MUL($i.i48.0, 66))] := v134;
  $i.i48.0 := BV32_ADD($i.i48.0, 1);
  goto $11;
$storey8.exit49:
  assert {:block_sourceloc} {:sourceloc_num 232} true;
  call {:sourceloc_num 233} $bugle_barrier(-1, 0);
  v135 := BV32_ADD(BV32_MUL(v3, 66), v2);
  $i.i45.0 := 0;
  goto $13;
$13:
  assert {:block_sourceloc} {:sourceloc_num 234} true;
  v136 := BV32_SLT($i.i45.0, 8);
  goto $truebb4, $falsebb4;
$14:
  assert {:block_sourceloc} {:sourceloc_num 235} true;
  assert {:sourceloc} {:sourceloc_num 236} true;
  v137 := $$ifft1D_512.smem[BV32_ADD(v135, BV32_MUL($i.i45.0, 8))];
  assert {:sourceloc} {:sourceloc_num 237} true;
  v138 := $$data[BV32_MUL($i.i45.0, 2)];
  assert {:sourceloc} {:sourceloc_num 238} true;
  v139 := $$data[BV32_ADD(BV32_MUL($i.i45.0, 2), 1)];
  assert {:sourceloc} {:sourceloc_num 239} true;
  $$data[BV32_MUL($i.i45.0, 2)] := v138;
  assert {:sourceloc} {:sourceloc_num 240} true;
  $$data[BV32_ADD(BV32_MUL($i.i45.0, 2), 1)] := v137;
  $i.i45.0 := BV32_ADD($i.i45.0, 1);
  goto $13;
$loady8.exit46:
  assert {:block_sourceloc} {:sourceloc_num 241} true;
  call {:sourceloc_num 242} $bugle_barrier(-1, 0);
  assert {:sourceloc} {:sourceloc_num 243} true;
  v140 := $$data[0];
  assert {:sourceloc} {:sourceloc_num 244} true;
  v141 := $$data[1];
  assert {:sourceloc} {:sourceloc_num 245} true;
  v142 := $$data[8];
  assert {:sourceloc} {:sourceloc_num 246} true;
  v143 := $$data[9];
  assert {:sourceloc} {:sourceloc_num 247} true;
  $$data[0] := FADD32(v140, v142);
  assert {:sourceloc} {:sourceloc_num 248} true;
  $$data[1] := FADD32(v141, v143);
  assert {:sourceloc} {:sourceloc_num 249} true;
  v144 := $$data[8];
  assert {:sourceloc} {:sourceloc_num 250} true;
  v145 := $$data[9];
  assert {:sourceloc} {:sourceloc_num 251} true;
  $$data[8] := FSUB32(v140, v144);
  assert {:sourceloc} {:sourceloc_num 252} true;
  $$data[9] := FSUB32(v141, v145);
  assert {:sourceloc} {:sourceloc_num 253} true;
  v146 := $$data[2];
  assert {:sourceloc} {:sourceloc_num 254} true;
  v147 := $$data[3];
  assert {:sourceloc} {:sourceloc_num 255} true;
  v148 := $$data[10];
  assert {:sourceloc} {:sourceloc_num 256} true;
  v149 := $$data[11];
  assert {:sourceloc} {:sourceloc_num 257} true;
  $$data[2] := FADD32(v146, v148);
  assert {:sourceloc} {:sourceloc_num 258} true;
  $$data[3] := FADD32(v147, v149);
  assert {:sourceloc} {:sourceloc_num 259} true;
  v150 := $$data[10];
  assert {:sourceloc} {:sourceloc_num 260} true;
  v151 := $$data[11];
  assert {:sourceloc} {:sourceloc_num 261} true;
  $$data[10] := FSUB32(v146, v150);
  assert {:sourceloc} {:sourceloc_num 262} true;
  $$data[11] := FSUB32(v147, v151);
  assert {:sourceloc} {:sourceloc_num 263} true;
  v152 := $$data[4];
  assert {:sourceloc} {:sourceloc_num 264} true;
  v153 := $$data[5];
  assert {:sourceloc} {:sourceloc_num 265} true;
  v154 := $$data[12];
  assert {:sourceloc} {:sourceloc_num 266} true;
  v155 := $$data[13];
  assert {:sourceloc} {:sourceloc_num 267} true;
  $$data[4] := FADD32(v152, v154);
  assert {:sourceloc} {:sourceloc_num 268} true;
  $$data[5] := FADD32(v153, v155);
  assert {:sourceloc} {:sourceloc_num 269} true;
  v156 := $$data[12];
  assert {:sourceloc} {:sourceloc_num 270} true;
  v157 := $$data[13];
  assert {:sourceloc} {:sourceloc_num 271} true;
  $$data[12] := FSUB32(v152, v156);
  assert {:sourceloc} {:sourceloc_num 272} true;
  $$data[13] := FSUB32(v153, v157);
  assert {:sourceloc} {:sourceloc_num 273} true;
  v158 := $$data[6];
  assert {:sourceloc} {:sourceloc_num 274} true;
  v159 := $$data[7];
  assert {:sourceloc} {:sourceloc_num 275} true;
  v160 := $$data[14];
  assert {:sourceloc} {:sourceloc_num 276} true;
  v161 := $$data[15];
  assert {:sourceloc} {:sourceloc_num 277} true;
  $$data[6] := FADD32(v158, v160);
  assert {:sourceloc} {:sourceloc_num 278} true;
  $$data[7] := FADD32(v159, v161);
  assert {:sourceloc} {:sourceloc_num 279} true;
  v162 := $$data[14];
  assert {:sourceloc} {:sourceloc_num 280} true;
  v163 := $$data[15];
  assert {:sourceloc} {:sourceloc_num 281} true;
  $$data[14] := FSUB32(v158, v162);
  assert {:sourceloc} {:sourceloc_num 282} true;
  $$data[15] := FSUB32(v159, v163);
  assert {:sourceloc} {:sourceloc_num 283} true;
  v164 := $$data[10];
  assert {:sourceloc} {:sourceloc_num 284} true;
  v165 := $$data[11];
  assert {:sourceloc} {:sourceloc_num 285} true;
  $$data[10] := FMUL32(1060439283, FADD32(FMUL32(v164, 1065353216), FSUB32(-2147483648, FMUL32(v165, 1065353216))));
  assert {:sourceloc} {:sourceloc_num 286} true;
  $$data[11] := FMUL32(1060439283, FADD32(FMUL32(v164, 1065353216), FMUL32(v165, 1065353216)));
  assert {:sourceloc} {:sourceloc_num 287} true;
  v166 := $$data[12];
  assert {:sourceloc} {:sourceloc_num 288} true;
  v167 := $$data[13];
  assert {:sourceloc} {:sourceloc_num 289} true;
  $$data[12] := FADD32(FMUL32(v166, 0), FSUB32(-2147483648, FMUL32(v167, 1065353216)));
  assert {:sourceloc} {:sourceloc_num 290} true;
  $$data[13] := FADD32(FMUL32(v166, 1065353216), FMUL32(v167, 0));
  assert {:sourceloc} {:sourceloc_num 291} true;
  v168 := $$data[14];
  assert {:sourceloc} {:sourceloc_num 292} true;
  v169 := $$data[15];
  assert {:sourceloc} {:sourceloc_num 293} true;
  $$data[14] := FMUL32(1060439283, FADD32(FMUL32(v168, -1082130432), FSUB32(-2147483648, FMUL32(v169, 1065353216))));
  assert {:sourceloc} {:sourceloc_num 294} true;
  $$data[15] := FMUL32(1060439283, FADD32(FMUL32(v168, 1065353216), FMUL32(v169, -1082130432)));
  assert {:sourceloc} {:sourceloc_num 295} true;
  v170 := $$data[0];
  assert {:sourceloc} {:sourceloc_num 296} true;
  v171 := $$data[1];
  assert {:sourceloc} {:sourceloc_num 297} true;
  v172 := $$data[4];
  assert {:sourceloc} {:sourceloc_num 298} true;
  v173 := $$data[5];
  assert {:sourceloc} {:sourceloc_num 299} true;
  $$data[0] := FADD32(v170, v172);
  assert {:sourceloc} {:sourceloc_num 300} true;
  $$data[1] := FADD32(v171, v173);
  assert {:sourceloc} {:sourceloc_num 301} true;
  v174 := $$data[4];
  assert {:sourceloc} {:sourceloc_num 302} true;
  v175 := $$data[5];
  assert {:sourceloc} {:sourceloc_num 303} true;
  $$data[4] := FSUB32(v170, v174);
  assert {:sourceloc} {:sourceloc_num 304} true;
  $$data[5] := FSUB32(v171, v175);
  assert {:sourceloc} {:sourceloc_num 305} true;
  v176 := $$data[2];
  assert {:sourceloc} {:sourceloc_num 306} true;
  v177 := $$data[3];
  assert {:sourceloc} {:sourceloc_num 307} true;
  v178 := $$data[6];
  assert {:sourceloc} {:sourceloc_num 308} true;
  v179 := $$data[7];
  assert {:sourceloc} {:sourceloc_num 309} true;
  $$data[2] := FADD32(v176, v178);
  assert {:sourceloc} {:sourceloc_num 310} true;
  $$data[3] := FADD32(v177, v179);
  assert {:sourceloc} {:sourceloc_num 311} true;
  v180 := $$data[6];
  assert {:sourceloc} {:sourceloc_num 312} true;
  v181 := $$data[7];
  assert {:sourceloc} {:sourceloc_num 313} true;
  $$data[6] := FSUB32(v176, v180);
  assert {:sourceloc} {:sourceloc_num 314} true;
  $$data[7] := FSUB32(v177, v181);
  assert {:sourceloc} {:sourceloc_num 315} true;
  v182 := $$data[6];
  assert {:sourceloc} {:sourceloc_num 316} true;
  v183 := $$data[7];
  assert {:sourceloc} {:sourceloc_num 317} true;
  $$data[6] := FADD32(FMUL32(v182, 0), FSUB32(-2147483648, FMUL32(v183, 1065353216)));
  assert {:sourceloc} {:sourceloc_num 318} true;
  $$data[7] := FADD32(FMUL32(v182, 1065353216), FMUL32(v183, 0));
  assert {:sourceloc} {:sourceloc_num 319} true;
  v184 := $$data[0];
  assert {:sourceloc} {:sourceloc_num 320} true;
  v185 := $$data[1];
  assert {:sourceloc} {:sourceloc_num 321} true;
  v186 := $$data[2];
  assert {:sourceloc} {:sourceloc_num 322} true;
  v187 := $$data[3];
  assert {:sourceloc} {:sourceloc_num 323} true;
  $$data[0] := FADD32(v184, v186);
  assert {:sourceloc} {:sourceloc_num 324} true;
  $$data[1] := FADD32(v185, v187);
  assert {:sourceloc} {:sourceloc_num 325} true;
  v188 := $$data[2];
  assert {:sourceloc} {:sourceloc_num 326} true;
  v189 := $$data[3];
  assert {:sourceloc} {:sourceloc_num 327} true;
  $$data[2] := FSUB32(v184, v188);
  assert {:sourceloc} {:sourceloc_num 328} true;
  $$data[3] := FSUB32(v185, v189);
  assert {:sourceloc} {:sourceloc_num 329} true;
  v190 := $$data[4];
  assert {:sourceloc} {:sourceloc_num 330} true;
  v191 := $$data[5];
  assert {:sourceloc} {:sourceloc_num 331} true;
  v192 := $$data[6];
  assert {:sourceloc} {:sourceloc_num 332} true;
  v193 := $$data[7];
  assert {:sourceloc} {:sourceloc_num 333} true;
  $$data[4] := FADD32(v190, v192);
  assert {:sourceloc} {:sourceloc_num 334} true;
  $$data[5] := FADD32(v191, v193);
  assert {:sourceloc} {:sourceloc_num 335} true;
  v194 := $$data[6];
  assert {:sourceloc} {:sourceloc_num 336} true;
  v195 := $$data[7];
  assert {:sourceloc} {:sourceloc_num 337} true;
  $$data[6] := FSUB32(v190, v194);
  assert {:sourceloc} {:sourceloc_num 338} true;
  $$data[7] := FSUB32(v191, v195);
  assert {:sourceloc} {:sourceloc_num 339} true;
  v196 := $$data[8];
  assert {:sourceloc} {:sourceloc_num 340} true;
  v197 := $$data[9];
  assert {:sourceloc} {:sourceloc_num 341} true;
  v198 := $$data[12];
  assert {:sourceloc} {:sourceloc_num 342} true;
  v199 := $$data[13];
  assert {:sourceloc} {:sourceloc_num 343} true;
  $$data[8] := FADD32(v196, v198);
  assert {:sourceloc} {:sourceloc_num 344} true;
  $$data[9] := FADD32(v197, v199);
  assert {:sourceloc} {:sourceloc_num 345} true;
  v200 := $$data[12];
  assert {:sourceloc} {:sourceloc_num 346} true;
  v201 := $$data[13];
  assert {:sourceloc} {:sourceloc_num 347} true;
  $$data[12] := FSUB32(v196, v200);
  assert {:sourceloc} {:sourceloc_num 348} true;
  $$data[13] := FSUB32(v197, v201);
  assert {:sourceloc} {:sourceloc_num 349} true;
  v202 := $$data[10];
  assert {:sourceloc} {:sourceloc_num 350} true;
  v203 := $$data[11];
  assert {:sourceloc} {:sourceloc_num 351} true;
  v204 := $$data[14];
  assert {:sourceloc} {:sourceloc_num 352} true;
  v205 := $$data[15];
  assert {:sourceloc} {:sourceloc_num 353} true;
  $$data[10] := FADD32(v202, v204);
  assert {:sourceloc} {:sourceloc_num 354} true;
  $$data[11] := FADD32(v203, v205);
  assert {:sourceloc} {:sourceloc_num 355} true;
  v206 := $$data[14];
  assert {:sourceloc} {:sourceloc_num 356} true;
  v207 := $$data[15];
  assert {:sourceloc} {:sourceloc_num 357} true;
  $$data[14] := FSUB32(v202, v206);
  assert {:sourceloc} {:sourceloc_num 358} true;
  $$data[15] := FSUB32(v203, v207);
  assert {:sourceloc} {:sourceloc_num 359} true;
  v208 := $$data[14];
  assert {:sourceloc} {:sourceloc_num 360} true;
  v209 := $$data[15];
  assert {:sourceloc} {:sourceloc_num 361} true;
  $$data[14] := FADD32(FMUL32(v208, 0), FSUB32(-2147483648, FMUL32(v209, 1065353216)));
  assert {:sourceloc} {:sourceloc_num 362} true;
  $$data[15] := FADD32(FMUL32(v208, 1065353216), FMUL32(v209, 0));
  assert {:sourceloc} {:sourceloc_num 363} true;
  v210 := $$data[8];
  assert {:sourceloc} {:sourceloc_num 364} true;
  v211 := $$data[9];
  assert {:sourceloc} {:sourceloc_num 365} true;
  v212 := $$data[10];
  assert {:sourceloc} {:sourceloc_num 366} true;
  v213 := $$data[11];
  assert {:sourceloc} {:sourceloc_num 367} true;
  $$data[8] := FADD32(v210, v212);
  assert {:sourceloc} {:sourceloc_num 368} true;
  $$data[9] := FADD32(v211, v213);
  assert {:sourceloc} {:sourceloc_num 369} true;
  v214 := $$data[10];
  assert {:sourceloc} {:sourceloc_num 370} true;
  v215 := $$data[11];
  assert {:sourceloc} {:sourceloc_num 371} true;
  $$data[10] := FSUB32(v210, v214);
  assert {:sourceloc} {:sourceloc_num 372} true;
  $$data[11] := FSUB32(v211, v215);
  assert {:sourceloc} {:sourceloc_num 373} true;
  v216 := $$data[12];
  assert {:sourceloc} {:sourceloc_num 374} true;
  v217 := $$data[13];
  assert {:sourceloc} {:sourceloc_num 375} true;
  v218 := $$data[14];
  assert {:sourceloc} {:sourceloc_num 376} true;
  v219 := $$data[15];
  assert {:sourceloc} {:sourceloc_num 377} true;
  $$data[12] := FADD32(v216, v218);
  assert {:sourceloc} {:sourceloc_num 378} true;
  $$data[13] := FADD32(v217, v219);
  assert {:sourceloc} {:sourceloc_num 379} true;
  v220 := $$data[14];
  assert {:sourceloc} {:sourceloc_num 380} true;
  v221 := $$data[15];
  assert {:sourceloc} {:sourceloc_num 381} true;
  $$data[14] := FSUB32(v216, v220);
  assert {:sourceloc} {:sourceloc_num 382} true;
  $$data[15] := FSUB32(v217, v221);
  assert {:sourceloc} {:sourceloc_num 383} true;
  v222 := $$ifft1D_512.reversed81[0];
  assert {:sourceloc} {:sourceloc_num 384} true;
  $$reversed824[0] := v222;
  assert {:sourceloc} {:sourceloc_num 385} true;
  v223 := $$ifft1D_512.reversed81[1];
  assert {:sourceloc} {:sourceloc_num 386} true;
  $$reversed824[1] := v223;
  assert {:sourceloc} {:sourceloc_num 387} true;
  v224 := $$ifft1D_512.reversed81[2];
  assert {:sourceloc} {:sourceloc_num 388} true;
  $$reversed824[2] := v224;
  assert {:sourceloc} {:sourceloc_num 389} true;
  v225 := $$ifft1D_512.reversed81[3];
  assert {:sourceloc} {:sourceloc_num 390} true;
  $$reversed824[3] := v225;
  assert {:sourceloc} {:sourceloc_num 391} true;
  v226 := $$ifft1D_512.reversed81[4];
  assert {:sourceloc} {:sourceloc_num 392} true;
  $$reversed824[4] := v226;
  assert {:sourceloc} {:sourceloc_num 393} true;
  v227 := $$ifft1D_512.reversed81[5];
  assert {:sourceloc} {:sourceloc_num 394} true;
  $$reversed824[5] := v227;
  assert {:sourceloc} {:sourceloc_num 395} true;
  v228 := $$ifft1D_512.reversed81[6];
  assert {:sourceloc} {:sourceloc_num 396} true;
  $$reversed824[6] := v228;
  assert {:sourceloc} {:sourceloc_num 397} true;
  v229 := $$ifft1D_512.reversed81[7];
  assert {:sourceloc} {:sourceloc_num 398} true;
  $$reversed824[7] := v229;
  $j25.0 := 1;
  goto $15;
$15:
  assert {:block_sourceloc} {:sourceloc_num 399} true;
  v230 := BV32_SLT($j25.0, 8);
  goto $truebb5, $falsebb5;
$16:
  assert {:block_sourceloc} {:sourceloc_num 400} true;
  assert {:sourceloc} {:sourceloc_num 401} true;
  v231 := $$data[BV32_MUL($j25.0, 2)];
  assert {:sourceloc} {:sourceloc_num 402} true;
  v232 := $$data[BV32_ADD(BV32_MUL($j25.0, 2), 1)];
  assert {:sourceloc} {:sourceloc_num 403} true;
  v233 := $$reversed824[$j25.0];
  v234 := FP64_CONV32(FMUL64(FDIV64(FMUL64(4618760256179416344, SI32_TO_FP64(v233)), 4634204016564240384), SI32_TO_FP64(v2)));
  v235 := FCOS32(v234);
  v236 := FSIN32(v234);
  assert {:sourceloc} {:sourceloc_num 404} true;
  $$data[BV32_MUL($j25.0, 2)] := FADD32(FMUL32(v231, v235), FSUB32(-2147483648, FMUL32(v232, v236)));
  assert {:sourceloc} {:sourceloc_num 405} true;
  $$data[BV32_ADD(BV32_MUL($j25.0, 2), 1)] := FADD32(FMUL32(v231, v236), FMUL32(v232, v235));
  goto $17;
$17:
  assert {:block_sourceloc} {:sourceloc_num 406} true;
  $j25.0 := BV32_ADD($j25.0, 1);
  goto $15;
$18:
  assert {:block_sourceloc} {:sourceloc_num 407} true;
  v237 := BV32_ADD(BV32_MUL(v2, 8), v3);
  assert {:sourceloc} {:sourceloc_num 408} true;
  v238 := $$storex8.reversed[0];
  assert {:sourceloc} {:sourceloc_num 409} true;
  $$reversed.i[0] := v238;
  assert {:sourceloc} {:sourceloc_num 410} true;
  v239 := $$storex8.reversed[1];
  assert {:sourceloc} {:sourceloc_num 411} true;
  $$reversed.i[1] := v239;
  assert {:sourceloc} {:sourceloc_num 412} true;
  v240 := $$storex8.reversed[2];
  assert {:sourceloc} {:sourceloc_num 413} true;
  $$reversed.i[2] := v240;
  assert {:sourceloc} {:sourceloc_num 414} true;
  v241 := $$storex8.reversed[3];
  assert {:sourceloc} {:sourceloc_num 415} true;
  $$reversed.i[3] := v241;
  assert {:sourceloc} {:sourceloc_num 416} true;
  v242 := $$storex8.reversed[4];
  assert {:sourceloc} {:sourceloc_num 417} true;
  $$reversed.i[4] := v242;
  assert {:sourceloc} {:sourceloc_num 418} true;
  v243 := $$storex8.reversed[5];
  assert {:sourceloc} {:sourceloc_num 419} true;
  $$reversed.i[5] := v243;
  assert {:sourceloc} {:sourceloc_num 420} true;
  v244 := $$storex8.reversed[6];
  assert {:sourceloc} {:sourceloc_num 421} true;
  $$reversed.i[6] := v244;
  assert {:sourceloc} {:sourceloc_num 422} true;
  v245 := $$storex8.reversed[7];
  assert {:sourceloc} {:sourceloc_num 423} true;
  $$reversed.i[7] := v245;
  $i.i44.0 := 0;
  goto $19;
$19:
  assert {:block_sourceloc} {:sourceloc_num 424} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 425} (if (_WRITE_HAS_OCCURRED_$$ifft1D_512.smem ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_UDIV(BV32_MUL(4, _WATCHED_OFFSET), 4), local_id_x), 72), 8)) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 426} (if (_WRITE_HAS_OCCURRED_$$ifft1D_512.smem ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_MUL(4, _WATCHED_OFFSET), 4), local_id_x), 72) == 0) then 1 else 0) != 0;
  v246 := BV32_SLT($i.i44.0, 8);
  goto $truebb6, $falsebb6;
$20:
  assert {:block_sourceloc} {:sourceloc_num 427} true;
  assert {:sourceloc} {:sourceloc_num 428} true;
  v247 := $$reversed.i[$i.i44.0];
  assert {:sourceloc} {:sourceloc_num 429} true;
  v248 := $$data[BV32_MUL(v247, 2)];
  assert {:sourceloc} {:sourceloc_num 430} true;
  v249 := $$data[BV32_ADD(BV32_MUL(v247, 2), 1)];
  assert {:sourceloc} {:sourceloc_num 431} true;
  $$ifft1D_512.smem[BV32_ADD(v237, BV32_MUL($i.i44.0, 72))] := v248;
  $i.i44.0 := BV32_ADD($i.i44.0, 1);
  goto $19;
$storex8.exit:
  assert {:block_sourceloc} {:sourceloc_num 432} true;
  call {:sourceloc_num 433} $bugle_barrier(-1, 0);
  v250 := BV32_ADD(BV32_MUL(BV32_MUL(v2, 8), 9), v3);
  $i.i42.0 := 0;
  goto $21;
$21:
  assert {:block_sourceloc} {:sourceloc_num 434} true;
  v251 := BV32_SLT($i.i42.0, 8);
  goto $truebb7, $falsebb7;
$22:
  assert {:block_sourceloc} {:sourceloc_num 435} true;
  assert {:sourceloc} {:sourceloc_num 436} true;
  v252 := $$ifft1D_512.smem[BV32_ADD(v250, BV32_MUL($i.i42.0, 8))];
  assert {:sourceloc} {:sourceloc_num 437} true;
  v253 := $$data[BV32_MUL($i.i42.0, 2)];
  assert {:sourceloc} {:sourceloc_num 438} true;
  v254 := $$data[BV32_ADD(BV32_MUL($i.i42.0, 2), 1)];
  assert {:sourceloc} {:sourceloc_num 439} true;
  $$data[BV32_MUL($i.i42.0, 2)] := v252;
  assert {:sourceloc} {:sourceloc_num 440} true;
  $$data[BV32_ADD(BV32_MUL($i.i42.0, 2), 1)] := v254;
  $i.i42.0 := BV32_ADD($i.i42.0, 1);
  goto $21;
$loadx8.exit:
  assert {:block_sourceloc} {:sourceloc_num 441} true;
  call {:sourceloc_num 442} $bugle_barrier(-1, 0);
  v255 := BV32_ADD(BV32_MUL(v2, 8), v3);
  assert {:sourceloc} {:sourceloc_num 443} true;
  v256 := $$storey8.reversed[0];
  assert {:sourceloc} {:sourceloc_num 444} true;
  $$reversed.i[0] := v256;
  assert {:sourceloc} {:sourceloc_num 445} true;
  v257 := $$storey8.reversed[1];
  assert {:sourceloc} {:sourceloc_num 446} true;
  $$reversed.i[1] := v257;
  assert {:sourceloc} {:sourceloc_num 447} true;
  v258 := $$storey8.reversed[2];
  assert {:sourceloc} {:sourceloc_num 448} true;
  $$reversed.i[2] := v258;
  assert {:sourceloc} {:sourceloc_num 449} true;
  v259 := $$storey8.reversed[3];
  assert {:sourceloc} {:sourceloc_num 450} true;
  $$reversed.i[3] := v259;
  assert {:sourceloc} {:sourceloc_num 451} true;
  v260 := $$storey8.reversed[4];
  assert {:sourceloc} {:sourceloc_num 452} true;
  $$reversed.i[4] := v260;
  assert {:sourceloc} {:sourceloc_num 453} true;
  v261 := $$storey8.reversed[5];
  assert {:sourceloc} {:sourceloc_num 454} true;
  $$reversed.i[5] := v261;
  assert {:sourceloc} {:sourceloc_num 455} true;
  v262 := $$storey8.reversed[6];
  assert {:sourceloc} {:sourceloc_num 456} true;
  $$reversed.i[6] := v262;
  assert {:sourceloc} {:sourceloc_num 457} true;
  v263 := $$storey8.reversed[7];
  assert {:sourceloc} {:sourceloc_num 458} true;
  $$reversed.i[7] := v263;
  $i.i41.0 := 0;
  goto $23;
$23:
  assert {:block_sourceloc} {:sourceloc_num 459} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 460} (if (_WRITE_HAS_OCCURRED_$$ifft1D_512.smem ==> BV32_ULT(BV32_UDIV(BV32_SUB(BV32_UDIV(BV32_MUL(4, _WATCHED_OFFSET), 4), local_id_x), 72), 8)) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 461} (if (_WRITE_HAS_OCCURRED_$$ifft1D_512.smem ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_MUL(4, _WATCHED_OFFSET), 4), local_id_x), 72) == 0) then 1 else 0) != 0;
  v264 := BV32_SLT($i.i41.0, 8);
  goto $truebb8, $falsebb8;
$24:
  assert {:block_sourceloc} {:sourceloc_num 462} true;
  assert {:sourceloc} {:sourceloc_num 463} true;
  v265 := $$reversed.i[$i.i41.0];
  assert {:sourceloc} {:sourceloc_num 464} true;
  v266 := $$data[BV32_MUL(v265, 2)];
  assert {:sourceloc} {:sourceloc_num 465} true;
  v267 := $$data[BV32_ADD(BV32_MUL(v265, 2), 1)];
  assert {:sourceloc} {:sourceloc_num 466} true;
  $$ifft1D_512.smem[BV32_ADD(v255, BV32_MUL($i.i41.0, 72))] := v267;
  $i.i41.0 := BV32_ADD($i.i41.0, 1);
  goto $23;
$storey8.exit:
  assert {:block_sourceloc} {:sourceloc_num 467} true;
  call {:sourceloc_num 468} $bugle_barrier(-1, 0);
  v268 := BV32_ADD(BV32_MUL(BV32_MUL(v2, 8), 9), v3);
  $i.i39.0 := 0;
  goto $25;
$25:
  assert {:block_sourceloc} {:sourceloc_num 469} true;
  v269 := BV32_SLT($i.i39.0, 8);
  goto $truebb9, $falsebb9;
$26:
  assert {:block_sourceloc} {:sourceloc_num 470} true;
  assert {:sourceloc} {:sourceloc_num 471} true;
  v270 := $$ifft1D_512.smem[BV32_ADD(v268, BV32_MUL($i.i39.0, 8))];
  assert {:sourceloc} {:sourceloc_num 472} true;
  v271 := $$data[BV32_MUL($i.i39.0, 2)];
  assert {:sourceloc} {:sourceloc_num 473} true;
  v272 := $$data[BV32_ADD(BV32_MUL($i.i39.0, 2), 1)];
  assert {:sourceloc} {:sourceloc_num 474} true;
  $$data[BV32_MUL($i.i39.0, 2)] := v271;
  assert {:sourceloc} {:sourceloc_num 475} true;
  $$data[BV32_ADD(BV32_MUL($i.i39.0, 2), 1)] := v270;
  $i.i39.0 := BV32_ADD($i.i39.0, 1);
  goto $25;
$loady8.exit:
  assert {:block_sourceloc} {:sourceloc_num 476} true;
  assert {:sourceloc} {:sourceloc_num 477} true;
  v273 := $$data[0];
  assert {:sourceloc} {:sourceloc_num 478} true;
  v274 := $$data[1];
  assert {:sourceloc} {:sourceloc_num 479} true;
  v275 := $$data[8];
  assert {:sourceloc} {:sourceloc_num 480} true;
  v276 := $$data[9];
  assert {:sourceloc} {:sourceloc_num 481} true;
  $$data[0] := FADD32(v273, v275);
  assert {:sourceloc} {:sourceloc_num 482} true;
  $$data[1] := FADD32(v274, v276);
  assert {:sourceloc} {:sourceloc_num 483} true;
  v277 := $$data[8];
  assert {:sourceloc} {:sourceloc_num 484} true;
  v278 := $$data[9];
  assert {:sourceloc} {:sourceloc_num 485} true;
  $$data[8] := FSUB32(v273, v277);
  assert {:sourceloc} {:sourceloc_num 486} true;
  $$data[9] := FSUB32(v274, v278);
  assert {:sourceloc} {:sourceloc_num 487} true;
  v279 := $$data[2];
  assert {:sourceloc} {:sourceloc_num 488} true;
  v280 := $$data[3];
  assert {:sourceloc} {:sourceloc_num 489} true;
  v281 := $$data[10];
  assert {:sourceloc} {:sourceloc_num 490} true;
  v282 := $$data[11];
  assert {:sourceloc} {:sourceloc_num 491} true;
  $$data[2] := FADD32(v279, v281);
  assert {:sourceloc} {:sourceloc_num 492} true;
  $$data[3] := FADD32(v280, v282);
  assert {:sourceloc} {:sourceloc_num 493} true;
  v283 := $$data[10];
  assert {:sourceloc} {:sourceloc_num 494} true;
  v284 := $$data[11];
  assert {:sourceloc} {:sourceloc_num 495} true;
  $$data[10] := FSUB32(v279, v283);
  assert {:sourceloc} {:sourceloc_num 496} true;
  $$data[11] := FSUB32(v280, v284);
  assert {:sourceloc} {:sourceloc_num 497} true;
  v285 := $$data[4];
  assert {:sourceloc} {:sourceloc_num 498} true;
  v286 := $$data[5];
  assert {:sourceloc} {:sourceloc_num 499} true;
  v287 := $$data[12];
  assert {:sourceloc} {:sourceloc_num 500} true;
  v288 := $$data[13];
  assert {:sourceloc} {:sourceloc_num 501} true;
  $$data[4] := FADD32(v285, v287);
  assert {:sourceloc} {:sourceloc_num 502} true;
  $$data[5] := FADD32(v286, v288);
  assert {:sourceloc} {:sourceloc_num 503} true;
  v289 := $$data[12];
  assert {:sourceloc} {:sourceloc_num 504} true;
  v290 := $$data[13];
  assert {:sourceloc} {:sourceloc_num 505} true;
  $$data[12] := FSUB32(v285, v289);
  assert {:sourceloc} {:sourceloc_num 506} true;
  $$data[13] := FSUB32(v286, v290);
  assert {:sourceloc} {:sourceloc_num 507} true;
  v291 := $$data[6];
  assert {:sourceloc} {:sourceloc_num 508} true;
  v292 := $$data[7];
  assert {:sourceloc} {:sourceloc_num 509} true;
  v293 := $$data[14];
  assert {:sourceloc} {:sourceloc_num 510} true;
  v294 := $$data[15];
  assert {:sourceloc} {:sourceloc_num 511} true;
  $$data[6] := FADD32(v291, v293);
  assert {:sourceloc} {:sourceloc_num 512} true;
  $$data[7] := FADD32(v292, v294);
  assert {:sourceloc} {:sourceloc_num 513} true;
  v295 := $$data[14];
  assert {:sourceloc} {:sourceloc_num 514} true;
  v296 := $$data[15];
  assert {:sourceloc} {:sourceloc_num 515} true;
  $$data[14] := FSUB32(v291, v295);
  assert {:sourceloc} {:sourceloc_num 516} true;
  $$data[15] := FSUB32(v292, v296);
  assert {:sourceloc} {:sourceloc_num 517} true;
  v297 := $$data[10];
  assert {:sourceloc} {:sourceloc_num 518} true;
  v298 := $$data[11];
  assert {:sourceloc} {:sourceloc_num 519} true;
  $$data[10] := FMUL32(1060439283, FADD32(FMUL32(v297, 1065353216), FSUB32(-2147483648, FMUL32(v298, 1065353216))));
  assert {:sourceloc} {:sourceloc_num 520} true;
  $$data[11] := FMUL32(1060439283, FADD32(FMUL32(v297, 1065353216), FMUL32(v298, 1065353216)));
  assert {:sourceloc} {:sourceloc_num 521} true;
  v299 := $$data[12];
  assert {:sourceloc} {:sourceloc_num 522} true;
  v300 := $$data[13];
  assert {:sourceloc} {:sourceloc_num 523} true;
  $$data[12] := FADD32(FMUL32(v299, 0), FSUB32(-2147483648, FMUL32(v300, 1065353216)));
  assert {:sourceloc} {:sourceloc_num 524} true;
  $$data[13] := FADD32(FMUL32(v299, 1065353216), FMUL32(v300, 0));
  assert {:sourceloc} {:sourceloc_num 525} true;
  v301 := $$data[14];
  assert {:sourceloc} {:sourceloc_num 526} true;
  v302 := $$data[15];
  assert {:sourceloc} {:sourceloc_num 527} true;
  $$data[14] := FMUL32(1060439283, FADD32(FMUL32(v301, -1082130432), FSUB32(-2147483648, FMUL32(v302, 1065353216))));
  assert {:sourceloc} {:sourceloc_num 528} true;
  $$data[15] := FMUL32(1060439283, FADD32(FMUL32(v301, 1065353216), FMUL32(v302, -1082130432)));
  assert {:sourceloc} {:sourceloc_num 529} true;
  v303 := $$data[0];
  assert {:sourceloc} {:sourceloc_num 530} true;
  v304 := $$data[1];
  assert {:sourceloc} {:sourceloc_num 531} true;
  v305 := $$data[4];
  assert {:sourceloc} {:sourceloc_num 532} true;
  v306 := $$data[5];
  assert {:sourceloc} {:sourceloc_num 533} true;
  $$data[0] := FADD32(v303, v305);
  assert {:sourceloc} {:sourceloc_num 534} true;
  $$data[1] := FADD32(v304, v306);
  assert {:sourceloc} {:sourceloc_num 535} true;
  v307 := $$data[4];
  assert {:sourceloc} {:sourceloc_num 536} true;
  v308 := $$data[5];
  assert {:sourceloc} {:sourceloc_num 537} true;
  $$data[4] := FSUB32(v303, v307);
  assert {:sourceloc} {:sourceloc_num 538} true;
  $$data[5] := FSUB32(v304, v308);
  assert {:sourceloc} {:sourceloc_num 539} true;
  v309 := $$data[2];
  assert {:sourceloc} {:sourceloc_num 540} true;
  v310 := $$data[3];
  assert {:sourceloc} {:sourceloc_num 541} true;
  v311 := $$data[6];
  assert {:sourceloc} {:sourceloc_num 542} true;
  v312 := $$data[7];
  assert {:sourceloc} {:sourceloc_num 543} true;
  $$data[2] := FADD32(v309, v311);
  assert {:sourceloc} {:sourceloc_num 544} true;
  $$data[3] := FADD32(v310, v312);
  assert {:sourceloc} {:sourceloc_num 545} true;
  v313 := $$data[6];
  assert {:sourceloc} {:sourceloc_num 546} true;
  v314 := $$data[7];
  assert {:sourceloc} {:sourceloc_num 547} true;
  $$data[6] := FSUB32(v309, v313);
  assert {:sourceloc} {:sourceloc_num 548} true;
  $$data[7] := FSUB32(v310, v314);
  assert {:sourceloc} {:sourceloc_num 549} true;
  v315 := $$data[6];
  assert {:sourceloc} {:sourceloc_num 550} true;
  v316 := $$data[7];
  assert {:sourceloc} {:sourceloc_num 551} true;
  $$data[6] := FADD32(FMUL32(v315, 0), FSUB32(-2147483648, FMUL32(v316, 1065353216)));
  assert {:sourceloc} {:sourceloc_num 552} true;
  $$data[7] := FADD32(FMUL32(v315, 1065353216), FMUL32(v316, 0));
  assert {:sourceloc} {:sourceloc_num 553} true;
  v317 := $$data[0];
  assert {:sourceloc} {:sourceloc_num 554} true;
  v318 := $$data[1];
  assert {:sourceloc} {:sourceloc_num 555} true;
  v319 := $$data[2];
  assert {:sourceloc} {:sourceloc_num 556} true;
  v320 := $$data[3];
  assert {:sourceloc} {:sourceloc_num 557} true;
  $$data[0] := FADD32(v317, v319);
  assert {:sourceloc} {:sourceloc_num 558} true;
  $$data[1] := FADD32(v318, v320);
  assert {:sourceloc} {:sourceloc_num 559} true;
  v321 := $$data[2];
  assert {:sourceloc} {:sourceloc_num 560} true;
  v322 := $$data[3];
  assert {:sourceloc} {:sourceloc_num 561} true;
  $$data[2] := FSUB32(v317, v321);
  assert {:sourceloc} {:sourceloc_num 562} true;
  $$data[3] := FSUB32(v318, v322);
  assert {:sourceloc} {:sourceloc_num 563} true;
  v323 := $$data[4];
  assert {:sourceloc} {:sourceloc_num 564} true;
  v324 := $$data[5];
  assert {:sourceloc} {:sourceloc_num 565} true;
  v325 := $$data[6];
  assert {:sourceloc} {:sourceloc_num 566} true;
  v326 := $$data[7];
  assert {:sourceloc} {:sourceloc_num 567} true;
  $$data[4] := FADD32(v323, v325);
  assert {:sourceloc} {:sourceloc_num 568} true;
  $$data[5] := FADD32(v324, v326);
  assert {:sourceloc} {:sourceloc_num 569} true;
  v327 := $$data[6];
  assert {:sourceloc} {:sourceloc_num 570} true;
  v328 := $$data[7];
  assert {:sourceloc} {:sourceloc_num 571} true;
  $$data[6] := FSUB32(v323, v327);
  assert {:sourceloc} {:sourceloc_num 572} true;
  $$data[7] := FSUB32(v324, v328);
  assert {:sourceloc} {:sourceloc_num 573} true;
  v329 := $$data[8];
  assert {:sourceloc} {:sourceloc_num 574} true;
  v330 := $$data[9];
  assert {:sourceloc} {:sourceloc_num 575} true;
  v331 := $$data[12];
  assert {:sourceloc} {:sourceloc_num 576} true;
  v332 := $$data[13];
  assert {:sourceloc} {:sourceloc_num 577} true;
  $$data[8] := FADD32(v329, v331);
  assert {:sourceloc} {:sourceloc_num 578} true;
  $$data[9] := FADD32(v330, v332);
  assert {:sourceloc} {:sourceloc_num 579} true;
  v333 := $$data[12];
  assert {:sourceloc} {:sourceloc_num 580} true;
  v334 := $$data[13];
  assert {:sourceloc} {:sourceloc_num 581} true;
  $$data[12] := FSUB32(v329, v333);
  assert {:sourceloc} {:sourceloc_num 582} true;
  $$data[13] := FSUB32(v330, v334);
  assert {:sourceloc} {:sourceloc_num 583} true;
  v335 := $$data[10];
  assert {:sourceloc} {:sourceloc_num 584} true;
  v336 := $$data[11];
  assert {:sourceloc} {:sourceloc_num 585} true;
  v337 := $$data[14];
  assert {:sourceloc} {:sourceloc_num 586} true;
  v338 := $$data[15];
  assert {:sourceloc} {:sourceloc_num 587} true;
  $$data[10] := FADD32(v335, v337);
  assert {:sourceloc} {:sourceloc_num 588} true;
  $$data[11] := FADD32(v336, v338);
  assert {:sourceloc} {:sourceloc_num 589} true;
  v339 := $$data[14];
  assert {:sourceloc} {:sourceloc_num 590} true;
  v340 := $$data[15];
  assert {:sourceloc} {:sourceloc_num 591} true;
  $$data[14] := FSUB32(v335, v339);
  assert {:sourceloc} {:sourceloc_num 592} true;
  $$data[15] := FSUB32(v336, v340);
  assert {:sourceloc} {:sourceloc_num 593} true;
  v341 := $$data[14];
  assert {:sourceloc} {:sourceloc_num 594} true;
  v342 := $$data[15];
  assert {:sourceloc} {:sourceloc_num 595} true;
  $$data[14] := FADD32(FMUL32(v341, 0), FSUB32(-2147483648, FMUL32(v342, 1065353216)));
  assert {:sourceloc} {:sourceloc_num 596} true;
  $$data[15] := FADD32(FMUL32(v341, 1065353216), FMUL32(v342, 0));
  assert {:sourceloc} {:sourceloc_num 597} true;
  v343 := $$data[8];
  assert {:sourceloc} {:sourceloc_num 598} true;
  v344 := $$data[9];
  assert {:sourceloc} {:sourceloc_num 599} true;
  v345 := $$data[10];
  assert {:sourceloc} {:sourceloc_num 600} true;
  v346 := $$data[11];
  assert {:sourceloc} {:sourceloc_num 601} true;
  $$data[8] := FADD32(v343, v345);
  assert {:sourceloc} {:sourceloc_num 602} true;
  $$data[9] := FADD32(v344, v346);
  assert {:sourceloc} {:sourceloc_num 603} true;
  v347 := $$data[10];
  assert {:sourceloc} {:sourceloc_num 604} true;
  v348 := $$data[11];
  assert {:sourceloc} {:sourceloc_num 605} true;
  $$data[10] := FSUB32(v343, v347);
  assert {:sourceloc} {:sourceloc_num 606} true;
  $$data[11] := FSUB32(v344, v348);
  assert {:sourceloc} {:sourceloc_num 607} true;
  v349 := $$data[12];
  assert {:sourceloc} {:sourceloc_num 608} true;
  v350 := $$data[13];
  assert {:sourceloc} {:sourceloc_num 609} true;
  v351 := $$data[14];
  assert {:sourceloc} {:sourceloc_num 610} true;
  v352 := $$data[15];
  assert {:sourceloc} {:sourceloc_num 611} true;
  $$data[12] := FADD32(v349, v351);
  assert {:sourceloc} {:sourceloc_num 612} true;
  $$data[13] := FADD32(v350, v352);
  assert {:sourceloc} {:sourceloc_num 613} true;
  v353 := $$data[14];
  assert {:sourceloc} {:sourceloc_num 614} true;
  v354 := $$data[15];
  assert {:sourceloc} {:sourceloc_num 615} true;
  $$data[14] := FSUB32(v349, v353);
  assert {:sourceloc} {:sourceloc_num 616} true;
  $$data[15] := FSUB32(v350, v354);
  $i.0 := 0;
  goto $27;
$27:
  assert {:block_sourceloc} {:sourceloc_num 617} true;
  v355 := BV32_SLT($i.0, 8);
  goto $truebb10, $falsebb10;
$28:
  assert {:block_sourceloc} {:sourceloc_num 618} true;
  assert {:sourceloc} {:sourceloc_num 619} true;
  v356 := $$data[BV32_MUL($i.0, 2)];
  assert {:sourceloc} {:sourceloc_num 620} true;
  v357 := $$data[BV32_ADD(BV32_MUL($i.0, 2), 1)];
  assert {:sourceloc} {:sourceloc_num 621} true;
  v358 := $$data[BV32_MUL($i.0, 2)];
  assert {:sourceloc} {:sourceloc_num 622} true;
  v359 := $$data[BV32_ADD(BV32_MUL($i.0, 2), 1)];
  assert {:sourceloc} {:sourceloc_num 623} true;
  $$data[BV32_MUL($i.0, 2)] := FDIV32(v356, 1140850688);
  assert {:sourceloc} {:sourceloc_num 624} true;
  $$data[BV32_ADD(BV32_MUL($i.0, 2), 1)] := v359;
  assert {:sourceloc} {:sourceloc_num 625} true;
  v360 := $$data[BV32_MUL($i.0, 2)];
  assert {:sourceloc} {:sourceloc_num 626} true;
  v361 := $$data[BV32_ADD(BV32_MUL($i.0, 2), 1)];
  assert {:sourceloc} {:sourceloc_num 627} true;
  v362 := $$data[BV32_MUL($i.0, 2)];
  assert {:sourceloc} {:sourceloc_num 628} true;
  v363 := $$data[BV32_ADD(BV32_MUL($i.0, 2), 1)];
  assert {:sourceloc} {:sourceloc_num 629} true;
  $$data[BV32_MUL($i.0, 2)] := v362;
  assert {:sourceloc} {:sourceloc_num 630} true;
  $$data[BV32_ADD(BV32_MUL($i.0, 2), 1)] := FDIV32(v361, 1140850688);
  goto $29;
$29:
  assert {:block_sourceloc} {:sourceloc_num 631} true;
  $i.0 := BV32_ADD($i.0, 1);
  goto $27;
$30:
  assert {:block_sourceloc} {:sourceloc_num 632} true;
  assert {:sourceloc} {:sourceloc_num 633} true;
  v364 := $$globalStores8.reversed[0];
  assert {:sourceloc} {:sourceloc_num 634} true;
  $$reversed.i[0] := v364;
  assert {:sourceloc} {:sourceloc_num 635} true;
  v365 := $$globalStores8.reversed[1];
  assert {:sourceloc} {:sourceloc_num 636} true;
  $$reversed.i[1] := v365;
  assert {:sourceloc} {:sourceloc_num 637} true;
  v366 := $$globalStores8.reversed[2];
  assert {:sourceloc} {:sourceloc_num 638} true;
  $$reversed.i[2] := v366;
  assert {:sourceloc} {:sourceloc_num 639} true;
  v367 := $$globalStores8.reversed[3];
  assert {:sourceloc} {:sourceloc_num 640} true;
  $$reversed.i[3] := v367;
  assert {:sourceloc} {:sourceloc_num 641} true;
  v368 := $$globalStores8.reversed[4];
  assert {:sourceloc} {:sourceloc_num 642} true;
  $$reversed.i[4] := v368;
  assert {:sourceloc} {:sourceloc_num 643} true;
  v369 := $$globalStores8.reversed[5];
  assert {:sourceloc} {:sourceloc_num 644} true;
  $$reversed.i[5] := v369;
  assert {:sourceloc} {:sourceloc_num 645} true;
  v370 := $$globalStores8.reversed[6];
  assert {:sourceloc} {:sourceloc_num 646} true;
  $$reversed.i[6] := v370;
  assert {:sourceloc} {:sourceloc_num 647} true;
  v371 := $$globalStores8.reversed[7];
  assert {:sourceloc} {:sourceloc_num 648} true;
  $$reversed.i[7] := v371;
  $i.i38.0 := 0;
  goto $31;
$31:
  assert {:block_sourceloc} {:sourceloc_num 649} true;
  v372 := BV32_SLT($i.i38.0, 8);
  goto $truebb11, $falsebb11;
$32:
  assert {:block_sourceloc} {:sourceloc_num 650} true;
  assert {:sourceloc} {:sourceloc_num 651} true;
  v373 := $$reversed.i[$i.i38.0];
  assert {:sourceloc} {:sourceloc_num 652} true;
  v374 := $$data[BV32_MUL(v373, 2)];
  assert {:sourceloc} {:sourceloc_num 653} true;
  v375 := $$data[BV32_ADD(BV32_MUL(v373, 2), 1)];
  assert {:sourceloc} {:sourceloc_num 654} true;
  $$work[BV32_ADD(BV32_MUL(v1, 2), BV32_MUL(BV32_MUL($i.i38.0, 64), 2))] := v374;
  assert {:sourceloc} {:sourceloc_num 655} true;
  $$work[BV32_ADD(BV32_ADD(BV32_MUL(v1, 2), BV32_MUL(BV32_MUL($i.i38.0, 64), 2)), 1)] := v375;
  $i.i38.0 := BV32_ADD($i.i38.0, 1);
  goto $31;
$globalStores8.exit:
  assert {:block_sourceloc} {:sourceloc_num 656} true;
  return;
$truebb:
  assume {:partition} v4;
  assert {:block_sourceloc} {:sourceloc_num 657} true;
  goto $2;
$falsebb:
  assume {:partition} !v4;
  assert {:block_sourceloc} {:sourceloc_num 658} true;
  goto $globalLoads8.exit;
$truebb0:
  assume {:partition} v97;
  assert {:block_sourceloc} {:sourceloc_num 659} true;
  goto $4;
$falsebb0:
  assume {:partition} !v97;
  assert {:block_sourceloc} {:sourceloc_num 660} true;
  goto $6;
$truebb1:
  assume {:partition} v113;
  assert {:block_sourceloc} {:sourceloc_num 661} true;
  goto $8;
$falsebb1:
  assume {:partition} !v113;
  assert {:block_sourceloc} {:sourceloc_num 662} true;
  goto $storex8.exit52;
$truebb2:
  assume {:partition} v118;
  assert {:block_sourceloc} {:sourceloc_num 663} true;
  goto $10;
$falsebb2:
  assume {:partition} !v118;
  assert {:block_sourceloc} {:sourceloc_num 664} true;
  goto $loadx8.exit54;
$truebb3:
  assume {:partition} v131;
  assert {:block_sourceloc} {:sourceloc_num 665} true;
  goto $12;
$falsebb3:
  assume {:partition} !v131;
  assert {:block_sourceloc} {:sourceloc_num 666} true;
  goto $storey8.exit49;
$truebb4:
  assume {:partition} v136;
  assert {:block_sourceloc} {:sourceloc_num 667} true;
  goto $14;
$falsebb4:
  assume {:partition} !v136;
  assert {:block_sourceloc} {:sourceloc_num 668} true;
  goto $loady8.exit46;
$truebb5:
  assume {:partition} v230;
  assert {:block_sourceloc} {:sourceloc_num 669} true;
  goto $16;
$falsebb5:
  assume {:partition} !v230;
  assert {:block_sourceloc} {:sourceloc_num 670} true;
  goto $18;
$truebb6:
  assume {:partition} v246;
  assert {:block_sourceloc} {:sourceloc_num 671} true;
  goto $20;
$falsebb6:
  assume {:partition} !v246;
  assert {:block_sourceloc} {:sourceloc_num 672} true;
  goto $storex8.exit;
$truebb7:
  assume {:partition} v251;
  assert {:block_sourceloc} {:sourceloc_num 673} true;
  goto $22;
$falsebb7:
  assume {:partition} !v251;
  assert {:block_sourceloc} {:sourceloc_num 674} true;
  goto $loadx8.exit;
$truebb8:
  assume {:partition} v264;
  assert {:block_sourceloc} {:sourceloc_num 675} true;
  goto $24;
$falsebb8:
  assume {:partition} !v264;
  assert {:block_sourceloc} {:sourceloc_num 676} true;
  goto $storey8.exit;
$truebb9:
  assume {:partition} v269;
  assert {:block_sourceloc} {:sourceloc_num 677} true;
  goto $26;
$falsebb9:
  assume {:partition} !v269;
  assert {:block_sourceloc} {:sourceloc_num 678} true;
  goto $loady8.exit;
$truebb10:
  assume {:partition} v355;
  assert {:block_sourceloc} {:sourceloc_num 679} true;
  goto $28;
$falsebb10:
  assume {:partition} !v355;
  assert {:block_sourceloc} {:sourceloc_num 680} true;
  goto $30;
$truebb11:
  assume {:partition} v372;
  assert {:block_sourceloc} {:sourceloc_num 681} true;
  goto $32;
$falsebb11:
  assume {:partition} !v372;
  assert {:block_sourceloc} {:sourceloc_num 682} true;
  goto $globalStores8.exit;
}
procedure {:source_name "bugle_barrier"} {:barrier} $bugle_barrier($0:int, $1:int);
axiom (if group_size_y == 1 then 1 else 0) != 0;
axiom (if group_size_z == 1 then 1 else 0) != 0;
axiom (if num_groups_y == 1 then 1 else 0) != 0;
axiom (if num_groups_z == 1 then 1 else 0) != 0;
axiom (if group_size_x == 64 then 1 else 0) != 0;
axiom (if num_groups_x == 128 then 1 else 0) != 0;
axiom (if global_offset_x == 0 then 1 else 0) != 0;
axiom (if global_offset_y == 0 then 1 else 0) != 0;
axiom (if global_offset_z == 0 then 1 else 0) != 0;
