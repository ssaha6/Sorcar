type _SIZE_T_TYPE = bv32;

procedure _ATOMIC_OP64(x : [int]int, y : int) returns (z : int, A : [int]int);
var {:source_name "LMatrix"} {:global} $$LMatrix : [int]int;
axiom {:array_info "$$LMatrix"} {:global} {:elem_width 64} {:source_name "LMatrix"} {:source_elem_width 256} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 64} {:source_elem_width 256} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$LMatrix : bool;
var {:race_checking} {:global} {:elem_width 64} {:source_elem_width 256} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$LMatrix : bool;
var {:race_checking} {:global} {:elem_width 64} {:source_elem_width 256} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$LMatrix : bool;

var {:source_name "inplaceMatrix"} {:global} $$inplaceMatrix : [int]int;
axiom {:array_info "$$inplaceMatrix"} {:global} {:elem_width 64} {:source_name "inplaceMatrix"} {:source_elem_width 256} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 64} {:source_elem_width 256} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$inplaceMatrix : bool;
var {:race_checking} {:global} {:elem_width 64} {:source_elem_width 256} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$inplaceMatrix : bool;
var {:race_checking} {:global} {:elem_width 64} {:source_elem_width 256} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$inplaceMatrix : bool;

var {:source_name "ratio"} {:group_shared} $$ratio : [int]int;
axiom {:array_info "$$ratio"} {:group_shared} {:elem_width 64} {:source_name "ratio"} {:source_elem_width 64} {:source_dimensions "*"} true;
var {:race_checking} {:group_shared} {:elem_width 64} {:source_elem_width 64} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$ratio : bool;
var {:race_checking} {:group_shared} {:elem_width 64} {:source_elem_width 64} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$ratio : bool;
var {:race_checking} {:group_shared} {:elem_width 64} {:source_elem_width 64} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$ratio : bool;

const _WATCHED_OFFSET : int;
const {:global_offset_x} global_offset_x : int;
const {:global_offset_y} global_offset_y : int;
const {:global_offset_z} global_offset_z : int;
const {:group_id_x} group_id_x : int;
const {:group_id_y} group_id_y : int;
const {:group_size_x} group_size_x : int;
const {:group_size_y} group_size_y : int;
const {:group_size_z} group_size_z : int;
const {:local_id_x} local_id_x : int;
const {:local_id_y} local_id_y : int;
const {:num_groups_x} num_groups_x : int;
const {:num_groups_y} num_groups_y : int;
const {:num_groups_z} num_groups_z : int;
function FADD64(int, int) : int;
function FDIV64(int, int) : int;
function FMUL64(int, int) : int;
function FSUB64(int, int) : int;
function {:inline true} BV32_ADD(x : int, y : int) : int {
  x + y
}
function {:inline true} BV32_MUL(x : int, y : int) : int {
  x * y
}
function {:inline true} BV32_SDIV(x : int, y : int) : int {
  x div y
}
function {:inline true} BV32_SGE(x : int, y : int) : bool {
  x >= y
}
function {:inline true} BV32_SGT(x : int, y : int) : bool {
  x > y
}
function {:inline true} BV32_SREM(x : int, y : int) : int {
  x mod y
}
procedure {:source_name "kernelLUDecompose"} {:kernel} $kernelLUDecompose($d:int)
requires {:sourceloc_num 0} (if $d == 1 then 1 else 0) != 0;
{
  var $0:int;
  var $1:int;
  var $2:int;
  var $3:int;
  var $4:int;
  var $5:int;
  var $6:int;
  var $7:int;
  var v4:int;
  var v0:int;
  var v1:int;
  var v2:int;
  var v3:int;
  var v5:bool;
  var v6:bool;
  var v7:int;
  var v8:int;
  var v9:int;
  var v10:int;
  var v11:int;
  var v12:int;
  var v13:int;
  var v14:int;
  var v15:int;
  var v16:bool;
  var v17:int;
  var v18:int;
  var v19:int;
  var v20:int;
  var v21:int;
  var v22:int;
  var v23:int;
  var v24:int;
  var v25:int;
  var v26:bool;
  var v27:int;
  var v28:int;
  var v29:int;
  var v30:int;
  var v31:int;
  var v32:int;
  var v33:int;
  var v34:int;
  var v35:int;
  var v36:bool;
  var v37:int;
  var v38:int;
  var v39:int;
  var v40:int;
  var v41:int;
  var v42:int;
  var v43:int;
  var v44:int;
  var v45:int;
  var v46:bool;
  var v47:bool;
  var v48:int;
  var v49:int;
  var v50:int;
  var v51:int;
  var v52:int;
  var v53:int;
  var v54:int;
  var v55:int;
  var v56:int;
  var v57:int;
  var v58:int;
  var v59:int;
  var v60:int;
  var v61:int;
  var v62:int;
  var v63:int;
  var v64:int;
  var v65:int;
  var v66:int;
  var v67:int;
  var v68:int;
  var v69:int;
  var v70:int;
  var v71:int;
  var v72:int;
  var v73:int;
  var v74:int;
  var v75:int;
  var v76:int;
  var v77:int;
  var v78:int;
  var v79:int;
  var v80:int;
  var v81:int;
  var v82:int;
  var v83:int;
  var v84:int;
  var v85:int;
  var v86:int;
  var v87:int;
  var v88:bool;
  var v89:bool;
  var v90:int;
  var v91:int;
  var v92:int;
  var v93:int;
  var v94:int;
  var v95:int;
  var v96:int;
  var v97:int;
  var v98:int;
  var v99:int;
  var v100:int;
  var v101:bool;
  var v102:int;
  var v103:int;
  var v104:int;
  var v105:int;
  var v106:int;
  var v107:int;
  var v108:int;
  var v109:int;
  var v110:int;
  var v111:int;
  var v112:int;
  var v113:bool;
  var v114:int;
  var v115:int;
  var v116:int;
  var v117:int;
  var v118:int;
  var v119:int;
  var v120:int;
  var v121:int;
  var v122:int;
  var v123:int;
  var v124:int;
  var v125:bool;
  var v126:int;
  var v127:int;
  var v128:int;
  var v129:int;
  var v130:int;
  var v131:int;
  var v132:int;
  var v133:int;
  var v134:int;
  var v135:int;
  var v136:int;
  var v137:int;
  var v138:int;
  var v139:int;
  var v140:int;
  var v141:int;
  var v142:int;
  var v151:int;
  var v143:int;
  var v144:int;
  var v145:int;
  var v146:int;
  var v147:int;
  var v148:int;
  var v149:int;
  var v150:int;
  var v152:int;
  var v153:int;
  var v154:int;
  var v155:int;
  var v156:int;
$0:
  assert {:block_sourceloc} {:sourceloc_num 1} true;
  v0 := BV32_ADD(BV32_MUL(group_id_y, group_size_y), local_id_y);
  v1 := BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x);
  v2 := local_id_y;
  v3 := BV32_ADD(BV32_MUL(group_size_x, num_groups_x), BV32_SDIV($d, 4));
  v4 := BV32_SREM($d, 4);
  v5 := local_id_x == 0;
  goto $truebb, $falsebb;
$1:
  assert {:block_sourceloc} {:sourceloc_num 2} true;
  v6 := v4 == 0;
  goto $truebb0, $falsebb0;
$2:
  assert {:block_sourceloc} {:sourceloc_num 3} true;
  assert {:sourceloc} {:sourceloc_num 4} true;
  v7 := $$inplaceMatrix[BV32_MUL(BV32_ADD(BV32_MUL(v0, v3), BV32_SDIV($d, 4)), 4)];
  assert {:sourceloc} {:sourceloc_num 5} true;
  v8 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v0, v3), BV32_SDIV($d, 4)), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 6} true;
  v9 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v0, v3), BV32_SDIV($d, 4)), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 7} true;
  v10 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v0, v3), BV32_SDIV($d, 4)), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 8} true;
  v11 := $$inplaceMatrix[BV32_MUL(BV32_ADD(BV32_MUL($d, v3), BV32_SDIV($d, 4)), 4)];
  assert {:sourceloc} {:sourceloc_num 9} true;
  v12 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($d, v3), BV32_SDIV($d, 4)), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 10} true;
  v13 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($d, v3), BV32_SDIV($d, 4)), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 11} true;
  v14 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($d, v3), BV32_SDIV($d, 4)), 4), 3)];
  v15 := FDIV64(v7, v11);
  assert {:sourceloc} {:sourceloc_num 12} true;
  $$ratio[v2] := v15;
  $0 := v15;
  goto $4;
$3:
  assert {:block_sourceloc} {:sourceloc_num 13} true;
  $0 := 4607182418800017408;
  goto $4;
$4:
  assert {:block_sourceloc} {:sourceloc_num 14} true;
  v16 := v4 == 1;
  goto $truebb1, $falsebb1;
$5:
  assert {:block_sourceloc} {:sourceloc_num 15} true;
  assert {:sourceloc} {:sourceloc_num 16} true;
  v17 := $$inplaceMatrix[BV32_MUL(BV32_ADD(BV32_MUL(v0, v3), BV32_SDIV($d, 4)), 4)];
  assert {:sourceloc} {:sourceloc_num 17} true;
  v18 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v0, v3), BV32_SDIV($d, 4)), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 18} true;
  v19 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v0, v3), BV32_SDIV($d, 4)), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 19} true;
  v20 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v0, v3), BV32_SDIV($d, 4)), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 20} true;
  v21 := $$inplaceMatrix[BV32_MUL(BV32_ADD(BV32_MUL($d, v3), BV32_SDIV($d, 4)), 4)];
  assert {:sourceloc} {:sourceloc_num 21} true;
  v22 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($d, v3), BV32_SDIV($d, 4)), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 22} true;
  v23 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($d, v3), BV32_SDIV($d, 4)), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 23} true;
  v24 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($d, v3), BV32_SDIV($d, 4)), 4), 3)];
  v25 := FDIV64(v18, v22);
  assert {:sourceloc} {:sourceloc_num 24} true;
  $$ratio[v2] := v25;
  $1 := v25;
  goto $7;
$6:
  assert {:block_sourceloc} {:sourceloc_num 25} true;
  $1 := 4607182418800017408;
  goto $7;
$7:
  assert {:block_sourceloc} {:sourceloc_num 26} true;
  v26 := v4 == 2;
  goto $truebb2, $falsebb2;
$8:
  assert {:block_sourceloc} {:sourceloc_num 27} true;
  assert {:sourceloc} {:sourceloc_num 28} true;
  v27 := $$inplaceMatrix[BV32_MUL(BV32_ADD(BV32_MUL(v0, v3), BV32_SDIV($d, 4)), 4)];
  assert {:sourceloc} {:sourceloc_num 29} true;
  v28 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v0, v3), BV32_SDIV($d, 4)), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 30} true;
  v29 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v0, v3), BV32_SDIV($d, 4)), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 31} true;
  v30 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v0, v3), BV32_SDIV($d, 4)), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 32} true;
  v31 := $$inplaceMatrix[BV32_MUL(BV32_ADD(BV32_MUL($d, v3), BV32_SDIV($d, 4)), 4)];
  assert {:sourceloc} {:sourceloc_num 33} true;
  v32 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($d, v3), BV32_SDIV($d, 4)), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 34} true;
  v33 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($d, v3), BV32_SDIV($d, 4)), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 35} true;
  v34 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($d, v3), BV32_SDIV($d, 4)), 4), 3)];
  v35 := FDIV64(v29, v33);
  assert {:sourceloc} {:sourceloc_num 36} true;
  $$ratio[v2] := v35;
  $2 := v35;
  goto $10;
$9:
  assert {:block_sourceloc} {:sourceloc_num 37} true;
  $2 := 4607182418800017408;
  goto $10;
$10:
  assert {:block_sourceloc} {:sourceloc_num 38} true;
  v36 := v4 == 3;
  goto $truebb3, $falsebb3;
$11:
  assert {:block_sourceloc} {:sourceloc_num 39} true;
  assert {:sourceloc} {:sourceloc_num 40} true;
  v37 := $$inplaceMatrix[BV32_MUL(BV32_ADD(BV32_MUL(v0, v3), BV32_SDIV($d, 4)), 4)];
  assert {:sourceloc} {:sourceloc_num 41} true;
  v38 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v0, v3), BV32_SDIV($d, 4)), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 42} true;
  v39 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v0, v3), BV32_SDIV($d, 4)), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 43} true;
  v40 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v0, v3), BV32_SDIV($d, 4)), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 44} true;
  v41 := $$inplaceMatrix[BV32_MUL(BV32_ADD(BV32_MUL($d, v3), BV32_SDIV($d, 4)), 4)];
  assert {:sourceloc} {:sourceloc_num 45} true;
  v42 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($d, v3), BV32_SDIV($d, 4)), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 46} true;
  v43 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($d, v3), BV32_SDIV($d, 4)), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 47} true;
  v44 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($d, v3), BV32_SDIV($d, 4)), 4), 3)];
  v45 := FDIV64(v40, v44);
  assert {:sourceloc} {:sourceloc_num 48} true;
  $$ratio[v2] := v45;
  $3 := v45;
  goto $13;
$12:
  assert {:block_sourceloc} {:sourceloc_num 49} true;
  $3 := 4607182418800017408;
  goto $13;
$13:
  assert {:block_sourceloc} {:sourceloc_num 50} true;
  goto $14;
$14:
  assert {:block_sourceloc} {:sourceloc_num 51} true;
  call {:sourceloc_num 52} $bugle_barrier(-1, -1);
  v46 := BV32_SGE(v0, BV32_ADD($d, 1));
  goto $truebb4, $falsebb4;
$15:
  assert {:block_sourceloc} {:sourceloc_num 53} true;
  v47 := BV32_SGT(BV32_MUL(BV32_ADD(v1, 1), 4), $d);
  goto $truebb5, $falsebb5;
$16:
  assert {:block_sourceloc} {:sourceloc_num 54} true;
  assert {:sourceloc} {:sourceloc_num 55} true;
  v48 := $$inplaceMatrix[BV32_MUL(BV32_ADD(BV32_MUL(v0, v3), v1), 4)];
  assert {:sourceloc} {:sourceloc_num 56} true;
  v49 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v0, v3), v1), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 57} true;
  v50 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v0, v3), v1), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 58} true;
  v51 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v0, v3), v1), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 59} true;
  v52 := $$ratio[v2];
  assert {:sourceloc} {:sourceloc_num 60} true;
  v53 := $$inplaceMatrix[BV32_MUL(BV32_ADD(BV32_MUL($d, v3), v1), 4)];
  assert {:sourceloc} {:sourceloc_num 61} true;
  v54 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($d, v3), v1), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 62} true;
  v55 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($d, v3), v1), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 63} true;
  v56 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($d, v3), v1), 4), 3)];
  v57 := FADD64(FMUL64(FSUB64(-9223372036854775808, v52), v53), v48);
  assert {:sourceloc} {:sourceloc_num 64} true;
  v58 := $$inplaceMatrix[BV32_MUL(BV32_ADD(BV32_MUL(v0, v3), v1), 4)];
  assert {:sourceloc} {:sourceloc_num 65} true;
  v59 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v0, v3), v1), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 66} true;
  v60 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v0, v3), v1), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 67} true;
  v61 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v0, v3), v1), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 68} true;
  v62 := $$ratio[v2];
  assert {:sourceloc} {:sourceloc_num 69} true;
  v63 := $$inplaceMatrix[BV32_MUL(BV32_ADD(BV32_MUL($d, v3), v1), 4)];
  assert {:sourceloc} {:sourceloc_num 70} true;
  v64 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($d, v3), v1), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 71} true;
  v65 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($d, v3), v1), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 72} true;
  v66 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($d, v3), v1), 4), 3)];
  v67 := FADD64(FMUL64(FSUB64(-9223372036854775808, v62), v64), v59);
  assert {:sourceloc} {:sourceloc_num 73} true;
  v68 := $$inplaceMatrix[BV32_MUL(BV32_ADD(BV32_MUL(v0, v3), v1), 4)];
  assert {:sourceloc} {:sourceloc_num 74} true;
  v69 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v0, v3), v1), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 75} true;
  v70 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v0, v3), v1), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 76} true;
  v71 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v0, v3), v1), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 77} true;
  v72 := $$ratio[v2];
  assert {:sourceloc} {:sourceloc_num 78} true;
  v73 := $$inplaceMatrix[BV32_MUL(BV32_ADD(BV32_MUL($d, v3), v1), 4)];
  assert {:sourceloc} {:sourceloc_num 79} true;
  v74 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($d, v3), v1), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 80} true;
  v75 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($d, v3), v1), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 81} true;
  v76 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($d, v3), v1), 4), 3)];
  v77 := FADD64(FMUL64(FSUB64(-9223372036854775808, v72), v75), v70);
  assert {:sourceloc} {:sourceloc_num 82} true;
  v78 := $$inplaceMatrix[BV32_MUL(BV32_ADD(BV32_MUL(v0, v3), v1), 4)];
  assert {:sourceloc} {:sourceloc_num 83} true;
  v79 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v0, v3), v1), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 84} true;
  v80 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v0, v3), v1), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 85} true;
  v81 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v0, v3), v1), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 86} true;
  v82 := $$ratio[v2];
  assert {:sourceloc} {:sourceloc_num 87} true;
  v83 := $$inplaceMatrix[BV32_MUL(BV32_ADD(BV32_MUL($d, v3), v1), 4)];
  assert {:sourceloc} {:sourceloc_num 88} true;
  v84 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($d, v3), v1), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 89} true;
  v85 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($d, v3), v1), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 90} true;
  v86 := $$inplaceMatrix[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($d, v3), v1), 4), 3)];
  v87 := FADD64(FMUL64(FSUB64(-9223372036854775808, v82), v86), v81);
  v88 := v1 == BV32_SDIV($d, 4);
  goto $truebb6, $falsebb6;
$17:
  assert {:block_sourceloc} {:sourceloc_num 91} true;
  v89 := v4 == 0;
  goto $truebb7, $falsebb7;
$18:
  assert {:block_sourceloc} {:sourceloc_num 92} true;
  assert {:sourceloc} {:sourceloc_num 93} true;
  v90 := $$ratio[v2];
  v91 := BV32_ADD(BV32_MUL(v0, v3), v1);
  assert {:sourceloc} {:sourceloc_num 94} true;
  v92 := $$LMatrix[BV32_MUL(v91, 4)];
  assert {:sourceloc} {:sourceloc_num 95} true;
  v93 := $$LMatrix[BV32_ADD(BV32_MUL(v91, 4), 1)];
  assert {:sourceloc} {:sourceloc_num 96} true;
  v94 := $$LMatrix[BV32_ADD(BV32_MUL(v91, 4), 2)];
  assert {:sourceloc} {:sourceloc_num 97} true;
  v95 := $$LMatrix[BV32_ADD(BV32_MUL(v91, 4), 3)];
  assert {:sourceloc} {:sourceloc_num 98} true;
  $$LMatrix[BV32_MUL(v91, 4)] := v90;
  assert {:sourceloc} {:sourceloc_num 99} true;
  $$LMatrix[BV32_ADD(BV32_MUL(v91, 4), 1)] := v93;
  assert {:sourceloc} {:sourceloc_num 100} true;
  $$LMatrix[BV32_ADD(BV32_MUL(v91, 4), 2)] := v94;
  assert {:sourceloc} {:sourceloc_num 101} true;
  $$LMatrix[BV32_ADD(BV32_MUL(v91, 4), 3)] := v95;
  $4 := v90;
  goto $20;
$19:
  assert {:block_sourceloc} {:sourceloc_num 102} true;
  v96 := BV32_ADD(BV32_MUL(v0, v3), v1);
  assert {:sourceloc} {:sourceloc_num 103} true;
  v97 := $$inplaceMatrix[BV32_MUL(v96, 4)];
  assert {:sourceloc} {:sourceloc_num 104} true;
  v98 := $$inplaceMatrix[BV32_ADD(BV32_MUL(v96, 4), 1)];
  assert {:sourceloc} {:sourceloc_num 105} true;
  v99 := $$inplaceMatrix[BV32_ADD(BV32_MUL(v96, 4), 2)];
  assert {:sourceloc} {:sourceloc_num 106} true;
  v100 := $$inplaceMatrix[BV32_ADD(BV32_MUL(v96, 4), 3)];
  assert {:sourceloc} {:sourceloc_num 107} true;
  $$inplaceMatrix[BV32_MUL(v96, 4)] := v57;
  assert {:sourceloc} {:sourceloc_num 108} true;
  $$inplaceMatrix[BV32_ADD(BV32_MUL(v96, 4), 1)] := v98;
  assert {:sourceloc} {:sourceloc_num 109} true;
  $$inplaceMatrix[BV32_ADD(BV32_MUL(v96, 4), 2)] := v99;
  assert {:sourceloc} {:sourceloc_num 110} true;
  $$inplaceMatrix[BV32_ADD(BV32_MUL(v96, 4), 3)] := v100;
  $4 := v57;
  goto $20;
$20:
  assert {:block_sourceloc} {:sourceloc_num 111} true;
  v101 := v4 == 1;
  goto $truebb8, $falsebb8;
$21:
  assert {:block_sourceloc} {:sourceloc_num 112} true;
  assert {:sourceloc} {:sourceloc_num 113} true;
  v102 := $$ratio[v2];
  v103 := BV32_ADD(BV32_MUL(v0, v3), v1);
  assert {:sourceloc} {:sourceloc_num 114} true;
  v104 := $$LMatrix[BV32_MUL(v103, 4)];
  assert {:sourceloc} {:sourceloc_num 115} true;
  v105 := $$LMatrix[BV32_ADD(BV32_MUL(v103, 4), 1)];
  assert {:sourceloc} {:sourceloc_num 116} true;
  v106 := $$LMatrix[BV32_ADD(BV32_MUL(v103, 4), 2)];
  assert {:sourceloc} {:sourceloc_num 117} true;
  v107 := $$LMatrix[BV32_ADD(BV32_MUL(v103, 4), 3)];
  assert {:sourceloc} {:sourceloc_num 118} true;
  $$LMatrix[BV32_MUL(v103, 4)] := v104;
  assert {:sourceloc} {:sourceloc_num 119} true;
  $$LMatrix[BV32_ADD(BV32_MUL(v103, 4), 1)] := v102;
  assert {:sourceloc} {:sourceloc_num 120} true;
  $$LMatrix[BV32_ADD(BV32_MUL(v103, 4), 2)] := v106;
  assert {:sourceloc} {:sourceloc_num 121} true;
  $$LMatrix[BV32_ADD(BV32_MUL(v103, 4), 3)] := v107;
  $5 := v102;
  goto $23;
$22:
  assert {:block_sourceloc} {:sourceloc_num 122} true;
  v108 := BV32_ADD(BV32_MUL(v0, v3), v1);
  assert {:sourceloc} {:sourceloc_num 123} true;
  v109 := $$inplaceMatrix[BV32_MUL(v108, 4)];
  assert {:sourceloc} {:sourceloc_num 124} true;
  v110 := $$inplaceMatrix[BV32_ADD(BV32_MUL(v108, 4), 1)];
  assert {:sourceloc} {:sourceloc_num 125} true;
  v111 := $$inplaceMatrix[BV32_ADD(BV32_MUL(v108, 4), 2)];
  assert {:sourceloc} {:sourceloc_num 126} true;
  v112 := $$inplaceMatrix[BV32_ADD(BV32_MUL(v108, 4), 3)];
  assert {:sourceloc} {:sourceloc_num 127} true;
  $$inplaceMatrix[BV32_MUL(v108, 4)] := v109;
  assert {:sourceloc} {:sourceloc_num 128} true;
  $$inplaceMatrix[BV32_ADD(BV32_MUL(v108, 4), 1)] := v67;
  assert {:sourceloc} {:sourceloc_num 129} true;
  $$inplaceMatrix[BV32_ADD(BV32_MUL(v108, 4), 2)] := v111;
  assert {:sourceloc} {:sourceloc_num 130} true;
  $$inplaceMatrix[BV32_ADD(BV32_MUL(v108, 4), 3)] := v112;
  $5 := v67;
  goto $23;
$23:
  assert {:block_sourceloc} {:sourceloc_num 131} true;
  v113 := v4 == 2;
  goto $truebb9, $falsebb9;
$24:
  assert {:block_sourceloc} {:sourceloc_num 132} true;
  assert {:sourceloc} {:sourceloc_num 133} true;
  v114 := $$ratio[v2];
  v115 := BV32_ADD(BV32_MUL(v0, v3), v1);
  assert {:sourceloc} {:sourceloc_num 134} true;
  v116 := $$LMatrix[BV32_MUL(v115, 4)];
  assert {:sourceloc} {:sourceloc_num 135} true;
  v117 := $$LMatrix[BV32_ADD(BV32_MUL(v115, 4), 1)];
  assert {:sourceloc} {:sourceloc_num 136} true;
  v118 := $$LMatrix[BV32_ADD(BV32_MUL(v115, 4), 2)];
  assert {:sourceloc} {:sourceloc_num 137} true;
  v119 := $$LMatrix[BV32_ADD(BV32_MUL(v115, 4), 3)];
  assert {:sourceloc} {:sourceloc_num 138} true;
  $$LMatrix[BV32_MUL(v115, 4)] := v116;
  assert {:sourceloc} {:sourceloc_num 139} true;
  $$LMatrix[BV32_ADD(BV32_MUL(v115, 4), 1)] := v117;
  assert {:sourceloc} {:sourceloc_num 140} true;
  $$LMatrix[BV32_ADD(BV32_MUL(v115, 4), 2)] := v114;
  assert {:sourceloc} {:sourceloc_num 141} true;
  $$LMatrix[BV32_ADD(BV32_MUL(v115, 4), 3)] := v119;
  $6 := v114;
  goto $26;
$25:
  assert {:block_sourceloc} {:sourceloc_num 142} true;
  v120 := BV32_ADD(BV32_MUL(v0, v3), v1);
  assert {:sourceloc} {:sourceloc_num 143} true;
  v121 := $$inplaceMatrix[BV32_MUL(v120, 4)];
  assert {:sourceloc} {:sourceloc_num 144} true;
  v122 := $$inplaceMatrix[BV32_ADD(BV32_MUL(v120, 4), 1)];
  assert {:sourceloc} {:sourceloc_num 145} true;
  v123 := $$inplaceMatrix[BV32_ADD(BV32_MUL(v120, 4), 2)];
  assert {:sourceloc} {:sourceloc_num 146} true;
  v124 := $$inplaceMatrix[BV32_ADD(BV32_MUL(v120, 4), 3)];
  assert {:sourceloc} {:sourceloc_num 147} true;
  $$inplaceMatrix[BV32_MUL(v120, 4)] := v121;
  assert {:sourceloc} {:sourceloc_num 148} true;
  $$inplaceMatrix[BV32_ADD(BV32_MUL(v120, 4), 1)] := v122;
  assert {:sourceloc} {:sourceloc_num 149} true;
  $$inplaceMatrix[BV32_ADD(BV32_MUL(v120, 4), 2)] := v77;
  assert {:sourceloc} {:sourceloc_num 150} true;
  $$inplaceMatrix[BV32_ADD(BV32_MUL(v120, 4), 3)] := v124;
  $6 := v77;
  goto $26;
$26:
  assert {:block_sourceloc} {:sourceloc_num 151} true;
  v125 := v4 == 3;
  goto $truebb10, $falsebb10;
$27:
  assert {:block_sourceloc} {:sourceloc_num 152} true;
  assert {:sourceloc} {:sourceloc_num 153} true;
  v126 := $$ratio[v2];
  v127 := BV32_ADD(BV32_MUL(v0, v3), v1);
  assert {:sourceloc} {:sourceloc_num 154} true;
  v128 := $$LMatrix[BV32_MUL(v127, 4)];
  assert {:sourceloc} {:sourceloc_num 155} true;
  v129 := $$LMatrix[BV32_ADD(BV32_MUL(v127, 4), 1)];
  assert {:sourceloc} {:sourceloc_num 156} true;
  v130 := $$LMatrix[BV32_ADD(BV32_MUL(v127, 4), 2)];
  assert {:sourceloc} {:sourceloc_num 157} true;
  v131 := $$LMatrix[BV32_ADD(BV32_MUL(v127, 4), 3)];
  assert {:sourceloc} {:sourceloc_num 158} true;
  $$LMatrix[BV32_MUL(v127, 4)] := v128;
  assert {:sourceloc} {:sourceloc_num 159} true;
  $$LMatrix[BV32_ADD(BV32_MUL(v127, 4), 1)] := v129;
  assert {:sourceloc} {:sourceloc_num 160} true;
  $$LMatrix[BV32_ADD(BV32_MUL(v127, 4), 2)] := v130;
  assert {:sourceloc} {:sourceloc_num 161} true;
  $$LMatrix[BV32_ADD(BV32_MUL(v127, 4), 3)] := v126;
  $7 := v126;
  goto $29;
$28:
  assert {:block_sourceloc} {:sourceloc_num 162} true;
  v132 := BV32_ADD(BV32_MUL(v0, v3), v1);
  assert {:sourceloc} {:sourceloc_num 163} true;
  v133 := $$inplaceMatrix[BV32_MUL(v132, 4)];
  assert {:sourceloc} {:sourceloc_num 164} true;
  v134 := $$inplaceMatrix[BV32_ADD(BV32_MUL(v132, 4), 1)];
  assert {:sourceloc} {:sourceloc_num 165} true;
  v135 := $$inplaceMatrix[BV32_ADD(BV32_MUL(v132, 4), 2)];
  assert {:sourceloc} {:sourceloc_num 166} true;
  v136 := $$inplaceMatrix[BV32_ADD(BV32_MUL(v132, 4), 3)];
  assert {:sourceloc} {:sourceloc_num 167} true;
  $$inplaceMatrix[BV32_MUL(v132, 4)] := v133;
  assert {:sourceloc} {:sourceloc_num 168} true;
  $$inplaceMatrix[BV32_ADD(BV32_MUL(v132, 4), 1)] := v134;
  assert {:sourceloc} {:sourceloc_num 169} true;
  $$inplaceMatrix[BV32_ADD(BV32_MUL(v132, 4), 2)] := v135;
  assert {:sourceloc} {:sourceloc_num 170} true;
  $$inplaceMatrix[BV32_ADD(BV32_MUL(v132, 4), 3)] := v87;
  $7 := v87;
  goto $29;
$29:
  assert {:block_sourceloc} {:sourceloc_num 171} true;
  goto $31;
$30:
  assert {:block_sourceloc} {:sourceloc_num 172} true;
  v137 := BV32_ADD(BV32_MUL(v0, v3), v1);
  assert {:sourceloc} {:sourceloc_num 173} true;
  v138 := $$inplaceMatrix[BV32_MUL(v137, 4)];
  assert {:sourceloc} {:sourceloc_num 174} true;
  v139 := $$inplaceMatrix[BV32_ADD(BV32_MUL(v137, 4), 1)];
  assert {:sourceloc} {:sourceloc_num 175} true;
  v140 := $$inplaceMatrix[BV32_ADD(BV32_MUL(v137, 4), 2)];
  assert {:sourceloc} {:sourceloc_num 176} true;
  v141 := $$inplaceMatrix[BV32_ADD(BV32_MUL(v137, 4), 3)];
  assert {:sourceloc} {:sourceloc_num 177} true;
  $$inplaceMatrix[BV32_MUL(v137, 4)] := v57;
  assert {:sourceloc} {:sourceloc_num 178} true;
  $$inplaceMatrix[BV32_ADD(BV32_MUL(v137, 4), 1)] := v139;
  assert {:sourceloc} {:sourceloc_num 179} true;
  $$inplaceMatrix[BV32_ADD(BV32_MUL(v137, 4), 2)] := v140;
  assert {:sourceloc} {:sourceloc_num 180} true;
  $$inplaceMatrix[BV32_ADD(BV32_MUL(v137, 4), 3)] := v141;
  v142 := BV32_ADD(BV32_MUL(v0, v3), v1);
  assert {:sourceloc} {:sourceloc_num 181} true;
  v143 := $$inplaceMatrix[BV32_MUL(v142, 4)];
  assert {:sourceloc} {:sourceloc_num 182} true;
  v144 := $$inplaceMatrix[BV32_ADD(BV32_MUL(v142, 4), 1)];
  assert {:sourceloc} {:sourceloc_num 183} true;
  v145 := $$inplaceMatrix[BV32_ADD(BV32_MUL(v142, 4), 2)];
  assert {:sourceloc} {:sourceloc_num 184} true;
  v146 := $$inplaceMatrix[BV32_ADD(BV32_MUL(v142, 4), 3)];
  assert {:sourceloc} {:sourceloc_num 185} true;
  $$inplaceMatrix[BV32_MUL(v142, 4)] := v143;
  assert {:sourceloc} {:sourceloc_num 186} true;
  $$inplaceMatrix[BV32_ADD(BV32_MUL(v142, 4), 1)] := v67;
  assert {:sourceloc} {:sourceloc_num 187} true;
  $$inplaceMatrix[BV32_ADD(BV32_MUL(v142, 4), 2)] := v145;
  assert {:sourceloc} {:sourceloc_num 188} true;
  $$inplaceMatrix[BV32_ADD(BV32_MUL(v142, 4), 3)] := v146;
  v147 := BV32_ADD(BV32_MUL(v0, v3), v1);
  assert {:sourceloc} {:sourceloc_num 189} true;
  v148 := $$inplaceMatrix[BV32_MUL(v147, 4)];
  assert {:sourceloc} {:sourceloc_num 190} true;
  v149 := $$inplaceMatrix[BV32_ADD(BV32_MUL(v147, 4), 1)];
  assert {:sourceloc} {:sourceloc_num 191} true;
  v150 := $$inplaceMatrix[BV32_ADD(BV32_MUL(v147, 4), 2)];
  assert {:sourceloc} {:sourceloc_num 192} true;
  v151 := $$inplaceMatrix[BV32_ADD(BV32_MUL(v147, 4), 3)];
  assert {:sourceloc} {:sourceloc_num 193} true;
  $$inplaceMatrix[BV32_MUL(v147, 4)] := v148;
  assert {:sourceloc} {:sourceloc_num 194} true;
  $$inplaceMatrix[BV32_ADD(BV32_MUL(v147, 4), 1)] := v149;
  assert {:sourceloc} {:sourceloc_num 195} true;
  $$inplaceMatrix[BV32_ADD(BV32_MUL(v147, 4), 2)] := v77;
  assert {:sourceloc} {:sourceloc_num 196} true;
  $$inplaceMatrix[BV32_ADD(BV32_MUL(v147, 4), 3)] := v151;
  v152 := BV32_ADD(BV32_MUL(v0, v3), v1);
  assert {:sourceloc} {:sourceloc_num 197} true;
  v153 := $$inplaceMatrix[BV32_MUL(v152, 4)];
  assert {:sourceloc} {:sourceloc_num 198} true;
  v154 := $$inplaceMatrix[BV32_ADD(BV32_MUL(v152, 4), 1)];
  assert {:sourceloc} {:sourceloc_num 199} true;
  v155 := $$inplaceMatrix[BV32_ADD(BV32_MUL(v152, 4), 2)];
  assert {:sourceloc} {:sourceloc_num 200} true;
  v156 := $$inplaceMatrix[BV32_ADD(BV32_MUL(v152, 4), 3)];
  assert {:sourceloc} {:sourceloc_num 201} true;
  $$inplaceMatrix[BV32_MUL(v152, 4)] := v153;
  assert {:sourceloc} {:sourceloc_num 202} true;
  $$inplaceMatrix[BV32_ADD(BV32_MUL(v152, 4), 1)] := v154;
  assert {:sourceloc} {:sourceloc_num 203} true;
  $$inplaceMatrix[BV32_ADD(BV32_MUL(v152, 4), 2)] := v155;
  assert {:sourceloc} {:sourceloc_num 204} true;
  $$inplaceMatrix[BV32_ADD(BV32_MUL(v152, 4), 3)] := v87;
  goto $31;
$31:
  assert {:block_sourceloc} {:sourceloc_num 205} true;
  goto $32;
$32:
  assert {:block_sourceloc} {:sourceloc_num 206} true;
  return;
$truebb:
  assume {:partition} v5;
  assert {:block_sourceloc} {:sourceloc_num 207} true;
  goto $1;
$falsebb:
  assume {:partition} !v5;
  assert {:block_sourceloc} {:sourceloc_num 208} true;
  goto $14;
$truebb0:
  assume {:partition} v6;
  assert {:block_sourceloc} {:sourceloc_num 209} true;
  goto $2;
$falsebb0:
  assume {:partition} !v6;
  assert {:block_sourceloc} {:sourceloc_num 210} true;
  goto $3;
$truebb1:
  assume {:partition} v16;
  assert {:block_sourceloc} {:sourceloc_num 211} true;
  goto $5;
$falsebb1:
  assume {:partition} !v16;
  assert {:block_sourceloc} {:sourceloc_num 212} true;
  goto $6;
$truebb2:
  assume {:partition} v26;
  assert {:block_sourceloc} {:sourceloc_num 213} true;
  goto $8;
$falsebb2:
  assume {:partition} !v26;
  assert {:block_sourceloc} {:sourceloc_num 214} true;
  goto $9;
$truebb3:
  assume {:partition} v36;
  assert {:block_sourceloc} {:sourceloc_num 215} true;
  goto $11;
$falsebb3:
  assume {:partition} !v36;
  assert {:block_sourceloc} {:sourceloc_num 216} true;
  goto $12;
$truebb4:
  assume {:partition} v46;
  assert {:block_sourceloc} {:sourceloc_num 217} true;
  goto $15;
$falsebb4:
  assume {:partition} !v46;
  assert {:block_sourceloc} {:sourceloc_num 218} true;
  goto $32;
$truebb5:
  assume {:partition} v47;
  assert {:block_sourceloc} {:sourceloc_num 219} true;
  goto $16;
$falsebb5:
  assume {:partition} !v47;
  assert {:block_sourceloc} {:sourceloc_num 220} true;
  goto $32;
$truebb6:
  assume {:partition} v88;
  assert {:block_sourceloc} {:sourceloc_num 221} true;
  goto $17;
$falsebb6:
  assume {:partition} !v88;
  assert {:block_sourceloc} {:sourceloc_num 222} true;
  goto $30;
$truebb7:
  assume {:partition} v89;
  assert {:block_sourceloc} {:sourceloc_num 223} true;
  goto $18;
$falsebb7:
  assume {:partition} !v89;
  assert {:block_sourceloc} {:sourceloc_num 224} true;
  goto $19;
$truebb8:
  assume {:partition} v101;
  assert {:block_sourceloc} {:sourceloc_num 225} true;
  goto $21;
$falsebb8:
  assume {:partition} !v101;
  assert {:block_sourceloc} {:sourceloc_num 226} true;
  goto $22;
$truebb9:
  assume {:partition} v113;
  assert {:block_sourceloc} {:sourceloc_num 227} true;
  goto $24;
$falsebb9:
  assume {:partition} !v113;
  assert {:block_sourceloc} {:sourceloc_num 228} true;
  goto $25;
$truebb10:
  assume {:partition} v125;
  assert {:block_sourceloc} {:sourceloc_num 229} true;
  goto $27;
$falsebb10:
  assume {:partition} !v125;
  assert {:block_sourceloc} {:sourceloc_num 230} true;
  goto $28;
}
procedure {:source_name "bugle_barrier"} {:barrier} $bugle_barrier($0:int, $1:int);
axiom (if group_size_z == 1 then 1 else 0) != 0;
axiom (if num_groups_z == 1 then 1 else 0) != 0;
axiom (if group_size_x == 4 then 1 else 0) != 0;
axiom (if group_size_y == 16 then 1 else 0) != 0;
axiom (if num_groups_x == 1 then 1 else 0) != 0;
axiom (if num_groups_y == 1 then 1 else 0) != 0;
axiom (if global_offset_x == 0 then 1 else 0) != 0;
axiom (if global_offset_y == 0 then 1 else 0) != 0;
axiom (if global_offset_z == 0 then 1 else 0) != 0;
