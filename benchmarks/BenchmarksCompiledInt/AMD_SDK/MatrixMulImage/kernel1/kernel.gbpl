type _SIZE_T_TYPE = bv32;

procedure _ATOMIC_OP32(x : [int]int, y : int) returns (z : int, A : [int]int);
var {:source_name "matrixA"} {:global} $$matrixA : [int]int;
axiom {:array_info "$$matrixA"} {:global} {:elem_width 32} {:source_name "matrixA"} {:source_elem_width 128} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 128} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$matrixA : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 128} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$matrixA : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 128} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$matrixA : bool;

var {:source_name "matrixB"} {:global} $$matrixB : [int]int;
axiom {:array_info "$$matrixB"} {:global} {:elem_width 32} {:source_name "matrixB"} {:source_elem_width 128} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 128} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$matrixB : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 128} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$matrixB : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 128} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$matrixB : bool;

var {:source_name "matrixC"} {:global} $$matrixC : [int]int;
axiom {:array_info "$$matrixC"} {:global} {:elem_width 32} {:source_name "matrixC"} {:source_elem_width 128} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 128} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$matrixC : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 128} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$matrixC : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 128} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$matrixC : bool;

var {:source_name "imageSampler"} {:constant} $$imageSampler : [int]int;
axiom {:array_info "$$imageSampler"} {:constant} {:elem_width 32} {:source_name "imageSampler"} {:source_elem_width 32} {:source_dimensions "1"} true;

const _WATCHED_OFFSET : int;
const {:global_offset_x} global_offset_x : int;
const {:global_offset_y} global_offset_y : int;
const {:global_offset_z} global_offset_z : int;
const {:group_id_x} group_id_x : int;
const {:group_id_y} group_id_y : int;
const {:group_size_x} group_size_x : int;
const {:group_size_y} group_size_y : int;
const {:group_size_z} group_size_z : int;
const {:local_id_x} local_id_x : int;
const {:local_id_y} local_id_y : int;
const {:num_groups_x} num_groups_x : int;
const {:num_groups_y} num_groups_y : int;
const {:num_groups_z} num_groups_z : int;
function BV_CONCAT(int, int) : int;
function BV_EXTRACT(int, int, int) : int;
function FADD32(int, int) : int;
function FMUL32(int, int) : int;
function {:inline true} BV32_ADD(x : int, y : int) : int {
  x + y
}
function {:inline true} BV32_MUL(x : int, y : int) : int {
  x * y
}
function {:inline true} BV32_SDIV(x : int, y : int) : int {
  x div y
}
function {:inline true} BV32_SGE(x : int, y : int) : bool {
  x >= y
}
function {:inline true} BV32_SHL(x : int, y : int) : int {
  if x >= 0 && y == 1 then x*2 else BV32_SHL_UF(x,y)
}
function BV32_SHL_UF(int, int) : int;
function {:inline true} BV32_SLT(x : int, y : int) : bool {
  x < y
}
function {:inline true} BV32_ULT(x : int, y : int) : bool {
  x < y
}
procedure {:source_name "mmmKernel"} {:kernel} $mmmKernel($widthA:int, $widthB:int)
requires $$imageSampler[0] == 7;
{
  var $sum0.0:int;
  var $sum1.0:int;
  var $sum2.0:int;
  var $sum3.0:int;
  var $i.0:int;
  var $0:int;
  var $1:int;
  var $2:int;
  var $3:int;
  var $4:int;
  var $5:int;
  var $6:int;
  var $7:int;
  var $8:int;
  var $9:int;
  var $10:int;
  var $11:int;
  var $12:int;
  var $13:int;
  var $14:int;
  var $15:int;
  var $16:int;
  var $17:int;
  var $18:int;
  var $19:int;
  var $20:int;
  var $21:int;
  var $22:int;
  var $23:int;
  var $24:int;
  var $25:int;
  var $26:int;
  var $27:int;
  var $28:int;
  var $29:int;
  var $30:int;
  var $31:int;
  var v0:int;
  var v1:int;
  var v2:bool;
  var v3:int;
  var v4:int;
  var v5:int;
  var v6:bool;
  var v7:bool;
  var v8:bool;
  var v9:bool;
  var v10:int;
  var v11:int;
  var v12:int;
  var v13:int;
  var v14:int;
  var v15:int;
  var v16:int;
  var v17:bool;
  var v18:bool;
  var v19:bool;
  var v20:bool;
  var v21:int;
  var v22:int;
  var v23:int;
  var v24:int;
  var v25:int;
  var v26:int;
  var v27:int;
  var v28:bool;
  var v29:bool;
  var v30:bool;
  var v31:bool;
  var v32:int;
  var v33:int;
  var v34:int;
  var v35:int;
  var v36:int;
  var v37:int;
  var v38:int;
  var v39:bool;
  var v40:bool;
  var v41:bool;
  var v42:bool;
  var v43:int;
  var v44:int;
  var v45:int;
  var v46:int;
  var v47:int;
  var v48:bool;
  var v49:bool;
  var v50:bool;
  var v51:bool;
  var v52:int;
  var v53:int;
  var v54:int;
  var v55:int;
  var v56:int;
  var v57:int;
  var v58:bool;
  var v59:bool;
  var v60:bool;
  var v61:bool;
  var v62:int;
  var v63:int;
  var v64:int;
  var v65:int;
  var v66:int;
  var v67:int;
  var v68:bool;
  var v69:bool;
  var v70:bool;
  var v71:bool;
  var v72:int;
  var v73:int;
  var v74:int;
  var v75:int;
  var v76:int;
  var v77:int;
  var v78:bool;
  var v79:bool;
  var v80:bool;
  var v81:bool;
  var v82:int;
  var v83:int;
  var v84:int;
  var v85:int;
  var v86:int;
  var v87:int;
  var v88:int;
  var v89:int;
  var v90:int;
  var v91:int;
  var v92:int;
  var v93:int;
  var v94:int;
  var v95:int;
  var v96:int;
  var v97:int;
$0:
  assert {:block_sourceloc} {:sourceloc_num 0} true;
  v0 := BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x);
  v1 := BV32_ADD(BV32_MUL(group_id_y, group_size_y), local_id_y);
  $sum0.0, $sum1.0, $sum2.0, $sum3.0, $i.0 := 0, 0, 0, 0, 0;
  goto $1;
$1:
  assert {:block_sourceloc} {:sourceloc_num 1} true;
  v2 := BV32_ULT($i.0, $widthA);
  goto $truebb, $falsebb;
$2:
  assert {:block_sourceloc} {:sourceloc_num 2} true;
  assert {:sourceloc} {:sourceloc_num 3} true;
  v3 := $$imageSampler[0];
  v4 := BV32_SDIV($i.0, 4);
  v5 := BV32_SHL(v1, 2);
  v6 := BV32_SLT(v4, 0);
  goto $truebb0, $falsebb0;
$3:
  assert {:block_sourceloc} {:sourceloc_num 4} true;
  $0 := 0;
  goto $8;
$4:
  assert {:block_sourceloc} {:sourceloc_num 5} true;
  v7 := BV32_SGE(v4, 8192);
  goto $truebb1, $falsebb1;
$5:
  assert {:block_sourceloc} {:sourceloc_num 6} true;
  $1 := 8191;
  goto $7;
$6:
  assert {:block_sourceloc} {:sourceloc_num 7} true;
  $1 := v4;
  goto $7;
$7:
  assert {:block_sourceloc} {:sourceloc_num 8} true;
  $0 := $1;
  goto $8;
$8:
  assert {:block_sourceloc} {:sourceloc_num 9} true;
  v8 := BV32_SLT(v5, 0);
  goto $truebb2, $falsebb2;
$9:
  assert {:block_sourceloc} {:sourceloc_num 10} true;
  $2 := 0;
  goto $_Z11read_imagefPU3AS1Dv4_j11ocl_samplerDv2_i.exit;
$10:
  assert {:block_sourceloc} {:sourceloc_num 11} true;
  v9 := BV32_SGE(v5, 8192);
  goto $truebb3, $falsebb3;
$11:
  assert {:block_sourceloc} {:sourceloc_num 12} true;
  $3 := 8191;
  goto $13;
$12:
  assert {:block_sourceloc} {:sourceloc_num 13} true;
  $3 := v5;
  goto $13;
$13:
  assert {:block_sourceloc} {:sourceloc_num 14} true;
  $2 := $3;
  goto $_Z11read_imagefPU3AS1Dv4_j11ocl_samplerDv2_i.exit;
$_Z11read_imagefPU3AS1Dv4_j11ocl_samplerDv2_i.exit:
  assert {:block_sourceloc} {:sourceloc_num 15} true;
  assert {:sourceloc} {:sourceloc_num 16} true;
  v10 := $$matrixA[BV32_MUL(BV32_ADD(BV32_MUL($2, 8192), $0), 4)];
  assert {:sourceloc} {:sourceloc_num 17} true;
  v11 := $$matrixA[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($2, 8192), $0), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 18} true;
  v12 := $$matrixA[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($2, 8192), $0), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 19} true;
  v13 := $$matrixA[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($2, 8192), $0), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 20} true;
  v14 := $$imageSampler[0];
  v15 := BV32_SDIV($i.0, 4);
  v16 := BV32_ADD(BV32_SHL(v1, 2), 1);
  v17 := BV32_SLT(v15, 0);
  goto $truebb4, $falsebb4;
$14:
  assert {:block_sourceloc} {:sourceloc_num 21} true;
  $4 := 0;
  goto $19;
$15:
  assert {:block_sourceloc} {:sourceloc_num 22} true;
  v18 := BV32_SGE(v15, 8192);
  goto $truebb5, $falsebb5;
$16:
  assert {:block_sourceloc} {:sourceloc_num 23} true;
  $5 := 8191;
  goto $18;
$17:
  assert {:block_sourceloc} {:sourceloc_num 24} true;
  $5 := v15;
  goto $18;
$18:
  assert {:block_sourceloc} {:sourceloc_num 25} true;
  $4 := $5;
  goto $19;
$19:
  assert {:block_sourceloc} {:sourceloc_num 26} true;
  v19 := BV32_SLT(v16, 0);
  goto $truebb6, $falsebb6;
$20:
  assert {:block_sourceloc} {:sourceloc_num 27} true;
  $6 := 0;
  goto $_Z11read_imagefPU3AS1Dv4_j11ocl_samplerDv2_i.exit3;
$21:
  assert {:block_sourceloc} {:sourceloc_num 28} true;
  v20 := BV32_SGE(v16, 8192);
  goto $truebb7, $falsebb7;
$22:
  assert {:block_sourceloc} {:sourceloc_num 29} true;
  $7 := 8191;
  goto $24;
$23:
  assert {:block_sourceloc} {:sourceloc_num 30} true;
  $7 := v16;
  goto $24;
$24:
  assert {:block_sourceloc} {:sourceloc_num 31} true;
  $6 := $7;
  goto $_Z11read_imagefPU3AS1Dv4_j11ocl_samplerDv2_i.exit3;
$_Z11read_imagefPU3AS1Dv4_j11ocl_samplerDv2_i.exit3:
  assert {:block_sourceloc} {:sourceloc_num 32} true;
  assert {:sourceloc} {:sourceloc_num 33} true;
  v21 := $$matrixA[BV32_MUL(BV32_ADD(BV32_MUL($6, 8192), $4), 4)];
  assert {:sourceloc} {:sourceloc_num 34} true;
  v22 := $$matrixA[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($6, 8192), $4), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 35} true;
  v23 := $$matrixA[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($6, 8192), $4), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 36} true;
  v24 := $$matrixA[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($6, 8192), $4), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 37} true;
  v25 := $$imageSampler[0];
  v26 := BV32_SDIV($i.0, 4);
  v27 := BV32_ADD(BV32_SHL(v1, 2), 2);
  v28 := BV32_SLT(v26, 0);
  goto $truebb8, $falsebb8;
$25:
  assert {:block_sourceloc} {:sourceloc_num 38} true;
  $8 := 0;
  goto $30;
$26:
  assert {:block_sourceloc} {:sourceloc_num 39} true;
  v29 := BV32_SGE(v26, 8192);
  goto $truebb9, $falsebb9;
$27:
  assert {:block_sourceloc} {:sourceloc_num 40} true;
  $9 := 8191;
  goto $29;
$28:
  assert {:block_sourceloc} {:sourceloc_num 41} true;
  $9 := v26;
  goto $29;
$29:
  assert {:block_sourceloc} {:sourceloc_num 42} true;
  $8 := $9;
  goto $30;
$30:
  assert {:block_sourceloc} {:sourceloc_num 43} true;
  v30 := BV32_SLT(v27, 0);
  goto $truebb10, $falsebb10;
$31:
  assert {:block_sourceloc} {:sourceloc_num 44} true;
  $10 := 0;
  goto $_Z11read_imagefPU3AS1Dv4_j11ocl_samplerDv2_i.exit6;
$32:
  assert {:block_sourceloc} {:sourceloc_num 45} true;
  v31 := BV32_SGE(v27, 8192);
  goto $truebb11, $falsebb11;
$33:
  assert {:block_sourceloc} {:sourceloc_num 46} true;
  $11 := 8191;
  goto $35;
$34:
  assert {:block_sourceloc} {:sourceloc_num 47} true;
  $11 := v27;
  goto $35;
$35:
  assert {:block_sourceloc} {:sourceloc_num 48} true;
  $10 := $11;
  goto $_Z11read_imagefPU3AS1Dv4_j11ocl_samplerDv2_i.exit6;
$_Z11read_imagefPU3AS1Dv4_j11ocl_samplerDv2_i.exit6:
  assert {:block_sourceloc} {:sourceloc_num 49} true;
  assert {:sourceloc} {:sourceloc_num 50} true;
  v32 := $$matrixA[BV32_MUL(BV32_ADD(BV32_MUL($10, 8192), $8), 4)];
  assert {:sourceloc} {:sourceloc_num 51} true;
  v33 := $$matrixA[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($10, 8192), $8), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 52} true;
  v34 := $$matrixA[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($10, 8192), $8), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 53} true;
  v35 := $$matrixA[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($10, 8192), $8), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 54} true;
  v36 := $$imageSampler[0];
  v37 := BV32_SDIV($i.0, 4);
  v38 := BV32_ADD(BV32_SHL(v1, 2), 3);
  v39 := BV32_SLT(v37, 0);
  goto $truebb12, $falsebb12;
$36:
  assert {:block_sourceloc} {:sourceloc_num 55} true;
  $12 := 0;
  goto $41;
$37:
  assert {:block_sourceloc} {:sourceloc_num 56} true;
  v40 := BV32_SGE(v37, 8192);
  goto $truebb13, $falsebb13;
$38:
  assert {:block_sourceloc} {:sourceloc_num 57} true;
  $13 := 8191;
  goto $40;
$39:
  assert {:block_sourceloc} {:sourceloc_num 58} true;
  $13 := v37;
  goto $40;
$40:
  assert {:block_sourceloc} {:sourceloc_num 59} true;
  $12 := $13;
  goto $41;
$41:
  assert {:block_sourceloc} {:sourceloc_num 60} true;
  v41 := BV32_SLT(v38, 0);
  goto $truebb14, $falsebb14;
$42:
  assert {:block_sourceloc} {:sourceloc_num 61} true;
  $14 := 0;
  goto $_Z11read_imagefPU3AS1Dv4_j11ocl_samplerDv2_i.exit9;
$43:
  assert {:block_sourceloc} {:sourceloc_num 62} true;
  v42 := BV32_SGE(v38, 8192);
  goto $truebb15, $falsebb15;
$44:
  assert {:block_sourceloc} {:sourceloc_num 63} true;
  $15 := 8191;
  goto $46;
$45:
  assert {:block_sourceloc} {:sourceloc_num 64} true;
  $15 := v38;
  goto $46;
$46:
  assert {:block_sourceloc} {:sourceloc_num 65} true;
  $14 := $15;
  goto $_Z11read_imagefPU3AS1Dv4_j11ocl_samplerDv2_i.exit9;
$_Z11read_imagefPU3AS1Dv4_j11ocl_samplerDv2_i.exit9:
  assert {:block_sourceloc} {:sourceloc_num 66} true;
  assert {:sourceloc} {:sourceloc_num 67} true;
  v43 := $$matrixA[BV32_MUL(BV32_ADD(BV32_MUL($14, 8192), $12), 4)];
  assert {:sourceloc} {:sourceloc_num 68} true;
  v44 := $$matrixA[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($14, 8192), $12), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 69} true;
  v45 := $$matrixA[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($14, 8192), $12), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 70} true;
  v46 := $$matrixA[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($14, 8192), $12), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 71} true;
  v47 := $$imageSampler[0];
  v48 := BV32_SLT(v0, 0);
  goto $truebb16, $falsebb16;
$47:
  assert {:block_sourceloc} {:sourceloc_num 72} true;
  $16 := 0;
  goto $52;
$48:
  assert {:block_sourceloc} {:sourceloc_num 73} true;
  v49 := BV32_SGE(v0, 8192);
  goto $truebb17, $falsebb17;
$49:
  assert {:block_sourceloc} {:sourceloc_num 74} true;
  $17 := 8191;
  goto $51;
$50:
  assert {:block_sourceloc} {:sourceloc_num 75} true;
  $17 := v0;
  goto $51;
$51:
  assert {:block_sourceloc} {:sourceloc_num 76} true;
  $16 := $17;
  goto $52;
$52:
  assert {:block_sourceloc} {:sourceloc_num 77} true;
  v50 := BV32_SLT($i.0, 0);
  goto $truebb18, $falsebb18;
$53:
  assert {:block_sourceloc} {:sourceloc_num 78} true;
  $18 := 0;
  goto $_Z11read_imagefPU3AS1Dv4_j11ocl_samplerDv2_i.exit12;
$54:
  assert {:block_sourceloc} {:sourceloc_num 79} true;
  v51 := BV32_SGE($i.0, 8192);
  goto $truebb19, $falsebb19;
$55:
  assert {:block_sourceloc} {:sourceloc_num 80} true;
  $19 := 8191;
  goto $57;
$56:
  assert {:block_sourceloc} {:sourceloc_num 81} true;
  $19 := $i.0;
  goto $57;
$57:
  assert {:block_sourceloc} {:sourceloc_num 82} true;
  $18 := $19;
  goto $_Z11read_imagefPU3AS1Dv4_j11ocl_samplerDv2_i.exit12;
$_Z11read_imagefPU3AS1Dv4_j11ocl_samplerDv2_i.exit12:
  assert {:block_sourceloc} {:sourceloc_num 83} true;
  assert {:sourceloc} {:sourceloc_num 84} true;
  v52 := $$matrixB[BV32_MUL(BV32_ADD(BV32_MUL($18, 8192), $16), 4)];
  assert {:sourceloc} {:sourceloc_num 85} true;
  v53 := $$matrixB[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($18, 8192), $16), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 86} true;
  v54 := $$matrixB[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($18, 8192), $16), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 87} true;
  v55 := $$matrixB[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($18, 8192), $16), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 88} true;
  v56 := $$imageSampler[0];
  v57 := BV32_ADD($i.0, 1);
  v58 := BV32_SLT(v0, 0);
  goto $truebb20, $falsebb20;
$58:
  assert {:block_sourceloc} {:sourceloc_num 89} true;
  $20 := 0;
  goto $63;
$59:
  assert {:block_sourceloc} {:sourceloc_num 90} true;
  v59 := BV32_SGE(v0, 8192);
  goto $truebb21, $falsebb21;
$60:
  assert {:block_sourceloc} {:sourceloc_num 91} true;
  $21 := 8191;
  goto $62;
$61:
  assert {:block_sourceloc} {:sourceloc_num 92} true;
  $21 := v0;
  goto $62;
$62:
  assert {:block_sourceloc} {:sourceloc_num 93} true;
  $20 := $21;
  goto $63;
$63:
  assert {:block_sourceloc} {:sourceloc_num 94} true;
  v60 := BV32_SLT(v57, 0);
  goto $truebb22, $falsebb22;
$64:
  assert {:block_sourceloc} {:sourceloc_num 95} true;
  $22 := 0;
  goto $_Z11read_imagefPU3AS1Dv4_j11ocl_samplerDv2_i.exit21;
$65:
  assert {:block_sourceloc} {:sourceloc_num 96} true;
  v61 := BV32_SGE(v57, 8192);
  goto $truebb23, $falsebb23;
$66:
  assert {:block_sourceloc} {:sourceloc_num 97} true;
  $23 := 8191;
  goto $68;
$67:
  assert {:block_sourceloc} {:sourceloc_num 98} true;
  $23 := v57;
  goto $68;
$68:
  assert {:block_sourceloc} {:sourceloc_num 99} true;
  $22 := $23;
  goto $_Z11read_imagefPU3AS1Dv4_j11ocl_samplerDv2_i.exit21;
$_Z11read_imagefPU3AS1Dv4_j11ocl_samplerDv2_i.exit21:
  assert {:block_sourceloc} {:sourceloc_num 100} true;
  assert {:sourceloc} {:sourceloc_num 101} true;
  v62 := $$matrixB[BV32_MUL(BV32_ADD(BV32_MUL($22, 8192), $20), 4)];
  assert {:sourceloc} {:sourceloc_num 102} true;
  v63 := $$matrixB[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($22, 8192), $20), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 103} true;
  v64 := $$matrixB[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($22, 8192), $20), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 104} true;
  v65 := $$matrixB[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($22, 8192), $20), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 105} true;
  v66 := $$imageSampler[0];
  v67 := BV32_ADD($i.0, 2);
  v68 := BV32_SLT(v0, 0);
  goto $truebb24, $falsebb24;
$69:
  assert {:block_sourceloc} {:sourceloc_num 106} true;
  $24 := 0;
  goto $74;
$70:
  assert {:block_sourceloc} {:sourceloc_num 107} true;
  v69 := BV32_SGE(v0, 8192);
  goto $truebb25, $falsebb25;
$71:
  assert {:block_sourceloc} {:sourceloc_num 108} true;
  $25 := 8191;
  goto $73;
$72:
  assert {:block_sourceloc} {:sourceloc_num 109} true;
  $25 := v0;
  goto $73;
$73:
  assert {:block_sourceloc} {:sourceloc_num 110} true;
  $24 := $25;
  goto $74;
$74:
  assert {:block_sourceloc} {:sourceloc_num 111} true;
  v70 := BV32_SLT(v67, 0);
  goto $truebb26, $falsebb26;
$75:
  assert {:block_sourceloc} {:sourceloc_num 112} true;
  $26 := 0;
  goto $_Z11read_imagefPU3AS1Dv4_j11ocl_samplerDv2_i.exit18;
$76:
  assert {:block_sourceloc} {:sourceloc_num 113} true;
  v71 := BV32_SGE(v67, 8192);
  goto $truebb27, $falsebb27;
$77:
  assert {:block_sourceloc} {:sourceloc_num 114} true;
  $27 := 8191;
  goto $79;
$78:
  assert {:block_sourceloc} {:sourceloc_num 115} true;
  $27 := v67;
  goto $79;
$79:
  assert {:block_sourceloc} {:sourceloc_num 116} true;
  $26 := $27;
  goto $_Z11read_imagefPU3AS1Dv4_j11ocl_samplerDv2_i.exit18;
$_Z11read_imagefPU3AS1Dv4_j11ocl_samplerDv2_i.exit18:
  assert {:block_sourceloc} {:sourceloc_num 117} true;
  assert {:sourceloc} {:sourceloc_num 118} true;
  v72 := $$matrixB[BV32_MUL(BV32_ADD(BV32_MUL($26, 8192), $24), 4)];
  assert {:sourceloc} {:sourceloc_num 119} true;
  v73 := $$matrixB[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($26, 8192), $24), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 120} true;
  v74 := $$matrixB[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($26, 8192), $24), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 121} true;
  v75 := $$matrixB[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($26, 8192), $24), 4), 3)];
  assert {:sourceloc} {:sourceloc_num 122} true;
  v76 := $$imageSampler[0];
  v77 := BV32_ADD($i.0, 3);
  v78 := BV32_SLT(v0, 0);
  goto $truebb28, $falsebb28;
$80:
  assert {:block_sourceloc} {:sourceloc_num 123} true;
  $28 := 0;
  goto $85;
$81:
  assert {:block_sourceloc} {:sourceloc_num 124} true;
  v79 := BV32_SGE(v0, 8192);
  goto $truebb29, $falsebb29;
$82:
  assert {:block_sourceloc} {:sourceloc_num 125} true;
  $29 := 8191;
  goto $84;
$83:
  assert {:block_sourceloc} {:sourceloc_num 126} true;
  $29 := v0;
  goto $84;
$84:
  assert {:block_sourceloc} {:sourceloc_num 127} true;
  $28 := $29;
  goto $85;
$85:
  assert {:block_sourceloc} {:sourceloc_num 128} true;
  v80 := BV32_SLT(v77, 0);
  goto $truebb30, $falsebb30;
$86:
  assert {:block_sourceloc} {:sourceloc_num 129} true;
  $30 := 0;
  goto $_Z11read_imagefPU3AS1Dv4_j11ocl_samplerDv2_i.exit15;
$87:
  assert {:block_sourceloc} {:sourceloc_num 130} true;
  v81 := BV32_SGE(v77, 8192);
  goto $truebb31, $falsebb31;
$88:
  assert {:block_sourceloc} {:sourceloc_num 131} true;
  $31 := 8191;
  goto $90;
$89:
  assert {:block_sourceloc} {:sourceloc_num 132} true;
  $31 := v77;
  goto $90;
$90:
  assert {:block_sourceloc} {:sourceloc_num 133} true;
  $30 := $31;
  goto $_Z11read_imagefPU3AS1Dv4_j11ocl_samplerDv2_i.exit15;
$_Z11read_imagefPU3AS1Dv4_j11ocl_samplerDv2_i.exit15:
  assert {:block_sourceloc} {:sourceloc_num 134} true;
  assert {:sourceloc} {:sourceloc_num 135} true;
  v82 := $$matrixB[BV32_MUL(BV32_ADD(BV32_MUL($30, 8192), $28), 4)];
  assert {:sourceloc} {:sourceloc_num 136} true;
  v83 := $$matrixB[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($30, 8192), $28), 4), 1)];
  assert {:sourceloc} {:sourceloc_num 137} true;
  v84 := $$matrixB[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($30, 8192), $28), 4), 2)];
  assert {:sourceloc} {:sourceloc_num 138} true;
  v85 := $$matrixB[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL($30, 8192), $28), 4), 3)];
  v86 := BV_EXTRACT($sum0.0, 64, 32);
  v87 := BV_EXTRACT($sum0.0, 96, 64);
  v88 := BV_EXTRACT($sum0.0, 128, 96);
  v89 := BV_EXTRACT($sum1.0, 64, 32);
  v90 := BV_EXTRACT($sum1.0, 96, 64);
  v91 := BV_EXTRACT($sum1.0, 128, 96);
  v92 := BV_EXTRACT($sum2.0, 64, 32);
  v93 := BV_EXTRACT($sum2.0, 96, 64);
  v94 := BV_EXTRACT($sum2.0, 128, 96);
  v95 := BV_EXTRACT($sum3.0, 64, 32);
  v96 := BV_EXTRACT($sum3.0, 96, 64);
  v97 := BV_EXTRACT($sum3.0, 128, 96);
  goto $91;
$91:
  assert {:block_sourceloc} {:sourceloc_num 139} true;
  $sum0.0, $sum1.0, $sum2.0, $sum3.0, $i.0 := BV_CONCAT(BV_CONCAT(BV_CONCAT(FADD32(v88, FADD32(FMUL32(v13, v85), FADD32(FMUL32(v12, v75), FADD32(FMUL32(v10, v55), FMUL32(v11, v65))))), FADD32(v87, FADD32(FMUL32(v13, v84), FADD32(FMUL32(v12, v74), FADD32(FMUL32(v10, v54), FMUL32(v11, v64)))))), FADD32(v86, FADD32(FMUL32(v13, v83), FADD32(FMUL32(v12, v73), FADD32(FMUL32(v10, v53), FMUL32(v11, v63)))))), FADD32(BV_EXTRACT($sum0.0, 32, 0), FADD32(FMUL32(v13, v82), FADD32(FMUL32(v12, v72), FADD32(FMUL32(v10, v52), FMUL32(v11, v62)))))), BV_CONCAT(BV_CONCAT(BV_CONCAT(FADD32(v91, FADD32(FMUL32(v24, v85), FADD32(FMUL32(v23, v75), FADD32(FMUL32(v21, v55), FMUL32(v22, v65))))), FADD32(v90, FADD32(FMUL32(v24, v84), FADD32(FMUL32(v23, v74), FADD32(FMUL32(v21, v54), FMUL32(v22, v64)))))), FADD32(v89, FADD32(FMUL32(v24, v83), FADD32(FMUL32(v23, v73), FADD32(FMUL32(v21, v53), FMUL32(v22, v63)))))), FADD32(BV_EXTRACT($sum1.0, 32, 0), FADD32(FMUL32(v24, v82), FADD32(FMUL32(v23, v72), FADD32(FMUL32(v21, v52), FMUL32(v22, v62)))))), BV_CONCAT(BV_CONCAT(BV_CONCAT(FADD32(v94, FADD32(FMUL32(v35, v85), FADD32(FMUL32(v34, v75), FADD32(FMUL32(v32, v55), FMUL32(v33, v65))))), FADD32(v93, FADD32(FMUL32(v35, v84), FADD32(FMUL32(v34, v74), FADD32(FMUL32(v32, v54), FMUL32(v33, v64)))))), FADD32(v92, FADD32(FMUL32(v35, v83), FADD32(FMUL32(v34, v73), FADD32(FMUL32(v32, v53), FMUL32(v33, v63)))))), FADD32(BV_EXTRACT($sum2.0, 32, 0), FADD32(FMUL32(v35, v82), FADD32(FMUL32(v34, v72), FADD32(FMUL32(v32, v52), FMUL32(v33, v62)))))), BV_CONCAT(BV_CONCAT(BV_CONCAT(FADD32(v97, FADD32(FMUL32(v46, v85), FADD32(FMUL32(v45, v75), FADD32(FMUL32(v43, v55), FMUL32(v44, v65))))), FADD32(v96, FADD32(FMUL32(v46, v84), FADD32(FMUL32(v45, v74), FADD32(FMUL32(v43, v54), FMUL32(v44, v64)))))), FADD32(v95, FADD32(FMUL32(v46, v83), FADD32(FMUL32(v45, v73), FADD32(FMUL32(v43, v53), FMUL32(v44, v63)))))), FADD32(BV_EXTRACT($sum3.0, 32, 0), FADD32(FMUL32(v46, v82), FADD32(FMUL32(v45, v72), FADD32(FMUL32(v43, v52), FMUL32(v44, v62)))))), BV32_ADD($i.0, 4);
  goto $1;
$92:
  assert {:block_sourceloc} {:sourceloc_num 140} true;
  assert {:sourceloc} {:sourceloc_num 141} true;
  $$matrixC[BV32_MUL(BV32_ADD(BV32_MUL(BV32_MUL(v1, 4), 8192), v0), 4)] := BV_EXTRACT($sum0.0, 32, 0);
  assert {:sourceloc} {:sourceloc_num 142} true;
  $$matrixC[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(BV32_MUL(v1, 4), 8192), v0), 4), 1)] := BV_EXTRACT($sum0.0, 64, 32);
  assert {:sourceloc} {:sourceloc_num 143} true;
  $$matrixC[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(BV32_MUL(v1, 4), 8192), v0), 4), 2)] := BV_EXTRACT($sum0.0, 96, 64);
  assert {:sourceloc} {:sourceloc_num 144} true;
  $$matrixC[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(BV32_MUL(v1, 4), 8192), v0), 4), 3)] := BV_EXTRACT($sum0.0, 128, 96);
  assert {:sourceloc} {:sourceloc_num 145} true;
  $$matrixC[BV32_MUL(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v1, 4), 1), 8192), v0), 4)] := BV_EXTRACT($sum1.0, 32, 0);
  assert {:sourceloc} {:sourceloc_num 146} true;
  $$matrixC[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v1, 4), 1), 8192), v0), 4), 1)] := BV_EXTRACT($sum1.0, 64, 32);
  assert {:sourceloc} {:sourceloc_num 147} true;
  $$matrixC[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v1, 4), 1), 8192), v0), 4), 2)] := BV_EXTRACT($sum1.0, 96, 64);
  assert {:sourceloc} {:sourceloc_num 148} true;
  $$matrixC[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v1, 4), 1), 8192), v0), 4), 3)] := BV_EXTRACT($sum1.0, 128, 96);
  assert {:sourceloc} {:sourceloc_num 149} true;
  $$matrixC[BV32_MUL(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v1, 4), 2), 8192), v0), 4)] := BV_EXTRACT($sum2.0, 32, 0);
  assert {:sourceloc} {:sourceloc_num 150} true;
  $$matrixC[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v1, 4), 2), 8192), v0), 4), 1)] := BV_EXTRACT($sum2.0, 64, 32);
  assert {:sourceloc} {:sourceloc_num 151} true;
  $$matrixC[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v1, 4), 2), 8192), v0), 4), 2)] := BV_EXTRACT($sum2.0, 96, 64);
  assert {:sourceloc} {:sourceloc_num 152} true;
  $$matrixC[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v1, 4), 2), 8192), v0), 4), 3)] := BV_EXTRACT($sum2.0, 128, 96);
  assert {:sourceloc} {:sourceloc_num 153} true;
  $$matrixC[BV32_MUL(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v1, 4), 3), 8192), v0), 4)] := BV_EXTRACT($sum3.0, 32, 0);
  assert {:sourceloc} {:sourceloc_num 154} true;
  $$matrixC[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v1, 4), 3), 8192), v0), 4), 1)] := BV_EXTRACT($sum3.0, 64, 32);
  assert {:sourceloc} {:sourceloc_num 155} true;
  $$matrixC[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v1, 4), 3), 8192), v0), 4), 2)] := BV_EXTRACT($sum3.0, 96, 64);
  assert {:sourceloc} {:sourceloc_num 156} true;
  $$matrixC[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v1, 4), 3), 8192), v0), 4), 3)] := BV_EXTRACT($sum3.0, 128, 96);
  return;
$truebb:
  assume {:partition} v2;
  assert {:block_sourceloc} {:sourceloc_num 157} true;
  goto $2;
$falsebb:
  assume {:partition} !v2;
  assert {:block_sourceloc} {:sourceloc_num 158} true;
  goto $92;
$truebb0:
  assume {:partition} v6;
  assert {:block_sourceloc} {:sourceloc_num 159} true;
  goto $3;
$falsebb0:
  assume {:partition} !v6;
  assert {:block_sourceloc} {:sourceloc_num 160} true;
  goto $4;
$truebb1:
  assume {:partition} v7;
  assert {:block_sourceloc} {:sourceloc_num 161} true;
  goto $5;
$falsebb1:
  assume {:partition} !v7;
  assert {:block_sourceloc} {:sourceloc_num 162} true;
  goto $6;
$truebb2:
  assume {:partition} v8;
  assert {:block_sourceloc} {:sourceloc_num 163} true;
  goto $9;
$falsebb2:
  assume {:partition} !v8;
  assert {:block_sourceloc} {:sourceloc_num 164} true;
  goto $10;
$truebb3:
  assume {:partition} v9;
  assert {:block_sourceloc} {:sourceloc_num 165} true;
  goto $11;
$falsebb3:
  assume {:partition} !v9;
  assert {:block_sourceloc} {:sourceloc_num 166} true;
  goto $12;
$truebb4:
  assume {:partition} v17;
  assert {:block_sourceloc} {:sourceloc_num 167} true;
  goto $14;
$falsebb4:
  assume {:partition} !v17;
  assert {:block_sourceloc} {:sourceloc_num 168} true;
  goto $15;
$truebb5:
  assume {:partition} v18;
  assert {:block_sourceloc} {:sourceloc_num 169} true;
  goto $16;
$falsebb5:
  assume {:partition} !v18;
  assert {:block_sourceloc} {:sourceloc_num 170} true;
  goto $17;
$truebb6:
  assume {:partition} v19;
  assert {:block_sourceloc} {:sourceloc_num 171} true;
  goto $20;
$falsebb6:
  assume {:partition} !v19;
  assert {:block_sourceloc} {:sourceloc_num 172} true;
  goto $21;
$truebb7:
  assume {:partition} v20;
  assert {:block_sourceloc} {:sourceloc_num 173} true;
  goto $22;
$falsebb7:
  assume {:partition} !v20;
  assert {:block_sourceloc} {:sourceloc_num 174} true;
  goto $23;
$truebb8:
  assume {:partition} v28;
  assert {:block_sourceloc} {:sourceloc_num 175} true;
  goto $25;
$falsebb8:
  assume {:partition} !v28;
  assert {:block_sourceloc} {:sourceloc_num 176} true;
  goto $26;
$truebb9:
  assume {:partition} v29;
  assert {:block_sourceloc} {:sourceloc_num 177} true;
  goto $27;
$falsebb9:
  assume {:partition} !v29;
  assert {:block_sourceloc} {:sourceloc_num 178} true;
  goto $28;
$truebb10:
  assume {:partition} v30;
  assert {:block_sourceloc} {:sourceloc_num 179} true;
  goto $31;
$falsebb10:
  assume {:partition} !v30;
  assert {:block_sourceloc} {:sourceloc_num 180} true;
  goto $32;
$truebb11:
  assume {:partition} v31;
  assert {:block_sourceloc} {:sourceloc_num 181} true;
  goto $33;
$falsebb11:
  assume {:partition} !v31;
  assert {:block_sourceloc} {:sourceloc_num 182} true;
  goto $34;
$truebb12:
  assume {:partition} v39;
  assert {:block_sourceloc} {:sourceloc_num 183} true;
  goto $36;
$falsebb12:
  assume {:partition} !v39;
  assert {:block_sourceloc} {:sourceloc_num 184} true;
  goto $37;
$truebb13:
  assume {:partition} v40;
  assert {:block_sourceloc} {:sourceloc_num 185} true;
  goto $38;
$falsebb13:
  assume {:partition} !v40;
  assert {:block_sourceloc} {:sourceloc_num 186} true;
  goto $39;
$truebb14:
  assume {:partition} v41;
  assert {:block_sourceloc} {:sourceloc_num 187} true;
  goto $42;
$falsebb14:
  assume {:partition} !v41;
  assert {:block_sourceloc} {:sourceloc_num 188} true;
  goto $43;
$truebb15:
  assume {:partition} v42;
  assert {:block_sourceloc} {:sourceloc_num 189} true;
  goto $44;
$falsebb15:
  assume {:partition} !v42;
  assert {:block_sourceloc} {:sourceloc_num 190} true;
  goto $45;
$truebb16:
  assume {:partition} v48;
  assert {:block_sourceloc} {:sourceloc_num 191} true;
  goto $47;
$falsebb16:
  assume {:partition} !v48;
  assert {:block_sourceloc} {:sourceloc_num 192} true;
  goto $48;
$truebb17:
  assume {:partition} v49;
  assert {:block_sourceloc} {:sourceloc_num 193} true;
  goto $49;
$falsebb17:
  assume {:partition} !v49;
  assert {:block_sourceloc} {:sourceloc_num 194} true;
  goto $50;
$truebb18:
  assume {:partition} v50;
  assert {:block_sourceloc} {:sourceloc_num 195} true;
  goto $53;
$falsebb18:
  assume {:partition} !v50;
  assert {:block_sourceloc} {:sourceloc_num 196} true;
  goto $54;
$truebb19:
  assume {:partition} v51;
  assert {:block_sourceloc} {:sourceloc_num 197} true;
  goto $55;
$falsebb19:
  assume {:partition} !v51;
  assert {:block_sourceloc} {:sourceloc_num 198} true;
  goto $56;
$truebb20:
  assume {:partition} v58;
  assert {:block_sourceloc} {:sourceloc_num 199} true;
  goto $58;
$falsebb20:
  assume {:partition} !v58;
  assert {:block_sourceloc} {:sourceloc_num 200} true;
  goto $59;
$truebb21:
  assume {:partition} v59;
  assert {:block_sourceloc} {:sourceloc_num 201} true;
  goto $60;
$falsebb21:
  assume {:partition} !v59;
  assert {:block_sourceloc} {:sourceloc_num 202} true;
  goto $61;
$truebb22:
  assume {:partition} v60;
  assert {:block_sourceloc} {:sourceloc_num 203} true;
  goto $64;
$falsebb22:
  assume {:partition} !v60;
  assert {:block_sourceloc} {:sourceloc_num 204} true;
  goto $65;
$truebb23:
  assume {:partition} v61;
  assert {:block_sourceloc} {:sourceloc_num 205} true;
  goto $66;
$falsebb23:
  assume {:partition} !v61;
  assert {:block_sourceloc} {:sourceloc_num 206} true;
  goto $67;
$truebb24:
  assume {:partition} v68;
  assert {:block_sourceloc} {:sourceloc_num 207} true;
  goto $69;
$falsebb24:
  assume {:partition} !v68;
  assert {:block_sourceloc} {:sourceloc_num 208} true;
  goto $70;
$truebb25:
  assume {:partition} v69;
  assert {:block_sourceloc} {:sourceloc_num 209} true;
  goto $71;
$falsebb25:
  assume {:partition} !v69;
  assert {:block_sourceloc} {:sourceloc_num 210} true;
  goto $72;
$truebb26:
  assume {:partition} v70;
  assert {:block_sourceloc} {:sourceloc_num 211} true;
  goto $75;
$falsebb26:
  assume {:partition} !v70;
  assert {:block_sourceloc} {:sourceloc_num 212} true;
  goto $76;
$truebb27:
  assume {:partition} v71;
  assert {:block_sourceloc} {:sourceloc_num 213} true;
  goto $77;
$falsebb27:
  assume {:partition} !v71;
  assert {:block_sourceloc} {:sourceloc_num 214} true;
  goto $78;
$truebb28:
  assume {:partition} v78;
  assert {:block_sourceloc} {:sourceloc_num 215} true;
  goto $80;
$falsebb28:
  assume {:partition} !v78;
  assert {:block_sourceloc} {:sourceloc_num 216} true;
  goto $81;
$truebb29:
  assume {:partition} v79;
  assert {:block_sourceloc} {:sourceloc_num 217} true;
  goto $82;
$falsebb29:
  assume {:partition} !v79;
  assert {:block_sourceloc} {:sourceloc_num 218} true;
  goto $83;
$truebb30:
  assume {:partition} v80;
  assert {:block_sourceloc} {:sourceloc_num 219} true;
  goto $86;
$falsebb30:
  assume {:partition} !v80;
  assert {:block_sourceloc} {:sourceloc_num 220} true;
  goto $87;
$truebb31:
  assume {:partition} v81;
  assert {:block_sourceloc} {:sourceloc_num 221} true;
  goto $88;
$falsebb31:
  assume {:partition} !v81;
  assert {:block_sourceloc} {:sourceloc_num 222} true;
  goto $89;
}
axiom (if group_size_z == 1 then 1 else 0) != 0;
axiom (if num_groups_z == 1 then 1 else 0) != 0;
axiom (if group_size_x == 8 then 1 else 0) != 0;
axiom (if group_size_y == 8 then 1 else 0) != 0;
axiom (if num_groups_x == 8 then 1 else 0) != 0;
axiom (if num_groups_y == 4 then 1 else 0) != 0;
axiom (if global_offset_x == 0 then 1 else 0) != 0;
axiom (if global_offset_y == 0 then 1 else 0) != 0;
axiom (if global_offset_z == 0 then 1 else 0) != 0;
