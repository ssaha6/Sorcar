type _SIZE_T_TYPE = bv32;

procedure _ATOMIC_OP8(x : [int]int, y : int) returns (z : int, A : [int]int);
var {:source_name "mandelbrotImage"} {:global} $$mandelbrotImage : [int]int;
axiom {:array_info "$$mandelbrotImage"} {:global} {:elem_width 8} {:source_name "mandelbrotImage"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$mandelbrotImage : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$mandelbrotImage : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$mandelbrotImage : bool;

var {:source_name "color"} $$color : [int]int;
axiom {:array_info "$$color"} {:elem_width 8} {:source_name "color"} {:source_elem_width 32} {:source_dimensions "4"} true;

const _WATCHED_OFFSET : int;
const {:global_offset_x} global_offset_x : int;
const {:global_offset_y} global_offset_y : int;
const {:global_offset_z} global_offset_z : int;
const {:group_id_x} group_id_x : int;
const {:group_size_x} group_size_x : int;
const {:group_size_y} group_size_y : int;
const {:group_size_z} group_size_z : int;
const {:local_id_x} local_id_x : int;
const {:num_groups_x} num_groups_x : int;
const {:num_groups_y} num_groups_y : int;
const {:num_groups_z} num_groups_z : int;
function  BV32_ASHR(int, int) : int;
function  BV32_LSHR(int, int) : int;
function BV_CONCAT(int, int) : int;
function BV_EXTRACT(int, int, int) : int;
function FADD32(int, int) : int;
function FCOS32(int) : int;
function FDIV32(int, int) : int;
function FEQ32(int, int) : bool;
function FLOG32(int) : int;
function FLT32(int, int) : bool;
function FMUL32(int, int) : int;
function FP32_TO_UI8(int) : int;
function FSUB32(int, int) : int;
function SI32_TO_FP32(int) : int;
function {:inline true} BV1_ZEXT32(x : int) : int {
  x
}
function {:inline true} BV32_ADD(x : int, y : int) : int {
  x + y
}
function {:inline true} BV32_AND(x : int, y : int) : int {
  if x == y then x else (if x == 0 || y == 0 then 0 else BV32_AND_UF(x, y))
}
function BV32_AND_UF(int, int) : int;
function {:inline true} BV32_MUL(x : int, y : int) : int {
  x * y
}
function {:inline true} BV32_OR(x : int, y : int) : int {
  if x == y then x else (if x == 0 then y else (if y == 0 then x else BV32_OR_UF(x, y)))
}
function BV32_OR_UF(int, int) : int;
function {:inline true} BV32_SDIV(x : int, y : int) : int {
  x div y
}
function {:inline true} BV32_SREM(x : int, y : int) : int {
  x mod y
}
function {:inline true} BV32_ULT(x : int, y : int) : bool {
  x < y
}
procedure {:source_name "mandelbrot_vector_float"} {:kernel} $mandelbrot_vector_float($posx:int, $posy:int, $stepSizeX:int, $stepSizeY:int, $maxIterations:int, $width:int, $bench:int)
{
  var $iter.0:int;
  var $stay.0:int;
  var $ccount.0:int;
  var $savx.0:int;
  var $savy.0:int;
  var $0:int;
  var $1:int;
  var $2:int;
  var $3:int;
  var $4:int;
  var $5:int;
  var $6:int;
  var $7:int;
  var $8:int;
  var $ccount.2:int;
  var $savx.2:int;
  var $savy.2:int;
  var $iter.1:int;
  var $stay.1:int;
  var $ccount.1:int;
  var $savx.1:int;
  var $savy.1:int;
  var $9:int;
  var $10:int;
  var $11:int;
  var $12:int;
  var $13:int;
  var $14:int;
  var $15:int;
  var $16:int;
  var $17:int;
  var $18:int;
  var $19:int;
  var $20:int;
  var $21:int;
  var v0:int;
  var v1:int;
  var v2:int;
  var v4:int;
  var v3:int;
  var v5:int;
  var v6:int;
  var v7:int;
  var v8:int;
  var v9:int;
  var v10:int;
  var v11:int;
  var v12:int;
  var v13:int;
  var v14:int;
  var v15:bool;
  var v16:bool;
  var v22:int;
  var v17:int;
  var v18:int;
  var v19:int;
  var v20:int;
  var v21:int;
  var v23:int;
  var v24:int;
  var v25:int;
  var v26:int;
  var v27:int;
  var v28:int;
  var v41:int;
  var v42:int;
  var v43:int;
  var v44:int;
  var v29:int;
  var v30:int;
  var v31:int;
  var v32:int;
  var v33:int;
  var v34:int;
  var v35:int;
  var v36:int;
  var v37:int;
  var v38:int;
  var v39:int;
  var v40:int;
  var v71:int;
  var v72:int;
  var v45:int;
  var v46:int;
  var v47:int;
  var v48:int;
  var v49:int;
  var v50:int;
  var v51:int;
  var v52:int;
  var v53:int;
  var v54:int;
  var v55:int;
  var v56:int;
  var v57:int;
  var v58:int;
  var v59:int;
  var v60:int;
  var v61:int;
  var v62:int;
  var v63:int;
  var v64:int;
  var v65:int;
  var v66:int;
  var v67:int;
  var v68:int;
  var v69:int;
  var v70:int;
  var v125:int;
  var v126:int;
  var v127:int;
  var v128:int;
  var v73:int;
  var v74:int;
  var v75:int;
  var v76:int;
  var v77:int;
  var v78:int;
  var v79:int;
  var v80:int;
  var v81:int;
  var v82:int;
  var v83:int;
  var v84:int;
  var v85:int;
  var v86:int;
  var v87:int;
  var v88:int;
  var v89:int;
  var v90:int;
  var v91:int;
  var v92:int;
  var v93:int;
  var v94:int;
  var v95:int;
  var v96:int;
  var v97:int;
  var v98:int;
  var v99:int;
  var v100:int;
  var v101:int;
  var v102:int;
  var v103:int;
  var v104:int;
  var v105:int;
  var v106:int;
  var v107:int;
  var v108:int;
  var v109:int;
  var v110:int;
  var v111:int;
  var v112:int;
  var v113:int;
  var v114:int;
  var v115:int;
  var v116:int;
  var v117:int;
  var v118:int;
  var v119:int;
  var v120:int;
  var v121:int;
  var v122:int;
  var v123:int;
  var v124:int;
  var v129:int;
  var v130:int;
  var v131:int;
  var v132:int;
  var v133:int;
  var v134:int;
  var v135:int;
  var v136:int;
  var v137:int;
  var v138:int;
  var v139:int;
  var v140:int;
  var v141:int;
  var v142:int;
  var v143:int;
  var v144:int;
  var v145:int;
  var v146:int;
  var v147:int;
  var v148:int;
  var v149:int;
  var v150:int;
  var v151:int;
  var v152:int;
  var v153:bool;
  var v154:bool;
  var v155:bool;
  var v156:bool;
  var v157:bool;
  var v158:bool;
  var v159:bool;
  var v160:bool;
  var v161:bool;
  var v162:int;
  var v163:bool;
  var v164:int;
  var v165:int;
  var v166:bool;
  var v167:int;
  var v168:int;
  var v169:bool;
  var v170:int;
  var v171:int;
  var v172:bool;
  var v173:int;
  var v174:int;
  var v175:int;
  var v176:bool;
  var v177:bool;
  var v178:bool;
  var v179:bool;
  var v180:int;
  var v181:bool;
  var v182:bool;
  var v183:bool;
  var v184:bool;
  var v185:int;
  var v186:bool;
  var v187:bool;
  var v188:int;
  var v189:int;
  var v190:int;
  var v191:int;
  var v192:int;
  var v193:int;
  var v194:int;
  var v195:int;
  var v196:int;
  var v197:int;
  var v198:int;
  var v199:int;
  var v200:int;
  var v201:int;
  var v202:int;
  var v203:int;
  var v204:int;
  var v205:bool;
  var v206:int;
  var v207:int;
  var v208:int;
  var v209:int;
  var v210:int;
  var v211:int;
  var v212:int;
  var v213:int;
  var v218:bool;
  var v214:int;
  var v215:int;
  var v216:int;
  var v217:int;
  var v219:int;
  var v220:int;
  var v221:int;
  var v222:int;
  var v223:int;
  var v224:int;
  var v225:int;
  var v226:int;
  var v227:int;
  var v228:int;
  var v229:int;
  var v230:int;
  var v231:int;
  var v232:int;
  var v233:int;
  var v234:int;
  var v235:int;
  var v236:int;
  var v237:int;
  var v238:int;
  var v239:int;
  var v240:int;
  var v241:int;
  var v242:int;
  var v243:int;
  var v244:int;
  var v245:int;
  var v246:int;
  var v247:int;
  var v248:int;
  var v249:int;
  var v250:int;
  var v251:int;
  var v252:int;
  var v253:int;
  var v254:int;
  var v255:int;
  var v256:bool;
  var v257:int;
  var v258:int;
  var v259:int;
  var v260:int;
  var v261:int;
  var v262:int;
  var v263:int;
  var v264:int;
  var v269:bool;
  var v265:int;
  var v266:int;
  var v267:int;
  var v268:int;
  var v270:int;
  var v271:int;
  var v272:int;
  var v273:int;
  var v274:int;
  var v275:int;
  var v276:int;
  var v277:int;
  var v278:int;
  var v279:int;
  var v280:int;
  var v281:int;
  var v282:int;
  var v283:int;
  var v284:int;
  var v285:int;
  var v286:int;
  var v287:int;
  var v288:int;
  var v289:int;
  var v290:int;
  var v291:int;
  var v292:int;
  var v293:int;
  var v294:int;
  var v295:int;
  var v296:int;
  var v297:int;
  var v298:int;
  var v299:int;
  var v300:int;
  var v301:int;
  var v302:int;
  var v303:int;
  var v304:int;
  var v305:int;
  var v306:int;
  var v307:bool;
  var v308:int;
  var v309:int;
  var v310:int;
  var v311:int;
  var v312:int;
  var v313:int;
  var v314:int;
  var v315:int;
  var v320:bool;
  var v316:int;
  var v317:int;
  var v318:int;
  var v319:int;
  var v321:int;
  var v322:int;
  var v323:int;
  var v324:int;
  var v325:int;
  var v326:int;
  var v327:int;
  var v328:int;
  var v329:int;
  var v330:int;
  var v331:int;
  var v332:int;
  var v333:int;
  var v334:int;
  var v335:int;
  var v336:int;
  var v337:int;
  var v338:int;
  var v339:int;
  var v340:int;
  var v341:int;
  var v342:int;
  var v343:int;
  var v344:int;
  var v345:int;
  var v346:int;
  var v347:int;
  var v348:int;
  var v349:int;
  var v350:int;
  var v351:int;
  var v352:int;
  var v353:int;
  var v354:int;
  var v355:int;
  var v356:int;
  var v357:int;
  var v358:bool;
  var v359:int;
  var v360:int;
  var v361:int;
  var v362:int;
  var v363:int;
  var v364:int;
  var v365:int;
  var v366:int;
  var v371:bool;
  var v367:int;
  var v368:int;
  var v369:int;
  var v370:int;
  var v372:int;
  var v373:int;
  var v374:int;
  var v375:int;
  var v376:int;
  var v377:int;
  var v378:int;
  var v379:int;
  var v380:int;
  var v381:int;
  var v382:int;
  var v383:int;
  var v384:int;
  var v385:int;
  var v386:int;
  var v387:int;
  var v388:int;
  var v389:int;
  var v390:int;
  var v391:int;
$0:
  assert {:block_sourceloc} {:sourceloc_num 0} true;
  v0 := BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x);
  v1 := BV32_SREM(v0, BV32_SDIV($width, 4));
  v2 := BV32_SDIV(v0, BV32_SDIV($width, 4));
  v3 := FADD32(FMUL32($stepSizeX, SI32_TO_FP32(BV32_MUL(4, v1))), $posx);
  v4 := FADD32(FMUL32($stepSizeX, SI32_TO_FP32(BV32_ADD(BV32_MUL(4, v1), 1))), $posx);
  v5 := FADD32(FMUL32($stepSizeX, SI32_TO_FP32(BV32_ADD(BV32_MUL(4, v1), 2))), $posx);
  v6 := FADD32(FMUL32($stepSizeX, SI32_TO_FP32(BV32_ADD(BV32_MUL(4, v1), 3))), $posx);
  v7 := FADD32(FMUL32($stepSizeY, SI32_TO_FP32(v2)), $posy);
  v8 := FADD32(FMUL32($stepSizeY, SI32_TO_FP32(v2)), $posy);
  v9 := FADD32(FMUL32($stepSizeY, SI32_TO_FP32(v2)), $posy);
  v10 := FADD32(FMUL32($stepSizeY, SI32_TO_FP32(v2)), $posy);
  v11 := FADD32(FMUL32(v3, v3), FMUL32(v7, v7));
  v12 := FADD32(FMUL32(v4, v4), FMUL32(v8, v8));
  v13 := FADD32(FMUL32(v5, v5), FMUL32(v9, v9));
  v14 := FADD32(FMUL32(v6, v6), FMUL32(v10, v10));
  $iter.0, $stay.0, $ccount.0, $savx.0, $savy.0 := 0, BV_CONCAT(BV_CONCAT(BV_CONCAT(BV1_ZEXT32((if FEQ32(v14, 1082130432) || FLT32(v14, 1082130432) then 1 else 0)), BV1_ZEXT32((if FEQ32(v13, 1082130432) || FLT32(v13, 1082130432) then 1 else 0))), BV1_ZEXT32((if FEQ32(v12, 1082130432) || FLT32(v12, 1082130432) then 1 else 0))), BV1_ZEXT32((if FEQ32(v11, 1082130432) || FLT32(v11, 1082130432) then 1 else 0))), 0, BV_CONCAT(BV_CONCAT(BV_CONCAT(v6, v5), v4), v3), BV_CONCAT(BV_CONCAT(BV_CONCAT(v10, v9), v8), v7);
  goto $1;
$1:
  assert {:block_sourceloc} {:sourceloc_num 1} true;
  v15 := BV32_OR(BV32_OR(BV32_OR(BV_EXTRACT($stay.0, 32, 0), BV_EXTRACT($stay.0, 64, 32)), BV_EXTRACT($stay.0, 96, 64)), BV_EXTRACT($stay.0, 128, 96)) != 0;
  goto $truebb, $falsebb;
$2:
  assert {:block_sourceloc} {:sourceloc_num 2} true;
  $0 := (if BV32_ULT($iter.0, $maxIterations) then 1 else 0);
  goto $3;
$3:
  assert {:block_sourceloc} {:sourceloc_num 3} true;
  v16 := $0 == 1;
  goto $truebb0, $falsebb0;
$4:
  assert {:block_sourceloc} {:sourceloc_num 4} true;
  v17 := FADD32(FMUL32(FSUB32(-2147483648, BV_EXTRACT($savy.0, 32, 0)), BV_EXTRACT($savy.0, 32, 0)), FADD32(FMUL32(BV_EXTRACT($savx.0, 32, 0), BV_EXTRACT($savx.0, 32, 0)), v3));
  v18 := FADD32(FMUL32(FSUB32(-2147483648, BV_EXTRACT($savy.0, 64, 32)), BV_EXTRACT($savy.0, 64, 32)), FADD32(FMUL32(BV_EXTRACT($savx.0, 64, 32), BV_EXTRACT($savx.0, 64, 32)), v4));
  v19 := FADD32(FMUL32(FSUB32(-2147483648, BV_EXTRACT($savy.0, 96, 64)), BV_EXTRACT($savy.0, 96, 64)), FADD32(FMUL32(BV_EXTRACT($savx.0, 96, 64), BV_EXTRACT($savx.0, 96, 64)), v5));
  v20 := FADD32(FMUL32(FSUB32(-2147483648, BV_EXTRACT($savy.0, 128, 96)), BV_EXTRACT($savy.0, 128, 96)), FADD32(FMUL32(BV_EXTRACT($savx.0, 128, 96), BV_EXTRACT($savx.0, 128, 96)), v6));
  v21 := FADD32(FMUL32(FMUL32(1073741824, BV_EXTRACT($savx.0, 32, 0)), BV_EXTRACT($savy.0, 32, 0)), v7);
  v22 := FADD32(FMUL32(FMUL32(1073741824, BV_EXTRACT($savx.0, 64, 32)), BV_EXTRACT($savy.0, 64, 32)), v8);
  v23 := FADD32(FMUL32(FMUL32(1073741824, BV_EXTRACT($savx.0, 96, 64)), BV_EXTRACT($savy.0, 96, 64)), v9);
  v24 := FADD32(FMUL32(FMUL32(1073741824, BV_EXTRACT($savx.0, 128, 96)), BV_EXTRACT($savy.0, 128, 96)), v10);
  v25 := FADD32(FMUL32(FSUB32(-2147483648, v21), v21), FADD32(FMUL32(v17, v17), v3));
  v26 := FADD32(FMUL32(FSUB32(-2147483648, v22), v22), FADD32(FMUL32(v18, v18), v4));
  v27 := FADD32(FMUL32(FSUB32(-2147483648, v23), v23), FADD32(FMUL32(v19, v19), v5));
  v28 := FADD32(FMUL32(FSUB32(-2147483648, v24), v24), FADD32(FMUL32(v20, v20), v6));
  v29 := FADD32(FMUL32(FMUL32(1073741824, v17), v21), v7);
  v30 := FADD32(FMUL32(FMUL32(1073741824, v18), v22), v8);
  v31 := FADD32(FMUL32(FMUL32(1073741824, v19), v23), v9);
  v32 := FADD32(FMUL32(FMUL32(1073741824, v20), v24), v10);
  v33 := FADD32(FMUL32(FSUB32(-2147483648, v29), v29), FADD32(FMUL32(v25, v25), v3));
  v34 := FADD32(FMUL32(FSUB32(-2147483648, v30), v30), FADD32(FMUL32(v26, v26), v4));
  v35 := FADD32(FMUL32(FSUB32(-2147483648, v31), v31), FADD32(FMUL32(v27, v27), v5));
  v36 := FADD32(FMUL32(FSUB32(-2147483648, v32), v32), FADD32(FMUL32(v28, v28), v6));
  v37 := FADD32(FMUL32(FMUL32(1073741824, v25), v29), v7);
  v38 := FADD32(FMUL32(FMUL32(1073741824, v26), v30), v8);
  v39 := FADD32(FMUL32(FMUL32(1073741824, v27), v31), v9);
  v40 := FADD32(FMUL32(FMUL32(1073741824, v28), v32), v10);
  v41 := FADD32(FMUL32(FSUB32(-2147483648, v37), v37), FADD32(FMUL32(v33, v33), v3));
  v42 := FADD32(FMUL32(FSUB32(-2147483648, v38), v38), FADD32(FMUL32(v34, v34), v4));
  v43 := FADD32(FMUL32(FSUB32(-2147483648, v39), v39), FADD32(FMUL32(v35, v35), v5));
  v44 := FADD32(FMUL32(FSUB32(-2147483648, v40), v40), FADD32(FMUL32(v36, v36), v6));
  v45 := FADD32(FMUL32(FMUL32(1073741824, v33), v37), v7);
  v46 := FADD32(FMUL32(FMUL32(1073741824, v34), v38), v8);
  v47 := FADD32(FMUL32(FMUL32(1073741824, v35), v39), v9);
  v48 := FADD32(FMUL32(FMUL32(1073741824, v36), v40), v10);
  v49 := FADD32(FMUL32(FSUB32(-2147483648, v45), v45), FADD32(FMUL32(v41, v41), v3));
  v50 := FADD32(FMUL32(FSUB32(-2147483648, v46), v46), FADD32(FMUL32(v42, v42), v4));
  v51 := FADD32(FMUL32(FSUB32(-2147483648, v47), v47), FADD32(FMUL32(v43, v43), v5));
  v52 := FADD32(FMUL32(FSUB32(-2147483648, v48), v48), FADD32(FMUL32(v44, v44), v6));
  v53 := FADD32(FMUL32(FMUL32(1073741824, v41), v45), v7);
  v54 := FADD32(FMUL32(FMUL32(1073741824, v42), v46), v8);
  v55 := FADD32(FMUL32(FMUL32(1073741824, v43), v47), v9);
  v56 := FADD32(FMUL32(FMUL32(1073741824, v44), v48), v10);
  v57 := FADD32(FMUL32(FSUB32(-2147483648, v53), v53), FADD32(FMUL32(v49, v49), v3));
  v58 := FADD32(FMUL32(FSUB32(-2147483648, v54), v54), FADD32(FMUL32(v50, v50), v4));
  v59 := FADD32(FMUL32(FSUB32(-2147483648, v55), v55), FADD32(FMUL32(v51, v51), v5));
  v60 := FADD32(FMUL32(FSUB32(-2147483648, v56), v56), FADD32(FMUL32(v52, v52), v6));
  v61 := FADD32(FMUL32(FMUL32(1073741824, v49), v53), v7);
  v62 := FADD32(FMUL32(FMUL32(1073741824, v50), v54), v8);
  v63 := FADD32(FMUL32(FMUL32(1073741824, v51), v55), v9);
  v64 := FADD32(FMUL32(FMUL32(1073741824, v52), v56), v10);
  v65 := FADD32(FMUL32(FSUB32(-2147483648, v61), v61), FADD32(FMUL32(v57, v57), v3));
  v66 := FADD32(FMUL32(FSUB32(-2147483648, v62), v62), FADD32(FMUL32(v58, v58), v4));
  v67 := FADD32(FMUL32(FSUB32(-2147483648, v63), v63), FADD32(FMUL32(v59, v59), v5));
  v68 := FADD32(FMUL32(FSUB32(-2147483648, v64), v64), FADD32(FMUL32(v60, v60), v6));
  v69 := FADD32(FMUL32(FMUL32(1073741824, v57), v61), v7);
  v70 := FADD32(FMUL32(FMUL32(1073741824, v58), v62), v8);
  v71 := FADD32(FMUL32(FMUL32(1073741824, v59), v63), v9);
  v72 := FADD32(FMUL32(FMUL32(1073741824, v60), v64), v10);
  v73 := FADD32(FMUL32(FSUB32(-2147483648, v69), v69), FADD32(FMUL32(v65, v65), v3));
  v74 := FADD32(FMUL32(FSUB32(-2147483648, v70), v70), FADD32(FMUL32(v66, v66), v4));
  v75 := FADD32(FMUL32(FSUB32(-2147483648, v71), v71), FADD32(FMUL32(v67, v67), v5));
  v76 := FADD32(FMUL32(FSUB32(-2147483648, v72), v72), FADD32(FMUL32(v68, v68), v6));
  v77 := FADD32(FMUL32(FMUL32(1073741824, v65), v69), v7);
  v78 := FADD32(FMUL32(FMUL32(1073741824, v66), v70), v8);
  v79 := FADD32(FMUL32(FMUL32(1073741824, v67), v71), v9);
  v80 := FADD32(FMUL32(FMUL32(1073741824, v68), v72), v10);
  v81 := FADD32(FMUL32(FSUB32(-2147483648, v77), v77), FADD32(FMUL32(v73, v73), v3));
  v82 := FADD32(FMUL32(FSUB32(-2147483648, v78), v78), FADD32(FMUL32(v74, v74), v4));
  v83 := FADD32(FMUL32(FSUB32(-2147483648, v79), v79), FADD32(FMUL32(v75, v75), v5));
  v84 := FADD32(FMUL32(FSUB32(-2147483648, v80), v80), FADD32(FMUL32(v76, v76), v6));
  v85 := FADD32(FMUL32(FMUL32(1073741824, v73), v77), v7);
  v86 := FADD32(FMUL32(FMUL32(1073741824, v74), v78), v8);
  v87 := FADD32(FMUL32(FMUL32(1073741824, v75), v79), v9);
  v88 := FADD32(FMUL32(FMUL32(1073741824, v76), v80), v10);
  v89 := FADD32(FMUL32(FSUB32(-2147483648, v85), v85), FADD32(FMUL32(v81, v81), v3));
  v90 := FADD32(FMUL32(FSUB32(-2147483648, v86), v86), FADD32(FMUL32(v82, v82), v4));
  v91 := FADD32(FMUL32(FSUB32(-2147483648, v87), v87), FADD32(FMUL32(v83, v83), v5));
  v92 := FADD32(FMUL32(FSUB32(-2147483648, v88), v88), FADD32(FMUL32(v84, v84), v6));
  v93 := FADD32(FMUL32(FMUL32(1073741824, v81), v85), v7);
  v94 := FADD32(FMUL32(FMUL32(1073741824, v82), v86), v8);
  v95 := FADD32(FMUL32(FMUL32(1073741824, v83), v87), v9);
  v96 := FADD32(FMUL32(FMUL32(1073741824, v84), v88), v10);
  v97 := FADD32(FMUL32(FSUB32(-2147483648, v93), v93), FADD32(FMUL32(v89, v89), v3));
  v98 := FADD32(FMUL32(FSUB32(-2147483648, v94), v94), FADD32(FMUL32(v90, v90), v4));
  v99 := FADD32(FMUL32(FSUB32(-2147483648, v95), v95), FADD32(FMUL32(v91, v91), v5));
  v100 := FADD32(FMUL32(FSUB32(-2147483648, v96), v96), FADD32(FMUL32(v92, v92), v6));
  v101 := FADD32(FMUL32(FMUL32(1073741824, v89), v93), v7);
  v102 := FADD32(FMUL32(FMUL32(1073741824, v90), v94), v8);
  v103 := FADD32(FMUL32(FMUL32(1073741824, v91), v95), v9);
  v104 := FADD32(FMUL32(FMUL32(1073741824, v92), v96), v10);
  v105 := FADD32(FMUL32(FSUB32(-2147483648, v101), v101), FADD32(FMUL32(v97, v97), v3));
  v106 := FADD32(FMUL32(FSUB32(-2147483648, v102), v102), FADD32(FMUL32(v98, v98), v4));
  v107 := FADD32(FMUL32(FSUB32(-2147483648, v103), v103), FADD32(FMUL32(v99, v99), v5));
  v108 := FADD32(FMUL32(FSUB32(-2147483648, v104), v104), FADD32(FMUL32(v100, v100), v6));
  v109 := FADD32(FMUL32(FMUL32(1073741824, v97), v101), v7);
  v110 := FADD32(FMUL32(FMUL32(1073741824, v98), v102), v8);
  v111 := FADD32(FMUL32(FMUL32(1073741824, v99), v103), v9);
  v112 := FADD32(FMUL32(FMUL32(1073741824, v100), v104), v10);
  v113 := FADD32(FMUL32(FSUB32(-2147483648, v109), v109), FADD32(FMUL32(v105, v105), v3));
  v114 := FADD32(FMUL32(FSUB32(-2147483648, v110), v110), FADD32(FMUL32(v106, v106), v4));
  v115 := FADD32(FMUL32(FSUB32(-2147483648, v111), v111), FADD32(FMUL32(v107, v107), v5));
  v116 := FADD32(FMUL32(FSUB32(-2147483648, v112), v112), FADD32(FMUL32(v108, v108), v6));
  v117 := FADD32(FMUL32(FMUL32(1073741824, v105), v109), v7);
  v118 := FADD32(FMUL32(FMUL32(1073741824, v106), v110), v8);
  v119 := FADD32(FMUL32(FMUL32(1073741824, v107), v111), v9);
  v120 := FADD32(FMUL32(FMUL32(1073741824, v108), v112), v10);
  v121 := FADD32(FMUL32(FSUB32(-2147483648, v117), v117), FADD32(FMUL32(v113, v113), v3));
  v122 := FADD32(FMUL32(FSUB32(-2147483648, v118), v118), FADD32(FMUL32(v114, v114), v4));
  v123 := FADD32(FMUL32(FSUB32(-2147483648, v119), v119), FADD32(FMUL32(v115, v115), v5));
  v124 := FADD32(FMUL32(FSUB32(-2147483648, v120), v120), FADD32(FMUL32(v116, v116), v6));
  v125 := FADD32(FMUL32(FMUL32(1073741824, v113), v117), v7);
  v126 := FADD32(FMUL32(FMUL32(1073741824, v114), v118), v8);
  v127 := FADD32(FMUL32(FMUL32(1073741824, v115), v119), v9);
  v128 := FADD32(FMUL32(FMUL32(1073741824, v116), v120), v10);
  v129 := FADD32(FMUL32(FSUB32(-2147483648, v125), v125), FADD32(FMUL32(v121, v121), v3));
  v130 := FADD32(FMUL32(FSUB32(-2147483648, v126), v126), FADD32(FMUL32(v122, v122), v4));
  v131 := FADD32(FMUL32(FSUB32(-2147483648, v127), v127), FADD32(FMUL32(v123, v123), v5));
  v132 := FADD32(FMUL32(FSUB32(-2147483648, v128), v128), FADD32(FMUL32(v124, v124), v6));
  v133 := FADD32(FMUL32(FMUL32(1073741824, v121), v125), v7);
  v134 := FADD32(FMUL32(FMUL32(1073741824, v122), v126), v8);
  v135 := FADD32(FMUL32(FMUL32(1073741824, v123), v127), v9);
  v136 := FADD32(FMUL32(FMUL32(1073741824, v124), v128), v10);
  v137 := FADD32(FMUL32(FSUB32(-2147483648, v133), v133), FADD32(FMUL32(v129, v129), v3));
  v138 := FADD32(FMUL32(FSUB32(-2147483648, v134), v134), FADD32(FMUL32(v130, v130), v4));
  v139 := FADD32(FMUL32(FSUB32(-2147483648, v135), v135), FADD32(FMUL32(v131, v131), v5));
  v140 := FADD32(FMUL32(FSUB32(-2147483648, v136), v136), FADD32(FMUL32(v132, v132), v6));
  v141 := FADD32(FMUL32(FMUL32(1073741824, v129), v133), v7);
  v142 := FADD32(FMUL32(FMUL32(1073741824, v130), v134), v8);
  v143 := FADD32(FMUL32(FMUL32(1073741824, v131), v135), v9);
  v144 := FADD32(FMUL32(FMUL32(1073741824, v132), v136), v10);
  v145 := FADD32(FMUL32(v137, v137), FMUL32(v141, v141));
  v146 := BV1_ZEXT32((if FEQ32(v145, 1082130432) || FLT32(v145, 1082130432) then 1 else 0));
  v147 := FADD32(FMUL32(v138, v138), FMUL32(v142, v142));
  v148 := BV1_ZEXT32((if FEQ32(v147, 1082130432) || FLT32(v147, 1082130432) then 1 else 0));
  v149 := FADD32(FMUL32(v139, v139), FMUL32(v143, v143));
  v150 := BV1_ZEXT32((if FEQ32(v149, 1082130432) || FLT32(v149, 1082130432) then 1 else 0));
  v151 := FADD32(FMUL32(v140, v140), FMUL32(v144, v144));
  v152 := BV1_ZEXT32((if FEQ32(v151, 1082130432) || FLT32(v151, 1082130432) then 1 else 0));
  v153 := v146 != 0;
  goto $truebb1, $falsebb1;
$5:
  assert {:block_sourceloc} {:sourceloc_num 5} true;
  $1 := v137;
  goto $7;
$6:
  assert {:block_sourceloc} {:sourceloc_num 6} true;
  $1 := BV_EXTRACT($savx.0, 32, 0);
  goto $7;
$7:
  assert {:block_sourceloc} {:sourceloc_num 7} true;
  v154 := v148 != 0;
  goto $truebb2, $falsebb2;
$8:
  assert {:block_sourceloc} {:sourceloc_num 8} true;
  $2 := v138;
  goto $10;
$9:
  assert {:block_sourceloc} {:sourceloc_num 9} true;
  $2 := BV_EXTRACT($savx.0, 64, 32);
  goto $10;
$10:
  assert {:block_sourceloc} {:sourceloc_num 10} true;
  v155 := v150 != 0;
  goto $truebb3, $falsebb3;
$11:
  assert {:block_sourceloc} {:sourceloc_num 11} true;
  $3 := v139;
  goto $13;
$12:
  assert {:block_sourceloc} {:sourceloc_num 12} true;
  $3 := BV_EXTRACT($savx.0, 96, 64);
  goto $13;
$13:
  assert {:block_sourceloc} {:sourceloc_num 13} true;
  v156 := v152 != 0;
  goto $truebb4, $falsebb4;
$14:
  assert {:block_sourceloc} {:sourceloc_num 14} true;
  $4 := v140;
  goto $16;
$15:
  assert {:block_sourceloc} {:sourceloc_num 15} true;
  $4 := BV_EXTRACT($savx.0, 128, 96);
  goto $16;
$16:
  assert {:block_sourceloc} {:sourceloc_num 16} true;
  v157 := v146 != 0;
  goto $truebb5, $falsebb5;
$17:
  assert {:block_sourceloc} {:sourceloc_num 17} true;
  $5 := v141;
  goto $19;
$18:
  assert {:block_sourceloc} {:sourceloc_num 18} true;
  $5 := BV_EXTRACT($savy.0, 32, 0);
  goto $19;
$19:
  assert {:block_sourceloc} {:sourceloc_num 19} true;
  v158 := v148 != 0;
  goto $truebb6, $falsebb6;
$20:
  assert {:block_sourceloc} {:sourceloc_num 20} true;
  $6 := v142;
  goto $22;
$21:
  assert {:block_sourceloc} {:sourceloc_num 21} true;
  $6 := BV_EXTRACT($savy.0, 64, 32);
  goto $22;
$22:
  assert {:block_sourceloc} {:sourceloc_num 22} true;
  v159 := v150 != 0;
  goto $truebb7, $falsebb7;
$23:
  assert {:block_sourceloc} {:sourceloc_num 23} true;
  $7 := v143;
  goto $25;
$24:
  assert {:block_sourceloc} {:sourceloc_num 24} true;
  $7 := BV_EXTRACT($savy.0, 96, 64);
  goto $25;
$25:
  assert {:block_sourceloc} {:sourceloc_num 25} true;
  v160 := v152 != 0;
  goto $truebb8, $falsebb8;
$26:
  assert {:block_sourceloc} {:sourceloc_num 26} true;
  $8 := v144;
  goto $28;
$27:
  assert {:block_sourceloc} {:sourceloc_num 27} true;
  $8 := BV_EXTRACT($savy.0, 128, 96);
  goto $28;
$28:
  assert {:block_sourceloc} {:sourceloc_num 28} true;
  goto $29;
$29:
  assert {:block_sourceloc} {:sourceloc_num 29} true;
  $iter.0, $stay.0, $ccount.0, $savx.0, $savy.0 := BV32_ADD($iter.0, 16), BV_CONCAT(BV_CONCAT(BV_CONCAT(v152, v150), v148), v146), BV_CONCAT(BV_CONCAT(BV_CONCAT(BV32_ADD(BV_EXTRACT($ccount.0, 128, 96), BV32_MUL(v152, 16)), BV32_ADD(BV_EXTRACT($ccount.0, 96, 64), BV32_MUL(v150, 16))), BV32_ADD(BV_EXTRACT($ccount.0, 64, 32), BV32_MUL(v148, 16))), BV32_ADD(BV_EXTRACT($ccount.0, 32, 0), BV32_MUL(v146, 16))), BV_CONCAT(BV_CONCAT(BV_CONCAT($4, $3), $2), $1), BV_CONCAT(BV_CONCAT(BV_CONCAT($8, $7), $6), $5);
  goto $1;
$30:
  assert {:block_sourceloc} {:sourceloc_num 30} true;
  v161 := BV32_AND(BV32_AND(BV32_AND(BV_EXTRACT($stay.0, 32, 0), BV_EXTRACT($stay.0, 64, 32)), BV_EXTRACT($stay.0, 96, 64)), BV_EXTRACT($stay.0, 128, 96)) != 0;
  goto $truebb9, $falsebb9;
$31:
  assert {:block_sourceloc} {:sourceloc_num 31} true;
  $iter.1, $stay.1, $ccount.1, $savx.1, $savy.1 := 16, $stay.0, $ccount.0, $savx.0, $savy.0;
  goto $32;
$32:
  assert {:block_sourceloc} {:sourceloc_num 32} true;
  v162 := FADD32(FMUL32(BV_EXTRACT($savx.1, 32, 0), BV_EXTRACT($savx.1, 32, 0)), FMUL32(BV_EXTRACT($savy.1, 32, 0), BV_EXTRACT($savy.1, 32, 0)));
  v163 := FEQ32(v162, 1082130432) || FLT32(v162, 1082130432);
  goto $truebb10, $falsebb10;
$33:
  assert {:block_sourceloc} {:sourceloc_num 33} true;
  $9 := (if BV32_ULT(BV_EXTRACT($ccount.1, 32, 0), $maxIterations) then 1 else 0);
  goto $34;
$34:
  assert {:block_sourceloc} {:sourceloc_num 34} true;
  v164 := BV1_ZEXT32($9);
  v165 := FADD32(FMUL32(BV_EXTRACT($savx.1, 64, 32), BV_EXTRACT($savx.1, 64, 32)), FMUL32(BV_EXTRACT($savy.1, 64, 32), BV_EXTRACT($savy.1, 64, 32)));
  v166 := FEQ32(v165, 1082130432) || FLT32(v165, 1082130432);
  goto $truebb11, $falsebb11;
$35:
  assert {:block_sourceloc} {:sourceloc_num 35} true;
  $10 := (if BV32_ULT(BV_EXTRACT($ccount.1, 64, 32), $maxIterations) then 1 else 0);
  goto $36;
$36:
  assert {:block_sourceloc} {:sourceloc_num 36} true;
  v167 := BV1_ZEXT32($10);
  v168 := FADD32(FMUL32(BV_EXTRACT($savx.1, 96, 64), BV_EXTRACT($savx.1, 96, 64)), FMUL32(BV_EXTRACT($savy.1, 96, 64), BV_EXTRACT($savy.1, 96, 64)));
  v169 := FEQ32(v168, 1082130432) || FLT32(v168, 1082130432);
  goto $truebb12, $falsebb12;
$37:
  assert {:block_sourceloc} {:sourceloc_num 37} true;
  $11 := (if BV32_ULT(BV_EXTRACT($ccount.1, 96, 64), $maxIterations) then 1 else 0);
  goto $38;
$38:
  assert {:block_sourceloc} {:sourceloc_num 38} true;
  v170 := BV1_ZEXT32($11);
  v171 := FADD32(FMUL32(BV_EXTRACT($savx.1, 128, 96), BV_EXTRACT($savx.1, 128, 96)), FMUL32(BV_EXTRACT($savy.1, 128, 96), BV_EXTRACT($savy.1, 128, 96)));
  v172 := FEQ32(v171, 1082130432) || FLT32(v171, 1082130432);
  goto $truebb13, $falsebb13;
$39:
  assert {:block_sourceloc} {:sourceloc_num 39} true;
  $12 := (if BV32_ULT(BV_EXTRACT($ccount.1, 128, 96), $maxIterations) then 1 else 0);
  goto $40;
$40:
  assert {:block_sourceloc} {:sourceloc_num 40} true;
  v173 := BV1_ZEXT32($12);
  v174 := BV_CONCAT(BV_CONCAT(BV_CONCAT(BV32_ADD(BV_EXTRACT($ccount.1, 128, 96), v173), BV32_ADD(BV_EXTRACT($ccount.1, 96, 64), v170)), BV32_ADD(BV_EXTRACT($ccount.1, 64, 32), v167)), BV32_ADD(BV_EXTRACT($ccount.1, 32, 0), v164));
  v175 := BV32_ADD($iter.1, -1);
  v176 := v164 != 0;
  goto $truebb14, $falsebb14;
$41:
  assert {:block_sourceloc} {:sourceloc_num 41} true;
  $13 := FADD32(FMUL32(FSUB32(-2147483648, BV_EXTRACT($savy.1, 32, 0)), BV_EXTRACT($savy.1, 32, 0)), FADD32(FMUL32(BV_EXTRACT($savx.1, 32, 0), BV_EXTRACT($savx.1, 32, 0)), v3));
  goto $43;
$42:
  assert {:block_sourceloc} {:sourceloc_num 42} true;
  $13 := BV_EXTRACT($savx.1, 32, 0);
  goto $43;
$43:
  assert {:block_sourceloc} {:sourceloc_num 43} true;
  v177 := v167 != 0;
  goto $truebb15, $falsebb15;
$44:
  assert {:block_sourceloc} {:sourceloc_num 44} true;
  $14 := FADD32(FMUL32(FSUB32(-2147483648, BV_EXTRACT($savy.1, 64, 32)), BV_EXTRACT($savy.1, 64, 32)), FADD32(FMUL32(BV_EXTRACT($savx.1, 64, 32), BV_EXTRACT($savx.1, 64, 32)), v4));
  goto $46;
$45:
  assert {:block_sourceloc} {:sourceloc_num 45} true;
  $14 := BV_EXTRACT($savx.1, 64, 32);
  goto $46;
$46:
  assert {:block_sourceloc} {:sourceloc_num 46} true;
  v178 := v170 != 0;
  goto $truebb16, $falsebb16;
$47:
  assert {:block_sourceloc} {:sourceloc_num 47} true;
  $15 := FADD32(FMUL32(FSUB32(-2147483648, BV_EXTRACT($savy.1, 96, 64)), BV_EXTRACT($savy.1, 96, 64)), FADD32(FMUL32(BV_EXTRACT($savx.1, 96, 64), BV_EXTRACT($savx.1, 96, 64)), v5));
  goto $49;
$48:
  assert {:block_sourceloc} {:sourceloc_num 48} true;
  $15 := BV_EXTRACT($savx.1, 96, 64);
  goto $49;
$49:
  assert {:block_sourceloc} {:sourceloc_num 49} true;
  v179 := v173 != 0;
  goto $truebb17, $falsebb17;
$50:
  assert {:block_sourceloc} {:sourceloc_num 50} true;
  $16 := FADD32(FMUL32(FSUB32(-2147483648, BV_EXTRACT($savy.1, 128, 96)), BV_EXTRACT($savy.1, 128, 96)), FADD32(FMUL32(BV_EXTRACT($savx.1, 128, 96), BV_EXTRACT($savx.1, 128, 96)), v6));
  goto $52;
$51:
  assert {:block_sourceloc} {:sourceloc_num 51} true;
  $16 := BV_EXTRACT($savx.1, 128, 96);
  goto $52;
$52:
  assert {:block_sourceloc} {:sourceloc_num 52} true;
  v180 := BV_CONCAT(BV_CONCAT(BV_CONCAT($16, $15), $14), $13);
  v181 := v164 != 0;
  goto $truebb18, $falsebb18;
$53:
  assert {:block_sourceloc} {:sourceloc_num 53} true;
  $17 := FADD32(FMUL32(FMUL32(1073741824, BV_EXTRACT($savx.1, 32, 0)), BV_EXTRACT($savy.1, 32, 0)), v7);
  goto $55;
$54:
  assert {:block_sourceloc} {:sourceloc_num 54} true;
  $17 := BV_EXTRACT($savy.1, 32, 0);
  goto $55;
$55:
  assert {:block_sourceloc} {:sourceloc_num 55} true;
  v182 := v167 != 0;
  goto $truebb19, $falsebb19;
$56:
  assert {:block_sourceloc} {:sourceloc_num 56} true;
  $18 := FADD32(FMUL32(FMUL32(1073741824, BV_EXTRACT($savx.1, 64, 32)), BV_EXTRACT($savy.1, 64, 32)), v8);
  goto $58;
$57:
  assert {:block_sourceloc} {:sourceloc_num 57} true;
  $18 := BV_EXTRACT($savy.1, 64, 32);
  goto $58;
$58:
  assert {:block_sourceloc} {:sourceloc_num 58} true;
  v183 := v170 != 0;
  goto $truebb20, $falsebb20;
$59:
  assert {:block_sourceloc} {:sourceloc_num 59} true;
  $19 := FADD32(FMUL32(FMUL32(1073741824, BV_EXTRACT($savx.1, 96, 64)), BV_EXTRACT($savy.1, 96, 64)), v9);
  goto $61;
$60:
  assert {:block_sourceloc} {:sourceloc_num 60} true;
  $19 := BV_EXTRACT($savy.1, 96, 64);
  goto $61;
$61:
  assert {:block_sourceloc} {:sourceloc_num 61} true;
  v184 := v173 != 0;
  goto $truebb21, $falsebb21;
$62:
  assert {:block_sourceloc} {:sourceloc_num 62} true;
  $20 := FADD32(FMUL32(FMUL32(1073741824, BV_EXTRACT($savx.1, 128, 96)), BV_EXTRACT($savy.1, 128, 96)), v10);
  goto $64;
$63:
  assert {:block_sourceloc} {:sourceloc_num 63} true;
  $20 := BV_EXTRACT($savy.1, 128, 96);
  goto $64;
$64:
  assert {:block_sourceloc} {:sourceloc_num 64} true;
  v185 := BV_CONCAT(BV_CONCAT(BV_CONCAT($20, $19), $18), $17);
  goto $65;
$65:
  assert {:block_sourceloc} {:sourceloc_num 65} true;
  v186 := BV32_OR(BV32_OR(BV32_OR(v164, v167), v170), v173) != 0;
  goto $truebb22, $falsebb22;
$66:
  assert {:block_sourceloc} {:sourceloc_num 66} true;
  $21 := (if v175 != 0 then 1 else 0);
  goto $67;
$67:
  assert {:block_sourceloc} {:sourceloc_num 67} true;
  v187 := $21 == 1;
  goto $truebb23, $falsebb23;
$68:
  assert {:block_sourceloc} {:sourceloc_num 68} true;
  $ccount.2, $savx.2, $savy.2 := v174, v180, v185;
  goto $69;
$69:
  assert {:block_sourceloc} {:sourceloc_num 69} true;
  v188 := FDIV32(FMUL32(FMUL32(FSUB32(FADD32(SI32_TO_FP32(BV_EXTRACT($ccount.2, 32, 0)), 1065353216), FLOG32(FLOG32(FADD32(FMUL32(BV_EXTRACT($savx.2, 32, 0), BV_EXTRACT($savx.2, 32, 0)), FMUL32(BV_EXTRACT($savy.2, 32, 0), BV_EXTRACT($savy.2, 32, 0)))))), 1073741824), 1078530041), 1132462080);
  assert {:sourceloc} {:sourceloc_num 70} true;
  v189 := $$color[0];
  assert {:sourceloc} {:sourceloc_num 71} true;
  v190 := $$color[1];
  assert {:sourceloc} {:sourceloc_num 72} true;
  v191 := $$color[2];
  assert {:sourceloc} {:sourceloc_num 73} true;
  v192 := $$color[3];
  assert {:sourceloc} {:sourceloc_num 74} true;
  $$color[0] := FP32_TO_UI8(FMUL32(FMUL32(FADD32(1065353216, FCOS32(v188)), 1056964608), 1132396544));
  assert {:sourceloc} {:sourceloc_num 75} true;
  $$color[1] := v190;
  assert {:sourceloc} {:sourceloc_num 76} true;
  $$color[2] := v191;
  assert {:sourceloc} {:sourceloc_num 77} true;
  $$color[3] := v192;
  assert {:sourceloc} {:sourceloc_num 78} true;
  v193 := $$color[0];
  assert {:sourceloc} {:sourceloc_num 79} true;
  v194 := $$color[1];
  assert {:sourceloc} {:sourceloc_num 80} true;
  v195 := $$color[2];
  assert {:sourceloc} {:sourceloc_num 81} true;
  v196 := $$color[3];
  assert {:sourceloc} {:sourceloc_num 82} true;
  $$color[0] := v193;
  assert {:sourceloc} {:sourceloc_num 83} true;
  $$color[1] := FP32_TO_UI8(FMUL32(FMUL32(FADD32(1065353216, FCOS32(FADD32(FMUL32(1073741824, v188), 1074137766))), 1056964608), 1132396544));
  assert {:sourceloc} {:sourceloc_num 84} true;
  $$color[2] := v195;
  assert {:sourceloc} {:sourceloc_num 85} true;
  $$color[3] := v196;
  assert {:sourceloc} {:sourceloc_num 86} true;
  v197 := $$color[0];
  assert {:sourceloc} {:sourceloc_num 87} true;
  v198 := $$color[1];
  assert {:sourceloc} {:sourceloc_num 88} true;
  v199 := $$color[2];
  assert {:sourceloc} {:sourceloc_num 89} true;
  v200 := $$color[3];
  assert {:sourceloc} {:sourceloc_num 90} true;
  $$color[0] := v197;
  assert {:sourceloc} {:sourceloc_num 91} true;
  $$color[1] := v198;
  assert {:sourceloc} {:sourceloc_num 92} true;
  $$color[2] := FP32_TO_UI8(FMUL32(FMUL32(FADD32(1065353216, FCOS32(FSUB32(v188, 1074137766))), 1056964608), 1132396544));
  assert {:sourceloc} {:sourceloc_num 93} true;
  $$color[3] := v200;
  assert {:sourceloc} {:sourceloc_num 94} true;
  v201 := $$color[0];
  assert {:sourceloc} {:sourceloc_num 95} true;
  v202 := $$color[1];
  assert {:sourceloc} {:sourceloc_num 96} true;
  v203 := $$color[2];
  assert {:sourceloc} {:sourceloc_num 97} true;
  v204 := $$color[3];
  assert {:sourceloc} {:sourceloc_num 98} true;
  $$color[0] := v201;
  assert {:sourceloc} {:sourceloc_num 99} true;
  $$color[1] := v202;
  assert {:sourceloc} {:sourceloc_num 100} true;
  $$color[2] := v203;
  assert {:sourceloc} {:sourceloc_num 101} true;
  $$color[3] := -1;
  v205 := BV_EXTRACT($ccount.2, 32, 0) == $maxIterations;
  goto $truebb24, $falsebb24;
$70:
  assert {:block_sourceloc} {:sourceloc_num 102} true;
  assert {:sourceloc} {:sourceloc_num 103} true;
  v206 := $$color[0];
  assert {:sourceloc} {:sourceloc_num 104} true;
  v207 := $$color[1];
  assert {:sourceloc} {:sourceloc_num 105} true;
  v208 := $$color[2];
  assert {:sourceloc} {:sourceloc_num 106} true;
  v209 := $$color[3];
  assert {:sourceloc} {:sourceloc_num 107} true;
  $$color[0] := 0;
  assert {:sourceloc} {:sourceloc_num 108} true;
  $$color[1] := v207;
  assert {:sourceloc} {:sourceloc_num 109} true;
  $$color[2] := v208;
  assert {:sourceloc} {:sourceloc_num 110} true;
  $$color[3] := v209;
  assert {:sourceloc} {:sourceloc_num 111} true;
  v210 := $$color[0];
  assert {:sourceloc} {:sourceloc_num 112} true;
  v211 := $$color[1];
  assert {:sourceloc} {:sourceloc_num 113} true;
  v212 := $$color[2];
  assert {:sourceloc} {:sourceloc_num 114} true;
  v213 := $$color[3];
  assert {:sourceloc} {:sourceloc_num 115} true;
  $$color[0] := v210;
  assert {:sourceloc} {:sourceloc_num 116} true;
  $$color[1] := 0;
  assert {:sourceloc} {:sourceloc_num 117} true;
  $$color[2] := v212;
  assert {:sourceloc} {:sourceloc_num 118} true;
  $$color[3] := v213;
  assert {:sourceloc} {:sourceloc_num 119} true;
  v214 := $$color[0];
  assert {:sourceloc} {:sourceloc_num 120} true;
  v215 := $$color[1];
  assert {:sourceloc} {:sourceloc_num 121} true;
  v216 := $$color[2];
  assert {:sourceloc} {:sourceloc_num 122} true;
  v217 := $$color[3];
  assert {:sourceloc} {:sourceloc_num 123} true;
  $$color[0] := v214;
  assert {:sourceloc} {:sourceloc_num 124} true;
  $$color[1] := v215;
  assert {:sourceloc} {:sourceloc_num 125} true;
  $$color[2] := 0;
  assert {:sourceloc} {:sourceloc_num 126} true;
  $$color[3] := v217;
  goto $71;
$71:
  assert {:block_sourceloc} {:sourceloc_num 127} true;
  v218 := $bench != 0;
  goto $truebb25, $falsebb25;
$72:
  assert {:block_sourceloc} {:sourceloc_num 128} true;
  assert {:sourceloc} {:sourceloc_num 129} true;
  v219 := $$color[0];
  assert {:sourceloc} {:sourceloc_num 130} true;
  v220 := $$color[1];
  assert {:sourceloc} {:sourceloc_num 131} true;
  v221 := $$color[2];
  assert {:sourceloc} {:sourceloc_num 132} true;
  v222 := $$color[3];
  assert {:sourceloc} {:sourceloc_num 133} true;
  $$color[0] := BV_EXTRACT(BV32_AND(BV_EXTRACT($ccount.2, 32, 0), 255), 8, 0);
  assert {:sourceloc} {:sourceloc_num 134} true;
  $$color[1] := v220;
  assert {:sourceloc} {:sourceloc_num 135} true;
  $$color[2] := v221;
  assert {:sourceloc} {:sourceloc_num 136} true;
  $$color[3] := v222;
  assert {:sourceloc} {:sourceloc_num 137} true;
  v223 := $$color[0];
  assert {:sourceloc} {:sourceloc_num 138} true;
  v224 := $$color[1];
  assert {:sourceloc} {:sourceloc_num 139} true;
  v225 := $$color[2];
  assert {:sourceloc} {:sourceloc_num 140} true;
  v226 := $$color[3];
  assert {:sourceloc} {:sourceloc_num 141} true;
  $$color[0] := v223;
  assert {:sourceloc} {:sourceloc_num 142} true;
  $$color[1] := BV_EXTRACT(BV32_ASHR(BV32_AND(BV_EXTRACT($ccount.2, 32, 0), 65280), 8), 8, 0);
  assert {:sourceloc} {:sourceloc_num 143} true;
  $$color[2] := v225;
  assert {:sourceloc} {:sourceloc_num 144} true;
  $$color[3] := v226;
  assert {:sourceloc} {:sourceloc_num 145} true;
  v227 := $$color[0];
  assert {:sourceloc} {:sourceloc_num 146} true;
  v228 := $$color[1];
  assert {:sourceloc} {:sourceloc_num 147} true;
  v229 := $$color[2];
  assert {:sourceloc} {:sourceloc_num 148} true;
  v230 := $$color[3];
  assert {:sourceloc} {:sourceloc_num 149} true;
  $$color[0] := v227;
  assert {:sourceloc} {:sourceloc_num 150} true;
  $$color[1] := v228;
  assert {:sourceloc} {:sourceloc_num 151} true;
  $$color[2] := BV_EXTRACT(BV32_ASHR(BV32_AND(BV_EXTRACT($ccount.2, 32, 0), 16711680), 16), 8, 0);
  assert {:sourceloc} {:sourceloc_num 152} true;
  $$color[3] := v230;
  assert {:sourceloc} {:sourceloc_num 153} true;
  v231 := $$color[0];
  assert {:sourceloc} {:sourceloc_num 154} true;
  v232 := $$color[1];
  assert {:sourceloc} {:sourceloc_num 155} true;
  v233 := $$color[2];
  assert {:sourceloc} {:sourceloc_num 156} true;
  v234 := $$color[3];
  assert {:sourceloc} {:sourceloc_num 157} true;
  $$color[0] := v231;
  assert {:sourceloc} {:sourceloc_num 158} true;
  $$color[1] := v232;
  assert {:sourceloc} {:sourceloc_num 159} true;
  $$color[2] := v233;
  assert {:sourceloc} {:sourceloc_num 160} true;
  $$color[3] := BV_EXTRACT(BV32_LSHR(BV32_AND(BV_EXTRACT($ccount.2, 32, 0), -16777216), 24), 8, 0);
  goto $73;
$73:
  assert {:block_sourceloc} {:sourceloc_num 161} true;
  assert {:sourceloc} {:sourceloc_num 162} true;
  v235 := $$color[0];
  assert {:sourceloc} {:sourceloc_num 163} true;
  v236 := $$color[1];
  assert {:sourceloc} {:sourceloc_num 164} true;
  v237 := $$color[2];
  assert {:sourceloc} {:sourceloc_num 165} true;
  v238 := $$color[3];
  assert {:sourceloc} {:sourceloc_num 166} true;
  $$mandelbrotImage[BV32_MUL(BV32_MUL(4, v0), 4)] := v235;
  assert {:sourceloc} {:sourceloc_num 167} true;
  $$mandelbrotImage[BV32_ADD(BV32_MUL(BV32_MUL(4, v0), 4), 1)] := v236;
  assert {:sourceloc} {:sourceloc_num 168} true;
  $$mandelbrotImage[BV32_ADD(BV32_MUL(BV32_MUL(4, v0), 4), 2)] := v237;
  assert {:sourceloc} {:sourceloc_num 169} true;
  $$mandelbrotImage[BV32_ADD(BV32_MUL(BV32_MUL(4, v0), 4), 3)] := v238;
  v239 := FDIV32(FMUL32(FMUL32(FSUB32(FADD32(SI32_TO_FP32(BV_EXTRACT($ccount.2, 64, 32)), 1065353216), FLOG32(FLOG32(FADD32(FMUL32(BV_EXTRACT($savx.2, 64, 32), BV_EXTRACT($savx.2, 64, 32)), FMUL32(BV_EXTRACT($savy.2, 64, 32), BV_EXTRACT($savy.2, 64, 32)))))), 1073741824), 1078530041), 1132462080);
  assert {:sourceloc} {:sourceloc_num 170} true;
  v240 := $$color[4];
  assert {:sourceloc} {:sourceloc_num 171} true;
  v241 := $$color[5];
  assert {:sourceloc} {:sourceloc_num 172} true;
  v242 := $$color[6];
  assert {:sourceloc} {:sourceloc_num 173} true;
  v243 := $$color[7];
  assert {:sourceloc} {:sourceloc_num 174} true;
  $$color[4] := FP32_TO_UI8(FMUL32(FMUL32(FADD32(1065353216, FCOS32(v239)), 1056964608), 1132396544));
  assert {:sourceloc} {:sourceloc_num 175} true;
  $$color[5] := v241;
  assert {:sourceloc} {:sourceloc_num 176} true;
  $$color[6] := v242;
  assert {:sourceloc} {:sourceloc_num 177} true;
  $$color[7] := v243;
  assert {:sourceloc} {:sourceloc_num 178} true;
  v244 := $$color[4];
  assert {:sourceloc} {:sourceloc_num 179} true;
  v245 := $$color[5];
  assert {:sourceloc} {:sourceloc_num 180} true;
  v246 := $$color[6];
  assert {:sourceloc} {:sourceloc_num 181} true;
  v247 := $$color[7];
  assert {:sourceloc} {:sourceloc_num 182} true;
  $$color[4] := v244;
  assert {:sourceloc} {:sourceloc_num 183} true;
  $$color[5] := FP32_TO_UI8(FMUL32(FMUL32(FADD32(1065353216, FCOS32(FADD32(FMUL32(1073741824, v239), 1074137766))), 1056964608), 1132396544));
  assert {:sourceloc} {:sourceloc_num 184} true;
  $$color[6] := v246;
  assert {:sourceloc} {:sourceloc_num 185} true;
  $$color[7] := v247;
  assert {:sourceloc} {:sourceloc_num 186} true;
  v248 := $$color[4];
  assert {:sourceloc} {:sourceloc_num 187} true;
  v249 := $$color[5];
  assert {:sourceloc} {:sourceloc_num 188} true;
  v250 := $$color[6];
  assert {:sourceloc} {:sourceloc_num 189} true;
  v251 := $$color[7];
  assert {:sourceloc} {:sourceloc_num 190} true;
  $$color[4] := v248;
  assert {:sourceloc} {:sourceloc_num 191} true;
  $$color[5] := v249;
  assert {:sourceloc} {:sourceloc_num 192} true;
  $$color[6] := FP32_TO_UI8(FMUL32(FMUL32(FADD32(1065353216, FCOS32(FSUB32(v239, 1074137766))), 1056964608), 1132396544));
  assert {:sourceloc} {:sourceloc_num 193} true;
  $$color[7] := v251;
  assert {:sourceloc} {:sourceloc_num 194} true;
  v252 := $$color[4];
  assert {:sourceloc} {:sourceloc_num 195} true;
  v253 := $$color[5];
  assert {:sourceloc} {:sourceloc_num 196} true;
  v254 := $$color[6];
  assert {:sourceloc} {:sourceloc_num 197} true;
  v255 := $$color[7];
  assert {:sourceloc} {:sourceloc_num 198} true;
  $$color[4] := v252;
  assert {:sourceloc} {:sourceloc_num 199} true;
  $$color[5] := v253;
  assert {:sourceloc} {:sourceloc_num 200} true;
  $$color[6] := v254;
  assert {:sourceloc} {:sourceloc_num 201} true;
  $$color[7] := -1;
  v256 := BV_EXTRACT($ccount.2, 64, 32) == $maxIterations;
  goto $truebb26, $falsebb26;
$74:
  assert {:block_sourceloc} {:sourceloc_num 202} true;
  assert {:sourceloc} {:sourceloc_num 203} true;
  v257 := $$color[4];
  assert {:sourceloc} {:sourceloc_num 204} true;
  v258 := $$color[5];
  assert {:sourceloc} {:sourceloc_num 205} true;
  v259 := $$color[6];
  assert {:sourceloc} {:sourceloc_num 206} true;
  v260 := $$color[7];
  assert {:sourceloc} {:sourceloc_num 207} true;
  $$color[4] := 0;
  assert {:sourceloc} {:sourceloc_num 208} true;
  $$color[5] := v258;
  assert {:sourceloc} {:sourceloc_num 209} true;
  $$color[6] := v259;
  assert {:sourceloc} {:sourceloc_num 210} true;
  $$color[7] := v260;
  assert {:sourceloc} {:sourceloc_num 211} true;
  v261 := $$color[4];
  assert {:sourceloc} {:sourceloc_num 212} true;
  v262 := $$color[5];
  assert {:sourceloc} {:sourceloc_num 213} true;
  v263 := $$color[6];
  assert {:sourceloc} {:sourceloc_num 214} true;
  v264 := $$color[7];
  assert {:sourceloc} {:sourceloc_num 215} true;
  $$color[4] := v261;
  assert {:sourceloc} {:sourceloc_num 216} true;
  $$color[5] := 0;
  assert {:sourceloc} {:sourceloc_num 217} true;
  $$color[6] := v263;
  assert {:sourceloc} {:sourceloc_num 218} true;
  $$color[7] := v264;
  assert {:sourceloc} {:sourceloc_num 219} true;
  v265 := $$color[4];
  assert {:sourceloc} {:sourceloc_num 220} true;
  v266 := $$color[5];
  assert {:sourceloc} {:sourceloc_num 221} true;
  v267 := $$color[6];
  assert {:sourceloc} {:sourceloc_num 222} true;
  v268 := $$color[7];
  assert {:sourceloc} {:sourceloc_num 223} true;
  $$color[4] := v265;
  assert {:sourceloc} {:sourceloc_num 224} true;
  $$color[5] := v266;
  assert {:sourceloc} {:sourceloc_num 225} true;
  $$color[6] := 0;
  assert {:sourceloc} {:sourceloc_num 226} true;
  $$color[7] := v268;
  goto $75;
$75:
  assert {:block_sourceloc} {:sourceloc_num 227} true;
  v269 := $bench != 0;
  goto $truebb27, $falsebb27;
$76:
  assert {:block_sourceloc} {:sourceloc_num 228} true;
  assert {:sourceloc} {:sourceloc_num 229} true;
  v270 := $$color[4];
  assert {:sourceloc} {:sourceloc_num 230} true;
  v271 := $$color[5];
  assert {:sourceloc} {:sourceloc_num 231} true;
  v272 := $$color[6];
  assert {:sourceloc} {:sourceloc_num 232} true;
  v273 := $$color[7];
  assert {:sourceloc} {:sourceloc_num 233} true;
  $$color[4] := BV_EXTRACT(BV32_AND(BV_EXTRACT($ccount.2, 64, 32), 255), 8, 0);
  assert {:sourceloc} {:sourceloc_num 234} true;
  $$color[5] := v271;
  assert {:sourceloc} {:sourceloc_num 235} true;
  $$color[6] := v272;
  assert {:sourceloc} {:sourceloc_num 236} true;
  $$color[7] := v273;
  assert {:sourceloc} {:sourceloc_num 237} true;
  v274 := $$color[4];
  assert {:sourceloc} {:sourceloc_num 238} true;
  v275 := $$color[5];
  assert {:sourceloc} {:sourceloc_num 239} true;
  v276 := $$color[6];
  assert {:sourceloc} {:sourceloc_num 240} true;
  v277 := $$color[7];
  assert {:sourceloc} {:sourceloc_num 241} true;
  $$color[4] := v274;
  assert {:sourceloc} {:sourceloc_num 242} true;
  $$color[5] := BV_EXTRACT(BV32_ASHR(BV32_AND(BV_EXTRACT($ccount.2, 64, 32), 65280), 8), 8, 0);
  assert {:sourceloc} {:sourceloc_num 243} true;
  $$color[6] := v276;
  assert {:sourceloc} {:sourceloc_num 244} true;
  $$color[7] := v277;
  assert {:sourceloc} {:sourceloc_num 245} true;
  v278 := $$color[4];
  assert {:sourceloc} {:sourceloc_num 246} true;
  v279 := $$color[5];
  assert {:sourceloc} {:sourceloc_num 247} true;
  v280 := $$color[6];
  assert {:sourceloc} {:sourceloc_num 248} true;
  v281 := $$color[7];
  assert {:sourceloc} {:sourceloc_num 249} true;
  $$color[4] := v278;
  assert {:sourceloc} {:sourceloc_num 250} true;
  $$color[5] := v279;
  assert {:sourceloc} {:sourceloc_num 251} true;
  $$color[6] := BV_EXTRACT(BV32_ASHR(BV32_AND(BV_EXTRACT($ccount.2, 64, 32), 16711680), 16), 8, 0);
  assert {:sourceloc} {:sourceloc_num 252} true;
  $$color[7] := v281;
  assert {:sourceloc} {:sourceloc_num 253} true;
  v282 := $$color[4];
  assert {:sourceloc} {:sourceloc_num 254} true;
  v283 := $$color[5];
  assert {:sourceloc} {:sourceloc_num 255} true;
  v284 := $$color[6];
  assert {:sourceloc} {:sourceloc_num 256} true;
  v285 := $$color[7];
  assert {:sourceloc} {:sourceloc_num 257} true;
  $$color[4] := v282;
  assert {:sourceloc} {:sourceloc_num 258} true;
  $$color[5] := v283;
  assert {:sourceloc} {:sourceloc_num 259} true;
  $$color[6] := v284;
  assert {:sourceloc} {:sourceloc_num 260} true;
  $$color[7] := BV_EXTRACT(BV32_LSHR(BV32_AND(BV_EXTRACT($ccount.2, 64, 32), -16777216), 24), 8, 0);
  goto $77;
$77:
  assert {:block_sourceloc} {:sourceloc_num 261} true;
  assert {:sourceloc} {:sourceloc_num 262} true;
  v286 := $$color[4];
  assert {:sourceloc} {:sourceloc_num 263} true;
  v287 := $$color[5];
  assert {:sourceloc} {:sourceloc_num 264} true;
  v288 := $$color[6];
  assert {:sourceloc} {:sourceloc_num 265} true;
  v289 := $$color[7];
  assert {:sourceloc} {:sourceloc_num 266} true;
  $$mandelbrotImage[BV32_MUL(BV32_ADD(BV32_MUL(4, v0), 1), 4)] := v286;
  assert {:sourceloc} {:sourceloc_num 267} true;
  $$mandelbrotImage[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(4, v0), 1), 4), 1)] := v287;
  assert {:sourceloc} {:sourceloc_num 268} true;
  $$mandelbrotImage[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(4, v0), 1), 4), 2)] := v288;
  assert {:sourceloc} {:sourceloc_num 269} true;
  $$mandelbrotImage[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(4, v0), 1), 4), 3)] := v289;
  v290 := FDIV32(FMUL32(FMUL32(FSUB32(FADD32(SI32_TO_FP32(BV_EXTRACT($ccount.2, 96, 64)), 1065353216), FLOG32(FLOG32(FADD32(FMUL32(BV_EXTRACT($savx.2, 96, 64), BV_EXTRACT($savx.2, 96, 64)), FMUL32(BV_EXTRACT($savy.2, 96, 64), BV_EXTRACT($savy.2, 96, 64)))))), 1073741824), 1078530041), 1132462080);
  assert {:sourceloc} {:sourceloc_num 270} true;
  v291 := $$color[8];
  assert {:sourceloc} {:sourceloc_num 271} true;
  v292 := $$color[9];
  assert {:sourceloc} {:sourceloc_num 272} true;
  v293 := $$color[10];
  assert {:sourceloc} {:sourceloc_num 273} true;
  v294 := $$color[11];
  assert {:sourceloc} {:sourceloc_num 274} true;
  $$color[8] := FP32_TO_UI8(FMUL32(FMUL32(FADD32(1065353216, FCOS32(v290)), 1056964608), 1132396544));
  assert {:sourceloc} {:sourceloc_num 275} true;
  $$color[9] := v292;
  assert {:sourceloc} {:sourceloc_num 276} true;
  $$color[10] := v293;
  assert {:sourceloc} {:sourceloc_num 277} true;
  $$color[11] := v294;
  assert {:sourceloc} {:sourceloc_num 278} true;
  v295 := $$color[8];
  assert {:sourceloc} {:sourceloc_num 279} true;
  v296 := $$color[9];
  assert {:sourceloc} {:sourceloc_num 280} true;
  v297 := $$color[10];
  assert {:sourceloc} {:sourceloc_num 281} true;
  v298 := $$color[11];
  assert {:sourceloc} {:sourceloc_num 282} true;
  $$color[8] := v295;
  assert {:sourceloc} {:sourceloc_num 283} true;
  $$color[9] := FP32_TO_UI8(FMUL32(FMUL32(FADD32(1065353216, FCOS32(FADD32(FMUL32(1073741824, v290), 1074137766))), 1056964608), 1132396544));
  assert {:sourceloc} {:sourceloc_num 284} true;
  $$color[10] := v297;
  assert {:sourceloc} {:sourceloc_num 285} true;
  $$color[11] := v298;
  assert {:sourceloc} {:sourceloc_num 286} true;
  v299 := $$color[8];
  assert {:sourceloc} {:sourceloc_num 287} true;
  v300 := $$color[9];
  assert {:sourceloc} {:sourceloc_num 288} true;
  v301 := $$color[10];
  assert {:sourceloc} {:sourceloc_num 289} true;
  v302 := $$color[11];
  assert {:sourceloc} {:sourceloc_num 290} true;
  $$color[8] := v299;
  assert {:sourceloc} {:sourceloc_num 291} true;
  $$color[9] := v300;
  assert {:sourceloc} {:sourceloc_num 292} true;
  $$color[10] := FP32_TO_UI8(FMUL32(FMUL32(FADD32(1065353216, FCOS32(FSUB32(v290, 1074137766))), 1056964608), 1132396544));
  assert {:sourceloc} {:sourceloc_num 293} true;
  $$color[11] := v302;
  assert {:sourceloc} {:sourceloc_num 294} true;
  v303 := $$color[8];
  assert {:sourceloc} {:sourceloc_num 295} true;
  v304 := $$color[9];
  assert {:sourceloc} {:sourceloc_num 296} true;
  v305 := $$color[10];
  assert {:sourceloc} {:sourceloc_num 297} true;
  v306 := $$color[11];
  assert {:sourceloc} {:sourceloc_num 298} true;
  $$color[8] := v303;
  assert {:sourceloc} {:sourceloc_num 299} true;
  $$color[9] := v304;
  assert {:sourceloc} {:sourceloc_num 300} true;
  $$color[10] := v305;
  assert {:sourceloc} {:sourceloc_num 301} true;
  $$color[11] := -1;
  v307 := BV_EXTRACT($ccount.2, 96, 64) == $maxIterations;
  goto $truebb28, $falsebb28;
$78:
  assert {:block_sourceloc} {:sourceloc_num 302} true;
  assert {:sourceloc} {:sourceloc_num 303} true;
  v308 := $$color[8];
  assert {:sourceloc} {:sourceloc_num 304} true;
  v309 := $$color[9];
  assert {:sourceloc} {:sourceloc_num 305} true;
  v310 := $$color[10];
  assert {:sourceloc} {:sourceloc_num 306} true;
  v311 := $$color[11];
  assert {:sourceloc} {:sourceloc_num 307} true;
  $$color[8] := 0;
  assert {:sourceloc} {:sourceloc_num 308} true;
  $$color[9] := v309;
  assert {:sourceloc} {:sourceloc_num 309} true;
  $$color[10] := v310;
  assert {:sourceloc} {:sourceloc_num 310} true;
  $$color[11] := v311;
  assert {:sourceloc} {:sourceloc_num 311} true;
  v312 := $$color[8];
  assert {:sourceloc} {:sourceloc_num 312} true;
  v313 := $$color[9];
  assert {:sourceloc} {:sourceloc_num 313} true;
  v314 := $$color[10];
  assert {:sourceloc} {:sourceloc_num 314} true;
  v315 := $$color[11];
  assert {:sourceloc} {:sourceloc_num 315} true;
  $$color[8] := v312;
  assert {:sourceloc} {:sourceloc_num 316} true;
  $$color[9] := 0;
  assert {:sourceloc} {:sourceloc_num 317} true;
  $$color[10] := v314;
  assert {:sourceloc} {:sourceloc_num 318} true;
  $$color[11] := v315;
  assert {:sourceloc} {:sourceloc_num 319} true;
  v316 := $$color[8];
  assert {:sourceloc} {:sourceloc_num 320} true;
  v317 := $$color[9];
  assert {:sourceloc} {:sourceloc_num 321} true;
  v318 := $$color[10];
  assert {:sourceloc} {:sourceloc_num 322} true;
  v319 := $$color[11];
  assert {:sourceloc} {:sourceloc_num 323} true;
  $$color[8] := v316;
  assert {:sourceloc} {:sourceloc_num 324} true;
  $$color[9] := v317;
  assert {:sourceloc} {:sourceloc_num 325} true;
  $$color[10] := 0;
  assert {:sourceloc} {:sourceloc_num 326} true;
  $$color[11] := v319;
  goto $79;
$79:
  assert {:block_sourceloc} {:sourceloc_num 327} true;
  v320 := $bench != 0;
  goto $truebb29, $falsebb29;
$80:
  assert {:block_sourceloc} {:sourceloc_num 328} true;
  assert {:sourceloc} {:sourceloc_num 329} true;
  v321 := $$color[8];
  assert {:sourceloc} {:sourceloc_num 330} true;
  v322 := $$color[9];
  assert {:sourceloc} {:sourceloc_num 331} true;
  v323 := $$color[10];
  assert {:sourceloc} {:sourceloc_num 332} true;
  v324 := $$color[11];
  assert {:sourceloc} {:sourceloc_num 333} true;
  $$color[8] := BV_EXTRACT(BV32_AND(BV_EXTRACT($ccount.2, 96, 64), 255), 8, 0);
  assert {:sourceloc} {:sourceloc_num 334} true;
  $$color[9] := v322;
  assert {:sourceloc} {:sourceloc_num 335} true;
  $$color[10] := v323;
  assert {:sourceloc} {:sourceloc_num 336} true;
  $$color[11] := v324;
  assert {:sourceloc} {:sourceloc_num 337} true;
  v325 := $$color[8];
  assert {:sourceloc} {:sourceloc_num 338} true;
  v326 := $$color[9];
  assert {:sourceloc} {:sourceloc_num 339} true;
  v327 := $$color[10];
  assert {:sourceloc} {:sourceloc_num 340} true;
  v328 := $$color[11];
  assert {:sourceloc} {:sourceloc_num 341} true;
  $$color[8] := v325;
  assert {:sourceloc} {:sourceloc_num 342} true;
  $$color[9] := BV_EXTRACT(BV32_ASHR(BV32_AND(BV_EXTRACT($ccount.2, 96, 64), 65280), 8), 8, 0);
  assert {:sourceloc} {:sourceloc_num 343} true;
  $$color[10] := v327;
  assert {:sourceloc} {:sourceloc_num 344} true;
  $$color[11] := v328;
  assert {:sourceloc} {:sourceloc_num 345} true;
  v329 := $$color[8];
  assert {:sourceloc} {:sourceloc_num 346} true;
  v330 := $$color[9];
  assert {:sourceloc} {:sourceloc_num 347} true;
  v331 := $$color[10];
  assert {:sourceloc} {:sourceloc_num 348} true;
  v332 := $$color[11];
  assert {:sourceloc} {:sourceloc_num 349} true;
  $$color[8] := v329;
  assert {:sourceloc} {:sourceloc_num 350} true;
  $$color[9] := v330;
  assert {:sourceloc} {:sourceloc_num 351} true;
  $$color[10] := BV_EXTRACT(BV32_ASHR(BV32_AND(BV_EXTRACT($ccount.2, 96, 64), 16711680), 16), 8, 0);
  assert {:sourceloc} {:sourceloc_num 352} true;
  $$color[11] := v332;
  assert {:sourceloc} {:sourceloc_num 353} true;
  v333 := $$color[8];
  assert {:sourceloc} {:sourceloc_num 354} true;
  v334 := $$color[9];
  assert {:sourceloc} {:sourceloc_num 355} true;
  v335 := $$color[10];
  assert {:sourceloc} {:sourceloc_num 356} true;
  v336 := $$color[11];
  assert {:sourceloc} {:sourceloc_num 357} true;
  $$color[8] := v333;
  assert {:sourceloc} {:sourceloc_num 358} true;
  $$color[9] := v334;
  assert {:sourceloc} {:sourceloc_num 359} true;
  $$color[10] := v335;
  assert {:sourceloc} {:sourceloc_num 360} true;
  $$color[11] := BV_EXTRACT(BV32_LSHR(BV32_AND(BV_EXTRACT($ccount.2, 96, 64), -16777216), 24), 8, 0);
  goto $81;
$81:
  assert {:block_sourceloc} {:sourceloc_num 361} true;
  assert {:sourceloc} {:sourceloc_num 362} true;
  v337 := $$color[8];
  assert {:sourceloc} {:sourceloc_num 363} true;
  v338 := $$color[9];
  assert {:sourceloc} {:sourceloc_num 364} true;
  v339 := $$color[10];
  assert {:sourceloc} {:sourceloc_num 365} true;
  v340 := $$color[11];
  assert {:sourceloc} {:sourceloc_num 366} true;
  $$mandelbrotImage[BV32_MUL(BV32_ADD(BV32_MUL(4, v0), 2), 4)] := v337;
  assert {:sourceloc} {:sourceloc_num 367} true;
  $$mandelbrotImage[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(4, v0), 2), 4), 1)] := v338;
  assert {:sourceloc} {:sourceloc_num 368} true;
  $$mandelbrotImage[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(4, v0), 2), 4), 2)] := v339;
  assert {:sourceloc} {:sourceloc_num 369} true;
  $$mandelbrotImage[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(4, v0), 2), 4), 3)] := v340;
  v341 := FDIV32(FMUL32(FMUL32(FSUB32(FADD32(SI32_TO_FP32(BV_EXTRACT($ccount.2, 128, 96)), 1065353216), FLOG32(FLOG32(FADD32(FMUL32(BV_EXTRACT($savx.2, 128, 96), BV_EXTRACT($savx.2, 128, 96)), FMUL32(BV_EXTRACT($savy.2, 128, 96), BV_EXTRACT($savy.2, 128, 96)))))), 1073741824), 1078530041), 1132462080);
  assert {:sourceloc} {:sourceloc_num 370} true;
  v342 := $$color[12];
  assert {:sourceloc} {:sourceloc_num 371} true;
  v343 := $$color[13];
  assert {:sourceloc} {:sourceloc_num 372} true;
  v344 := $$color[14];
  assert {:sourceloc} {:sourceloc_num 373} true;
  v345 := $$color[15];
  assert {:sourceloc} {:sourceloc_num 374} true;
  $$color[12] := FP32_TO_UI8(FMUL32(FMUL32(FADD32(1065353216, FCOS32(v341)), 1056964608), 1132396544));
  assert {:sourceloc} {:sourceloc_num 375} true;
  $$color[13] := v343;
  assert {:sourceloc} {:sourceloc_num 376} true;
  $$color[14] := v344;
  assert {:sourceloc} {:sourceloc_num 377} true;
  $$color[15] := v345;
  assert {:sourceloc} {:sourceloc_num 378} true;
  v346 := $$color[12];
  assert {:sourceloc} {:sourceloc_num 379} true;
  v347 := $$color[13];
  assert {:sourceloc} {:sourceloc_num 380} true;
  v348 := $$color[14];
  assert {:sourceloc} {:sourceloc_num 381} true;
  v349 := $$color[15];
  assert {:sourceloc} {:sourceloc_num 382} true;
  $$color[12] := v346;
  assert {:sourceloc} {:sourceloc_num 383} true;
  $$color[13] := FP32_TO_UI8(FMUL32(FMUL32(FADD32(1065353216, FCOS32(FADD32(FMUL32(1073741824, v341), 1074137766))), 1056964608), 1132396544));
  assert {:sourceloc} {:sourceloc_num 384} true;
  $$color[14] := v348;
  assert {:sourceloc} {:sourceloc_num 385} true;
  $$color[15] := v349;
  assert {:sourceloc} {:sourceloc_num 386} true;
  v350 := $$color[12];
  assert {:sourceloc} {:sourceloc_num 387} true;
  v351 := $$color[13];
  assert {:sourceloc} {:sourceloc_num 388} true;
  v352 := $$color[14];
  assert {:sourceloc} {:sourceloc_num 389} true;
  v353 := $$color[15];
  assert {:sourceloc} {:sourceloc_num 390} true;
  $$color[12] := v350;
  assert {:sourceloc} {:sourceloc_num 391} true;
  $$color[13] := v351;
  assert {:sourceloc} {:sourceloc_num 392} true;
  $$color[14] := FP32_TO_UI8(FMUL32(FMUL32(FADD32(1065353216, FCOS32(FSUB32(v341, 1074137766))), 1056964608), 1132396544));
  assert {:sourceloc} {:sourceloc_num 393} true;
  $$color[15] := v353;
  assert {:sourceloc} {:sourceloc_num 394} true;
  v354 := $$color[12];
  assert {:sourceloc} {:sourceloc_num 395} true;
  v355 := $$color[13];
  assert {:sourceloc} {:sourceloc_num 396} true;
  v356 := $$color[14];
  assert {:sourceloc} {:sourceloc_num 397} true;
  v357 := $$color[15];
  assert {:sourceloc} {:sourceloc_num 398} true;
  $$color[12] := v354;
  assert {:sourceloc} {:sourceloc_num 399} true;
  $$color[13] := v355;
  assert {:sourceloc} {:sourceloc_num 400} true;
  $$color[14] := v356;
  assert {:sourceloc} {:sourceloc_num 401} true;
  $$color[15] := -1;
  v358 := BV_EXTRACT($ccount.2, 128, 96) == $maxIterations;
  goto $truebb30, $falsebb30;
$82:
  assert {:block_sourceloc} {:sourceloc_num 402} true;
  assert {:sourceloc} {:sourceloc_num 403} true;
  v359 := $$color[12];
  assert {:sourceloc} {:sourceloc_num 404} true;
  v360 := $$color[13];
  assert {:sourceloc} {:sourceloc_num 405} true;
  v361 := $$color[14];
  assert {:sourceloc} {:sourceloc_num 406} true;
  v362 := $$color[15];
  assert {:sourceloc} {:sourceloc_num 407} true;
  $$color[12] := 0;
  assert {:sourceloc} {:sourceloc_num 408} true;
  $$color[13] := v360;
  assert {:sourceloc} {:sourceloc_num 409} true;
  $$color[14] := v361;
  assert {:sourceloc} {:sourceloc_num 410} true;
  $$color[15] := v362;
  assert {:sourceloc} {:sourceloc_num 411} true;
  v363 := $$color[12];
  assert {:sourceloc} {:sourceloc_num 412} true;
  v364 := $$color[13];
  assert {:sourceloc} {:sourceloc_num 413} true;
  v365 := $$color[14];
  assert {:sourceloc} {:sourceloc_num 414} true;
  v366 := $$color[15];
  assert {:sourceloc} {:sourceloc_num 415} true;
  $$color[12] := v363;
  assert {:sourceloc} {:sourceloc_num 416} true;
  $$color[13] := 0;
  assert {:sourceloc} {:sourceloc_num 417} true;
  $$color[14] := v365;
  assert {:sourceloc} {:sourceloc_num 418} true;
  $$color[15] := v366;
  assert {:sourceloc} {:sourceloc_num 419} true;
  v367 := $$color[12];
  assert {:sourceloc} {:sourceloc_num 420} true;
  v368 := $$color[13];
  assert {:sourceloc} {:sourceloc_num 421} true;
  v369 := $$color[14];
  assert {:sourceloc} {:sourceloc_num 422} true;
  v370 := $$color[15];
  assert {:sourceloc} {:sourceloc_num 423} true;
  $$color[12] := v367;
  assert {:sourceloc} {:sourceloc_num 424} true;
  $$color[13] := v368;
  assert {:sourceloc} {:sourceloc_num 425} true;
  $$color[14] := 0;
  assert {:sourceloc} {:sourceloc_num 426} true;
  $$color[15] := v370;
  goto $83;
$83:
  assert {:block_sourceloc} {:sourceloc_num 427} true;
  v371 := $bench != 0;
  goto $truebb31, $falsebb31;
$84:
  assert {:block_sourceloc} {:sourceloc_num 428} true;
  assert {:sourceloc} {:sourceloc_num 429} true;
  v372 := $$color[12];
  assert {:sourceloc} {:sourceloc_num 430} true;
  v373 := $$color[13];
  assert {:sourceloc} {:sourceloc_num 431} true;
  v374 := $$color[14];
  assert {:sourceloc} {:sourceloc_num 432} true;
  v375 := $$color[15];
  assert {:sourceloc} {:sourceloc_num 433} true;
  $$color[12] := BV_EXTRACT(BV32_AND(BV_EXTRACT($ccount.2, 128, 96), 255), 8, 0);
  assert {:sourceloc} {:sourceloc_num 434} true;
  $$color[13] := v373;
  assert {:sourceloc} {:sourceloc_num 435} true;
  $$color[14] := v374;
  assert {:sourceloc} {:sourceloc_num 436} true;
  $$color[15] := v375;
  assert {:sourceloc} {:sourceloc_num 437} true;
  v376 := $$color[12];
  assert {:sourceloc} {:sourceloc_num 438} true;
  v377 := $$color[13];
  assert {:sourceloc} {:sourceloc_num 439} true;
  v378 := $$color[14];
  assert {:sourceloc} {:sourceloc_num 440} true;
  v379 := $$color[15];
  assert {:sourceloc} {:sourceloc_num 441} true;
  $$color[12] := v376;
  assert {:sourceloc} {:sourceloc_num 442} true;
  $$color[13] := BV_EXTRACT(BV32_ASHR(BV32_AND(BV_EXTRACT($ccount.2, 128, 96), 65280), 8), 8, 0);
  assert {:sourceloc} {:sourceloc_num 443} true;
  $$color[14] := v378;
  assert {:sourceloc} {:sourceloc_num 444} true;
  $$color[15] := v379;
  assert {:sourceloc} {:sourceloc_num 445} true;
  v380 := $$color[12];
  assert {:sourceloc} {:sourceloc_num 446} true;
  v381 := $$color[13];
  assert {:sourceloc} {:sourceloc_num 447} true;
  v382 := $$color[14];
  assert {:sourceloc} {:sourceloc_num 448} true;
  v383 := $$color[15];
  assert {:sourceloc} {:sourceloc_num 449} true;
  $$color[12] := v380;
  assert {:sourceloc} {:sourceloc_num 450} true;
  $$color[13] := v381;
  assert {:sourceloc} {:sourceloc_num 451} true;
  $$color[14] := BV_EXTRACT(BV32_ASHR(BV32_AND(BV_EXTRACT($ccount.2, 128, 96), 16711680), 16), 8, 0);
  assert {:sourceloc} {:sourceloc_num 452} true;
  $$color[15] := v383;
  assert {:sourceloc} {:sourceloc_num 453} true;
  v384 := $$color[12];
  assert {:sourceloc} {:sourceloc_num 454} true;
  v385 := $$color[13];
  assert {:sourceloc} {:sourceloc_num 455} true;
  v386 := $$color[14];
  assert {:sourceloc} {:sourceloc_num 456} true;
  v387 := $$color[15];
  assert {:sourceloc} {:sourceloc_num 457} true;
  $$color[12] := v384;
  assert {:sourceloc} {:sourceloc_num 458} true;
  $$color[13] := v385;
  assert {:sourceloc} {:sourceloc_num 459} true;
  $$color[14] := v386;
  assert {:sourceloc} {:sourceloc_num 460} true;
  $$color[15] := BV_EXTRACT(BV32_LSHR(BV32_AND(BV_EXTRACT($ccount.2, 128, 96), -16777216), 24), 8, 0);
  goto $85;
$85:
  assert {:block_sourceloc} {:sourceloc_num 461} true;
  assert {:sourceloc} {:sourceloc_num 462} true;
  v388 := $$color[12];
  assert {:sourceloc} {:sourceloc_num 463} true;
  v389 := $$color[13];
  assert {:sourceloc} {:sourceloc_num 464} true;
  v390 := $$color[14];
  assert {:sourceloc} {:sourceloc_num 465} true;
  v391 := $$color[15];
  assert {:sourceloc} {:sourceloc_num 466} true;
  $$mandelbrotImage[BV32_MUL(BV32_ADD(BV32_MUL(4, v0), 3), 4)] := v388;
  assert {:sourceloc} {:sourceloc_num 467} true;
  $$mandelbrotImage[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(4, v0), 3), 4), 1)] := v389;
  assert {:sourceloc} {:sourceloc_num 468} true;
  $$mandelbrotImage[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(4, v0), 3), 4), 2)] := v390;
  assert {:sourceloc} {:sourceloc_num 469} true;
  $$mandelbrotImage[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(4, v0), 3), 4), 3)] := v391;
  return;
$truebb:
  assume {:partition} v15;
  assert {:block_sourceloc} {:sourceloc_num 470} true;
  goto $2;
$falsebb:
  assume {:partition} !v15;
  assert {:block_sourceloc} {:sourceloc_num 471} true;
  $0 := 0;
  goto $3;
$truebb0:
  assume {:partition} v16;
  assert {:block_sourceloc} {:sourceloc_num 472} true;
  goto $4;
$falsebb0:
  assume {:partition} !v16;
  assert {:block_sourceloc} {:sourceloc_num 473} true;
  goto $30;
$truebb1:
  assume {:partition} v153;
  assert {:block_sourceloc} {:sourceloc_num 474} true;
  goto $5;
$falsebb1:
  assume {:partition} !v153;
  assert {:block_sourceloc} {:sourceloc_num 475} true;
  goto $6;
$truebb2:
  assume {:partition} v154;
  assert {:block_sourceloc} {:sourceloc_num 476} true;
  goto $8;
$falsebb2:
  assume {:partition} !v154;
  assert {:block_sourceloc} {:sourceloc_num 477} true;
  goto $9;
$truebb3:
  assume {:partition} v155;
  assert {:block_sourceloc} {:sourceloc_num 478} true;
  goto $11;
$falsebb3:
  assume {:partition} !v155;
  assert {:block_sourceloc} {:sourceloc_num 479} true;
  goto $12;
$truebb4:
  assume {:partition} v156;
  assert {:block_sourceloc} {:sourceloc_num 480} true;
  goto $14;
$falsebb4:
  assume {:partition} !v156;
  assert {:block_sourceloc} {:sourceloc_num 481} true;
  goto $15;
$truebb5:
  assume {:partition} v157;
  assert {:block_sourceloc} {:sourceloc_num 482} true;
  goto $17;
$falsebb5:
  assume {:partition} !v157;
  assert {:block_sourceloc} {:sourceloc_num 483} true;
  goto $18;
$truebb6:
  assume {:partition} v158;
  assert {:block_sourceloc} {:sourceloc_num 484} true;
  goto $20;
$falsebb6:
  assume {:partition} !v158;
  assert {:block_sourceloc} {:sourceloc_num 485} true;
  goto $21;
$truebb7:
  assume {:partition} v159;
  assert {:block_sourceloc} {:sourceloc_num 486} true;
  goto $23;
$falsebb7:
  assume {:partition} !v159;
  assert {:block_sourceloc} {:sourceloc_num 487} true;
  goto $24;
$truebb8:
  assume {:partition} v160;
  assert {:block_sourceloc} {:sourceloc_num 488} true;
  goto $26;
$falsebb8:
  assume {:partition} !v160;
  assert {:block_sourceloc} {:sourceloc_num 489} true;
  goto $27;
$truebb9:
  assume {:partition} v161;
  assert {:block_sourceloc} {:sourceloc_num 490} true;
  $ccount.2, $savx.2, $savy.2 := $ccount.0, $savx.0, $savy.0;
  goto $69;
$falsebb9:
  assume {:partition} !v161;
  assert {:block_sourceloc} {:sourceloc_num 491} true;
  goto $31;
$truebb10:
  assume {:partition} v163;
  assert {:block_sourceloc} {:sourceloc_num 492} true;
  goto $33;
$falsebb10:
  assume {:partition} !v163;
  assert {:block_sourceloc} {:sourceloc_num 493} true;
  $9 := 0;
  goto $34;
$truebb11:
  assume {:partition} v166;
  assert {:block_sourceloc} {:sourceloc_num 494} true;
  goto $35;
$falsebb11:
  assume {:partition} !v166;
  assert {:block_sourceloc} {:sourceloc_num 495} true;
  $10 := 0;
  goto $36;
$truebb12:
  assume {:partition} v169;
  assert {:block_sourceloc} {:sourceloc_num 496} true;
  goto $37;
$falsebb12:
  assume {:partition} !v169;
  assert {:block_sourceloc} {:sourceloc_num 497} true;
  $11 := 0;
  goto $38;
$truebb13:
  assume {:partition} v172;
  assert {:block_sourceloc} {:sourceloc_num 498} true;
  goto $39;
$falsebb13:
  assume {:partition} !v172;
  assert {:block_sourceloc} {:sourceloc_num 499} true;
  $12 := 0;
  goto $40;
$truebb14:
  assume {:partition} v176;
  assert {:block_sourceloc} {:sourceloc_num 500} true;
  goto $41;
$falsebb14:
  assume {:partition} !v176;
  assert {:block_sourceloc} {:sourceloc_num 501} true;
  goto $42;
$truebb15:
  assume {:partition} v177;
  assert {:block_sourceloc} {:sourceloc_num 502} true;
  goto $44;
$falsebb15:
  assume {:partition} !v177;
  assert {:block_sourceloc} {:sourceloc_num 503} true;
  goto $45;
$truebb16:
  assume {:partition} v178;
  assert {:block_sourceloc} {:sourceloc_num 504} true;
  goto $47;
$falsebb16:
  assume {:partition} !v178;
  assert {:block_sourceloc} {:sourceloc_num 505} true;
  goto $48;
$truebb17:
  assume {:partition} v179;
  assert {:block_sourceloc} {:sourceloc_num 506} true;
  goto $50;
$falsebb17:
  assume {:partition} !v179;
  assert {:block_sourceloc} {:sourceloc_num 507} true;
  goto $51;
$truebb18:
  assume {:partition} v181;
  assert {:block_sourceloc} {:sourceloc_num 508} true;
  goto $53;
$falsebb18:
  assume {:partition} !v181;
  assert {:block_sourceloc} {:sourceloc_num 509} true;
  goto $54;
$truebb19:
  assume {:partition} v182;
  assert {:block_sourceloc} {:sourceloc_num 510} true;
  goto $56;
$falsebb19:
  assume {:partition} !v182;
  assert {:block_sourceloc} {:sourceloc_num 511} true;
  goto $57;
$truebb20:
  assume {:partition} v183;
  assert {:block_sourceloc} {:sourceloc_num 512} true;
  goto $59;
$falsebb20:
  assume {:partition} !v183;
  assert {:block_sourceloc} {:sourceloc_num 513} true;
  goto $60;
$truebb21:
  assume {:partition} v184;
  assert {:block_sourceloc} {:sourceloc_num 514} true;
  goto $62;
$falsebb21:
  assume {:partition} !v184;
  assert {:block_sourceloc} {:sourceloc_num 515} true;
  goto $63;
$truebb22:
  assume {:partition} v186;
  assert {:block_sourceloc} {:sourceloc_num 516} true;
  goto $66;
$falsebb22:
  assume {:partition} !v186;
  assert {:block_sourceloc} {:sourceloc_num 517} true;
  $21 := 0;
  goto $67;
$truebb23:
  assume {:partition} v187;
  assert {:block_sourceloc} {:sourceloc_num 518} true;
  $iter.1, $stay.1, $ccount.1, $savx.1, $savy.1 := v175, BV_CONCAT(BV_CONCAT(BV_CONCAT(v173, v170), v167), v164), v174, v180, v185;
  goto $32;
$falsebb23:
  assume {:partition} !v187;
  assert {:block_sourceloc} {:sourceloc_num 519} true;
  goto $68;
$truebb24:
  assume {:partition} v205;
  assert {:block_sourceloc} {:sourceloc_num 520} true;
  goto $70;
$falsebb24:
  assume {:partition} !v205;
  assert {:block_sourceloc} {:sourceloc_num 521} true;
  goto $71;
$truebb25:
  assume {:partition} v218;
  assert {:block_sourceloc} {:sourceloc_num 522} true;
  goto $72;
$falsebb25:
  assume {:partition} !v218;
  assert {:block_sourceloc} {:sourceloc_num 523} true;
  goto $73;
$truebb26:
  assume {:partition} v256;
  assert {:block_sourceloc} {:sourceloc_num 524} true;
  goto $74;
$falsebb26:
  assume {:partition} !v256;
  assert {:block_sourceloc} {:sourceloc_num 525} true;
  goto $75;
$truebb27:
  assume {:partition} v269;
  assert {:block_sourceloc} {:sourceloc_num 526} true;
  goto $76;
$falsebb27:
  assume {:partition} !v269;
  assert {:block_sourceloc} {:sourceloc_num 527} true;
  goto $77;
$truebb28:
  assume {:partition} v307;
  assert {:block_sourceloc} {:sourceloc_num 528} true;
  goto $78;
$falsebb28:
  assume {:partition} !v307;
  assert {:block_sourceloc} {:sourceloc_num 529} true;
  goto $79;
$truebb29:
  assume {:partition} v320;
  assert {:block_sourceloc} {:sourceloc_num 530} true;
  goto $80;
$falsebb29:
  assume {:partition} !v320;
  assert {:block_sourceloc} {:sourceloc_num 531} true;
  goto $81;
$truebb30:
  assume {:partition} v358;
  assert {:block_sourceloc} {:sourceloc_num 532} true;
  goto $82;
$falsebb30:
  assume {:partition} !v358;
  assert {:block_sourceloc} {:sourceloc_num 533} true;
  goto $83;
$truebb31:
  assume {:partition} v371;
  assert {:block_sourceloc} {:sourceloc_num 534} true;
  goto $84;
$falsebb31:
  assume {:partition} !v371;
  assert {:block_sourceloc} {:sourceloc_num 535} true;
  goto $85;
}
axiom (if group_size_y == 1 then 1 else 0) != 0;
axiom (if group_size_z == 1 then 1 else 0) != 0;
axiom (if num_groups_y == 1 then 1 else 0) != 0;
axiom (if num_groups_z == 1 then 1 else 0) != 0;
axiom (if group_size_x == 256 then 1 else 0) != 0;
axiom (if num_groups_x == 256 then 1 else 0) != 0;
axiom (if global_offset_x == 0 then 1 else 0) != 0;
axiom (if global_offset_y == 0 then 1 else 0) != 0;
axiom (if global_offset_z == 0 then 1 else 0) != 0;
