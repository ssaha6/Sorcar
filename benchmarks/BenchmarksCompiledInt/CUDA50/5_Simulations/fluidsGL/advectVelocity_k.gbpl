type _SIZE_T_TYPE = bv32;

procedure _ATOMIC_OP32(x : [int]int, y : int) returns (z : int, A : [int]int);
procedure _ATOMIC_OP8(x : [int]int, y : int) returns (z : int, A : [int]int);
var {:source_name "v"} {:global} $$v : [int]int;
axiom {:array_info "$$v"} {:global} {:elem_width 32} {:source_name "v"} {:source_elem_width 64} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 64} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$v : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 64} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$v : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 64} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$v : bool;

var {:source_name "vx"} {:global} $$vx : [int]int;
axiom {:array_info "$$vx"} {:global} {:elem_width 32} {:source_name "vx"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$vx : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$vx : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$vx : bool;

var {:source_name "vy"} {:global} $$vy : [int]int;
axiom {:array_info "$$vy"} {:global} {:elem_width 32} {:source_name "vy"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$vy : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$vy : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$vy : bool;

var {:source_name "vterm"} $$vterm : [int]int;
axiom {:array_info "$$vterm"} {:elem_width 32} {:source_name "vterm"} {:source_elem_width 64} {:source_dimensions "1"} true;

var {:source_name "ploc"} $$ploc : [int]int;
axiom {:array_info "$$ploc"} {:elem_width 32} {:source_name "ploc"} {:source_elem_width 64} {:source_dimensions "1"} true;

var {:source_name ""} $$0 : [int]int;
axiom {:array_info "$$0"} {:elem_width 32} {:source_name ""} {:source_elem_width 64} {:source_dimensions "1"} true;

var {:source_name ""} $$1 : [int]int;
axiom {:array_info "$$1"} {:elem_width 8} {:source_name ""} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name ""} $$2 : [int]int;
axiom {:array_info "$$2"} {:elem_width 32} {:source_name ""} {:source_elem_width 64} {:source_dimensions "1"} true;

var {:source_name ""} $$3 : [int]int;
axiom {:array_info "$$3"} {:elem_width 8} {:source_name ""} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name "texref"} {:global} $$texref : [int]int;
axiom {:array_info "$$texref"} {:global} {:elem_width 8} {:source_name "texref"} {:source_elem_width 128} {:source_dimensions "1"} true;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 128} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$texref : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 128} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$texref : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 128} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$texref : bool;

const _WATCHED_OFFSET : int;
const {:group_id_x} group_id_x : int;
const {:group_id_y} group_id_y : int;
const {:group_size_x} group_size_x : int;
const {:group_size_y} group_size_y : int;
const {:group_size_z} group_size_z : int;
const {:local_id_x} local_id_x : int;
const {:local_id_y} local_id_y : int;
const {:num_groups_x} num_groups_x : int;
const {:num_groups_y} num_groups_y : int;
const {:num_groups_z} num_groups_z : int;
function BV_CONCAT(int, int) : int;
function BV_EXTRACT(int, int, int) : int;
function FADD32(int, int) : int;
function FMUL32(int, int) : int;
function FSUB32(int, int) : int;
function SI32_TO_FP32(int) : int;
function {:inline true} BV32_ADD(x : int, y : int) : int {
  x + y
}
function {:inline true} BV32_MUL(x : int, y : int) : int {
  x * y
}
function {:inline true} BV32_SLT(x : int, y : int) : bool {
  x < y
}
function {:inline true} BV32_UDIV(x : int, y : int) : int {
  x div y
}
function {:inline true} BV32_UREM(x : int, y : int) : int {
  x mod y
}
procedure {:source_name "advectVelocity_k"} {:kernel} $_Z16advectVelocity_kP6float2PfS1_iiifi($dx:int, $pdx:int, $dy:int, $dt:int, $lb:int)
requires {:sourceloc_num 0} (if $dx == 512 then 1 else 0) != 0;
requires {:sourceloc_num 1} (if $dy == 512 then 1 else 0) != 0;
requires {:sourceloc_num 2} (if $lb == 16 then 1 else 0) != 0;
requires {:sourceloc_num 3} (if $pdx == 514 then 1 else 0) != 0;
{
  var $p.0:int;
  var v0:int;
  var v1:bool;
  var v2:bool;
  var v3:int;
  var v4:bool;
  var v5:int;
  var v6:int;
  var v7:int;
  var v8:int;
  var v13:int;
  var v9:int;
  var v10:int;
  var v11:int;
  var v12:int;
  var v21:int;
  var v14:int;
  var v15:int;
  var v16:int;
  var v17:int;
  var v18:int;
  var v19:int;
  var v20:int;
  var v22:int;
  var v23:int;
  var v24:int;
  var v25:int;
  var v26:int;
  var v27:int;
  var v28:int;
  var v29:int;
  var v30:int;
  var v31:int;
  var v32:int;
  var v33:int;
  var v34:int;
  var v35:int;
  var v36:int;
  var v37:int;
  var v38:int;
  var v63:int;
  var v64:int;
  var v65:int;
  var v66:int;
  var v67:int;
  var v68:int;
  var v39:int;
  var v40:int;
  var v41:int;
  var v42:int;
  var v43:int;
  var v44:int;
  var v45:int;
  var v46:int;
  var v47:int;
  var v48:int;
  var v49:int;
  var v50:int;
  var v51:int;
  var v52:int;
  var v53:int;
  var v54:int;
  var v55:int;
  var v56:int;
  var v57:int;
  var v58:int;
  var v59:int;
  var v60:int;
  var v61:int;
  var v62:int;
  var v69:int;
  var v70:int;
  var v71:int;
  var v72:int;
  var v73:int;
  var v74:int;
  var v75:int;
  var v76:int;
  var v77:int;
  var v78:int;
  var v79:int;
  var v80:int;
  var v81:int;
$0:
  assert {:block_sourceloc} {:sourceloc_num 4} true;
  v0 := BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x);
  v1 := BV32_SLT(v0, $dx);
  goto $truebb, $falsebb;
$1:
  assert {:block_sourceloc} {:sourceloc_num 5} true;
  $p.0 := 0;
  goto $2;
$2:
  assert {:block_sourceloc} {:sourceloc_num 6} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 7} (if (_WRITE_HAS_OCCURRED_$$vx ==> BV32_UREM(BV32_UDIV(BV32_MUL(4, _WATCHED_OFFSET), 4), $pdx) == v0) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 8} (if (_WRITE_HAS_OCCURRED_$$vy ==> BV32_UREM(BV32_UDIV(BV32_MUL(4, _WATCHED_OFFSET), 4), $pdx) == v0) then 1 else 0) != 0;
  v2 := BV32_SLT($p.0, $lb);
  goto $truebb0, $falsebb0;
$3:
  assert {:block_sourceloc} {:sourceloc_num 9} true;
  v3 := BV32_ADD(BV32_ADD(BV32_MUL(group_id_y, BV32_MUL($lb, group_size_y)), BV32_MUL(local_id_y, $lb)), $p.0);
  v4 := BV32_SLT(v3, $dy);
  goto $truebb1, $falsebb1;
$4:
  assert {:block_sourceloc} {:sourceloc_num 10} true;
  v5 := BV32_ADD(BV32_MUL(v3, $pdx), v0);
  assert {:sourceloc} {:sourceloc_num 11} true;
  v6 := $$texref[0];
  assert {:sourceloc} {:sourceloc_num 12} true;
  $$1[0] := v6;
  assert {:sourceloc} {:sourceloc_num 13} true;
  v7 := $$texref[1];
  assert {:sourceloc} {:sourceloc_num 14} true;
  $$1[1] := v7;
  assert {:sourceloc} {:sourceloc_num 15} true;
  v8 := $$texref[2];
  assert {:sourceloc} {:sourceloc_num 16} true;
  $$1[2] := v8;
  assert {:sourceloc} {:sourceloc_num 17} true;
  v9 := $$texref[3];
  assert {:sourceloc} {:sourceloc_num 18} true;
  $$1[3] := v9;
  assert {:sourceloc} {:sourceloc_num 19} true;
  v10 := $$texref[4];
  assert {:sourceloc} {:sourceloc_num 20} true;
  $$1[4] := v10;
  assert {:sourceloc} {:sourceloc_num 21} true;
  v11 := $$texref[5];
  assert {:sourceloc} {:sourceloc_num 22} true;
  $$1[5] := v11;
  assert {:sourceloc} {:sourceloc_num 23} true;
  v12 := $$texref[6];
  assert {:sourceloc} {:sourceloc_num 24} true;
  $$1[6] := v12;
  assert {:sourceloc} {:sourceloc_num 25} true;
  v13 := $$texref[7];
  assert {:sourceloc} {:sourceloc_num 26} true;
  $$1[7] := v13;
  assert {:sourceloc} {:sourceloc_num 27} true;
  v14 := $$texref[8];
  assert {:sourceloc} {:sourceloc_num 28} true;
  $$1[8] := v14;
  assert {:sourceloc} {:sourceloc_num 29} true;
  v15 := $$texref[9];
  assert {:sourceloc} {:sourceloc_num 30} true;
  $$1[9] := v15;
  assert {:sourceloc} {:sourceloc_num 31} true;
  v16 := $$texref[10];
  assert {:sourceloc} {:sourceloc_num 32} true;
  $$1[10] := v16;
  assert {:sourceloc} {:sourceloc_num 33} true;
  v17 := $$texref[11];
  assert {:sourceloc} {:sourceloc_num 34} true;
  $$1[11] := v17;
  assert {:sourceloc} {:sourceloc_num 35} true;
  v18 := $$texref[12];
  assert {:sourceloc} {:sourceloc_num 36} true;
  $$1[12] := v18;
  assert {:sourceloc} {:sourceloc_num 37} true;
  v19 := $$texref[13];
  assert {:sourceloc} {:sourceloc_num 38} true;
  $$1[13] := v19;
  assert {:sourceloc} {:sourceloc_num 39} true;
  v20 := $$texref[14];
  assert {:sourceloc} {:sourceloc_num 40} true;
  $$1[14] := v20;
  assert {:sourceloc} {:sourceloc_num 41} true;
  v21 := $$texref[15];
  assert {:sourceloc} {:sourceloc_num 42} true;
  $$1[15] := v21;
  assert {:sourceloc} {:sourceloc_num 43} true;
  v22 := $$1[0];
  assert {:sourceloc} {:sourceloc_num 44} true;
  v23 := $$1[1];
  assert {:sourceloc} {:sourceloc_num 45} true;
  v24 := $$1[2];
  assert {:sourceloc} {:sourceloc_num 46} true;
  v25 := $$1[3];
  assert {:sourceloc} {:sourceloc_num 47} true;
  v26 := $$1[4];
  assert {:sourceloc} {:sourceloc_num 48} true;
  v27 := $$1[5];
  assert {:sourceloc} {:sourceloc_num 49} true;
  v28 := $$1[6];
  assert {:sourceloc} {:sourceloc_num 50} true;
  v29 := $$1[7];
  assert {:sourceloc} {:sourceloc_num 51} true;
  v30 := $$1[8];
  assert {:sourceloc} {:sourceloc_num 52} true;
  v31 := $$1[9];
  assert {:sourceloc} {:sourceloc_num 53} true;
  v32 := $$1[10];
  assert {:sourceloc} {:sourceloc_num 54} true;
  v33 := $$1[11];
  assert {:sourceloc} {:sourceloc_num 55} true;
  v34 := $$1[12];
  assert {:sourceloc} {:sourceloc_num 56} true;
  v35 := $$1[13];
  assert {:sourceloc} {:sourceloc_num 57} true;
  v36 := $$1[14];
  assert {:sourceloc} {:sourceloc_num 58} true;
  v37 := $$1[15];
  call {:sourceloc_num 59}   v38 := $_Z5tex2DI6float2ET_7textureIS1_Li2EL19cudaTextureReadMode0EEff(BV_CONCAT(BV_CONCAT(BV_CONCAT(BV_CONCAT(BV_CONCAT(BV_CONCAT(BV_CONCAT(v29, v28), v27), v26), v25), v24), v23), v22), BV_CONCAT(BV_CONCAT(BV_CONCAT(v33, v32), v31), v30), BV_CONCAT(BV_CONCAT(BV_CONCAT(v37, v36), v35), v34), SI32_TO_FP32(v0), SI32_TO_FP32(v3));
  assert {:sourceloc} {:sourceloc_num 60} true;
  $$0[0] := BV_EXTRACT(v38, 32, 0);
  assert {:sourceloc} {:sourceloc_num 61} true;
  $$0[1] := BV_EXTRACT(v38, 64, 32);
  assert {:sourceloc} {:sourceloc_num 62} true;
  v39 := $$0[0];
  assert {:sourceloc} {:sourceloc_num 63} true;
  $$vterm[0] := v39;
  assert {:sourceloc} {:sourceloc_num 64} true;
  v40 := $$0[1];
  assert {:sourceloc} {:sourceloc_num 65} true;
  $$vterm[1] := v40;
  assert {:sourceloc} {:sourceloc_num 66} true;
  v41 := $$vterm[0];
  assert {:sourceloc} {:sourceloc_num 67} true;
  $$ploc[0] := FSUB32(FADD32(SI32_TO_FP32(v0), 1056964608), FMUL32(FMUL32($dt, v41), SI32_TO_FP32($dx)));
  assert {:sourceloc} {:sourceloc_num 68} true;
  v42 := $$vterm[1];
  assert {:sourceloc} {:sourceloc_num 69} true;
  $$ploc[1] := FSUB32(FADD32(SI32_TO_FP32(v3), 1056964608), FMUL32(FMUL32($dt, v42), SI32_TO_FP32($dy)));
  assert {:sourceloc} {:sourceloc_num 70} true;
  v43 := $$texref[0];
  assert {:sourceloc} {:sourceloc_num 71} true;
  $$3[0] := v43;
  assert {:sourceloc} {:sourceloc_num 72} true;
  v44 := $$texref[1];
  assert {:sourceloc} {:sourceloc_num 73} true;
  $$3[1] := v44;
  assert {:sourceloc} {:sourceloc_num 74} true;
  v45 := $$texref[2];
  assert {:sourceloc} {:sourceloc_num 75} true;
  $$3[2] := v45;
  assert {:sourceloc} {:sourceloc_num 76} true;
  v46 := $$texref[3];
  assert {:sourceloc} {:sourceloc_num 77} true;
  $$3[3] := v46;
  assert {:sourceloc} {:sourceloc_num 78} true;
  v47 := $$texref[4];
  assert {:sourceloc} {:sourceloc_num 79} true;
  $$3[4] := v47;
  assert {:sourceloc} {:sourceloc_num 80} true;
  v48 := $$texref[5];
  assert {:sourceloc} {:sourceloc_num 81} true;
  $$3[5] := v48;
  assert {:sourceloc} {:sourceloc_num 82} true;
  v49 := $$texref[6];
  assert {:sourceloc} {:sourceloc_num 83} true;
  $$3[6] := v49;
  assert {:sourceloc} {:sourceloc_num 84} true;
  v50 := $$texref[7];
  assert {:sourceloc} {:sourceloc_num 85} true;
  $$3[7] := v50;
  assert {:sourceloc} {:sourceloc_num 86} true;
  v51 := $$texref[8];
  assert {:sourceloc} {:sourceloc_num 87} true;
  $$3[8] := v51;
  assert {:sourceloc} {:sourceloc_num 88} true;
  v52 := $$texref[9];
  assert {:sourceloc} {:sourceloc_num 89} true;
  $$3[9] := v52;
  assert {:sourceloc} {:sourceloc_num 90} true;
  v53 := $$texref[10];
  assert {:sourceloc} {:sourceloc_num 91} true;
  $$3[10] := v53;
  assert {:sourceloc} {:sourceloc_num 92} true;
  v54 := $$texref[11];
  assert {:sourceloc} {:sourceloc_num 93} true;
  $$3[11] := v54;
  assert {:sourceloc} {:sourceloc_num 94} true;
  v55 := $$texref[12];
  assert {:sourceloc} {:sourceloc_num 95} true;
  $$3[12] := v55;
  assert {:sourceloc} {:sourceloc_num 96} true;
  v56 := $$texref[13];
  assert {:sourceloc} {:sourceloc_num 97} true;
  $$3[13] := v56;
  assert {:sourceloc} {:sourceloc_num 98} true;
  v57 := $$texref[14];
  assert {:sourceloc} {:sourceloc_num 99} true;
  $$3[14] := v57;
  assert {:sourceloc} {:sourceloc_num 100} true;
  v58 := $$texref[15];
  assert {:sourceloc} {:sourceloc_num 101} true;
  $$3[15] := v58;
  assert {:sourceloc} {:sourceloc_num 102} true;
  v59 := $$ploc[0];
  assert {:sourceloc} {:sourceloc_num 103} true;
  v60 := $$ploc[1];
  assert {:sourceloc} {:sourceloc_num 104} true;
  v61 := $$3[0];
  assert {:sourceloc} {:sourceloc_num 105} true;
  v62 := $$3[1];
  assert {:sourceloc} {:sourceloc_num 106} true;
  v63 := $$3[2];
  assert {:sourceloc} {:sourceloc_num 107} true;
  v64 := $$3[3];
  assert {:sourceloc} {:sourceloc_num 108} true;
  v65 := $$3[4];
  assert {:sourceloc} {:sourceloc_num 109} true;
  v66 := $$3[5];
  assert {:sourceloc} {:sourceloc_num 110} true;
  v67 := $$3[6];
  assert {:sourceloc} {:sourceloc_num 111} true;
  v68 := $$3[7];
  assert {:sourceloc} {:sourceloc_num 112} true;
  v69 := $$3[8];
  assert {:sourceloc} {:sourceloc_num 113} true;
  v70 := $$3[9];
  assert {:sourceloc} {:sourceloc_num 114} true;
  v71 := $$3[10];
  assert {:sourceloc} {:sourceloc_num 115} true;
  v72 := $$3[11];
  assert {:sourceloc} {:sourceloc_num 116} true;
  v73 := $$3[12];
  assert {:sourceloc} {:sourceloc_num 117} true;
  v74 := $$3[13];
  assert {:sourceloc} {:sourceloc_num 118} true;
  v75 := $$3[14];
  assert {:sourceloc} {:sourceloc_num 119} true;
  v76 := $$3[15];
  call {:sourceloc_num 120}   v77 := $_Z5tex2DI6float2ET_7textureIS1_Li2EL19cudaTextureReadMode0EEff(BV_CONCAT(BV_CONCAT(BV_CONCAT(BV_CONCAT(BV_CONCAT(BV_CONCAT(BV_CONCAT(v68, v67), v66), v65), v64), v63), v62), v61), BV_CONCAT(BV_CONCAT(BV_CONCAT(v72, v71), v70), v69), BV_CONCAT(BV_CONCAT(BV_CONCAT(v76, v75), v74), v73), v59, v60);
  assert {:sourceloc} {:sourceloc_num 121} true;
  $$2[0] := BV_EXTRACT(v77, 32, 0);
  assert {:sourceloc} {:sourceloc_num 122} true;
  $$2[1] := BV_EXTRACT(v77, 64, 32);
  assert {:sourceloc} {:sourceloc_num 123} true;
  v78 := $$2[0];
  assert {:sourceloc} {:sourceloc_num 124} true;
  $$vterm[0] := v78;
  assert {:sourceloc} {:sourceloc_num 125} true;
  v79 := $$2[1];
  assert {:sourceloc} {:sourceloc_num 126} true;
  $$vterm[1] := v79;
  assert {:sourceloc} {:sourceloc_num 127} true;
  v80 := $$vterm[0];
  assert {:sourceloc} {:sourceloc_num 128} true;
  v81 := $$vterm[1];
  assert {:sourceloc} {:sourceloc_num 129} true;
  $$vx[v5] := v80;
  assert {:sourceloc} {:sourceloc_num 130} true;
  $$vy[v5] := v81;
  goto $5;
$5:
  assert {:block_sourceloc} {:sourceloc_num 131} true;
  goto $6;
$6:
  assert {:block_sourceloc} {:sourceloc_num 132} true;
  $p.0 := BV32_ADD($p.0, 1);
  goto $2;
$7:
  assert {:block_sourceloc} {:sourceloc_num 133} true;
  goto $8;
$8:
  assert {:block_sourceloc} {:sourceloc_num 134} true;
  return;
$truebb:
  assume {:partition} v1;
  assert {:block_sourceloc} {:sourceloc_num 135} true;
  goto $1;
$falsebb:
  assume {:partition} !v1;
  assert {:block_sourceloc} {:sourceloc_num 136} true;
  goto $8;
$truebb0:
  assume {:partition} v2;
  assert {:block_sourceloc} {:sourceloc_num 137} true;
  goto $3;
$falsebb0:
  assume {:partition} !v2;
  assert {:block_sourceloc} {:sourceloc_num 138} true;
  goto $7;
$truebb1:
  assume {:partition} v4;
  assert {:block_sourceloc} {:sourceloc_num 139} true;
  goto $4;
$falsebb1:
  assume {:partition} !v4;
  assert {:block_sourceloc} {:sourceloc_num 140} true;
  goto $5;
}
procedure {:source_name "_Z5tex2DI6float2ET_7textureIS1_Li2EL19cudaTextureReadMode0EEff"} $_Z5tex2DI6float2ET_7textureIS1_Li2EL19cudaTextureReadMode0EEff($0:int, $1:int, $2:int, $3:int, $4:int) returns ($ret:int);
axiom (if group_size_x == 64 then 1 else 0) != 0;
axiom (if group_size_y == 4 then 1 else 0) != 0;
axiom (if group_size_z == 1 then 1 else 0) != 0;
axiom (if num_groups_x == 8 then 1 else 0) != 0;
axiom (if num_groups_y == 8 then 1 else 0) != 0;
axiom (if num_groups_z == 1 then 1 else 0) != 0;
