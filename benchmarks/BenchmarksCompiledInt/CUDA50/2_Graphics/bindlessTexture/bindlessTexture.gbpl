type _SIZE_T_TYPE = bv32;

procedure _ATOMIC_OP8(x : [int]int, y : int) returns (z : int, A : [int]int);
procedure _ATOMIC_OP32(x : [int]int, y : int) returns (z : int, A : [int]int);
var {:source_name "d_output"} {:global} $$d_output : [int]int;
axiom {:array_info "$$d_output"} {:global} {:elem_width 8} {:source_name "d_output"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$d_output : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$d_output : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$d_output : bool;

var {:source_name ""} $$0 : [int]int;
axiom {:array_info "$$0"} {:elem_width 32} {:source_name ""} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name ""} $$1 : [int]int;
axiom {:array_info "$$1"} {:elem_width 32} {:source_name ""} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name "a.i"} $$a.i : [int]int;
axiom {:array_info "$$a.i"} {:elem_width 32} {:source_name "a.i"} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name ""} $$2 : [int]int;
axiom {:array_info "$$2"} {:elem_width 8} {:source_name ""} {:source_elem_width 32} {:source_dimensions "1"} true;

var {:source_name ""} $$3 : [int]int;
axiom {:array_info "$$3"} {:elem_width 8} {:source_name ""} {:source_elem_width 32} {:source_dimensions "1"} true;

var {:source_name "vec.i"} $$vec.i : [int]int;
axiom {:array_info "$$vec.i"} {:elem_width 32} {:source_name "vec.i"} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name "obj.i"} $$obj.i : [int]int;
axiom {:array_info "$$obj.i"} {:elem_width 32} {:source_name "obj.i"} {:source_elem_width 64} {:source_dimensions "1"} true;

var {:source_name "texCoded"} $$texCoded : [int]int;
axiom {:array_info "$$texCoded"} {:elem_width 32} {:source_name "texCoded"} {:source_elem_width 64} {:source_dimensions "1"} true;

var {:source_name ""} $$4 : [int]int;
axiom {:array_info "$$4"} {:elem_width 8} {:source_name ""} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name ""} $$5 : [int]int;
axiom {:array_info "$$5"} {:elem_width 32} {:source_name ""} {:source_elem_width 64} {:source_dimensions "1"} true;

var {:source_name "color"} $$color : [int]int;
axiom {:array_info "$$color"} {:elem_width 32} {:source_name "color"} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name ""} $$6 : [int]int;
axiom {:array_info "$$6"} {:elem_width 8} {:source_name ""} {:source_elem_width 32} {:source_dimensions "1"} true;

var {:source_name ""} $$7 : [int]int;
axiom {:array_info "$$7"} {:elem_width 32} {:source_name ""} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name ""} $$8 : [int]int;
axiom {:array_info "$$8"} {:elem_width 32} {:source_name ""} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name "atlasTexture"} {:global} $$atlasTexture : [int]int;
axiom {:array_info "$$atlasTexture"} {:global} {:elem_width 8} {:source_name "atlasTexture"} {:source_elem_width 128} {:source_dimensions "1"} true;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 128} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$atlasTexture : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 128} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$atlasTexture : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 128} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$atlasTexture : bool;

const _WATCHED_OFFSET : int;
const {:group_id_x} group_id_x : int;
const {:group_id_y} group_id_y : int;
const {:group_size_x} group_size_x : int;
const {:group_size_y} group_size_y : int;
const {:group_size_z} group_size_z : int;
const {:local_id_x} local_id_x : int;
const {:local_id_y} local_id_y : int;
const {:num_groups_x} num_groups_x : int;
const {:num_groups_y} num_groups_y : int;
const {:num_groups_z} num_groups_z : int;
function BV_CONCAT(int, int) : int;
function BV_EXTRACT(int, int, int) : int;
function FDIV32(int, int) : int;
function FMUL32(int, int) : int;
function FP32_TO_UI8(int) : int;
function FSUB32(int, int) : int;
function UI32_TO_FP32(int) : int;
function {:inline true} BV32_ADD(x : int, y : int) : int {
  x + y
}
function {:inline true} BV32_MUL(x : int, y : int) : int {
  x * y
}
function {:inline true} BV32_ULT(x : int, y : int) : bool {
  x < y
}
function {:inline true} BV32_ZEXT64(x : int) : int {
  x
}
function {:inline true} BV64_OR(x : int, y : int) : int {
  if x == y then x else (if x == 0 then y else (if y == 0 then x else BV64_OR_UF(x, y)))
}
function BV64_OR_UF(int, int) : int;
function {:inline true} BV64_SHL(x : int, y : int) : int {
  if x >= 0 && y == 1 then x*2 else BV64_SHL_UF(x,y)
}
function BV64_SHL_UF(int, int) : int;
procedure {:source_name "d_render"} {:kernel} $_Z8d_renderP6uchar4jjf($imageW:int, $imageH:int, $lod:int)
requires {:sourceloc_num 0} (if $imageW == 512 then 1 else 0) != 0;
{
  var v0:int;
  var v1:int;
  var v2:int;
  var v3:int;
  var v4:bool;
  var v5:bool;
  var v6:int;
  var v7:int;
  var v8:int;
  var v9:int;
  var v14:int;
  var v10:int;
  var v11:int;
  var v12:int;
  var v13:int;
  var v15:int;
  var v16:int;
  var v17:int;
  var v18:int;
  var v19:int;
  var v20:int;
  var v21:int;
  var v41:int;
  var v22:int;
  var v23:int;
  var v24:int;
  var v25:int;
  var v26:int;
  var v27:int;
  var v28:int;
  var v29:int;
  var v30:int;
  var v31:int;
  var v32:int;
  var v33:int;
  var v34:int;
  var v35:int;
  var v36:int;
  var v37:int;
  var v38:int;
  var v39:int;
  var v40:int;
  var v42:int;
  var v43:int;
  var v44:int;
  var v45:int;
  var v46:int;
  var v47:int;
  var v48:int;
  var v49:int;
  var v50:int;
  var v51:int;
  var v52:int;
  var v53:int;
  var v54:int;
  var v55:int;
  var v56:int;
  var v57:int;
  var v58:int;
  var v59:int;
  var v60:int;
  var v61:int;
  var v62:int;
  var v63:int;
  var v64:int;
  var v65:int;
  var v66:int;
  var v67:int;
  var v68:int;
  var v69:int;
  var v70:int;
  var v71:int;
  var v72:int;
  var v73:int;
  var v74:int;
  var v75:int;
  var v76:int;
  var v77:int;
  var v78:int;
  var v79:int;
  var v80:int;
  var v81:int;
  var v82:int;
  var v83:int;
  var v84:int;
  var v85:int;
$0:
  assert {:block_sourceloc} {:sourceloc_num 1} true;
  v0 := BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x);
  v1 := BV32_ADD(BV32_MUL(group_id_y, group_size_y), local_id_y);
  v2 := FDIV32(UI32_TO_FP32(v0), UI32_TO_FP32($imageW));
  v3 := FDIV32(UI32_TO_FP32(v1), UI32_TO_FP32($imageH));
  v4 := BV32_ULT(v0, $imageW);
  goto $truebb, $falsebb;
$1:
  assert {:block_sourceloc} {:sourceloc_num 2} true;
  v5 := BV32_ULT(v1, $imageH);
  goto $truebb0, $falsebb0;
$2:
  assert {:block_sourceloc} {:sourceloc_num 3} true;
  assert {:sourceloc} {:sourceloc_num 4} true;
  v6 := $$atlasTexture[0];
  assert {:sourceloc} {:sourceloc_num 5} true;
  $$4[0] := v6;
  assert {:sourceloc} {:sourceloc_num 6} true;
  v7 := $$atlasTexture[1];
  assert {:sourceloc} {:sourceloc_num 7} true;
  $$4[1] := v7;
  assert {:sourceloc} {:sourceloc_num 8} true;
  v8 := $$atlasTexture[2];
  assert {:sourceloc} {:sourceloc_num 9} true;
  $$4[2] := v8;
  assert {:sourceloc} {:sourceloc_num 10} true;
  v9 := $$atlasTexture[3];
  assert {:sourceloc} {:sourceloc_num 11} true;
  $$4[3] := v9;
  assert {:sourceloc} {:sourceloc_num 12} true;
  v10 := $$atlasTexture[4];
  assert {:sourceloc} {:sourceloc_num 13} true;
  $$4[4] := v10;
  assert {:sourceloc} {:sourceloc_num 14} true;
  v11 := $$atlasTexture[5];
  assert {:sourceloc} {:sourceloc_num 15} true;
  $$4[5] := v11;
  assert {:sourceloc} {:sourceloc_num 16} true;
  v12 := $$atlasTexture[6];
  assert {:sourceloc} {:sourceloc_num 17} true;
  $$4[6] := v12;
  assert {:sourceloc} {:sourceloc_num 18} true;
  v13 := $$atlasTexture[7];
  assert {:sourceloc} {:sourceloc_num 19} true;
  $$4[7] := v13;
  assert {:sourceloc} {:sourceloc_num 20} true;
  v14 := $$atlasTexture[8];
  assert {:sourceloc} {:sourceloc_num 21} true;
  $$4[8] := v14;
  assert {:sourceloc} {:sourceloc_num 22} true;
  v15 := $$atlasTexture[9];
  assert {:sourceloc} {:sourceloc_num 23} true;
  $$4[9] := v15;
  assert {:sourceloc} {:sourceloc_num 24} true;
  v16 := $$atlasTexture[10];
  assert {:sourceloc} {:sourceloc_num 25} true;
  $$4[10] := v16;
  assert {:sourceloc} {:sourceloc_num 26} true;
  v17 := $$atlasTexture[11];
  assert {:sourceloc} {:sourceloc_num 27} true;
  $$4[11] := v17;
  assert {:sourceloc} {:sourceloc_num 28} true;
  v18 := $$atlasTexture[12];
  assert {:sourceloc} {:sourceloc_num 29} true;
  $$4[12] := v18;
  assert {:sourceloc} {:sourceloc_num 30} true;
  v19 := $$atlasTexture[13];
  assert {:sourceloc} {:sourceloc_num 31} true;
  $$4[13] := v19;
  assert {:sourceloc} {:sourceloc_num 32} true;
  v20 := $$atlasTexture[14];
  assert {:sourceloc} {:sourceloc_num 33} true;
  $$4[14] := v20;
  assert {:sourceloc} {:sourceloc_num 34} true;
  v21 := $$atlasTexture[15];
  assert {:sourceloc} {:sourceloc_num 35} true;
  $$4[15] := v21;
  assert {:sourceloc} {:sourceloc_num 36} true;
  v22 := $$4[0];
  assert {:sourceloc} {:sourceloc_num 37} true;
  v23 := $$4[1];
  assert {:sourceloc} {:sourceloc_num 38} true;
  v24 := $$4[2];
  assert {:sourceloc} {:sourceloc_num 39} true;
  v25 := $$4[3];
  assert {:sourceloc} {:sourceloc_num 40} true;
  v26 := $$4[4];
  assert {:sourceloc} {:sourceloc_num 41} true;
  v27 := $$4[5];
  assert {:sourceloc} {:sourceloc_num 42} true;
  v28 := $$4[6];
  assert {:sourceloc} {:sourceloc_num 43} true;
  v29 := $$4[7];
  assert {:sourceloc} {:sourceloc_num 44} true;
  v30 := $$4[8];
  assert {:sourceloc} {:sourceloc_num 45} true;
  v31 := $$4[9];
  assert {:sourceloc} {:sourceloc_num 46} true;
  v32 := $$4[10];
  assert {:sourceloc} {:sourceloc_num 47} true;
  v33 := $$4[11];
  assert {:sourceloc} {:sourceloc_num 48} true;
  v34 := $$4[12];
  assert {:sourceloc} {:sourceloc_num 49} true;
  v35 := $$4[13];
  assert {:sourceloc} {:sourceloc_num 50} true;
  v36 := $$4[14];
  assert {:sourceloc} {:sourceloc_num 51} true;
  v37 := $$4[15];
  call {:sourceloc_num 52}   v38 := $_Z5tex2DI5uint2ET_7textureIS1_Li2EL19cudaTextureReadMode0EEff(BV_CONCAT(BV_CONCAT(BV_CONCAT(BV_CONCAT(BV_CONCAT(BV_CONCAT(BV_CONCAT(v29, v28), v27), v26), v25), v24), v23), v22), BV_CONCAT(BV_CONCAT(BV_CONCAT(v33, v32), v31), v30), BV_CONCAT(BV_CONCAT(BV_CONCAT(v37, v36), v35), v34), v2, v3);
  assert {:sourceloc} {:sourceloc_num 53} true;
  $$texCoded[0] := BV_EXTRACT(v38, 32, 0);
  assert {:sourceloc} {:sourceloc_num 54} true;
  $$texCoded[1] := BV_EXTRACT(v38, 64, 32);
  assert {:sourceloc} {:sourceloc_num 55} true;
  v39 := $$texCoded[0];
  assert {:sourceloc} {:sourceloc_num 56} true;
  $$5[0] := v39;
  assert {:sourceloc} {:sourceloc_num 57} true;
  v40 := $$texCoded[1];
  assert {:sourceloc} {:sourceloc_num 58} true;
  $$5[1] := v40;
  assert {:sourceloc} {:sourceloc_num 59} true;
  v41 := $$5[0];
  assert {:sourceloc} {:sourceloc_num 60} true;
  v42 := $$5[1];
  assert {:sourceloc} {:sourceloc_num 61} true;
  $$obj.i[0] := v41;
  assert {:sourceloc} {:sourceloc_num 62} true;
  $$obj.i[1] := v42;
  assert {:sourceloc} {:sourceloc_num 63} true;
  v43 := $$obj.i[0];
  assert {:sourceloc} {:sourceloc_num 64} true;
  v44 := $$obj.i[1];
  call {:sourceloc_num 65}   v45 := $_Z8tex2DLodI6float4ET_yfff(BV64_OR(BV32_ZEXT64(v43), BV64_SHL(BV32_ZEXT64(v44), 32)), v2, FSUB32(1065353216, v3), $lod);
  assert {:sourceloc} {:sourceloc_num 66} true;
  $$color[0] := BV_EXTRACT(v45, 32, 0);
  assert {:sourceloc} {:sourceloc_num 67} true;
  $$color[1] := BV_EXTRACT(v45, 64, 32);
  assert {:sourceloc} {:sourceloc_num 68} true;
  $$color[2] := BV_EXTRACT(v45, 96, 64);
  assert {:sourceloc} {:sourceloc_num 69} true;
  $$color[3] := BV_EXTRACT(v45, 128, 96);
  assert {:sourceloc} {:sourceloc_num 70} true;
  v46 := $$color[0];
  assert {:sourceloc} {:sourceloc_num 71} true;
  $$8[0] := v46;
  assert {:sourceloc} {:sourceloc_num 72} true;
  v47 := $$color[1];
  assert {:sourceloc} {:sourceloc_num 73} true;
  $$8[1] := v47;
  assert {:sourceloc} {:sourceloc_num 74} true;
  v48 := $$color[2];
  assert {:sourceloc} {:sourceloc_num 75} true;
  $$8[2] := v48;
  assert {:sourceloc} {:sourceloc_num 76} true;
  v49 := $$color[3];
  assert {:sourceloc} {:sourceloc_num 77} true;
  $$8[3] := v49;
  assert {:sourceloc} {:sourceloc_num 78} true;
  v50 := $$8[0];
  assert {:sourceloc} {:sourceloc_num 79} true;
  v51 := $$8[1];
  assert {:sourceloc} {:sourceloc_num 80} true;
  v52 := $$8[2];
  assert {:sourceloc} {:sourceloc_num 81} true;
  v53 := $$8[3];
  assert {:sourceloc} {:sourceloc_num 82} true;
  $$a.i[0] := v50;
  assert {:sourceloc} {:sourceloc_num 83} true;
  $$a.i[1] := v51;
  assert {:sourceloc} {:sourceloc_num 84} true;
  $$a.i[2] := v52;
  assert {:sourceloc} {:sourceloc_num 85} true;
  $$a.i[3] := v53;
  assert {:sourceloc} {:sourceloc_num 86} true;
  v54 := $$a.i[0];
  assert {:sourceloc} {:sourceloc_num 87} true;
  v55 := $$a.i[1];
  assert {:sourceloc} {:sourceloc_num 88} true;
  v56 := $$a.i[2];
  assert {:sourceloc} {:sourceloc_num 89} true;
  v57 := $$a.i[3];
  assert {:sourceloc} {:sourceloc_num 90} true;
  $$0[0] := FMUL32(v54, 1132396544);
  assert {:sourceloc} {:sourceloc_num 91} true;
  $$0[1] := FMUL32(v55, 1132396544);
  assert {:sourceloc} {:sourceloc_num 92} true;
  $$0[2] := FMUL32(v56, 1132396544);
  assert {:sourceloc} {:sourceloc_num 93} true;
  $$0[3] := FMUL32(v57, 1132396544);
  assert {:sourceloc} {:sourceloc_num 94} true;
  v58 := $$0[0];
  assert {:sourceloc} {:sourceloc_num 95} true;
  v59 := $$0[1];
  assert {:sourceloc} {:sourceloc_num 96} true;
  v60 := $$0[2];
  assert {:sourceloc} {:sourceloc_num 97} true;
  v61 := $$0[3];
  assert {:sourceloc} {:sourceloc_num 98} true;
  $$1[0] := v58;
  assert {:sourceloc} {:sourceloc_num 99} true;
  $$1[1] := v59;
  assert {:sourceloc} {:sourceloc_num 100} true;
  $$1[2] := v60;
  assert {:sourceloc} {:sourceloc_num 101} true;
  $$1[3] := v61;
  assert {:sourceloc} {:sourceloc_num 102} true;
  v62 := $$1[0];
  assert {:sourceloc} {:sourceloc_num 103} true;
  v63 := $$1[1];
  assert {:sourceloc} {:sourceloc_num 104} true;
  v64 := $$1[2];
  assert {:sourceloc} {:sourceloc_num 105} true;
  v65 := $$1[3];
  assert {:sourceloc} {:sourceloc_num 106} true;
  $$7[0] := v62;
  assert {:sourceloc} {:sourceloc_num 107} true;
  $$7[1] := v63;
  assert {:sourceloc} {:sourceloc_num 108} true;
  $$7[2] := v64;
  assert {:sourceloc} {:sourceloc_num 109} true;
  $$7[3] := v65;
  assert {:sourceloc} {:sourceloc_num 110} true;
  v66 := $$7[0];
  assert {:sourceloc} {:sourceloc_num 111} true;
  v67 := $$7[1];
  assert {:sourceloc} {:sourceloc_num 112} true;
  v68 := $$7[2];
  assert {:sourceloc} {:sourceloc_num 113} true;
  v69 := $$7[3];
  assert {:sourceloc} {:sourceloc_num 114} true;
  $$vec.i[0] := v66;
  assert {:sourceloc} {:sourceloc_num 115} true;
  $$vec.i[1] := v67;
  assert {:sourceloc} {:sourceloc_num 116} true;
  $$vec.i[2] := v68;
  assert {:sourceloc} {:sourceloc_num 117} true;
  $$vec.i[3] := v69;
  assert {:sourceloc} {:sourceloc_num 118} true;
  v70 := $$vec.i[0];
  assert {:sourceloc} {:sourceloc_num 119} true;
  v71 := $$vec.i[1];
  assert {:sourceloc} {:sourceloc_num 120} true;
  v72 := $$vec.i[2];
  assert {:sourceloc} {:sourceloc_num 121} true;
  v73 := $$vec.i[3];
  assert {:sourceloc} {:sourceloc_num 122} true;
  $$2[0] := FP32_TO_UI8(v70);
  assert {:sourceloc} {:sourceloc_num 123} true;
  $$2[1] := FP32_TO_UI8(v71);
  assert {:sourceloc} {:sourceloc_num 124} true;
  $$2[2] := FP32_TO_UI8(v72);
  assert {:sourceloc} {:sourceloc_num 125} true;
  $$2[3] := FP32_TO_UI8(v73);
  assert {:sourceloc} {:sourceloc_num 126} true;
  v74 := $$2[0];
  assert {:sourceloc} {:sourceloc_num 127} true;
  v75 := $$2[1];
  assert {:sourceloc} {:sourceloc_num 128} true;
  v76 := $$2[2];
  assert {:sourceloc} {:sourceloc_num 129} true;
  v77 := $$2[3];
  assert {:sourceloc} {:sourceloc_num 130} true;
  $$3[0] := v74;
  assert {:sourceloc} {:sourceloc_num 131} true;
  $$3[1] := v75;
  assert {:sourceloc} {:sourceloc_num 132} true;
  $$3[2] := v76;
  assert {:sourceloc} {:sourceloc_num 133} true;
  $$3[3] := v77;
  assert {:sourceloc} {:sourceloc_num 134} true;
  v78 := $$3[0];
  assert {:sourceloc} {:sourceloc_num 135} true;
  v79 := $$3[1];
  assert {:sourceloc} {:sourceloc_num 136} true;
  v80 := $$3[2];
  assert {:sourceloc} {:sourceloc_num 137} true;
  v81 := $$3[3];
  assert {:sourceloc} {:sourceloc_num 138} true;
  $$6[0] := v78;
  assert {:sourceloc} {:sourceloc_num 139} true;
  $$6[1] := v79;
  assert {:sourceloc} {:sourceloc_num 140} true;
  $$6[2] := v80;
  assert {:sourceloc} {:sourceloc_num 141} true;
  $$6[3] := v81;
  assert {:sourceloc} {:sourceloc_num 142} true;
  v82 := $$6[0];
  assert {:sourceloc} {:sourceloc_num 143} true;
  $$d_output[BV32_MUL(BV32_ADD(BV32_MUL(v1, $imageW), v0), 4)] := v82;
  assert {:sourceloc} {:sourceloc_num 144} true;
  v83 := $$6[1];
  assert {:sourceloc} {:sourceloc_num 145} true;
  $$d_output[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v1, $imageW), v0), 4), 1)] := v83;
  assert {:sourceloc} {:sourceloc_num 146} true;
  v84 := $$6[2];
  assert {:sourceloc} {:sourceloc_num 147} true;
  $$d_output[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v1, $imageW), v0), 4), 2)] := v84;
  assert {:sourceloc} {:sourceloc_num 148} true;
  v85 := $$6[3];
  assert {:sourceloc} {:sourceloc_num 149} true;
  $$d_output[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v1, $imageW), v0), 4), 3)] := v85;
  goto $3;
$3:
  assert {:block_sourceloc} {:sourceloc_num 150} true;
  return;
$truebb:
  assume {:partition} v4;
  assert {:block_sourceloc} {:sourceloc_num 151} true;
  goto $1;
$falsebb:
  assume {:partition} !v4;
  assert {:block_sourceloc} {:sourceloc_num 152} true;
  goto $3;
$truebb0:
  assume {:partition} v5;
  assert {:block_sourceloc} {:sourceloc_num 153} true;
  goto $2;
$falsebb0:
  assume {:partition} !v5;
  assert {:block_sourceloc} {:sourceloc_num 154} true;
  goto $3;
}
procedure {:source_name "_Z5tex2DI5uint2ET_7textureIS1_Li2EL19cudaTextureReadMode0EEff"} $_Z5tex2DI5uint2ET_7textureIS1_Li2EL19cudaTextureReadMode0EEff($0:int, $1:int, $2:int, $3:int, $4:int) returns ($ret:int);
procedure {:source_name "_Z8tex2DLodI6float4ET_yfff"} $_Z8tex2DLodI6float4ET_yfff($0:int, $1:int, $2:int, $3:int) returns ($ret:int);
axiom (if group_size_z == 1 then 1 else 0) != 0;
axiom (if num_groups_z == 1 then 1 else 0) != 0;
axiom (if group_size_x == 16 then 1 else 0) != 0;
axiom (if group_size_y == 16 then 1 else 0) != 0;
axiom (if num_groups_x == 32 then 1 else 0) != 0;
axiom (if num_groups_y == 32 then 1 else 0) != 0;
