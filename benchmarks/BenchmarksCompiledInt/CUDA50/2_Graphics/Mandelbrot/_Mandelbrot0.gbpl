type _SIZE_T_TYPE = bv32;

procedure _ATOMIC_OP8(x : [int]int, y : int) returns (z : int, A : [int]int);
procedure _ATOMIC_OP32(x : [int]int, y : int) returns (z : int, A : [int]int);
var {:source_name "dst"} {:global} $$dst : [int]int;
axiom {:array_info "$$dst"} {:global} {:elem_width 8} {:source_name "dst"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$dst : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$dst : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$dst : bool;

var {:source_name "colors"} $$colors : [int]int;
axiom {:array_info "$$colors"} {:elem_width 8} {:source_name "colors"} {:source_elem_width 32} {:source_dimensions "1"} true;

var {:source_name "color"} $$color : [int]int;
axiom {:array_info "$$color"} {:elem_width 8} {:source_name "color"} {:source_elem_width 32} {:source_dimensions "1"} true;

var {:source_name "blockCounter"} {:global} $$blockCounter : [int]int;
axiom {:array_info "$$blockCounter"} {:global} {:elem_width 32} {:source_name "blockCounter"} {:source_elem_width 32} {:source_dimensions "1"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$blockCounter : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$blockCounter : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$blockCounter : bool;

var {:source_name "blockIndex"} {:group_shared} $$_ZZ11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiibE10blockIndex : [int]int;
axiom {:array_info "$$_ZZ11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiibE10blockIndex"} {:group_shared} {:elem_width 32} {:source_name "blockIndex"} {:source_elem_width 32} {:source_dimensions "1"} true;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiibE10blockIndex : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiibE10blockIndex : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiibE10blockIndex : bool;

var {:source_name "blockX"} {:group_shared} $$_ZZ11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiibE6blockX : [int]int;
axiom {:array_info "$$_ZZ11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiibE6blockX"} {:group_shared} {:elem_width 32} {:source_name "blockX"} {:source_elem_width 32} {:source_dimensions "1"} true;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiibE6blockX : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiibE6blockX : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiibE6blockX : bool;

var {:source_name "blockY"} {:group_shared} $$_ZZ11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiibE6blockY : [int]int;
axiom {:array_info "$$_ZZ11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiibE6blockY"} {:group_shared} {:elem_width 32} {:source_name "blockY"} {:source_elem_width 32} {:source_dimensions "1"} true;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiibE6blockY : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiibE6blockY : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiibE6blockY : bool;

const _WATCHED_OFFSET : int;
const {:group_size_x} group_size_x : int;
const {:group_size_y} group_size_y : int;
const {:group_size_z} group_size_z : int;
const {:local_id_x} local_id_x : int;
const {:local_id_y} local_id_y : int;
const {:num_groups_x} num_groups_x : int;
const {:num_groups_y} num_groups_y : int;
const {:num_groups_z} num_groups_z : int;
function BV_EXTRACT(int, int, int) : int;
function FADD32(int, int) : int;
function FLT32(int, int) : bool;
function FMUL32(int, int) : int;
function FSUB32(int, int) : int;
function SI32_TO_FP32(int) : int;
function {:inline true} BV32_ADD(x : int, y : int) : int {
  x + y
}
function {:inline true} BV32_MUL(x : int, y : int) : int {
  x * y
}
function {:inline true} BV32_SDIV(x : int, y : int) : int {
  x div y
}
function {:inline true} BV32_SGT(x : int, y : int) : bool {
  x > y
}
function {:inline true} BV32_SLE(x : int, y : int) : bool {
  x <= y
}
function {:inline true} BV32_SLT(x : int, y : int) : bool {
  x < y
}
function {:inline true} BV32_SUB(x : int, y : int) : int {
  x - y
}
function {:inline true} BV32_UDIV(x : int, y : int) : int {
  x div y
}
function {:inline true} BV32_UGE(x : int, y : int) : bool {
  x >= y
}
function {:inline true} BV32_UREM(x : int, y : int) : int {
  x mod y
}
function {:inline true} BV8_ZEXT32(x : int) : int {
  x
}
procedure {:source_name "Mandelbrot0<float>"} {:kernel} $_Z11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiib($imageW:int, $imageH:int, $crunch:int, $xOff:int, $yOff:int, $xJP:int, $yJP:int, $scale:int, $colors.coerce0:int, $colors.coerce1:int, $colors.coerce2:int, $colors.coerce3:int, $frame:int, $animationFrame:int, $gridWidth:int, $numBlocks:int, $isJ:int)
requires {:sourceloc_num 0} (if $imageW == 800 then 1 else 0) != 0;
requires {:sourceloc_num 1} (if $imageH == 600 then 1 else 0) != 0;
requires {:sourceloc_num 2} (if $gridWidth == 25 then 1 else 0) != 0;
requires {:sourceloc_num 3} (if $numBlocks == 475 then 1 else 0) != 0;
{
  var $y.i.0:int;
  var $x.i.0:int;
  var $xx.i.0:int;
  var $yy.i.0:int;
  var $xC.i.0:int;
  var $yC.i.0:int;
  var $y.i.1:int;
  var $x.i.1:int;
  var $xx.i.1:int;
  var $yy.i.1:int;
  var $i.i.0:int;
  var $.0:int;
  var $0:int;
  var v80:int;
  var v81:bool;
  var v83:int;
  var v82:int;
  var v0:bool;
  var v1:bool;
  var v2:int;
  var v3:int;
  var v4:int;
  var v5:int;
  var v6:bool;
  var v7:int;
  var v8:int;
  var v9:int;
  var v10:int;
  var v11:bool;
  var v12:bool;
  var v13:int;
  var v14:int;
  var v15:bool;
  var v16:bool;
  var v18:int;
  var v17:int;
  var v19:int;
  var v20:int;
  var v21:bool;
  var v23:int;
  var v22:int;
  var v24:int;
  var v25:int;
  var v26:bool;
  var v28:int;
  var v27:int;
  var v29:int;
  var v30:int;
  var v31:bool;
  var v33:int;
  var v32:int;
  var v34:int;
  var v35:int;
  var v36:bool;
  var v38:int;
  var v37:int;
  var v39:int;
  var v40:int;
  var v41:bool;
  var v43:int;
  var v42:int;
  var v44:int;
  var v45:int;
  var v46:bool;
  var v48:int;
  var v47:int;
  var v49:int;
  var v50:int;
  var v51:bool;
  var v53:int;
  var v52:int;
  var v54:int;
  var v55:int;
  var v56:bool;
  var v58:int;
  var v57:int;
  var v59:int;
  var v60:int;
  var v61:bool;
  var v63:int;
  var v62:int;
  var v64:int;
  var v65:int;
  var v66:bool;
  var v68:int;
  var v67:int;
  var v69:int;
  var v70:int;
  var v71:bool;
  var v73:int;
  var v72:int;
  var v74:int;
  var v75:int;
  var v76:bool;
  var v78:int;
  var v77:int;
  var v79:int;
  var v84:int;
  var v85:int;
  var v86:bool;
  var v88:int;
  var v87:int;
  var v89:int;
  var v90:int;
  var v91:bool;
  var v93:int;
  var v92:int;
  var v94:int;
  var v95:int;
  var v96:bool;
  var v98:int;
  var v97:int;
  var v99:int;
  var v100:int;
  var v101:bool;
  var v103:int;
  var v102:int;
  var v104:int;
  var v105:int;
  var v106:bool;
  var v108:int;
  var v107:int;
  var v109:int;
  var v110:int;
  var v111:int;
  var v112:bool;
  var v113:bool;
  var v115:int;
  var v114:int;
  var v116:bool;
  var v117:bool;
  var v118:int;
  var v119:int;
  var v120:int;
  var v121:int;
  var v122:int;
  var v123:bool;
  var v124:int;
  var v125:int;
  var v126:int;
  var v127:int;
  var v128:int;
  var v129:int;
  var v130:int;
  var v131:int;
  var v132:int;
  var v133:int;
  var v134:int;
  var v135:int;
$0:
  assert {:block_sourceloc} {:sourceloc_num 4} true;
  $$colors[0] := $colors.coerce0;
  $$colors[1] := $colors.coerce1;
  $$colors[2] := $colors.coerce2;
  $$colors[3] := $colors.coerce3;
  goto $1;
$1:
  assert {:block_sourceloc} {:sourceloc_num 5} true;
  call {:sourceloc_num 6} $bugle_barrier(-1, -1);
  v0 := local_id_x == 0;
  goto $truebb, $falsebb;
$2:
  assert {:block_sourceloc} {:sourceloc_num 7} true;
  v1 := local_id_y == 0;
  goto $truebb0, $falsebb0;
$3:
  assert {:block_sourceloc} {:sourceloc_num 8} true;
  assert {:sourceloc} {:sourceloc_num 9} true;
  call {:atomic} {:atomic_function "__atomicAdd_unsigned_int"} {:arg1 1} {:parts 1} {:part 1} v2, $$blockCounter := _ATOMIC_OP32($$blockCounter, 0);
  assert {:sourceloc} {:sourceloc_num 10} true;
  $$_ZZ11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiibE10blockIndex[0] := v2;
  assert {:sourceloc} {:sourceloc_num 11} true;
  v3 := $$_ZZ11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiibE10blockIndex[0];
  assert {:sourceloc} {:sourceloc_num 12} true;
  $$_ZZ11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiibE6blockX[0] := BV32_UREM(v3, $gridWidth);
  assert {:sourceloc} {:sourceloc_num 13} true;
  v4 := $$_ZZ11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiibE10blockIndex[0];
  assert {:sourceloc} {:sourceloc_num 14} true;
  $$_ZZ11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiibE6blockY[0] := BV32_UDIV(v4, $gridWidth);
  goto $4;
$4:
  assert {:block_sourceloc} {:sourceloc_num 15} true;
  call {:sourceloc_num 16} $bugle_barrier(-1, -1);
  assert {:sourceloc} {:sourceloc_num 17} true;
  v5 := $$_ZZ11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiibE10blockIndex[0];
  v6 := BV32_UGE(v5, $numBlocks);
  goto $truebb1, $falsebb1;
$5:
  assert {:block_sourceloc} {:sourceloc_num 18} true;
  goto $64;
$6:
  assert {:block_sourceloc} {:sourceloc_num 19} true;
  assert {:sourceloc} {:sourceloc_num 20} true;
  v7 := $$_ZZ11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiibE6blockX[0];
  v8 := BV32_ADD(BV32_MUL(group_size_x, v7), local_id_x);
  assert {:sourceloc} {:sourceloc_num 21} true;
  v9 := $$_ZZ11Mandelbrot0IfEvP6uchar4iiiT_S2_S2_S2_S2_S0_iiiibE6blockY[0];
  v10 := BV32_ADD(BV32_MUL(group_size_y, v9), local_id_y);
  v11 := BV32_SLT(v8, $imageW);
  goto $truebb2, $falsebb2;
$7:
  assert {:block_sourceloc} {:sourceloc_num 22} true;
  v12 := BV32_SLT(v10, $imageH);
  goto $truebb3, $falsebb3;
$8:
  assert {:block_sourceloc} {:sourceloc_num 23} true;
  v13 := FADD32(FMUL32(SI32_TO_FP32(v8), $scale), $xOff);
  v14 := FADD32(FMUL32(SI32_TO_FP32(v10), $scale), $yOff);
  v15 := $isJ == 1;
  goto $truebb4, $falsebb4;
$9:
  assert {:block_sourceloc} {:sourceloc_num 24} true;
  $y.i.0, $x.i.0, $xx.i.0, $yy.i.0, $xC.i.0, $yC.i.0 := v14, v13, FMUL32(v13, v13), FMUL32(v14, v14), $xJP, $yJP;
  goto $11;
$10:
  assert {:block_sourceloc} {:sourceloc_num 25} true;
  $y.i.0, $x.i.0, $xx.i.0, $yy.i.0, $xC.i.0, $yC.i.0 := 0, 0, 0, 0, v13, v14;
  goto $11;
$11:
  assert {:block_sourceloc} {:sourceloc_num 26} true;
  $y.i.1, $x.i.1, $xx.i.1, $yy.i.1, $i.i.0 := $y.i.0, $x.i.0, $xx.i.0, $yy.i.0, $crunch;
  goto $12;
$12:
  assert {:block_sourceloc} {:sourceloc_num 27} true;
  v16 := FLT32(1082130432, FADD32($xx.i.1, $yy.i.1));
  goto $truebb5, $falsebb5;
$13:
  assert {:block_sourceloc} {:sourceloc_num 28} true;
  $.0 := BV32_SUB($i.i.0, 1);
  goto $_ZL14CalcMandelbrotIfEiT_S0_S0_S0_ib.exit;
$14:
  assert {:block_sourceloc} {:sourceloc_num 29} true;
  v17 := FADD32(FMUL32(FMUL32($x.i.1, $y.i.1), 1073741824), $yC.i.0);
  v18 := FADD32(FSUB32($xx.i.1, $yy.i.1), $xC.i.0);
  v19 := FMUL32(v17, v17);
  v20 := FMUL32(v18, v18);
  v21 := FLT32(1082130432, FADD32(v20, v19));
  goto $truebb6, $falsebb6;
$15:
  assert {:block_sourceloc} {:sourceloc_num 30} true;
  $.0 := BV32_SUB($i.i.0, 2);
  goto $_ZL14CalcMandelbrotIfEiT_S0_S0_S0_ib.exit;
$16:
  assert {:block_sourceloc} {:sourceloc_num 31} true;
  v22 := FADD32(FMUL32(FMUL32(v18, v17), 1073741824), $yC.i.0);
  v23 := FADD32(FSUB32(v20, v19), $xC.i.0);
  v24 := FMUL32(v22, v22);
  v25 := FMUL32(v23, v23);
  v26 := FLT32(1082130432, FADD32(v25, v24));
  goto $truebb7, $falsebb7;
$17:
  assert {:block_sourceloc} {:sourceloc_num 32} true;
  $.0 := BV32_SUB($i.i.0, 3);
  goto $_ZL14CalcMandelbrotIfEiT_S0_S0_S0_ib.exit;
$18:
  assert {:block_sourceloc} {:sourceloc_num 33} true;
  v27 := FADD32(FMUL32(FMUL32(v23, v22), 1073741824), $yC.i.0);
  v28 := FADD32(FSUB32(v25, v24), $xC.i.0);
  v29 := FMUL32(v27, v27);
  v30 := FMUL32(v28, v28);
  v31 := FLT32(1082130432, FADD32(v30, v29));
  goto $truebb8, $falsebb8;
$19:
  assert {:block_sourceloc} {:sourceloc_num 34} true;
  $.0 := BV32_SUB($i.i.0, 4);
  goto $_ZL14CalcMandelbrotIfEiT_S0_S0_S0_ib.exit;
$20:
  assert {:block_sourceloc} {:sourceloc_num 35} true;
  v32 := FADD32(FMUL32(FMUL32(v28, v27), 1073741824), $yC.i.0);
  v33 := FADD32(FSUB32(v30, v29), $xC.i.0);
  v34 := FMUL32(v32, v32);
  v35 := FMUL32(v33, v33);
  v36 := FLT32(1082130432, FADD32(v35, v34));
  goto $truebb9, $falsebb9;
$21:
  assert {:block_sourceloc} {:sourceloc_num 36} true;
  $.0 := BV32_SUB($i.i.0, 5);
  goto $_ZL14CalcMandelbrotIfEiT_S0_S0_S0_ib.exit;
$22:
  assert {:block_sourceloc} {:sourceloc_num 37} true;
  v37 := FADD32(FMUL32(FMUL32(v33, v32), 1073741824), $yC.i.0);
  v38 := FADD32(FSUB32(v35, v34), $xC.i.0);
  v39 := FMUL32(v37, v37);
  v40 := FMUL32(v38, v38);
  v41 := FLT32(1082130432, FADD32(v40, v39));
  goto $truebb10, $falsebb10;
$23:
  assert {:block_sourceloc} {:sourceloc_num 38} true;
  $.0 := BV32_SUB($i.i.0, 6);
  goto $_ZL14CalcMandelbrotIfEiT_S0_S0_S0_ib.exit;
$24:
  assert {:block_sourceloc} {:sourceloc_num 39} true;
  v42 := FADD32(FMUL32(FMUL32(v38, v37), 1073741824), $yC.i.0);
  v43 := FADD32(FSUB32(v40, v39), $xC.i.0);
  v44 := FMUL32(v42, v42);
  v45 := FMUL32(v43, v43);
  v46 := FLT32(1082130432, FADD32(v45, v44));
  goto $truebb11, $falsebb11;
$25:
  assert {:block_sourceloc} {:sourceloc_num 40} true;
  $.0 := BV32_SUB($i.i.0, 7);
  goto $_ZL14CalcMandelbrotIfEiT_S0_S0_S0_ib.exit;
$26:
  assert {:block_sourceloc} {:sourceloc_num 41} true;
  v47 := FADD32(FMUL32(FMUL32(v43, v42), 1073741824), $yC.i.0);
  v48 := FADD32(FSUB32(v45, v44), $xC.i.0);
  v49 := FMUL32(v47, v47);
  v50 := FMUL32(v48, v48);
  v51 := FLT32(1082130432, FADD32(v50, v49));
  goto $truebb12, $falsebb12;
$27:
  assert {:block_sourceloc} {:sourceloc_num 42} true;
  $.0 := BV32_SUB($i.i.0, 8);
  goto $_ZL14CalcMandelbrotIfEiT_S0_S0_S0_ib.exit;
$28:
  assert {:block_sourceloc} {:sourceloc_num 43} true;
  v52 := FADD32(FMUL32(FMUL32(v48, v47), 1073741824), $yC.i.0);
  v53 := FADD32(FSUB32(v50, v49), $xC.i.0);
  v54 := FMUL32(v52, v52);
  v55 := FMUL32(v53, v53);
  v56 := FLT32(1082130432, FADD32(v55, v54));
  goto $truebb13, $falsebb13;
$29:
  assert {:block_sourceloc} {:sourceloc_num 44} true;
  $.0 := BV32_SUB($i.i.0, 9);
  goto $_ZL14CalcMandelbrotIfEiT_S0_S0_S0_ib.exit;
$30:
  assert {:block_sourceloc} {:sourceloc_num 45} true;
  v57 := FADD32(FMUL32(FMUL32(v53, v52), 1073741824), $yC.i.0);
  v58 := FADD32(FSUB32(v55, v54), $xC.i.0);
  v59 := FMUL32(v57, v57);
  v60 := FMUL32(v58, v58);
  v61 := FLT32(1082130432, FADD32(v60, v59));
  goto $truebb14, $falsebb14;
$31:
  assert {:block_sourceloc} {:sourceloc_num 46} true;
  $.0 := BV32_SUB($i.i.0, 10);
  goto $_ZL14CalcMandelbrotIfEiT_S0_S0_S0_ib.exit;
$32:
  assert {:block_sourceloc} {:sourceloc_num 47} true;
  v62 := FADD32(FMUL32(FMUL32(v58, v57), 1073741824), $yC.i.0);
  v63 := FADD32(FSUB32(v60, v59), $xC.i.0);
  v64 := FMUL32(v62, v62);
  v65 := FMUL32(v63, v63);
  v66 := FLT32(1082130432, FADD32(v65, v64));
  goto $truebb15, $falsebb15;
$33:
  assert {:block_sourceloc} {:sourceloc_num 48} true;
  $.0 := BV32_SUB($i.i.0, 11);
  goto $_ZL14CalcMandelbrotIfEiT_S0_S0_S0_ib.exit;
$34:
  assert {:block_sourceloc} {:sourceloc_num 49} true;
  v67 := FADD32(FMUL32(FMUL32(v63, v62), 1073741824), $yC.i.0);
  v68 := FADD32(FSUB32(v65, v64), $xC.i.0);
  v69 := FMUL32(v67, v67);
  v70 := FMUL32(v68, v68);
  v71 := FLT32(1082130432, FADD32(v70, v69));
  goto $truebb16, $falsebb16;
$35:
  assert {:block_sourceloc} {:sourceloc_num 50} true;
  $.0 := BV32_SUB($i.i.0, 12);
  goto $_ZL14CalcMandelbrotIfEiT_S0_S0_S0_ib.exit;
$36:
  assert {:block_sourceloc} {:sourceloc_num 51} true;
  v72 := FADD32(FMUL32(FMUL32(v68, v67), 1073741824), $yC.i.0);
  v73 := FADD32(FSUB32(v70, v69), $xC.i.0);
  v74 := FMUL32(v72, v72);
  v75 := FMUL32(v73, v73);
  v76 := FLT32(1082130432, FADD32(v75, v74));
  goto $truebb17, $falsebb17;
$37:
  assert {:block_sourceloc} {:sourceloc_num 52} true;
  $.0 := BV32_SUB($i.i.0, 13);
  goto $_ZL14CalcMandelbrotIfEiT_S0_S0_S0_ib.exit;
$38:
  assert {:block_sourceloc} {:sourceloc_num 53} true;
  v77 := FADD32(FMUL32(FMUL32(v73, v72), 1073741824), $yC.i.0);
  v78 := FADD32(FSUB32(v75, v74), $xC.i.0);
  v79 := FMUL32(v77, v77);
  v80 := FMUL32(v78, v78);
  v81 := FLT32(1082130432, FADD32(v80, v79));
  goto $truebb18, $falsebb18;
$39:
  assert {:block_sourceloc} {:sourceloc_num 54} true;
  $.0 := BV32_SUB($i.i.0, 14);
  goto $_ZL14CalcMandelbrotIfEiT_S0_S0_S0_ib.exit;
$40:
  assert {:block_sourceloc} {:sourceloc_num 55} true;
  v82 := FADD32(FMUL32(FMUL32(v78, v77), 1073741824), $yC.i.0);
  v83 := FADD32(FSUB32(v80, v79), $xC.i.0);
  v84 := FMUL32(v82, v82);
  v85 := FMUL32(v83, v83);
  v86 := FLT32(1082130432, FADD32(v85, v84));
  goto $truebb19, $falsebb19;
$41:
  assert {:block_sourceloc} {:sourceloc_num 56} true;
  $.0 := BV32_SUB($i.i.0, 15);
  goto $_ZL14CalcMandelbrotIfEiT_S0_S0_S0_ib.exit;
$42:
  assert {:block_sourceloc} {:sourceloc_num 57} true;
  v87 := FADD32(FMUL32(FMUL32(v83, v82), 1073741824), $yC.i.0);
  v88 := FADD32(FSUB32(v85, v84), $xC.i.0);
  v89 := FMUL32(v87, v87);
  v90 := FMUL32(v88, v88);
  v91 := FLT32(1082130432, FADD32(v90, v89));
  goto $truebb20, $falsebb20;
$43:
  assert {:block_sourceloc} {:sourceloc_num 58} true;
  $.0 := BV32_SUB($i.i.0, 16);
  goto $_ZL14CalcMandelbrotIfEiT_S0_S0_S0_ib.exit;
$44:
  assert {:block_sourceloc} {:sourceloc_num 59} true;
  v92 := FADD32(FMUL32(FMUL32(v88, v87), 1073741824), $yC.i.0);
  v93 := FADD32(FSUB32(v90, v89), $xC.i.0);
  v94 := FMUL32(v92, v92);
  v95 := FMUL32(v93, v93);
  v96 := FLT32(1082130432, FADD32(v95, v94));
  goto $truebb21, $falsebb21;
$45:
  assert {:block_sourceloc} {:sourceloc_num 60} true;
  $.0 := BV32_SUB($i.i.0, 17);
  goto $_ZL14CalcMandelbrotIfEiT_S0_S0_S0_ib.exit;
$46:
  assert {:block_sourceloc} {:sourceloc_num 61} true;
  v97 := FADD32(FMUL32(FMUL32(v93, v92), 1073741824), $yC.i.0);
  v98 := FADD32(FSUB32(v95, v94), $xC.i.0);
  v99 := FMUL32(v97, v97);
  v100 := FMUL32(v98, v98);
  v101 := FLT32(1082130432, FADD32(v100, v99));
  goto $truebb22, $falsebb22;
$47:
  assert {:block_sourceloc} {:sourceloc_num 62} true;
  $.0 := BV32_SUB($i.i.0, 18);
  goto $_ZL14CalcMandelbrotIfEiT_S0_S0_S0_ib.exit;
$48:
  assert {:block_sourceloc} {:sourceloc_num 63} true;
  v102 := FADD32(FMUL32(FMUL32(v98, v97), 1073741824), $yC.i.0);
  v103 := FADD32(FSUB32(v100, v99), $xC.i.0);
  v104 := FMUL32(v102, v102);
  v105 := FMUL32(v103, v103);
  v106 := FLT32(1082130432, FADD32(v105, v104));
  goto $truebb23, $falsebb23;
$49:
  assert {:block_sourceloc} {:sourceloc_num 64} true;
  $.0 := BV32_SUB($i.i.0, 19);
  goto $_ZL14CalcMandelbrotIfEiT_S0_S0_S0_ib.exit;
$50:
  assert {:block_sourceloc} {:sourceloc_num 65} true;
  v107 := FADD32(FMUL32(FMUL32(v103, v102), 1073741824), $yC.i.0);
  v108 := FADD32(FSUB32(v105, v104), $xC.i.0);
  v109 := FMUL32(v107, v107);
  v110 := FMUL32(v108, v108);
  v111 := BV32_SUB($i.i.0, 20);
  v112 := BV32_SLE(v111, 0);
  goto $truebb24, $falsebb24;
$51:
  assert {:block_sourceloc} {:sourceloc_num 66} true;
  v113 := FLT32(1082130432, FADD32(v110, v109));
  goto $truebb25, $falsebb25;
$52:
  assert {:block_sourceloc} {:sourceloc_num 67} true;
  $.0 := v111;
  goto $_ZL14CalcMandelbrotIfEiT_S0_S0_S0_ib.exit;
$53:
  assert {:block_sourceloc} {:sourceloc_num 68} true;
  v114 := FADD32(FMUL32(FMUL32(v108, v107), 1073741824), $yC.i.0);
  v115 := FADD32(FSUB32(v110, v109), $xC.i.0);
  $y.i.1, $x.i.1, $xx.i.1, $yy.i.1, $i.i.0 := v114, v115, FMUL32(v115, v115), FMUL32(v114, v114), v111;
  goto $12;
$_ZL14CalcMandelbrotIfEiT_S0_S0_S0_ib.exit:
  assert {:block_sourceloc} {:sourceloc_num 69} true;
  v116 := BV32_SGT($.0, 0);
  goto $truebb26, $falsebb26;
$54:
  assert {:block_sourceloc} {:sourceloc_num 70} true;
  $0 := BV32_SUB($crunch, $.0);
  goto $56;
$55:
  assert {:block_sourceloc} {:sourceloc_num 71} true;
  $0 := 0;
  goto $56;
$56:
  assert {:block_sourceloc} {:sourceloc_num 72} true;
  v117 := $0 != 0;
  goto $truebb27, $falsebb27;
$57:
  assert {:block_sourceloc} {:sourceloc_num 73} true;
  v118 := BV32_ADD($0, $animationFrame);
  assert {:sourceloc} {:sourceloc_num 74} true;
  v119 := $$colors[0];
  assert {:sourceloc} {:sourceloc_num 75} true;
  $$color[0] := BV_EXTRACT(BV32_MUL(v118, BV8_ZEXT32(v119)), 8, 0);
  assert {:sourceloc} {:sourceloc_num 76} true;
  v120 := $$colors[1];
  assert {:sourceloc} {:sourceloc_num 77} true;
  $$color[1] := BV_EXTRACT(BV32_MUL(v118, BV8_ZEXT32(v120)), 8, 0);
  assert {:sourceloc} {:sourceloc_num 78} true;
  v121 := $$colors[2];
  assert {:sourceloc} {:sourceloc_num 79} true;
  $$color[2] := BV_EXTRACT(BV32_MUL(v118, BV8_ZEXT32(v121)), 8, 0);
  goto $59;
$58:
  assert {:block_sourceloc} {:sourceloc_num 80} true;
  assert {:sourceloc} {:sourceloc_num 81} true;
  $$color[0] := 0;
  assert {:sourceloc} {:sourceloc_num 82} true;
  $$color[1] := 0;
  assert {:sourceloc} {:sourceloc_num 83} true;
  $$color[2] := 0;
  goto $59;
$59:
  assert {:block_sourceloc} {:sourceloc_num 84} true;
  v122 := BV32_ADD(BV32_MUL($imageW, v10), v8);
  v123 := $frame == 0;
  goto $truebb28, $falsebb28;
$60:
  assert {:block_sourceloc} {:sourceloc_num 85} true;
  assert {:sourceloc} {:sourceloc_num 86} true;
  $$color[3] := 0;
  assert {:sourceloc} {:sourceloc_num 87} true;
  v124 := $$color[0];
  assert {:sourceloc} {:sourceloc_num 88} true;
  $$dst[BV32_MUL(v122, 4)] := v124;
  assert {:sourceloc} {:sourceloc_num 89} true;
  v125 := $$color[1];
  assert {:sourceloc} {:sourceloc_num 90} true;
  $$dst[BV32_ADD(BV32_MUL(v122, 4), 1)] := v125;
  assert {:sourceloc} {:sourceloc_num 91} true;
  v126 := $$color[2];
  assert {:sourceloc} {:sourceloc_num 92} true;
  $$dst[BV32_ADD(BV32_MUL(v122, 4), 2)] := v126;
  assert {:sourceloc} {:sourceloc_num 93} true;
  v127 := $$color[3];
  assert {:sourceloc} {:sourceloc_num 94} true;
  $$dst[BV32_ADD(BV32_MUL(v122, 4), 3)] := v127;
  goto $62;
$61:
  assert {:block_sourceloc} {:sourceloc_num 95} true;
  v128 := BV32_ADD($frame, 1);
  v129 := BV32_SDIV(v128, 2);
  assert {:sourceloc} {:sourceloc_num 96} true;
  v130 := $$dst[BV32_MUL(v122, 4)];
  assert {:sourceloc} {:sourceloc_num 97} true;
  v131 := $$color[0];
  assert {:sourceloc} {:sourceloc_num 98} true;
  $$dst[BV32_MUL(v122, 4)] := BV_EXTRACT(BV32_SDIV(BV32_ADD(BV32_ADD(BV32_MUL(BV8_ZEXT32(v130), $frame), BV8_ZEXT32(v131)), v129), v128), 8, 0);
  assert {:sourceloc} {:sourceloc_num 99} true;
  v132 := $$dst[BV32_ADD(BV32_MUL(v122, 4), 1)];
  assert {:sourceloc} {:sourceloc_num 100} true;
  v133 := $$color[1];
  assert {:sourceloc} {:sourceloc_num 101} true;
  $$dst[BV32_ADD(BV32_MUL(v122, 4), 1)] := BV_EXTRACT(BV32_SDIV(BV32_ADD(BV32_ADD(BV32_MUL(BV8_ZEXT32(v132), $frame), BV8_ZEXT32(v133)), v129), v128), 8, 0);
  assert {:sourceloc} {:sourceloc_num 102} true;
  v134 := $$dst[BV32_ADD(BV32_MUL(v122, 4), 2)];
  assert {:sourceloc} {:sourceloc_num 103} true;
  v135 := $$color[2];
  assert {:sourceloc} {:sourceloc_num 104} true;
  $$dst[BV32_ADD(BV32_MUL(v122, 4), 2)] := BV_EXTRACT(BV32_SDIV(BV32_ADD(BV32_ADD(BV32_MUL(BV8_ZEXT32(v134), $frame), BV8_ZEXT32(v135)), v129), v128), 8, 0);
  goto $62;
$62:
  assert {:block_sourceloc} {:sourceloc_num 105} true;
  goto $63;
$63:
  assert {:block_sourceloc} {:sourceloc_num 106} true;
  goto $1;
$64:
  assert {:block_sourceloc} {:sourceloc_num 107} true;
  return;
$truebb:
  assume {:partition} v0;
  assert {:block_sourceloc} {:sourceloc_num 108} true;
  goto $2;
$falsebb:
  assume {:partition} !v0;
  assert {:block_sourceloc} {:sourceloc_num 109} true;
  goto $4;
$truebb0:
  assume {:partition} v1;
  assert {:block_sourceloc} {:sourceloc_num 110} true;
  goto $3;
$falsebb0:
  assume {:partition} !v1;
  assert {:block_sourceloc} {:sourceloc_num 111} true;
  goto $4;
$truebb1:
  assume {:partition} v6;
  assert {:block_sourceloc} {:sourceloc_num 112} true;
  goto $5;
$falsebb1:
  assume {:partition} !v6;
  assert {:block_sourceloc} {:sourceloc_num 113} true;
  goto $6;
$truebb2:
  assume {:partition} v11;
  assert {:block_sourceloc} {:sourceloc_num 114} true;
  goto $7;
$falsebb2:
  assume {:partition} !v11;
  assert {:block_sourceloc} {:sourceloc_num 115} true;
  goto $63;
$truebb3:
  assume {:partition} v12;
  assert {:block_sourceloc} {:sourceloc_num 116} true;
  goto $8;
$falsebb3:
  assume {:partition} !v12;
  assert {:block_sourceloc} {:sourceloc_num 117} true;
  goto $63;
$truebb4:
  assume {:partition} v15;
  assert {:block_sourceloc} {:sourceloc_num 118} true;
  goto $9;
$falsebb4:
  assume {:partition} !v15;
  assert {:block_sourceloc} {:sourceloc_num 119} true;
  goto $10;
$truebb5:
  assume {:partition} v16;
  assert {:block_sourceloc} {:sourceloc_num 120} true;
  goto $13;
$falsebb5:
  assume {:partition} !v16;
  assert {:block_sourceloc} {:sourceloc_num 121} true;
  goto $14;
$truebb6:
  assume {:partition} v21;
  assert {:block_sourceloc} {:sourceloc_num 122} true;
  goto $15;
$falsebb6:
  assume {:partition} !v21;
  assert {:block_sourceloc} {:sourceloc_num 123} true;
  goto $16;
$truebb7:
  assume {:partition} v26;
  assert {:block_sourceloc} {:sourceloc_num 124} true;
  goto $17;
$falsebb7:
  assume {:partition} !v26;
  assert {:block_sourceloc} {:sourceloc_num 125} true;
  goto $18;
$truebb8:
  assume {:partition} v31;
  assert {:block_sourceloc} {:sourceloc_num 126} true;
  goto $19;
$falsebb8:
  assume {:partition} !v31;
  assert {:block_sourceloc} {:sourceloc_num 127} true;
  goto $20;
$truebb9:
  assume {:partition} v36;
  assert {:block_sourceloc} {:sourceloc_num 128} true;
  goto $21;
$falsebb9:
  assume {:partition} !v36;
  assert {:block_sourceloc} {:sourceloc_num 129} true;
  goto $22;
$truebb10:
  assume {:partition} v41;
  assert {:block_sourceloc} {:sourceloc_num 130} true;
  goto $23;
$falsebb10:
  assume {:partition} !v41;
  assert {:block_sourceloc} {:sourceloc_num 131} true;
  goto $24;
$truebb11:
  assume {:partition} v46;
  assert {:block_sourceloc} {:sourceloc_num 132} true;
  goto $25;
$falsebb11:
  assume {:partition} !v46;
  assert {:block_sourceloc} {:sourceloc_num 133} true;
  goto $26;
$truebb12:
  assume {:partition} v51;
  assert {:block_sourceloc} {:sourceloc_num 134} true;
  goto $27;
$falsebb12:
  assume {:partition} !v51;
  assert {:block_sourceloc} {:sourceloc_num 135} true;
  goto $28;
$truebb13:
  assume {:partition} v56;
  assert {:block_sourceloc} {:sourceloc_num 136} true;
  goto $29;
$falsebb13:
  assume {:partition} !v56;
  assert {:block_sourceloc} {:sourceloc_num 137} true;
  goto $30;
$truebb14:
  assume {:partition} v61;
  assert {:block_sourceloc} {:sourceloc_num 138} true;
  goto $31;
$falsebb14:
  assume {:partition} !v61;
  assert {:block_sourceloc} {:sourceloc_num 139} true;
  goto $32;
$truebb15:
  assume {:partition} v66;
  assert {:block_sourceloc} {:sourceloc_num 140} true;
  goto $33;
$falsebb15:
  assume {:partition} !v66;
  assert {:block_sourceloc} {:sourceloc_num 141} true;
  goto $34;
$truebb16:
  assume {:partition} v71;
  assert {:block_sourceloc} {:sourceloc_num 142} true;
  goto $35;
$falsebb16:
  assume {:partition} !v71;
  assert {:block_sourceloc} {:sourceloc_num 143} true;
  goto $36;
$truebb17:
  assume {:partition} v76;
  assert {:block_sourceloc} {:sourceloc_num 144} true;
  goto $37;
$falsebb17:
  assume {:partition} !v76;
  assert {:block_sourceloc} {:sourceloc_num 145} true;
  goto $38;
$truebb18:
  assume {:partition} v81;
  assert {:block_sourceloc} {:sourceloc_num 146} true;
  goto $39;
$falsebb18:
  assume {:partition} !v81;
  assert {:block_sourceloc} {:sourceloc_num 147} true;
  goto $40;
$truebb19:
  assume {:partition} v86;
  assert {:block_sourceloc} {:sourceloc_num 148} true;
  goto $41;
$falsebb19:
  assume {:partition} !v86;
  assert {:block_sourceloc} {:sourceloc_num 149} true;
  goto $42;
$truebb20:
  assume {:partition} v91;
  assert {:block_sourceloc} {:sourceloc_num 150} true;
  goto $43;
$falsebb20:
  assume {:partition} !v91;
  assert {:block_sourceloc} {:sourceloc_num 151} true;
  goto $44;
$truebb21:
  assume {:partition} v96;
  assert {:block_sourceloc} {:sourceloc_num 152} true;
  goto $45;
$falsebb21:
  assume {:partition} !v96;
  assert {:block_sourceloc} {:sourceloc_num 153} true;
  goto $46;
$truebb22:
  assume {:partition} v101;
  assert {:block_sourceloc} {:sourceloc_num 154} true;
  goto $47;
$falsebb22:
  assume {:partition} !v101;
  assert {:block_sourceloc} {:sourceloc_num 155} true;
  goto $48;
$truebb23:
  assume {:partition} v106;
  assert {:block_sourceloc} {:sourceloc_num 156} true;
  goto $49;
$falsebb23:
  assume {:partition} !v106;
  assert {:block_sourceloc} {:sourceloc_num 157} true;
  goto $50;
$truebb24:
  assume {:partition} v112;
  assert {:block_sourceloc} {:sourceloc_num 158} true;
  goto $52;
$falsebb24:
  assume {:partition} !v112;
  assert {:block_sourceloc} {:sourceloc_num 159} true;
  goto $51;
$truebb25:
  assume {:partition} v113;
  assert {:block_sourceloc} {:sourceloc_num 160} true;
  goto $52;
$falsebb25:
  assume {:partition} !v113;
  assert {:block_sourceloc} {:sourceloc_num 161} true;
  goto $53;
$truebb26:
  assume {:partition} v116;
  assert {:block_sourceloc} {:sourceloc_num 162} true;
  goto $54;
$falsebb26:
  assume {:partition} !v116;
  assert {:block_sourceloc} {:sourceloc_num 163} true;
  goto $55;
$truebb27:
  assume {:partition} v117;
  assert {:block_sourceloc} {:sourceloc_num 164} true;
  goto $57;
$falsebb27:
  assume {:partition} !v117;
  assert {:block_sourceloc} {:sourceloc_num 165} true;
  goto $58;
$truebb28:
  assume {:partition} v123;
  assert {:block_sourceloc} {:sourceloc_num 166} true;
  goto $60;
$falsebb28:
  assume {:partition} !v123;
  assert {:block_sourceloc} {:sourceloc_num 167} true;
  goto $61;
}
procedure {:source_name "bugle_barrier"} {:barrier} $bugle_barrier($0:int, $1:int);
axiom (if group_size_z == 1 then 1 else 0) != 0;
axiom (if num_groups_y == 1 then 1 else 0) != 0;
axiom (if num_groups_z == 1 then 1 else 0) != 0;
axiom (if group_size_x == 32 then 1 else 0) != 0;
axiom (if group_size_y == 32 then 1 else 0) != 0;
axiom (if num_groups_x == 14 then 1 else 0) != 0;
