type _SIZE_T_TYPE = bv32;

procedure _ATOMIC_OP32(x : [int]int, y : int) returns (z : int, A : [int]int);
procedure _ATOMIC_OP8(x : [int]int, y : int) returns (z : int, A : [int]int);
var {:source_name "dst"} {:global} $$dst : [int]int;
axiom {:array_info "$$dst"} {:global} {:elem_width 32} {:source_name "dst"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$dst : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$dst : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$dst : bool;

var {:source_name "a.i"} $$a.i : [int]int;
axiom {:array_info "$$a.i"} {:elem_width 32} {:source_name "a.i"} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name "b.i"} $$b.i : [int]int;
axiom {:array_info "$$b.i"} {:elem_width 32} {:source_name "b.i"} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name ""} $$0 : [int]int;
axiom {:array_info "$$0"} {:elem_width 32} {:source_name ""} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name ""} $$1 : [int]int;
axiom {:array_info "$$1"} {:elem_width 8} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name ""} $$2 : [int]int;
axiom {:array_info "$$2"} {:elem_width 32} {:source_name ""} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name ""} $$3 : [int]int;
axiom {:array_info "$$3"} {:elem_width 8} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name "clr"} $$clr : [int]int;
axiom {:array_info "$$clr"} {:elem_width 32} {:source_name "clr"} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name "clrIJ"} $$clrIJ : [int]int;
axiom {:array_info "$$clrIJ"} {:elem_width 32} {:source_name "clrIJ"} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name ""} $$4 : [int]int;
axiom {:array_info "$$4"} {:elem_width 8} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name "clr00"} $$clr00 : [int]int;
axiom {:array_info "$$clr00"} {:elem_width 32} {:source_name "clr00"} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name ""} $$5 : [int]int;
axiom {:array_info "$$5"} {:elem_width 8} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name "texImage"} {:global} $$texImage : [int]int;
axiom {:array_info "$$texImage"} {:global} {:elem_width 8} {:source_name "texImage"} {:source_elem_width 96} {:source_dimensions "1"} true;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 96} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$texImage : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 96} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$texImage : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 96} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$texImage : bool;

var {:source_name "fWeights"} {:group_shared} $$_ZZ4NLM2PjiiffE8fWeights : [int]int;
axiom {:array_info "$$_ZZ4NLM2PjiiffE8fWeights"} {:group_shared} {:elem_width 32} {:source_name "fWeights"} {:source_elem_width 32} {:source_dimensions "64"} true;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ4NLM2PjiiffE8fWeights : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ4NLM2PjiiffE8fWeights : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ4NLM2PjiiffE8fWeights : bool;

const _WATCHED_OFFSET : int;
const {:group_id_x} group_id_x : int;
const {:group_id_y} group_id_y : int;
const {:group_size_x} group_size_x : int;
const {:group_size_y} group_size_y : int;
const {:group_size_z} group_size_z : int;
const {:local_id_x} local_id_x : int;
const {:local_id_y} local_id_y : int;
const {:num_groups_x} num_groups_x : int;
const {:num_groups_y} num_groups_y : int;
const {:num_groups_z} num_groups_z : int;
function BV_CONCAT(int, int) : int;
function BV_EXTRACT(int, int, int) : int;
function FADD32(int, int) : int;
function FDIV32(int, int) : int;
function FEQ32(int, int) : bool;
function FLT32(int, int) : bool;
function FMUL32(int, int) : int;
function FP32_TO_SI32(int) : int;
function FSUB32(int, int) : int;
function SI32_TO_FP32(int) : int;
function UI32_TO_FP32(int) : int;
function {:inline true} BV32_ADD(x : int, y : int) : int {
  x + y
}
function {:inline true} BV32_MUL(x : int, y : int) : int {
  x * y
}
function {:inline true} BV32_OR(x : int, y : int) : int {
  if x == y then x else (if x == 0 then y else (if y == 0 then x else BV32_OR_UF(x, y)))
}
function BV32_OR_UF(int, int) : int;
function {:inline true} BV32_SHL(x : int, y : int) : int {
  if x >= 0 && y == 1 then x*2 else BV32_SHL_UF(x,y)
}
function BV32_SHL_UF(int, int) : int;
function {:inline true} BV32_SLT(x : int, y : int) : bool {
  x < y
}
function {:inline true} BV32_SUB(x : int, y : int) : int {
  x - y
}
procedure {:source_name "NLM2"} {:kernel} $_Z4NLM2Pjiiff($imageW:int, $imageH:int, $Noise:int, $lerpC:int)
requires {:sourceloc_num 0} (if $imageW == 320 then 1 else 0) != 0;
requires {:sourceloc_num 1} (if $imageH == 408 then 1 else 0) != 0;
{
  var $weight.0:int;
  var $n.0:int;
  var $weight.1:int;
  var $m.0:int;
  var $fCount.0:int;
  var $sumWeights.0:int;
  var $idx.0:int;
  var $i.0:int;
  var $fCount.1:int;
  var $sumWeights.1:int;
  var $idx.1:int;
  var $j.0:int;
  var $0:int;
  var v0:int;
  var v1:int;
  var v2:int;
  var v3:int;
  var v4:bool;
  var v66:int;
  var v67:int;
  var v5:bool;
  var v6:bool;
  var v7:bool;
  var v8:int;
  var v9:int;
  var v10:int;
  var v11:int;
  var v16:int;
  var v12:int;
  var v13:int;
  var v14:int;
  var v15:int;
  var v17:int;
  var v18:int;
  var v19:int;
  var v20:int;
  var v21:int;
  var v22:int;
  var v23:int;
  var v38:int;
  var v39:int;
  var v24:int;
  var v25:int;
  var v26:int;
  var v27:int;
  var v28:int;
  var v29:int;
  var v30:int;
  var v31:int;
  var v32:int;
  var v37:int;
  var v33:int;
  var v34:int;
  var v35:int;
  var v36:int;
  var v65:int;
  var v40:int;
  var v41:int;
  var v42:int;
  var v43:int;
  var v44:int;
  var v45:int;
  var v46:int;
  var v47:int;
  var v48:int;
  var v49:int;
  var v50:int;
  var v51:int;
  var v52:int;
  var v53:int;
  var v54:int;
  var v55:int;
  var v56:int;
  var v57:int;
  var v58:int;
  var v59:int;
  var v60:int;
  var v61:int;
  var v62:int;
  var v63:int;
  var v64:int;
  var v68:int;
  var v69:int;
  var v70:int;
  var v71:int;
  var v72:int;
  var v73:int;
  var v74:int;
  var v75:int;
  var v76:int;
  var v77:int;
  var v78:int;
  var v79:bool;
  var v80:bool;
  var v81:int;
  var v82:int;
  var v83:int;
  var v84:int;
  var v85:int;
  var v86:int;
  var v87:int;
  var v88:int;
  var v96:int;
  var v89:int;
  var v90:int;
  var v91:int;
  var v92:int;
  var v93:int;
  var v94:int;
  var v95:int;
  var v108:int;
  var v97:int;
  var v98:int;
  var v99:int;
  var v100:int;
  var v101:int;
  var v102:int;
  var v103:int;
  var v104:int;
  var v105:int;
  var v106:int;
  var v107:int;
  var v109:int;
  var v110:int;
  var v111:int;
  var v112:int;
  var v113:int;
  var v114:int;
  var v115:int;
  var v116:int;
  var v117:bool;
  var v118:int;
  var v119:int;
  var v120:int;
  var v121:int;
  var v126:int;
  var v122:int;
  var v123:int;
  var v124:int;
  var v125:int;
  var v135:int;
  var v127:int;
  var v128:int;
  var v129:int;
  var v130:int;
  var v131:int;
  var v132:int;
  var v133:int;
  var v134:int;
  var v136:int;
  var v137:int;
  var v138:int;
  var v139:int;
  var v140:int;
  var v141:int;
  var v142:int;
  var v143:int;
  var v144:int;
  var v145:int;
  var v146:int;
  var v147:int;
  var v148:int;
  var v149:int;
  var v150:int;
  var v151:int;
  var v152:int;
  var v153:int;
  var v154:int;
$0:
  assert {:block_sourceloc} {:sourceloc_num 2} true;
  v0 := BV32_ADD(BV32_MUL(group_size_x, group_id_x), local_id_x);
  v1 := BV32_ADD(BV32_MUL(group_size_y, group_id_y), local_id_y);
  v2 := FADD32(SI32_TO_FP32(v0), 1056964608);
  v3 := FADD32(SI32_TO_FP32(v1), 1056964608);
  v4 := BV32_SLT(v0, $imageW);
  goto $truebb, $falsebb;
$1:
  assert {:block_sourceloc} {:sourceloc_num 3} true;
  v5 := BV32_SLT(v1, $imageH);
  goto $truebb0, $falsebb0;
$2:
  assert {:block_sourceloc} {:sourceloc_num 4} true;
  $weight.0, $n.0 := 0, -1069547520;
  goto $3;
$3:
  assert {:block_sourceloc} {:sourceloc_num 5} true;
  v6 := FEQ32($n.0, 1077936128) || FLT32($n.0, 1077936128);
  goto $truebb1, $falsebb1;
$4:
  assert {:block_sourceloc} {:sourceloc_num 6} true;
  $weight.1, $m.0 := $weight.0, -1069547520;
  goto $5;
$5:
  assert {:block_sourceloc} {:sourceloc_num 7} true;
  v7 := FEQ32($m.0, 1077936128) || FLT32($m.0, 1077936128);
  goto $truebb2, $falsebb2;
$6:
  assert {:block_sourceloc} {:sourceloc_num 8} true;
  assert {:sourceloc} {:sourceloc_num 9} true;
  v8 := $$texImage[0];
  assert {:sourceloc} {:sourceloc_num 10} true;
  $$1[0] := v8;
  assert {:sourceloc} {:sourceloc_num 11} true;
  v9 := $$texImage[1];
  assert {:sourceloc} {:sourceloc_num 12} true;
  $$1[1] := v9;
  assert {:sourceloc} {:sourceloc_num 13} true;
  v10 := $$texImage[2];
  assert {:sourceloc} {:sourceloc_num 14} true;
  $$1[2] := v10;
  assert {:sourceloc} {:sourceloc_num 15} true;
  v11 := $$texImage[3];
  assert {:sourceloc} {:sourceloc_num 16} true;
  $$1[3] := v11;
  assert {:sourceloc} {:sourceloc_num 17} true;
  v12 := $$texImage[4];
  assert {:sourceloc} {:sourceloc_num 18} true;
  $$1[4] := v12;
  assert {:sourceloc} {:sourceloc_num 19} true;
  v13 := $$texImage[5];
  assert {:sourceloc} {:sourceloc_num 20} true;
  $$1[5] := v13;
  assert {:sourceloc} {:sourceloc_num 21} true;
  v14 := $$texImage[6];
  assert {:sourceloc} {:sourceloc_num 22} true;
  $$1[6] := v14;
  assert {:sourceloc} {:sourceloc_num 23} true;
  v15 := $$texImage[7];
  assert {:sourceloc} {:sourceloc_num 24} true;
  $$1[7] := v15;
  assert {:sourceloc} {:sourceloc_num 25} true;
  v16 := $$texImage[8];
  assert {:sourceloc} {:sourceloc_num 26} true;
  $$1[8] := v16;
  assert {:sourceloc} {:sourceloc_num 27} true;
  v17 := $$texImage[9];
  assert {:sourceloc} {:sourceloc_num 28} true;
  $$1[9] := v17;
  assert {:sourceloc} {:sourceloc_num 29} true;
  v18 := $$texImage[10];
  assert {:sourceloc} {:sourceloc_num 30} true;
  $$1[10] := v18;
  assert {:sourceloc} {:sourceloc_num 31} true;
  v19 := $$texImage[11];
  assert {:sourceloc} {:sourceloc_num 32} true;
  $$1[11] := v19;
  assert {:sourceloc} {:sourceloc_num 33} true;
  v20 := $$1[0];
  assert {:sourceloc} {:sourceloc_num 34} true;
  v21 := $$1[1];
  assert {:sourceloc} {:sourceloc_num 35} true;
  v22 := $$1[2];
  assert {:sourceloc} {:sourceloc_num 36} true;
  v23 := $$1[3];
  assert {:sourceloc} {:sourceloc_num 37} true;
  v24 := $$1[4];
  assert {:sourceloc} {:sourceloc_num 38} true;
  v25 := $$1[5];
  assert {:sourceloc} {:sourceloc_num 39} true;
  v26 := $$1[6];
  assert {:sourceloc} {:sourceloc_num 40} true;
  v27 := $$1[7];
  assert {:sourceloc} {:sourceloc_num 41} true;
  v28 := $$1[8];
  assert {:sourceloc} {:sourceloc_num 42} true;
  v29 := $$1[9];
  assert {:sourceloc} {:sourceloc_num 43} true;
  v30 := $$1[10];
  assert {:sourceloc} {:sourceloc_num 44} true;
  v31 := $$1[11];
  call {:sourceloc_num 45}   v32 := $_Z5tex2D7textureI6uchar4Li2EL19cudaTextureReadMode1EEff(BV_CONCAT(BV_CONCAT(BV_CONCAT(v23, v22), v21), v20), BV_CONCAT(BV_CONCAT(BV_CONCAT(v27, v26), v25), v24), BV_CONCAT(BV_CONCAT(BV_CONCAT(v31, v30), v29), v28), FADD32(FADD32(UI32_TO_FP32(BV32_ADD(BV32_MUL(group_size_x, group_id_x), 3)), 1056964608), $m.0), FADD32(FADD32(UI32_TO_FP32(BV32_ADD(BV32_MUL(group_size_x, group_id_y), 3)), 1056964608), $n.0));
  assert {:sourceloc} {:sourceloc_num 46} true;
  $$0[0] := BV_EXTRACT(v32, 32, 0);
  assert {:sourceloc} {:sourceloc_num 47} true;
  $$0[1] := BV_EXTRACT(v32, 64, 32);
  assert {:sourceloc} {:sourceloc_num 48} true;
  $$0[2] := BV_EXTRACT(v32, 96, 64);
  assert {:sourceloc} {:sourceloc_num 49} true;
  $$0[3] := BV_EXTRACT(v32, 128, 96);
  assert {:sourceloc} {:sourceloc_num 50} true;
  v33 := $$texImage[0];
  assert {:sourceloc} {:sourceloc_num 51} true;
  $$3[0] := v33;
  assert {:sourceloc} {:sourceloc_num 52} true;
  v34 := $$texImage[1];
  assert {:sourceloc} {:sourceloc_num 53} true;
  $$3[1] := v34;
  assert {:sourceloc} {:sourceloc_num 54} true;
  v35 := $$texImage[2];
  assert {:sourceloc} {:sourceloc_num 55} true;
  $$3[2] := v35;
  assert {:sourceloc} {:sourceloc_num 56} true;
  v36 := $$texImage[3];
  assert {:sourceloc} {:sourceloc_num 57} true;
  $$3[3] := v36;
  assert {:sourceloc} {:sourceloc_num 58} true;
  v37 := $$texImage[4];
  assert {:sourceloc} {:sourceloc_num 59} true;
  $$3[4] := v37;
  assert {:sourceloc} {:sourceloc_num 60} true;
  v38 := $$texImage[5];
  assert {:sourceloc} {:sourceloc_num 61} true;
  $$3[5] := v38;
  assert {:sourceloc} {:sourceloc_num 62} true;
  v39 := $$texImage[6];
  assert {:sourceloc} {:sourceloc_num 63} true;
  $$3[6] := v39;
  assert {:sourceloc} {:sourceloc_num 64} true;
  v40 := $$texImage[7];
  assert {:sourceloc} {:sourceloc_num 65} true;
  $$3[7] := v40;
  assert {:sourceloc} {:sourceloc_num 66} true;
  v41 := $$texImage[8];
  assert {:sourceloc} {:sourceloc_num 67} true;
  $$3[8] := v41;
  assert {:sourceloc} {:sourceloc_num 68} true;
  v42 := $$texImage[9];
  assert {:sourceloc} {:sourceloc_num 69} true;
  $$3[9] := v42;
  assert {:sourceloc} {:sourceloc_num 70} true;
  v43 := $$texImage[10];
  assert {:sourceloc} {:sourceloc_num 71} true;
  $$3[10] := v43;
  assert {:sourceloc} {:sourceloc_num 72} true;
  v44 := $$texImage[11];
  assert {:sourceloc} {:sourceloc_num 73} true;
  $$3[11] := v44;
  assert {:sourceloc} {:sourceloc_num 74} true;
  v45 := $$3[0];
  assert {:sourceloc} {:sourceloc_num 75} true;
  v46 := $$3[1];
  assert {:sourceloc} {:sourceloc_num 76} true;
  v47 := $$3[2];
  assert {:sourceloc} {:sourceloc_num 77} true;
  v48 := $$3[3];
  assert {:sourceloc} {:sourceloc_num 78} true;
  v49 := $$3[4];
  assert {:sourceloc} {:sourceloc_num 79} true;
  v50 := $$3[5];
  assert {:sourceloc} {:sourceloc_num 80} true;
  v51 := $$3[6];
  assert {:sourceloc} {:sourceloc_num 81} true;
  v52 := $$3[7];
  assert {:sourceloc} {:sourceloc_num 82} true;
  v53 := $$3[8];
  assert {:sourceloc} {:sourceloc_num 83} true;
  v54 := $$3[9];
  assert {:sourceloc} {:sourceloc_num 84} true;
  v55 := $$3[10];
  assert {:sourceloc} {:sourceloc_num 85} true;
  v56 := $$3[11];
  call {:sourceloc_num 86}   v57 := $_Z5tex2D7textureI6uchar4Li2EL19cudaTextureReadMode1EEff(BV_CONCAT(BV_CONCAT(BV_CONCAT(v48, v47), v46), v45), BV_CONCAT(BV_CONCAT(BV_CONCAT(v52, v51), v50), v49), BV_CONCAT(BV_CONCAT(BV_CONCAT(v56, v55), v54), v53), FADD32(v2, $m.0), FADD32(v3, $n.0));
  assert {:sourceloc} {:sourceloc_num 87} true;
  $$2[0] := BV_EXTRACT(v57, 32, 0);
  assert {:sourceloc} {:sourceloc_num 88} true;
  $$2[1] := BV_EXTRACT(v57, 64, 32);
  assert {:sourceloc} {:sourceloc_num 89} true;
  $$2[2] := BV_EXTRACT(v57, 96, 64);
  assert {:sourceloc} {:sourceloc_num 90} true;
  $$2[3] := BV_EXTRACT(v57, 128, 96);
  assert {:sourceloc} {:sourceloc_num 91} true;
  v58 := $$0[0];
  assert {:sourceloc} {:sourceloc_num 92} true;
  v59 := $$0[1];
  assert {:sourceloc} {:sourceloc_num 93} true;
  v60 := $$0[2];
  assert {:sourceloc} {:sourceloc_num 94} true;
  v61 := $$0[3];
  assert {:sourceloc} {:sourceloc_num 95} true;
  v62 := $$2[0];
  assert {:sourceloc} {:sourceloc_num 96} true;
  v63 := $$2[1];
  assert {:sourceloc} {:sourceloc_num 97} true;
  v64 := $$2[2];
  assert {:sourceloc} {:sourceloc_num 98} true;
  v65 := $$2[3];
  assert {:sourceloc} {:sourceloc_num 99} true;
  $$a.i[0] := v58;
  assert {:sourceloc} {:sourceloc_num 100} true;
  $$a.i[1] := v59;
  assert {:sourceloc} {:sourceloc_num 101} true;
  $$a.i[2] := v60;
  assert {:sourceloc} {:sourceloc_num 102} true;
  $$a.i[3] := v61;
  assert {:sourceloc} {:sourceloc_num 103} true;
  $$b.i[0] := v62;
  assert {:sourceloc} {:sourceloc_num 104} true;
  $$b.i[1] := v63;
  assert {:sourceloc} {:sourceloc_num 105} true;
  $$b.i[2] := v64;
  assert {:sourceloc} {:sourceloc_num 106} true;
  $$b.i[3] := v65;
  assert {:sourceloc} {:sourceloc_num 107} true;
  v66 := $$b.i[0];
  assert {:sourceloc} {:sourceloc_num 108} true;
  v67 := $$a.i[0];
  assert {:sourceloc} {:sourceloc_num 109} true;
  v68 := $$b.i[0];
  assert {:sourceloc} {:sourceloc_num 110} true;
  v69 := $$a.i[0];
  assert {:sourceloc} {:sourceloc_num 111} true;
  v70 := $$b.i[1];
  assert {:sourceloc} {:sourceloc_num 112} true;
  v71 := $$a.i[1];
  assert {:sourceloc} {:sourceloc_num 113} true;
  v72 := $$b.i[1];
  assert {:sourceloc} {:sourceloc_num 114} true;
  v73 := $$a.i[1];
  assert {:sourceloc} {:sourceloc_num 115} true;
  v74 := $$b.i[2];
  assert {:sourceloc} {:sourceloc_num 116} true;
  v75 := $$a.i[2];
  assert {:sourceloc} {:sourceloc_num 117} true;
  v76 := $$b.i[2];
  assert {:sourceloc} {:sourceloc_num 118} true;
  v77 := $$a.i[2];
  goto $7;
$7:
  assert {:block_sourceloc} {:sourceloc_num 119} true;
  $weight.1, $m.0 := FADD32($weight.1, FADD32(FADD32(FMUL32(FSUB32(v66, v67), FSUB32(v68, v69)), FMUL32(FSUB32(v70, v71), FSUB32(v72, v73))), FMUL32(FSUB32(v74, v75), FSUB32(v76, v77)))), FADD32($m.0, 1065353216);
  goto $5;
$8:
  assert {:block_sourceloc} {:sourceloc_num 120} true;
  goto $9;
$9:
  assert {:block_sourceloc} {:sourceloc_num 121} true;
  $weight.0, $n.0 := $weight.1, FADD32($n.0, 1065353216);
  goto $3;
$10:
  assert {:block_sourceloc} {:sourceloc_num 122} true;
  call {:sourceloc_num 123}   v78 := $__expf(FSUB32(-2147483648, FADD32(FMUL32($weight.0, $Noise), FMUL32(UI32_TO_FP32(BV32_ADD(BV32_MUL(BV32_SUB(local_id_x, 3), BV32_SUB(local_id_x, 3)), BV32_MUL(BV32_SUB(local_id_y, 3), BV32_SUB(local_id_y, 3)))), 1017589509))));
  assert {:sourceloc} {:sourceloc_num 124} true;
  $$_ZZ4NLM2PjiiffE8fWeights[BV32_ADD(BV32_MUL(local_id_y, 8), local_id_x)] := v78;
  call {:sourceloc_num 125} $bugle_barrier(-1, -1);
  assert {:sourceloc} {:sourceloc_num 126} true;
  $$clr[0] := 0;
  assert {:sourceloc} {:sourceloc_num 127} true;
  $$clr[1] := 0;
  assert {:sourceloc} {:sourceloc_num 128} true;
  $$clr[2] := 0;
  $fCount.0, $sumWeights.0, $idx.0, $i.0 := 0, 0, 0, -1069547520;
  goto $11;
$11:
  assert {:block_sourceloc} {:sourceloc_num 129} true;
  v79 := FEQ32($i.0, 1082130432) || FLT32($i.0, 1082130432);
  goto $truebb3, $falsebb3;
$12:
  assert {:block_sourceloc} {:sourceloc_num 130} true;
  $fCount.1, $sumWeights.1, $idx.1, $j.0 := $fCount.0, $sumWeights.0, $idx.0, -1069547520;
  goto $13;
$13:
  assert {:block_sourceloc} {:sourceloc_num 131} true;
  v80 := FEQ32($j.0, 1082130432) || FLT32($j.0, 1082130432);
  goto $truebb4, $falsebb4;
$14:
  assert {:block_sourceloc} {:sourceloc_num 132} true;
  assert {:sourceloc} {:sourceloc_num 133} true;
  v81 := $$_ZZ4NLM2PjiiffE8fWeights[$idx.1];
  assert {:sourceloc} {:sourceloc_num 134} true;
  v82 := $$texImage[0];
  assert {:sourceloc} {:sourceloc_num 135} true;
  $$4[0] := v82;
  assert {:sourceloc} {:sourceloc_num 136} true;
  v83 := $$texImage[1];
  assert {:sourceloc} {:sourceloc_num 137} true;
  $$4[1] := v83;
  assert {:sourceloc} {:sourceloc_num 138} true;
  v84 := $$texImage[2];
  assert {:sourceloc} {:sourceloc_num 139} true;
  $$4[2] := v84;
  assert {:sourceloc} {:sourceloc_num 140} true;
  v85 := $$texImage[3];
  assert {:sourceloc} {:sourceloc_num 141} true;
  $$4[3] := v85;
  assert {:sourceloc} {:sourceloc_num 142} true;
  v86 := $$texImage[4];
  assert {:sourceloc} {:sourceloc_num 143} true;
  $$4[4] := v86;
  assert {:sourceloc} {:sourceloc_num 144} true;
  v87 := $$texImage[5];
  assert {:sourceloc} {:sourceloc_num 145} true;
  $$4[5] := v87;
  assert {:sourceloc} {:sourceloc_num 146} true;
  v88 := $$texImage[6];
  assert {:sourceloc} {:sourceloc_num 147} true;
  $$4[6] := v88;
  assert {:sourceloc} {:sourceloc_num 148} true;
  v89 := $$texImage[7];
  assert {:sourceloc} {:sourceloc_num 149} true;
  $$4[7] := v89;
  assert {:sourceloc} {:sourceloc_num 150} true;
  v90 := $$texImage[8];
  assert {:sourceloc} {:sourceloc_num 151} true;
  $$4[8] := v90;
  assert {:sourceloc} {:sourceloc_num 152} true;
  v91 := $$texImage[9];
  assert {:sourceloc} {:sourceloc_num 153} true;
  $$4[9] := v91;
  assert {:sourceloc} {:sourceloc_num 154} true;
  v92 := $$texImage[10];
  assert {:sourceloc} {:sourceloc_num 155} true;
  $$4[10] := v92;
  assert {:sourceloc} {:sourceloc_num 156} true;
  v93 := $$texImage[11];
  assert {:sourceloc} {:sourceloc_num 157} true;
  $$4[11] := v93;
  assert {:sourceloc} {:sourceloc_num 158} true;
  v94 := $$4[0];
  assert {:sourceloc} {:sourceloc_num 159} true;
  v95 := $$4[1];
  assert {:sourceloc} {:sourceloc_num 160} true;
  v96 := $$4[2];
  assert {:sourceloc} {:sourceloc_num 161} true;
  v97 := $$4[3];
  assert {:sourceloc} {:sourceloc_num 162} true;
  v98 := $$4[4];
  assert {:sourceloc} {:sourceloc_num 163} true;
  v99 := $$4[5];
  assert {:sourceloc} {:sourceloc_num 164} true;
  v100 := $$4[6];
  assert {:sourceloc} {:sourceloc_num 165} true;
  v101 := $$4[7];
  assert {:sourceloc} {:sourceloc_num 166} true;
  v102 := $$4[8];
  assert {:sourceloc} {:sourceloc_num 167} true;
  v103 := $$4[9];
  assert {:sourceloc} {:sourceloc_num 168} true;
  v104 := $$4[10];
  assert {:sourceloc} {:sourceloc_num 169} true;
  v105 := $$4[11];
  call {:sourceloc_num 170}   v106 := $_Z5tex2D7textureI6uchar4Li2EL19cudaTextureReadMode1EEff(BV_CONCAT(BV_CONCAT(BV_CONCAT(v97, v96), v95), v94), BV_CONCAT(BV_CONCAT(BV_CONCAT(v101, v100), v99), v98), BV_CONCAT(BV_CONCAT(BV_CONCAT(v105, v104), v103), v102), FADD32(v2, $j.0), FADD32(v3, $i.0));
  assert {:sourceloc} {:sourceloc_num 171} true;
  $$clrIJ[0] := BV_EXTRACT(v106, 32, 0);
  assert {:sourceloc} {:sourceloc_num 172} true;
  $$clrIJ[1] := BV_EXTRACT(v106, 64, 32);
  assert {:sourceloc} {:sourceloc_num 173} true;
  $$clrIJ[2] := BV_EXTRACT(v106, 96, 64);
  assert {:sourceloc} {:sourceloc_num 174} true;
  $$clrIJ[3] := BV_EXTRACT(v106, 128, 96);
  assert {:sourceloc} {:sourceloc_num 175} true;
  v107 := $$clrIJ[0];
  assert {:sourceloc} {:sourceloc_num 176} true;
  v108 := $$clr[0];
  assert {:sourceloc} {:sourceloc_num 177} true;
  $$clr[0] := FADD32(v108, FMUL32(v107, v81));
  assert {:sourceloc} {:sourceloc_num 178} true;
  v109 := $$clrIJ[1];
  assert {:sourceloc} {:sourceloc_num 179} true;
  v110 := $$clr[1];
  assert {:sourceloc} {:sourceloc_num 180} true;
  $$clr[1] := FADD32(v110, FMUL32(v109, v81));
  assert {:sourceloc} {:sourceloc_num 181} true;
  v111 := $$clrIJ[2];
  assert {:sourceloc} {:sourceloc_num 182} true;
  v112 := $$clr[2];
  assert {:sourceloc} {:sourceloc_num 183} true;
  $$clr[2] := FADD32(v112, FMUL32(v111, v81));
  goto $15;
$15:
  assert {:block_sourceloc} {:sourceloc_num 184} true;
  $fCount.1, $sumWeights.1, $idx.1, $j.0 := FADD32($fCount.1, (if FLT32(1036831949, v81) then 1017589509 else 0)), FADD32($sumWeights.1, v81), BV32_ADD($idx.1, 1), FADD32($j.0, 1065353216);
  goto $13;
$16:
  assert {:block_sourceloc} {:sourceloc_num 185} true;
  goto $17;
$17:
  assert {:block_sourceloc} {:sourceloc_num 186} true;
  $fCount.0, $sumWeights.0, $idx.0, $i.0 := $fCount.1, $sumWeights.1, $idx.1, FADD32($i.0, 1065353216);
  goto $11;
$18:
  assert {:block_sourceloc} {:sourceloc_num 187} true;
  v113 := FDIV32(1065353216, $sumWeights.0);
  assert {:sourceloc} {:sourceloc_num 188} true;
  v114 := $$clr[0];
  assert {:sourceloc} {:sourceloc_num 189} true;
  $$clr[0] := FMUL32(v114, v113);
  assert {:sourceloc} {:sourceloc_num 190} true;
  v115 := $$clr[1];
  assert {:sourceloc} {:sourceloc_num 191} true;
  $$clr[1] := FMUL32(v115, v113);
  assert {:sourceloc} {:sourceloc_num 192} true;
  v116 := $$clr[2];
  assert {:sourceloc} {:sourceloc_num 193} true;
  $$clr[2] := FMUL32(v116, v113);
  v117 := FLT32(1036831949, $fCount.0);
  goto $truebb5, $falsebb5;
$19:
  assert {:block_sourceloc} {:sourceloc_num 194} true;
  $0 := $lerpC;
  goto $21;
$20:
  assert {:block_sourceloc} {:sourceloc_num 195} true;
  $0 := FSUB32(1065353216, $lerpC);
  goto $21;
$21:
  assert {:block_sourceloc} {:sourceloc_num 196} true;
  assert {:sourceloc} {:sourceloc_num 197} true;
  v118 := $$texImage[0];
  assert {:sourceloc} {:sourceloc_num 198} true;
  $$5[0] := v118;
  assert {:sourceloc} {:sourceloc_num 199} true;
  v119 := $$texImage[1];
  assert {:sourceloc} {:sourceloc_num 200} true;
  $$5[1] := v119;
  assert {:sourceloc} {:sourceloc_num 201} true;
  v120 := $$texImage[2];
  assert {:sourceloc} {:sourceloc_num 202} true;
  $$5[2] := v120;
  assert {:sourceloc} {:sourceloc_num 203} true;
  v121 := $$texImage[3];
  assert {:sourceloc} {:sourceloc_num 204} true;
  $$5[3] := v121;
  assert {:sourceloc} {:sourceloc_num 205} true;
  v122 := $$texImage[4];
  assert {:sourceloc} {:sourceloc_num 206} true;
  $$5[4] := v122;
  assert {:sourceloc} {:sourceloc_num 207} true;
  v123 := $$texImage[5];
  assert {:sourceloc} {:sourceloc_num 208} true;
  $$5[5] := v123;
  assert {:sourceloc} {:sourceloc_num 209} true;
  v124 := $$texImage[6];
  assert {:sourceloc} {:sourceloc_num 210} true;
  $$5[6] := v124;
  assert {:sourceloc} {:sourceloc_num 211} true;
  v125 := $$texImage[7];
  assert {:sourceloc} {:sourceloc_num 212} true;
  $$5[7] := v125;
  assert {:sourceloc} {:sourceloc_num 213} true;
  v126 := $$texImage[8];
  assert {:sourceloc} {:sourceloc_num 214} true;
  $$5[8] := v126;
  assert {:sourceloc} {:sourceloc_num 215} true;
  v127 := $$texImage[9];
  assert {:sourceloc} {:sourceloc_num 216} true;
  $$5[9] := v127;
  assert {:sourceloc} {:sourceloc_num 217} true;
  v128 := $$texImage[10];
  assert {:sourceloc} {:sourceloc_num 218} true;
  $$5[10] := v128;
  assert {:sourceloc} {:sourceloc_num 219} true;
  v129 := $$texImage[11];
  assert {:sourceloc} {:sourceloc_num 220} true;
  $$5[11] := v129;
  assert {:sourceloc} {:sourceloc_num 221} true;
  v130 := $$5[0];
  assert {:sourceloc} {:sourceloc_num 222} true;
  v131 := $$5[1];
  assert {:sourceloc} {:sourceloc_num 223} true;
  v132 := $$5[2];
  assert {:sourceloc} {:sourceloc_num 224} true;
  v133 := $$5[3];
  assert {:sourceloc} {:sourceloc_num 225} true;
  v134 := $$5[4];
  assert {:sourceloc} {:sourceloc_num 226} true;
  v135 := $$5[5];
  assert {:sourceloc} {:sourceloc_num 227} true;
  v136 := $$5[6];
  assert {:sourceloc} {:sourceloc_num 228} true;
  v137 := $$5[7];
  assert {:sourceloc} {:sourceloc_num 229} true;
  v138 := $$5[8];
  assert {:sourceloc} {:sourceloc_num 230} true;
  v139 := $$5[9];
  assert {:sourceloc} {:sourceloc_num 231} true;
  v140 := $$5[10];
  assert {:sourceloc} {:sourceloc_num 232} true;
  v141 := $$5[11];
  call {:sourceloc_num 233}   v142 := $_Z5tex2D7textureI6uchar4Li2EL19cudaTextureReadMode1EEff(BV_CONCAT(BV_CONCAT(BV_CONCAT(v133, v132), v131), v130), BV_CONCAT(BV_CONCAT(BV_CONCAT(v137, v136), v135), v134), BV_CONCAT(BV_CONCAT(BV_CONCAT(v141, v140), v139), v138), v2, v3);
  assert {:sourceloc} {:sourceloc_num 234} true;
  $$clr00[0] := BV_EXTRACT(v142, 32, 0);
  assert {:sourceloc} {:sourceloc_num 235} true;
  $$clr00[1] := BV_EXTRACT(v142, 64, 32);
  assert {:sourceloc} {:sourceloc_num 236} true;
  $$clr00[2] := BV_EXTRACT(v142, 96, 64);
  assert {:sourceloc} {:sourceloc_num 237} true;
  $$clr00[3] := BV_EXTRACT(v142, 128, 96);
  assert {:sourceloc} {:sourceloc_num 238} true;
  v143 := $$clr[0];
  assert {:sourceloc} {:sourceloc_num 239} true;
  v144 := $$clr00[0];
  call {:sourceloc_num 240}   v145 := $_Z5lerpffff(v143, v144, $0);
  assert {:sourceloc} {:sourceloc_num 241} true;
  $$clr[0] := v145;
  assert {:sourceloc} {:sourceloc_num 242} true;
  v146 := $$clr[1];
  assert {:sourceloc} {:sourceloc_num 243} true;
  v147 := $$clr00[1];
  call {:sourceloc_num 244}   v148 := $_Z5lerpffff(v146, v147, $0);
  assert {:sourceloc} {:sourceloc_num 245} true;
  $$clr[1] := v148;
  assert {:sourceloc} {:sourceloc_num 246} true;
  v149 := $$clr[2];
  assert {:sourceloc} {:sourceloc_num 247} true;
  v150 := $$clr00[2];
  call {:sourceloc_num 248}   v151 := $_Z5lerpffff(v149, v150, $0);
  assert {:sourceloc} {:sourceloc_num 249} true;
  $$clr[2] := v151;
  assert {:sourceloc} {:sourceloc_num 250} true;
  v152 := $$clr[0];
  assert {:sourceloc} {:sourceloc_num 251} true;
  v153 := $$clr[1];
  assert {:sourceloc} {:sourceloc_num 252} true;
  v154 := $$clr[2];
  assert {:sourceloc} {:sourceloc_num 253} true;
  $$dst[BV32_ADD(BV32_MUL($imageW, v1), v0)] := BV32_OR(BV32_OR(BV32_OR(BV32_SHL(FP32_TO_SI32(FMUL32(0, 1132396544)), 24), BV32_SHL(FP32_TO_SI32(FMUL32(v154, 1132396544)), 16)), BV32_SHL(FP32_TO_SI32(FMUL32(v153, 1132396544)), 8)), FP32_TO_SI32(FMUL32(v152, 1132396544)));
  goto $22;
$22:
  assert {:block_sourceloc} {:sourceloc_num 254} true;
  return;
$truebb:
  assume {:partition} v4;
  assert {:block_sourceloc} {:sourceloc_num 255} true;
  goto $1;
$falsebb:
  assume {:partition} !v4;
  assert {:block_sourceloc} {:sourceloc_num 256} true;
  goto $22;
$truebb0:
  assume {:partition} v5;
  assert {:block_sourceloc} {:sourceloc_num 257} true;
  goto $2;
$falsebb0:
  assume {:partition} !v5;
  assert {:block_sourceloc} {:sourceloc_num 258} true;
  goto $22;
$truebb1:
  assume {:partition} v6;
  assert {:block_sourceloc} {:sourceloc_num 259} true;
  goto $4;
$falsebb1:
  assume {:partition} !v6;
  assert {:block_sourceloc} {:sourceloc_num 260} true;
  goto $10;
$truebb2:
  assume {:partition} v7;
  assert {:block_sourceloc} {:sourceloc_num 261} true;
  goto $6;
$falsebb2:
  assume {:partition} !v7;
  assert {:block_sourceloc} {:sourceloc_num 262} true;
  goto $8;
$truebb3:
  assume {:partition} v79;
  assert {:block_sourceloc} {:sourceloc_num 263} true;
  goto $12;
$falsebb3:
  assume {:partition} !v79;
  assert {:block_sourceloc} {:sourceloc_num 264} true;
  goto $18;
$truebb4:
  assume {:partition} v80;
  assert {:block_sourceloc} {:sourceloc_num 265} true;
  goto $14;
$falsebb4:
  assume {:partition} !v80;
  assert {:block_sourceloc} {:sourceloc_num 266} true;
  goto $16;
$truebb5:
  assume {:partition} v117;
  assert {:block_sourceloc} {:sourceloc_num 267} true;
  goto $19;
$falsebb5:
  assume {:partition} !v117;
  assert {:block_sourceloc} {:sourceloc_num 268} true;
  goto $20;
}
procedure {:source_name "_Z5tex2D7textureI6uchar4Li2EL19cudaTextureReadMode1EEff"} $_Z5tex2D7textureI6uchar4Li2EL19cudaTextureReadMode1EEff($0:int, $1:int, $2:int, $3:int, $4:int) returns ($ret:int);
procedure {:source_name "__expf"} $__expf($0:int) returns ($ret:int);
procedure {:source_name "bugle_barrier"} {:barrier} $bugle_barrier($0:int, $1:int);
procedure {:source_name "_Z5lerpffff"} $_Z5lerpffff($0:int, $1:int, $2:int) returns ($ret:int);
axiom (if group_size_z == 1 then 1 else 0) != 0;
axiom (if num_groups_z == 1 then 1 else 0) != 0;
axiom (if group_size_x == 8 then 1 else 0) != 0;
axiom (if group_size_y == 8 then 1 else 0) != 0;
axiom (if num_groups_x == 40 then 1 else 0) != 0;
axiom (if num_groups_y == 51 then 1 else 0) != 0;
