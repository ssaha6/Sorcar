type _SIZE_T_TYPE = bv32;

procedure _ATOMIC_OP8(x : [int]int, y : int) returns (z : int, A : [int]int);
var {:source_name "pSobelOriginal"} {:global} $$pSobelOriginal : [int]int;
axiom {:array_info "$$pSobelOriginal"} {:global} {:elem_width 8} {:source_name "pSobelOriginal"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$pSobelOriginal : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$pSobelOriginal : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$pSobelOriginal : bool;

var {:source_name ""} $$0 : [int]int;
axiom {:array_info "$$0"} {:elem_width 8} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name ""} $$1 : [int]int;
axiom {:array_info "$$1"} {:elem_width 8} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name ""} $$2 : [int]int;
axiom {:array_info "$$2"} {:elem_width 8} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name ""} $$3 : [int]int;
axiom {:array_info "$$3"} {:elem_width 8} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name ""} $$4 : [int]int;
axiom {:array_info "$$4"} {:elem_width 8} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name ""} $$5 : [int]int;
axiom {:array_info "$$5"} {:elem_width 8} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name ""} $$6 : [int]int;
axiom {:array_info "$$6"} {:elem_width 8} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name ""} $$7 : [int]int;
axiom {:array_info "$$7"} {:elem_width 8} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name "out"} $$out : [int]int;
axiom {:array_info "$$out"} {:elem_width 8} {:source_name "out"} {:source_elem_width 32} {:source_dimensions "1"} true;

var {:source_name "LocalBlock"} {:group_shared} $$LocalBlock : [int]int;
axiom {:array_info "$$LocalBlock"} {:group_shared} {:elem_width 8} {:source_name "LocalBlock"} {:source_elem_width 8} {:source_dimensions "0"} true;
var {:race_checking} {:group_shared} {:elem_width 8} {:source_elem_width 8} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$LocalBlock : bool;
var {:race_checking} {:group_shared} {:elem_width 8} {:source_elem_width 8} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$LocalBlock : bool;
var {:race_checking} {:group_shared} {:elem_width 8} {:source_elem_width 8} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$LocalBlock : bool;

var {:source_name "tex"} {:global} $$tex : [int]int;
axiom {:array_info "$$tex"} {:global} {:elem_width 8} {:source_name "tex"} {:source_elem_width 96} {:source_dimensions "1"} true;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 96} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$tex : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 96} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$tex : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 96} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$tex : bool;

const _WATCHED_OFFSET : int;
const {:group_id_x} group_id_x : int;
const {:group_id_y} group_id_y : int;
const {:group_size_x} group_size_x : int;
const {:group_size_y} group_size_y : int;
const {:group_size_z} group_size_z : int;
const {:local_id_x} local_id_x : int;
const {:local_id_y} local_id_y : int;
const {:num_groups_x} num_groups_x : int;
const {:num_groups_y} num_groups_y : int;
const {:num_groups_z} num_groups_z : int;
function  BV32_ASHR(int, int) : int;
function BV16_SEXT32(int) : int;
function BV_CONCAT(int, int) : int;
function BV_EXTRACT(int, int, int) : int;
function FADD32(int, int) : int;
function FMUL32(int, int) : int;
function FP32_TO_SI16(int) : int;
function SI32_TO_FP32(int) : int;
function UI32_TO_FP32(int) : int;
function {:inline true} BV16_ZEXT32(x : int) : int {
  x
}
function {:inline true} BV1_ZEXT32(x : int) : int {
  x
}
function {:inline true} BV32_ADD(x : int, y : int) : int {
  x + y
}
function {:inline true} BV32_AND(x : int, y : int) : int {
  if x == y then x else (if x == 0 || y == 0 then 0 else BV32_AND_UF(x, y))
}
function BV32_AND_UF(int, int) : int;
function {:inline true} BV32_MUL(x : int, y : int) : int {
  x * y
}
function {:inline true} BV32_OR(x : int, y : int) : int {
  if x == y then x else (if x == 0 then y else (if y == 0 then x else BV32_OR_UF(x, y)))
}
function BV32_OR_UF(int, int) : int;
function {:inline true} BV32_SDIV(x : int, y : int) : int {
  x div y
}
function {:inline true} BV32_SGT(x : int, y : int) : bool {
  x > y
}
function {:inline true} BV32_SLT(x : int, y : int) : bool {
  x < y
}
function {:inline true} BV32_SUB(x : int, y : int) : int {
  x - y
}
function {:inline true} BV32_UDIV(x : int, y : int) : int {
  x div y
}
function {:inline true} BV32_ULT(x : int, y : int) : bool {
  x < y
}
function {:inline true} BV32_UREM(x : int, y : int) : int {
  x mod y
}
function {:inline true} BV8_ZEXT32(x : int) : int {
  x
}
procedure {:source_name "SobelShared"} {:kernel} $_Z11SobelSharedP6uchar4tssssf($SobelPitch:int, $BlockWidth:int, $SharedPitch:int, $w:int, $h:int, $fScale:int)
requires {:sourceloc_num 0} (if BV16_ZEXT32($SobelPitch) == 512 then 1 else 0) != 0;
requires {:sourceloc_num 1} (if BV16_SEXT32($BlockWidth) == 80 then 1 else 0) != 0;
requires {:sourceloc_num 2} (if BV16_SEXT32($SharedPitch) == 384 then 1 else 0) != 0;
requires {:sourceloc_num 3} (if BV16_SEXT32($w) == 512 then 1 else 0) != 0;
{
  var $ib.0:int;
  var $ib.1:int;
  var $ib.2:int;
  var $.01:int;
  var $.03:int;
  var $.02:int;
  var $.0:int;
  var v0:int;
  var v1:int;
  var v2:int;
  var v3:bool;
  var v4:int;
  var v5:int;
  var v6:int;
  var v7:int;
  var v12:int;
  var v8:int;
  var v9:int;
  var v10:int;
  var v11:int;
  var v13:int;
  var v14:int;
  var v15:int;
  var v32:int;
  var v33:int;
  var v16:int;
  var v17:int;
  var v18:int;
  var v19:int;
  var v20:int;
  var v21:int;
  var v22:int;
  var v23:int;
  var v24:int;
  var v25:int;
  var v26:int;
  var v27:int;
  var v28:int;
  var v29:int;
  var v30:int;
  var v31:int;
  var v59:int;
  var v34:int;
  var v35:int;
  var v36:int;
  var v37:int;
  var v38:int;
  var v39:int;
  var v40:int;
  var v41:int;
  var v42:int;
  var v43:int;
  var v44:int;
  var v45:int;
  var v46:int;
  var v47:int;
  var v58:int;
  var v48:int;
  var v49:int;
  var v50:int;
  var v51:int;
  var v52:int;
  var v53:int;
  var v54:int;
  var v55:int;
  var v56:int;
  var v57:int;
  var v60:int;
  var v61:int;
  var v62:int;
  var v63:int;
  var v64:int;
  var v65:int;
  var v66:int;
  var v67:int;
  var v68:int;
  var v69:int;
  var v70:int;
  var v71:int;
  var v72:int;
  var v73:int;
  var v74:int;
  var v75:int;
  var v76:int;
  var v77:int;
  var v78:int;
  var v79:int;
  var v80:int;
  var v81:int;
  var v82:int;
  var v83:int;
  var v84:int;
  var v85:int;
  var v86:int;
  var v87:int;
  var v88:int;
  var v89:int;
  var v90:int;
  var v91:int;
  var v92:bool;
  var v93:int;
  var v94:bool;
  var v95:int;
  var v96:int;
  var v97:int;
  var v98:int;
  var v103:int;
  var v99:int;
  var v100:int;
  var v101:int;
  var v102:int;
  var v104:int;
  var v105:int;
  var v106:int;
  var v123:int;
  var v124:int;
  var v107:int;
  var v108:int;
  var v109:int;
  var v110:int;
  var v111:int;
  var v112:int;
  var v113:int;
  var v114:int;
  var v115:int;
  var v116:int;
  var v122:int;
  var v117:int;
  var v118:int;
  var v119:int;
  var v120:int;
  var v121:int;
  var v149:int;
  var v150:int;
  var v125:int;
  var v126:int;
  var v127:int;
  var v128:int;
  var v129:int;
  var v130:int;
  var v131:int;
  var v132:int;
  var v133:int;
  var v134:int;
  var v135:int;
  var v136:int;
  var v137:int;
  var v138:int;
  var v148:int;
  var v139:int;
  var v140:int;
  var v141:int;
  var v142:int;
  var v143:int;
  var v144:int;
  var v145:int;
  var v146:int;
  var v147:int;
  var v151:int;
  var v152:int;
  var v153:int;
  var v154:int;
  var v155:int;
  var v156:int;
  var v157:int;
  var v158:int;
  var v159:int;
  var v160:int;
  var v161:int;
  var v162:int;
  var v163:int;
  var v164:int;
  var v165:int;
  var v166:int;
  var v167:int;
  var v168:int;
  var v169:int;
  var v170:int;
  var v171:int;
  var v172:int;
  var v173:int;
  var v174:int;
  var v175:int;
  var v176:int;
  var v177:int;
  var v178:int;
  var v179:int;
  var v180:int;
  var v181:int;
  var v182:int;
  var v183:int;
  var v184:int;
  var v185:bool;
  var v186:int;
  var v189:int;
  var v187:int;
  var v188:int;
  var v190:int;
  var v191:int;
  var v192:int;
  var v193:int;
  var v194:int;
  var v195:int;
  var v196:int;
  var v197:int;
  var v198:bool;
  var v199:bool;
  var v200:int;
  var v201:int;
  var v202:int;
  var v203:int;
  var v204:int;
  var v205:int;
  var v206:bool;
  var v207:bool;
  var v208:int;
  var v209:int;
  var v210:int;
  var v211:int;
  var v212:int;
  var v213:int;
  var v214:bool;
  var v215:bool;
  var v216:int;
  var v217:int;
  var v218:int;
  var v219:int;
  var v220:int;
  var v221:int;
  var v222:bool;
  var v223:bool;
  var v224:bool;
  var v225:bool;
  var v226:int;
  var v227:int;
  var v228:int;
  var v229:int;
$0:
  assert {:block_sourceloc} {:sourceloc_num 4} true;
  v0 := BV_EXTRACT(BV32_MUL(BV32_MUL(4, group_id_x), BV16_SEXT32($BlockWidth)), 16, 0);
  v1 := BV_EXTRACT(BV32_ADD(BV32_MUL(group_id_y, group_size_y), local_id_y), 16, 0);
  v2 := BV32_MUL(local_id_y, BV16_SEXT32($SharedPitch));
  $ib.0 := BV_EXTRACT(local_id_x, 16, 0);
  goto $1;
$1:
  assert {:block_sourceloc} {:sourceloc_num 5} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 6} (if BV32_UREM(BV16_SEXT32($ib.0), group_size_x) == local_id_x then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 7} (if (_WRITE_HAS_OCCURRED_$$LocalBlock ==> BV32_ULT(BV32_UDIV(BV32_SUB(_WATCHED_OFFSET, v2), 4), BV32_ADD(BV16_SEXT32($BlockWidth), 2))) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 8} (if (_WRITE_HAS_OCCURRED_$$LocalBlock ==> BV32_UREM(BV32_UDIV(BV32_SUB(_WATCHED_OFFSET, v2), 4), group_size_x) == local_id_x) then 1 else 0) != 0;
  v3 := BV32_SLT(BV16_SEXT32($ib.0), BV32_ADD(BV16_SEXT32($BlockWidth), 2));
  goto $truebb, $falsebb;
$2:
  assert {:block_sourceloc} {:sourceloc_num 9} true;
  assert {:sourceloc} {:sourceloc_num 10} true;
  v4 := $$tex[0];
  assert {:sourceloc} {:sourceloc_num 11} true;
  $$0[0] := v4;
  assert {:sourceloc} {:sourceloc_num 12} true;
  v5 := $$tex[1];
  assert {:sourceloc} {:sourceloc_num 13} true;
  $$0[1] := v5;
  assert {:sourceloc} {:sourceloc_num 14} true;
  v6 := $$tex[2];
  assert {:sourceloc} {:sourceloc_num 15} true;
  $$0[2] := v6;
  assert {:sourceloc} {:sourceloc_num 16} true;
  v7 := $$tex[3];
  assert {:sourceloc} {:sourceloc_num 17} true;
  $$0[3] := v7;
  assert {:sourceloc} {:sourceloc_num 18} true;
  v8 := $$tex[4];
  assert {:sourceloc} {:sourceloc_num 19} true;
  $$0[4] := v8;
  assert {:sourceloc} {:sourceloc_num 20} true;
  v9 := $$tex[5];
  assert {:sourceloc} {:sourceloc_num 21} true;
  $$0[5] := v9;
  assert {:sourceloc} {:sourceloc_num 22} true;
  v10 := $$tex[6];
  assert {:sourceloc} {:sourceloc_num 23} true;
  $$0[6] := v10;
  assert {:sourceloc} {:sourceloc_num 24} true;
  v11 := $$tex[7];
  assert {:sourceloc} {:sourceloc_num 25} true;
  $$0[7] := v11;
  assert {:sourceloc} {:sourceloc_num 26} true;
  v12 := $$tex[8];
  assert {:sourceloc} {:sourceloc_num 27} true;
  $$0[8] := v12;
  assert {:sourceloc} {:sourceloc_num 28} true;
  v13 := $$tex[9];
  assert {:sourceloc} {:sourceloc_num 29} true;
  $$0[9] := v13;
  assert {:sourceloc} {:sourceloc_num 30} true;
  v14 := $$tex[10];
  assert {:sourceloc} {:sourceloc_num 31} true;
  $$0[10] := v14;
  assert {:sourceloc} {:sourceloc_num 32} true;
  v15 := $$tex[11];
  assert {:sourceloc} {:sourceloc_num 33} true;
  $$0[11] := v15;
  assert {:sourceloc} {:sourceloc_num 34} true;
  v16 := $$0[0];
  assert {:sourceloc} {:sourceloc_num 35} true;
  v17 := $$0[4];
  assert {:sourceloc} {:sourceloc_num 36} true;
  v18 := $$0[5];
  assert {:sourceloc} {:sourceloc_num 37} true;
  v19 := $$0[6];
  assert {:sourceloc} {:sourceloc_num 38} true;
  v20 := $$0[7];
  assert {:sourceloc} {:sourceloc_num 39} true;
  v21 := $$0[8];
  assert {:sourceloc} {:sourceloc_num 40} true;
  v22 := $$0[9];
  assert {:sourceloc} {:sourceloc_num 41} true;
  v23 := $$0[10];
  assert {:sourceloc} {:sourceloc_num 42} true;
  v24 := $$0[11];
  call {:sourceloc_num 43}   v25 := $_Z5tex2DIhET_7textureIS0_Li2EL19cudaTextureReadMode0EEff(v16, BV_CONCAT(BV_CONCAT(BV_CONCAT(v20, v19), v18), v17), BV_CONCAT(BV_CONCAT(BV_CONCAT(v24, v23), v22), v21), SI32_TO_FP32(BV32_SUB(BV32_ADD(BV16_SEXT32(v0), BV32_MUL(4, BV16_SEXT32($ib.0))), 1)), SI32_TO_FP32(BV32_SUB(BV16_SEXT32(v1), 1)));
  assert {:sourceloc} {:sourceloc_num 44} true;
  $$LocalBlock[BV32_ADD(v2, BV32_MUL(4, BV16_SEXT32($ib.0)))] := v25;
  assert {:sourceloc} {:sourceloc_num 45} true;
  v26 := $$tex[0];
  assert {:sourceloc} {:sourceloc_num 46} true;
  $$1[0] := v26;
  assert {:sourceloc} {:sourceloc_num 47} true;
  v27 := $$tex[1];
  assert {:sourceloc} {:sourceloc_num 48} true;
  $$1[1] := v27;
  assert {:sourceloc} {:sourceloc_num 49} true;
  v28 := $$tex[2];
  assert {:sourceloc} {:sourceloc_num 50} true;
  $$1[2] := v28;
  assert {:sourceloc} {:sourceloc_num 51} true;
  v29 := $$tex[3];
  assert {:sourceloc} {:sourceloc_num 52} true;
  $$1[3] := v29;
  assert {:sourceloc} {:sourceloc_num 53} true;
  v30 := $$tex[4];
  assert {:sourceloc} {:sourceloc_num 54} true;
  $$1[4] := v30;
  assert {:sourceloc} {:sourceloc_num 55} true;
  v31 := $$tex[5];
  assert {:sourceloc} {:sourceloc_num 56} true;
  $$1[5] := v31;
  assert {:sourceloc} {:sourceloc_num 57} true;
  v32 := $$tex[6];
  assert {:sourceloc} {:sourceloc_num 58} true;
  $$1[6] := v32;
  assert {:sourceloc} {:sourceloc_num 59} true;
  v33 := $$tex[7];
  assert {:sourceloc} {:sourceloc_num 60} true;
  $$1[7] := v33;
  assert {:sourceloc} {:sourceloc_num 61} true;
  v34 := $$tex[8];
  assert {:sourceloc} {:sourceloc_num 62} true;
  $$1[8] := v34;
  assert {:sourceloc} {:sourceloc_num 63} true;
  v35 := $$tex[9];
  assert {:sourceloc} {:sourceloc_num 64} true;
  $$1[9] := v35;
  assert {:sourceloc} {:sourceloc_num 65} true;
  v36 := $$tex[10];
  assert {:sourceloc} {:sourceloc_num 66} true;
  $$1[10] := v36;
  assert {:sourceloc} {:sourceloc_num 67} true;
  v37 := $$tex[11];
  assert {:sourceloc} {:sourceloc_num 68} true;
  $$1[11] := v37;
  assert {:sourceloc} {:sourceloc_num 69} true;
  v38 := $$1[0];
  assert {:sourceloc} {:sourceloc_num 70} true;
  v39 := $$1[4];
  assert {:sourceloc} {:sourceloc_num 71} true;
  v40 := $$1[5];
  assert {:sourceloc} {:sourceloc_num 72} true;
  v41 := $$1[6];
  assert {:sourceloc} {:sourceloc_num 73} true;
  v42 := $$1[7];
  assert {:sourceloc} {:sourceloc_num 74} true;
  v43 := $$1[8];
  assert {:sourceloc} {:sourceloc_num 75} true;
  v44 := $$1[9];
  assert {:sourceloc} {:sourceloc_num 76} true;
  v45 := $$1[10];
  assert {:sourceloc} {:sourceloc_num 77} true;
  v46 := $$1[11];
  call {:sourceloc_num 78}   v47 := $_Z5tex2DIhET_7textureIS0_Li2EL19cudaTextureReadMode0EEff(v38, BV_CONCAT(BV_CONCAT(BV_CONCAT(v42, v41), v40), v39), BV_CONCAT(BV_CONCAT(BV_CONCAT(v46, v45), v44), v43), SI32_TO_FP32(BV32_ADD(BV32_SUB(BV32_ADD(BV16_SEXT32(v0), BV32_MUL(4, BV16_SEXT32($ib.0))), 1), 1)), SI32_TO_FP32(BV32_SUB(BV16_SEXT32(v1), 1)));
  assert {:sourceloc} {:sourceloc_num 79} true;
  $$LocalBlock[BV32_ADD(BV32_ADD(v2, BV32_MUL(4, BV16_SEXT32($ib.0))), 1)] := v47;
  assert {:sourceloc} {:sourceloc_num 80} true;
  v48 := $$tex[0];
  assert {:sourceloc} {:sourceloc_num 81} true;
  $$2[0] := v48;
  assert {:sourceloc} {:sourceloc_num 82} true;
  v49 := $$tex[1];
  assert {:sourceloc} {:sourceloc_num 83} true;
  $$2[1] := v49;
  assert {:sourceloc} {:sourceloc_num 84} true;
  v50 := $$tex[2];
  assert {:sourceloc} {:sourceloc_num 85} true;
  $$2[2] := v50;
  assert {:sourceloc} {:sourceloc_num 86} true;
  v51 := $$tex[3];
  assert {:sourceloc} {:sourceloc_num 87} true;
  $$2[3] := v51;
  assert {:sourceloc} {:sourceloc_num 88} true;
  v52 := $$tex[4];
  assert {:sourceloc} {:sourceloc_num 89} true;
  $$2[4] := v52;
  assert {:sourceloc} {:sourceloc_num 90} true;
  v53 := $$tex[5];
  assert {:sourceloc} {:sourceloc_num 91} true;
  $$2[5] := v53;
  assert {:sourceloc} {:sourceloc_num 92} true;
  v54 := $$tex[6];
  assert {:sourceloc} {:sourceloc_num 93} true;
  $$2[6] := v54;
  assert {:sourceloc} {:sourceloc_num 94} true;
  v55 := $$tex[7];
  assert {:sourceloc} {:sourceloc_num 95} true;
  $$2[7] := v55;
  assert {:sourceloc} {:sourceloc_num 96} true;
  v56 := $$tex[8];
  assert {:sourceloc} {:sourceloc_num 97} true;
  $$2[8] := v56;
  assert {:sourceloc} {:sourceloc_num 98} true;
  v57 := $$tex[9];
  assert {:sourceloc} {:sourceloc_num 99} true;
  $$2[9] := v57;
  assert {:sourceloc} {:sourceloc_num 100} true;
  v58 := $$tex[10];
  assert {:sourceloc} {:sourceloc_num 101} true;
  $$2[10] := v58;
  assert {:sourceloc} {:sourceloc_num 102} true;
  v59 := $$tex[11];
  assert {:sourceloc} {:sourceloc_num 103} true;
  $$2[11] := v59;
  assert {:sourceloc} {:sourceloc_num 104} true;
  v60 := $$2[0];
  assert {:sourceloc} {:sourceloc_num 105} true;
  v61 := $$2[4];
  assert {:sourceloc} {:sourceloc_num 106} true;
  v62 := $$2[5];
  assert {:sourceloc} {:sourceloc_num 107} true;
  v63 := $$2[6];
  assert {:sourceloc} {:sourceloc_num 108} true;
  v64 := $$2[7];
  assert {:sourceloc} {:sourceloc_num 109} true;
  v65 := $$2[8];
  assert {:sourceloc} {:sourceloc_num 110} true;
  v66 := $$2[9];
  assert {:sourceloc} {:sourceloc_num 111} true;
  v67 := $$2[10];
  assert {:sourceloc} {:sourceloc_num 112} true;
  v68 := $$2[11];
  call {:sourceloc_num 113}   v69 := $_Z5tex2DIhET_7textureIS0_Li2EL19cudaTextureReadMode0EEff(v60, BV_CONCAT(BV_CONCAT(BV_CONCAT(v64, v63), v62), v61), BV_CONCAT(BV_CONCAT(BV_CONCAT(v68, v67), v66), v65), SI32_TO_FP32(BV32_ADD(BV32_SUB(BV32_ADD(BV16_SEXT32(v0), BV32_MUL(4, BV16_SEXT32($ib.0))), 1), 2)), SI32_TO_FP32(BV32_SUB(BV16_SEXT32(v1), 1)));
  assert {:sourceloc} {:sourceloc_num 114} true;
  $$LocalBlock[BV32_ADD(BV32_ADD(v2, BV32_MUL(4, BV16_SEXT32($ib.0))), 2)] := v69;
  assert {:sourceloc} {:sourceloc_num 115} true;
  v70 := $$tex[0];
  assert {:sourceloc} {:sourceloc_num 116} true;
  $$3[0] := v70;
  assert {:sourceloc} {:sourceloc_num 117} true;
  v71 := $$tex[1];
  assert {:sourceloc} {:sourceloc_num 118} true;
  $$3[1] := v71;
  assert {:sourceloc} {:sourceloc_num 119} true;
  v72 := $$tex[2];
  assert {:sourceloc} {:sourceloc_num 120} true;
  $$3[2] := v72;
  assert {:sourceloc} {:sourceloc_num 121} true;
  v73 := $$tex[3];
  assert {:sourceloc} {:sourceloc_num 122} true;
  $$3[3] := v73;
  assert {:sourceloc} {:sourceloc_num 123} true;
  v74 := $$tex[4];
  assert {:sourceloc} {:sourceloc_num 124} true;
  $$3[4] := v74;
  assert {:sourceloc} {:sourceloc_num 125} true;
  v75 := $$tex[5];
  assert {:sourceloc} {:sourceloc_num 126} true;
  $$3[5] := v75;
  assert {:sourceloc} {:sourceloc_num 127} true;
  v76 := $$tex[6];
  assert {:sourceloc} {:sourceloc_num 128} true;
  $$3[6] := v76;
  assert {:sourceloc} {:sourceloc_num 129} true;
  v77 := $$tex[7];
  assert {:sourceloc} {:sourceloc_num 130} true;
  $$3[7] := v77;
  assert {:sourceloc} {:sourceloc_num 131} true;
  v78 := $$tex[8];
  assert {:sourceloc} {:sourceloc_num 132} true;
  $$3[8] := v78;
  assert {:sourceloc} {:sourceloc_num 133} true;
  v79 := $$tex[9];
  assert {:sourceloc} {:sourceloc_num 134} true;
  $$3[9] := v79;
  assert {:sourceloc} {:sourceloc_num 135} true;
  v80 := $$tex[10];
  assert {:sourceloc} {:sourceloc_num 136} true;
  $$3[10] := v80;
  assert {:sourceloc} {:sourceloc_num 137} true;
  v81 := $$tex[11];
  assert {:sourceloc} {:sourceloc_num 138} true;
  $$3[11] := v81;
  assert {:sourceloc} {:sourceloc_num 139} true;
  v82 := $$3[0];
  assert {:sourceloc} {:sourceloc_num 140} true;
  v83 := $$3[4];
  assert {:sourceloc} {:sourceloc_num 141} true;
  v84 := $$3[5];
  assert {:sourceloc} {:sourceloc_num 142} true;
  v85 := $$3[6];
  assert {:sourceloc} {:sourceloc_num 143} true;
  v86 := $$3[7];
  assert {:sourceloc} {:sourceloc_num 144} true;
  v87 := $$3[8];
  assert {:sourceloc} {:sourceloc_num 145} true;
  v88 := $$3[9];
  assert {:sourceloc} {:sourceloc_num 146} true;
  v89 := $$3[10];
  assert {:sourceloc} {:sourceloc_num 147} true;
  v90 := $$3[11];
  call {:sourceloc_num 148}   v91 := $_Z5tex2DIhET_7textureIS0_Li2EL19cudaTextureReadMode0EEff(v82, BV_CONCAT(BV_CONCAT(BV_CONCAT(v86, v85), v84), v83), BV_CONCAT(BV_CONCAT(BV_CONCAT(v90, v89), v88), v87), SI32_TO_FP32(BV32_ADD(BV32_SUB(BV32_ADD(BV16_SEXT32(v0), BV32_MUL(4, BV16_SEXT32($ib.0))), 1), 3)), SI32_TO_FP32(BV32_SUB(BV16_SEXT32(v1), 1)));
  assert {:sourceloc} {:sourceloc_num 149} true;
  $$LocalBlock[BV32_ADD(BV32_ADD(v2, BV32_MUL(4, BV16_SEXT32($ib.0))), 3)] := v91;
  goto $3;
$3:
  assert {:block_sourceloc} {:sourceloc_num 150} true;
  $ib.0 := BV_EXTRACT(BV32_ADD(BV16_SEXT32($ib.0), group_size_x), 16, 0);
  goto $1;
$4:
  assert {:block_sourceloc} {:sourceloc_num 151} true;
  v92 := BV32_ULT(local_id_y, 2);
  goto $truebb0, $falsebb0;
$5:
  assert {:block_sourceloc} {:sourceloc_num 152} true;
  v93 := BV32_MUL(BV32_ADD(group_size_y, local_id_y), BV16_SEXT32($SharedPitch));
  $ib.1 := BV_EXTRACT(local_id_x, 16, 0);
  goto $6;
$6:
  assert {:block_sourceloc} {:sourceloc_num 153} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 154} (if (BV32_ULT(local_id_y, 2) ==> BV32_UREM(BV16_SEXT32($ib.1), group_size_x) == local_id_x) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 155} (if (BV32_ULT(local_id_y, 2) ==> (_WRITE_HAS_OCCURRED_$$LocalBlock ==> BV32_OR(BV32_AND(BV1_ZEXT32((if BV32_ULT(BV32_UDIV(BV32_SUB(_WATCHED_OFFSET, v93), 4), BV32_ADD(BV16_SEXT32($BlockWidth), 2)) then 1 else 0)), BV1_ZEXT32((if BV32_UREM(BV32_UDIV(BV32_SUB(_WATCHED_OFFSET, v93), 4), group_size_x) == local_id_x then 1 else 0))), BV32_AND(BV1_ZEXT32((if BV32_ULT(BV32_UDIV(BV32_SUB(_WATCHED_OFFSET, BV32_MUL(local_id_y, BV16_SEXT32($SharedPitch))), 4), BV32_ADD(BV16_SEXT32($BlockWidth), 2)) then 1 else 0)), BV1_ZEXT32((if BV32_UREM(BV32_UDIV(BV32_SUB(_WATCHED_OFFSET, BV32_MUL(local_id_y, BV16_SEXT32($SharedPitch))), 4), group_size_x) == local_id_x then 1 else 0)))) != 0)) then 1 else 0) != 0;
  v94 := BV32_SLT(BV16_SEXT32($ib.1), BV32_ADD(BV16_SEXT32($BlockWidth), 2));
  goto $truebb1, $falsebb1;
$7:
  assert {:block_sourceloc} {:sourceloc_num 156} true;
  assert {:sourceloc} {:sourceloc_num 157} true;
  v95 := $$tex[0];
  assert {:sourceloc} {:sourceloc_num 158} true;
  $$4[0] := v95;
  assert {:sourceloc} {:sourceloc_num 159} true;
  v96 := $$tex[1];
  assert {:sourceloc} {:sourceloc_num 160} true;
  $$4[1] := v96;
  assert {:sourceloc} {:sourceloc_num 161} true;
  v97 := $$tex[2];
  assert {:sourceloc} {:sourceloc_num 162} true;
  $$4[2] := v97;
  assert {:sourceloc} {:sourceloc_num 163} true;
  v98 := $$tex[3];
  assert {:sourceloc} {:sourceloc_num 164} true;
  $$4[3] := v98;
  assert {:sourceloc} {:sourceloc_num 165} true;
  v99 := $$tex[4];
  assert {:sourceloc} {:sourceloc_num 166} true;
  $$4[4] := v99;
  assert {:sourceloc} {:sourceloc_num 167} true;
  v100 := $$tex[5];
  assert {:sourceloc} {:sourceloc_num 168} true;
  $$4[5] := v100;
  assert {:sourceloc} {:sourceloc_num 169} true;
  v101 := $$tex[6];
  assert {:sourceloc} {:sourceloc_num 170} true;
  $$4[6] := v101;
  assert {:sourceloc} {:sourceloc_num 171} true;
  v102 := $$tex[7];
  assert {:sourceloc} {:sourceloc_num 172} true;
  $$4[7] := v102;
  assert {:sourceloc} {:sourceloc_num 173} true;
  v103 := $$tex[8];
  assert {:sourceloc} {:sourceloc_num 174} true;
  $$4[8] := v103;
  assert {:sourceloc} {:sourceloc_num 175} true;
  v104 := $$tex[9];
  assert {:sourceloc} {:sourceloc_num 176} true;
  $$4[9] := v104;
  assert {:sourceloc} {:sourceloc_num 177} true;
  v105 := $$tex[10];
  assert {:sourceloc} {:sourceloc_num 178} true;
  $$4[10] := v105;
  assert {:sourceloc} {:sourceloc_num 179} true;
  v106 := $$tex[11];
  assert {:sourceloc} {:sourceloc_num 180} true;
  $$4[11] := v106;
  assert {:sourceloc} {:sourceloc_num 181} true;
  v107 := $$4[0];
  assert {:sourceloc} {:sourceloc_num 182} true;
  v108 := $$4[4];
  assert {:sourceloc} {:sourceloc_num 183} true;
  v109 := $$4[5];
  assert {:sourceloc} {:sourceloc_num 184} true;
  v110 := $$4[6];
  assert {:sourceloc} {:sourceloc_num 185} true;
  v111 := $$4[7];
  assert {:sourceloc} {:sourceloc_num 186} true;
  v112 := $$4[8];
  assert {:sourceloc} {:sourceloc_num 187} true;
  v113 := $$4[9];
  assert {:sourceloc} {:sourceloc_num 188} true;
  v114 := $$4[10];
  assert {:sourceloc} {:sourceloc_num 189} true;
  v115 := $$4[11];
  call {:sourceloc_num 190}   v116 := $_Z5tex2DIhET_7textureIS0_Li2EL19cudaTextureReadMode0EEff(v107, BV_CONCAT(BV_CONCAT(BV_CONCAT(v111, v110), v109), v108), BV_CONCAT(BV_CONCAT(BV_CONCAT(v115, v114), v113), v112), SI32_TO_FP32(BV32_SUB(BV32_ADD(BV16_SEXT32(v0), BV32_MUL(4, BV16_SEXT32($ib.1))), 1)), UI32_TO_FP32(BV32_SUB(BV32_ADD(BV16_SEXT32(v1), group_size_y), 1)));
  assert {:sourceloc} {:sourceloc_num 191} true;
  $$LocalBlock[BV32_ADD(v93, BV32_MUL(4, BV16_SEXT32($ib.1)))] := v116;
  assert {:sourceloc} {:sourceloc_num 192} true;
  v117 := $$tex[0];
  assert {:sourceloc} {:sourceloc_num 193} true;
  $$5[0] := v117;
  assert {:sourceloc} {:sourceloc_num 194} true;
  v118 := $$tex[1];
  assert {:sourceloc} {:sourceloc_num 195} true;
  $$5[1] := v118;
  assert {:sourceloc} {:sourceloc_num 196} true;
  v119 := $$tex[2];
  assert {:sourceloc} {:sourceloc_num 197} true;
  $$5[2] := v119;
  assert {:sourceloc} {:sourceloc_num 198} true;
  v120 := $$tex[3];
  assert {:sourceloc} {:sourceloc_num 199} true;
  $$5[3] := v120;
  assert {:sourceloc} {:sourceloc_num 200} true;
  v121 := $$tex[4];
  assert {:sourceloc} {:sourceloc_num 201} true;
  $$5[4] := v121;
  assert {:sourceloc} {:sourceloc_num 202} true;
  v122 := $$tex[5];
  assert {:sourceloc} {:sourceloc_num 203} true;
  $$5[5] := v122;
  assert {:sourceloc} {:sourceloc_num 204} true;
  v123 := $$tex[6];
  assert {:sourceloc} {:sourceloc_num 205} true;
  $$5[6] := v123;
  assert {:sourceloc} {:sourceloc_num 206} true;
  v124 := $$tex[7];
  assert {:sourceloc} {:sourceloc_num 207} true;
  $$5[7] := v124;
  assert {:sourceloc} {:sourceloc_num 208} true;
  v125 := $$tex[8];
  assert {:sourceloc} {:sourceloc_num 209} true;
  $$5[8] := v125;
  assert {:sourceloc} {:sourceloc_num 210} true;
  v126 := $$tex[9];
  assert {:sourceloc} {:sourceloc_num 211} true;
  $$5[9] := v126;
  assert {:sourceloc} {:sourceloc_num 212} true;
  v127 := $$tex[10];
  assert {:sourceloc} {:sourceloc_num 213} true;
  $$5[10] := v127;
  assert {:sourceloc} {:sourceloc_num 214} true;
  v128 := $$tex[11];
  assert {:sourceloc} {:sourceloc_num 215} true;
  $$5[11] := v128;
  assert {:sourceloc} {:sourceloc_num 216} true;
  v129 := $$5[0];
  assert {:sourceloc} {:sourceloc_num 217} true;
  v130 := $$5[4];
  assert {:sourceloc} {:sourceloc_num 218} true;
  v131 := $$5[5];
  assert {:sourceloc} {:sourceloc_num 219} true;
  v132 := $$5[6];
  assert {:sourceloc} {:sourceloc_num 220} true;
  v133 := $$5[7];
  assert {:sourceloc} {:sourceloc_num 221} true;
  v134 := $$5[8];
  assert {:sourceloc} {:sourceloc_num 222} true;
  v135 := $$5[9];
  assert {:sourceloc} {:sourceloc_num 223} true;
  v136 := $$5[10];
  assert {:sourceloc} {:sourceloc_num 224} true;
  v137 := $$5[11];
  call {:sourceloc_num 225}   v138 := $_Z5tex2DIhET_7textureIS0_Li2EL19cudaTextureReadMode0EEff(v129, BV_CONCAT(BV_CONCAT(BV_CONCAT(v133, v132), v131), v130), BV_CONCAT(BV_CONCAT(BV_CONCAT(v137, v136), v135), v134), SI32_TO_FP32(BV32_ADD(BV32_SUB(BV32_ADD(BV16_SEXT32(v0), BV32_MUL(4, BV16_SEXT32($ib.1))), 1), 1)), UI32_TO_FP32(BV32_SUB(BV32_ADD(BV16_SEXT32(v1), group_size_y), 1)));
  assert {:sourceloc} {:sourceloc_num 226} true;
  $$LocalBlock[BV32_ADD(BV32_ADD(v93, BV32_MUL(4, BV16_SEXT32($ib.1))), 1)] := v138;
  assert {:sourceloc} {:sourceloc_num 227} true;
  v139 := $$tex[0];
  assert {:sourceloc} {:sourceloc_num 228} true;
  $$6[0] := v139;
  assert {:sourceloc} {:sourceloc_num 229} true;
  v140 := $$tex[1];
  assert {:sourceloc} {:sourceloc_num 230} true;
  $$6[1] := v140;
  assert {:sourceloc} {:sourceloc_num 231} true;
  v141 := $$tex[2];
  assert {:sourceloc} {:sourceloc_num 232} true;
  $$6[2] := v141;
  assert {:sourceloc} {:sourceloc_num 233} true;
  v142 := $$tex[3];
  assert {:sourceloc} {:sourceloc_num 234} true;
  $$6[3] := v142;
  assert {:sourceloc} {:sourceloc_num 235} true;
  v143 := $$tex[4];
  assert {:sourceloc} {:sourceloc_num 236} true;
  $$6[4] := v143;
  assert {:sourceloc} {:sourceloc_num 237} true;
  v144 := $$tex[5];
  assert {:sourceloc} {:sourceloc_num 238} true;
  $$6[5] := v144;
  assert {:sourceloc} {:sourceloc_num 239} true;
  v145 := $$tex[6];
  assert {:sourceloc} {:sourceloc_num 240} true;
  $$6[6] := v145;
  assert {:sourceloc} {:sourceloc_num 241} true;
  v146 := $$tex[7];
  assert {:sourceloc} {:sourceloc_num 242} true;
  $$6[7] := v146;
  assert {:sourceloc} {:sourceloc_num 243} true;
  v147 := $$tex[8];
  assert {:sourceloc} {:sourceloc_num 244} true;
  $$6[8] := v147;
  assert {:sourceloc} {:sourceloc_num 245} true;
  v148 := $$tex[9];
  assert {:sourceloc} {:sourceloc_num 246} true;
  $$6[9] := v148;
  assert {:sourceloc} {:sourceloc_num 247} true;
  v149 := $$tex[10];
  assert {:sourceloc} {:sourceloc_num 248} true;
  $$6[10] := v149;
  assert {:sourceloc} {:sourceloc_num 249} true;
  v150 := $$tex[11];
  assert {:sourceloc} {:sourceloc_num 250} true;
  $$6[11] := v150;
  assert {:sourceloc} {:sourceloc_num 251} true;
  v151 := $$6[0];
  assert {:sourceloc} {:sourceloc_num 252} true;
  v152 := $$6[4];
  assert {:sourceloc} {:sourceloc_num 253} true;
  v153 := $$6[5];
  assert {:sourceloc} {:sourceloc_num 254} true;
  v154 := $$6[6];
  assert {:sourceloc} {:sourceloc_num 255} true;
  v155 := $$6[7];
  assert {:sourceloc} {:sourceloc_num 256} true;
  v156 := $$6[8];
  assert {:sourceloc} {:sourceloc_num 257} true;
  v157 := $$6[9];
  assert {:sourceloc} {:sourceloc_num 258} true;
  v158 := $$6[10];
  assert {:sourceloc} {:sourceloc_num 259} true;
  v159 := $$6[11];
  call {:sourceloc_num 260}   v160 := $_Z5tex2DIhET_7textureIS0_Li2EL19cudaTextureReadMode0EEff(v151, BV_CONCAT(BV_CONCAT(BV_CONCAT(v155, v154), v153), v152), BV_CONCAT(BV_CONCAT(BV_CONCAT(v159, v158), v157), v156), SI32_TO_FP32(BV32_ADD(BV32_SUB(BV32_ADD(BV16_SEXT32(v0), BV32_MUL(4, BV16_SEXT32($ib.1))), 1), 2)), UI32_TO_FP32(BV32_SUB(BV32_ADD(BV16_SEXT32(v1), group_size_y), 1)));
  assert {:sourceloc} {:sourceloc_num 261} true;
  $$LocalBlock[BV32_ADD(BV32_ADD(v93, BV32_MUL(4, BV16_SEXT32($ib.1))), 2)] := v160;
  assert {:sourceloc} {:sourceloc_num 262} true;
  v161 := $$tex[0];
  assert {:sourceloc} {:sourceloc_num 263} true;
  $$7[0] := v161;
  assert {:sourceloc} {:sourceloc_num 264} true;
  v162 := $$tex[1];
  assert {:sourceloc} {:sourceloc_num 265} true;
  $$7[1] := v162;
  assert {:sourceloc} {:sourceloc_num 266} true;
  v163 := $$tex[2];
  assert {:sourceloc} {:sourceloc_num 267} true;
  $$7[2] := v163;
  assert {:sourceloc} {:sourceloc_num 268} true;
  v164 := $$tex[3];
  assert {:sourceloc} {:sourceloc_num 269} true;
  $$7[3] := v164;
  assert {:sourceloc} {:sourceloc_num 270} true;
  v165 := $$tex[4];
  assert {:sourceloc} {:sourceloc_num 271} true;
  $$7[4] := v165;
  assert {:sourceloc} {:sourceloc_num 272} true;
  v166 := $$tex[5];
  assert {:sourceloc} {:sourceloc_num 273} true;
  $$7[5] := v166;
  assert {:sourceloc} {:sourceloc_num 274} true;
  v167 := $$tex[6];
  assert {:sourceloc} {:sourceloc_num 275} true;
  $$7[6] := v167;
  assert {:sourceloc} {:sourceloc_num 276} true;
  v168 := $$tex[7];
  assert {:sourceloc} {:sourceloc_num 277} true;
  $$7[7] := v168;
  assert {:sourceloc} {:sourceloc_num 278} true;
  v169 := $$tex[8];
  assert {:sourceloc} {:sourceloc_num 279} true;
  $$7[8] := v169;
  assert {:sourceloc} {:sourceloc_num 280} true;
  v170 := $$tex[9];
  assert {:sourceloc} {:sourceloc_num 281} true;
  $$7[9] := v170;
  assert {:sourceloc} {:sourceloc_num 282} true;
  v171 := $$tex[10];
  assert {:sourceloc} {:sourceloc_num 283} true;
  $$7[10] := v171;
  assert {:sourceloc} {:sourceloc_num 284} true;
  v172 := $$tex[11];
  assert {:sourceloc} {:sourceloc_num 285} true;
  $$7[11] := v172;
  assert {:sourceloc} {:sourceloc_num 286} true;
  v173 := $$7[0];
  assert {:sourceloc} {:sourceloc_num 287} true;
  v174 := $$7[4];
  assert {:sourceloc} {:sourceloc_num 288} true;
  v175 := $$7[5];
  assert {:sourceloc} {:sourceloc_num 289} true;
  v176 := $$7[6];
  assert {:sourceloc} {:sourceloc_num 290} true;
  v177 := $$7[7];
  assert {:sourceloc} {:sourceloc_num 291} true;
  v178 := $$7[8];
  assert {:sourceloc} {:sourceloc_num 292} true;
  v179 := $$7[9];
  assert {:sourceloc} {:sourceloc_num 293} true;
  v180 := $$7[10];
  assert {:sourceloc} {:sourceloc_num 294} true;
  v181 := $$7[11];
  call {:sourceloc_num 295}   v182 := $_Z5tex2DIhET_7textureIS0_Li2EL19cudaTextureReadMode0EEff(v173, BV_CONCAT(BV_CONCAT(BV_CONCAT(v177, v176), v175), v174), BV_CONCAT(BV_CONCAT(BV_CONCAT(v181, v180), v179), v178), SI32_TO_FP32(BV32_ADD(BV32_SUB(BV32_ADD(BV16_SEXT32(v0), BV32_MUL(4, BV16_SEXT32($ib.1))), 1), 3)), UI32_TO_FP32(BV32_SUB(BV32_ADD(BV16_SEXT32(v1), group_size_y), 1)));
  assert {:sourceloc} {:sourceloc_num 296} true;
  $$LocalBlock[BV32_ADD(BV32_ADD(v93, BV32_MUL(4, BV16_SEXT32($ib.1))), 3)] := v182;
  goto $8;
$8:
  assert {:block_sourceloc} {:sourceloc_num 297} true;
  $ib.1 := BV_EXTRACT(BV32_ADD(BV16_SEXT32($ib.1), group_size_x), 16, 0);
  goto $6;
$9:
  assert {:block_sourceloc} {:sourceloc_num 298} true;
  goto $10;
$10:
  assert {:block_sourceloc} {:sourceloc_num 299} true;
  call {:sourceloc_num 300} $bugle_barrier(-1, -1);
  v183 := BV_EXTRACT(BV32_ASHR(BV16_SEXT32(v0), 2), 16, 0);
  v184 := BV32_MUL(local_id_y, BV16_SEXT32($SharedPitch));
  $ib.2 := BV_EXTRACT(local_id_x, 16, 0);
  goto $11;
$11:
  assert {:block_sourceloc} {:sourceloc_num 301} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 302} (if BV32_UREM(BV16_SEXT32($ib.2), group_size_x) == local_id_x then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 303} (if (_WRITE_HAS_OCCURRED_$$pSobelOriginal ==> BV32_UREM(BV32_SUB(BV32_UDIV(BV32_SUB(_WATCHED_OFFSET, BV32_MUL(BV16_SEXT32(v1), BV16_ZEXT32($SobelPitch))), 4), BV16_SEXT32(v183)), group_size_x) == local_id_x) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 304} (if (_WRITE_HAS_OCCURRED_$$pSobelOriginal ==> BV32_ULT(BV32_SUB(BV32_UDIV(BV32_SUB(_WATCHED_OFFSET, BV32_MUL(BV16_SEXT32(v1), BV16_ZEXT32($SobelPitch))), 4), BV16_SEXT32(v183)), BV16_SEXT32($BlockWidth))) then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 305} (if (_WRITE_HAS_OCCURRED_$$pSobelOriginal ==> BV32_ULT(_WATCHED_OFFSET, BV32_MUL(BV32_ADD(BV16_SEXT32(v1), 1), BV16_ZEXT32($SobelPitch)))) then 1 else 0) != 0;
  v185 := BV32_SLT(BV16_SEXT32($ib.2), BV16_SEXT32($BlockWidth));
  goto $truebb2, $falsebb2;
$12:
  assert {:block_sourceloc} {:sourceloc_num 306} true;
  assert {:sourceloc} {:sourceloc_num 307} true;
  v186 := $$LocalBlock[BV32_ADD(BV32_ADD(v184, BV32_MUL(4, BV16_SEXT32($ib.2))), BV32_MUL(0, BV16_SEXT32($SharedPitch)))];
  assert {:sourceloc} {:sourceloc_num 308} true;
  v187 := $$LocalBlock[BV32_ADD(BV32_ADD(BV32_ADD(v184, BV32_MUL(4, BV16_SEXT32($ib.2))), BV32_MUL(0, BV16_SEXT32($SharedPitch))), 1)];
  assert {:sourceloc} {:sourceloc_num 309} true;
  v188 := $$LocalBlock[BV32_ADD(BV32_ADD(BV32_ADD(v184, BV32_MUL(4, BV16_SEXT32($ib.2))), BV32_MUL(0, BV16_SEXT32($SharedPitch))), 2)];
  assert {:sourceloc} {:sourceloc_num 310} true;
  v189 := $$LocalBlock[BV32_ADD(BV32_ADD(v184, BV32_MUL(4, BV16_SEXT32($ib.2))), BV16_SEXT32($SharedPitch))];
  assert {:sourceloc} {:sourceloc_num 311} true;
  v190 := $$LocalBlock[BV32_ADD(BV32_ADD(BV32_ADD(v184, BV32_MUL(4, BV16_SEXT32($ib.2))), BV16_SEXT32($SharedPitch)), 1)];
  assert {:sourceloc} {:sourceloc_num 312} true;
  v191 := $$LocalBlock[BV32_ADD(BV32_ADD(BV32_ADD(v184, BV32_MUL(4, BV16_SEXT32($ib.2))), BV16_SEXT32($SharedPitch)), 2)];
  assert {:sourceloc} {:sourceloc_num 313} true;
  v192 := $$LocalBlock[BV32_ADD(BV32_ADD(v184, BV32_MUL(4, BV16_SEXT32($ib.2))), BV32_MUL(2, BV16_SEXT32($SharedPitch)))];
  assert {:sourceloc} {:sourceloc_num 314} true;
  v193 := $$LocalBlock[BV32_ADD(BV32_ADD(BV32_ADD(v184, BV32_MUL(4, BV16_SEXT32($ib.2))), BV32_MUL(2, BV16_SEXT32($SharedPitch))), 1)];
  assert {:sourceloc} {:sourceloc_num 315} true;
  v194 := $$LocalBlock[BV32_ADD(BV32_ADD(BV32_ADD(v184, BV32_MUL(4, BV16_SEXT32($ib.2))), BV32_MUL(2, BV16_SEXT32($SharedPitch))), 2)];
  call {:sourceloc_num 316}   v195 := $abs(SI32_TO_FP32(BV16_SEXT32(BV_EXTRACT(BV32_SUB(BV32_SUB(BV32_SUB(BV32_ADD(BV32_ADD(BV8_ZEXT32(v188), BV32_MUL(2, BV8_ZEXT32(v191))), BV8_ZEXT32(v194)), BV8_ZEXT32(v186)), BV32_MUL(2, BV8_ZEXT32(v189))), BV8_ZEXT32(v192)), 16, 0))));
  call {:sourceloc_num 317}   v196 := $abs(SI32_TO_FP32(BV16_SEXT32(BV_EXTRACT(BV32_SUB(BV32_SUB(BV32_SUB(BV32_ADD(BV32_ADD(BV8_ZEXT32(v186), BV32_MUL(2, BV8_ZEXT32(v187))), BV8_ZEXT32(v188)), BV8_ZEXT32(v192)), BV32_MUL(2, BV8_ZEXT32(v193))), BV8_ZEXT32(v194)), 16, 0))));
  v197 := FP32_TO_SI16(FMUL32($fScale, FADD32(v195, v196)));
  v198 := BV32_SLT(BV16_SEXT32(v197), 0);
  goto $truebb3, $falsebb3;
$13:
  assert {:block_sourceloc} {:sourceloc_num 318} true;
  $.01 := 0;
  goto $_ZL12ComputeSobelhhhhhhhhhf.exit;
$14:
  assert {:block_sourceloc} {:sourceloc_num 319} true;
  v199 := BV32_SGT(BV16_SEXT32(v197), 255);
  goto $truebb4, $falsebb4;
$15:
  assert {:block_sourceloc} {:sourceloc_num 320} true;
  $.01 := -1;
  goto $_ZL12ComputeSobelhhhhhhhhhf.exit;
$16:
  assert {:block_sourceloc} {:sourceloc_num 321} true;
  $.01 := BV_EXTRACT(v197, 8, 0);
  goto $_ZL12ComputeSobelhhhhhhhhhf.exit;
$_ZL12ComputeSobelhhhhhhhhhf.exit:
  assert {:block_sourceloc} {:sourceloc_num 322} true;
  assert {:sourceloc} {:sourceloc_num 323} true;
  $$out[0] := $.01;
  assert {:sourceloc} {:sourceloc_num 324} true;
  v200 := $$LocalBlock[BV32_ADD(BV32_ADD(BV32_ADD(v184, BV32_MUL(4, BV16_SEXT32($ib.2))), BV32_MUL(0, BV16_SEXT32($SharedPitch))), 3)];
  assert {:sourceloc} {:sourceloc_num 325} true;
  v201 := $$LocalBlock[BV32_ADD(BV32_ADD(BV32_ADD(v184, BV32_MUL(4, BV16_SEXT32($ib.2))), BV16_SEXT32($SharedPitch)), 3)];
  assert {:sourceloc} {:sourceloc_num 326} true;
  v202 := $$LocalBlock[BV32_ADD(BV32_ADD(BV32_ADD(v184, BV32_MUL(4, BV16_SEXT32($ib.2))), BV32_MUL(2, BV16_SEXT32($SharedPitch))), 3)];
  call {:sourceloc_num 327}   v203 := $abs(SI32_TO_FP32(BV16_SEXT32(BV_EXTRACT(BV32_SUB(BV32_SUB(BV32_SUB(BV32_ADD(BV32_ADD(BV8_ZEXT32(v200), BV32_MUL(2, BV8_ZEXT32(v201))), BV8_ZEXT32(v202)), BV8_ZEXT32(v187)), BV32_MUL(2, BV8_ZEXT32(v190))), BV8_ZEXT32(v193)), 16, 0))));
  call {:sourceloc_num 328}   v204 := $abs(SI32_TO_FP32(BV16_SEXT32(BV_EXTRACT(BV32_SUB(BV32_SUB(BV32_SUB(BV32_ADD(BV32_ADD(BV8_ZEXT32(v187), BV32_MUL(2, BV8_ZEXT32(v188))), BV8_ZEXT32(v200)), BV8_ZEXT32(v193)), BV32_MUL(2, BV8_ZEXT32(v194))), BV8_ZEXT32(v202)), 16, 0))));
  v205 := FP32_TO_SI16(FMUL32($fScale, FADD32(v203, v204)));
  v206 := BV32_SLT(BV16_SEXT32(v205), 0);
  goto $truebb5, $falsebb5;
$17:
  assert {:block_sourceloc} {:sourceloc_num 329} true;
  $.03 := 0;
  goto $_ZL12ComputeSobelhhhhhhhhhf.exit4;
$18:
  assert {:block_sourceloc} {:sourceloc_num 330} true;
  v207 := BV32_SGT(BV16_SEXT32(v205), 255);
  goto $truebb6, $falsebb6;
$19:
  assert {:block_sourceloc} {:sourceloc_num 331} true;
  $.03 := -1;
  goto $_ZL12ComputeSobelhhhhhhhhhf.exit4;
$20:
  assert {:block_sourceloc} {:sourceloc_num 332} true;
  $.03 := BV_EXTRACT(v205, 8, 0);
  goto $_ZL12ComputeSobelhhhhhhhhhf.exit4;
$_ZL12ComputeSobelhhhhhhhhhf.exit4:
  assert {:block_sourceloc} {:sourceloc_num 333} true;
  assert {:sourceloc} {:sourceloc_num 334} true;
  $$out[1] := $.03;
  assert {:sourceloc} {:sourceloc_num 335} true;
  v208 := $$LocalBlock[BV32_ADD(BV32_ADD(BV32_ADD(v184, BV32_MUL(4, BV16_SEXT32($ib.2))), BV32_MUL(0, BV16_SEXT32($SharedPitch))), 4)];
  assert {:sourceloc} {:sourceloc_num 336} true;
  v209 := $$LocalBlock[BV32_ADD(BV32_ADD(BV32_ADD(v184, BV32_MUL(4, BV16_SEXT32($ib.2))), BV16_SEXT32($SharedPitch)), 4)];
  assert {:sourceloc} {:sourceloc_num 337} true;
  v210 := $$LocalBlock[BV32_ADD(BV32_ADD(BV32_ADD(v184, BV32_MUL(4, BV16_SEXT32($ib.2))), BV32_MUL(2, BV16_SEXT32($SharedPitch))), 4)];
  call {:sourceloc_num 338}   v211 := $abs(SI32_TO_FP32(BV16_SEXT32(BV_EXTRACT(BV32_SUB(BV32_SUB(BV32_SUB(BV32_ADD(BV32_ADD(BV8_ZEXT32(v208), BV32_MUL(2, BV8_ZEXT32(v209))), BV8_ZEXT32(v210)), BV8_ZEXT32(v188)), BV32_MUL(2, BV8_ZEXT32(v191))), BV8_ZEXT32(v194)), 16, 0))));
  call {:sourceloc_num 339}   v212 := $abs(SI32_TO_FP32(BV16_SEXT32(BV_EXTRACT(BV32_SUB(BV32_SUB(BV32_SUB(BV32_ADD(BV32_ADD(BV8_ZEXT32(v188), BV32_MUL(2, BV8_ZEXT32(v200))), BV8_ZEXT32(v208)), BV8_ZEXT32(v194)), BV32_MUL(2, BV8_ZEXT32(v202))), BV8_ZEXT32(v210)), 16, 0))));
  v213 := FP32_TO_SI16(FMUL32($fScale, FADD32(v211, v212)));
  v214 := BV32_SLT(BV16_SEXT32(v213), 0);
  goto $truebb7, $falsebb7;
$21:
  assert {:block_sourceloc} {:sourceloc_num 340} true;
  $.02 := 0;
  goto $_ZL12ComputeSobelhhhhhhhhhf.exit8;
$22:
  assert {:block_sourceloc} {:sourceloc_num 341} true;
  v215 := BV32_SGT(BV16_SEXT32(v213), 255);
  goto $truebb8, $falsebb8;
$23:
  assert {:block_sourceloc} {:sourceloc_num 342} true;
  $.02 := -1;
  goto $_ZL12ComputeSobelhhhhhhhhhf.exit8;
$24:
  assert {:block_sourceloc} {:sourceloc_num 343} true;
  $.02 := BV_EXTRACT(v213, 8, 0);
  goto $_ZL12ComputeSobelhhhhhhhhhf.exit8;
$_ZL12ComputeSobelhhhhhhhhhf.exit8:
  assert {:block_sourceloc} {:sourceloc_num 344} true;
  assert {:sourceloc} {:sourceloc_num 345} true;
  $$out[2] := $.02;
  assert {:sourceloc} {:sourceloc_num 346} true;
  v216 := $$LocalBlock[BV32_ADD(BV32_ADD(BV32_ADD(v184, BV32_MUL(4, BV16_SEXT32($ib.2))), BV32_MUL(0, BV16_SEXT32($SharedPitch))), 5)];
  assert {:sourceloc} {:sourceloc_num 347} true;
  v217 := $$LocalBlock[BV32_ADD(BV32_ADD(BV32_ADD(v184, BV32_MUL(4, BV16_SEXT32($ib.2))), BV16_SEXT32($SharedPitch)), 5)];
  assert {:sourceloc} {:sourceloc_num 348} true;
  v218 := $$LocalBlock[BV32_ADD(BV32_ADD(BV32_ADD(v184, BV32_MUL(4, BV16_SEXT32($ib.2))), BV32_MUL(2, BV16_SEXT32($SharedPitch))), 5)];
  call {:sourceloc_num 349}   v219 := $abs(SI32_TO_FP32(BV16_SEXT32(BV_EXTRACT(BV32_SUB(BV32_SUB(BV32_SUB(BV32_ADD(BV32_ADD(BV8_ZEXT32(v216), BV32_MUL(2, BV8_ZEXT32(v217))), BV8_ZEXT32(v218)), BV8_ZEXT32(v200)), BV32_MUL(2, BV8_ZEXT32(v201))), BV8_ZEXT32(v202)), 16, 0))));
  call {:sourceloc_num 350}   v220 := $abs(SI32_TO_FP32(BV16_SEXT32(BV_EXTRACT(BV32_SUB(BV32_SUB(BV32_SUB(BV32_ADD(BV32_ADD(BV8_ZEXT32(v200), BV32_MUL(2, BV8_ZEXT32(v208))), BV8_ZEXT32(v216)), BV8_ZEXT32(v202)), BV32_MUL(2, BV8_ZEXT32(v210))), BV8_ZEXT32(v218)), 16, 0))));
  v221 := FP32_TO_SI16(FMUL32($fScale, FADD32(v219, v220)));
  v222 := BV32_SLT(BV16_SEXT32(v221), 0);
  goto $truebb9, $falsebb9;
$25:
  assert {:block_sourceloc} {:sourceloc_num 351} true;
  $.0 := 0;
  goto $_ZL12ComputeSobelhhhhhhhhhf.exit12;
$26:
  assert {:block_sourceloc} {:sourceloc_num 352} true;
  v223 := BV32_SGT(BV16_SEXT32(v221), 255);
  goto $truebb10, $falsebb10;
$27:
  assert {:block_sourceloc} {:sourceloc_num 353} true;
  $.0 := -1;
  goto $_ZL12ComputeSobelhhhhhhhhhf.exit12;
$28:
  assert {:block_sourceloc} {:sourceloc_num 354} true;
  $.0 := BV_EXTRACT(v221, 8, 0);
  goto $_ZL12ComputeSobelhhhhhhhhhf.exit12;
$_ZL12ComputeSobelhhhhhhhhhf.exit12:
  assert {:block_sourceloc} {:sourceloc_num 355} true;
  assert {:sourceloc} {:sourceloc_num 356} true;
  $$out[3] := $.0;
  v224 := BV32_SLT(BV32_ADD(BV16_SEXT32(v183), BV16_SEXT32($ib.2)), BV32_SDIV(BV16_SEXT32($w), 4));
  goto $truebb11, $falsebb11;
$29:
  assert {:block_sourceloc} {:sourceloc_num 357} true;
  v225 := BV32_SLT(BV16_SEXT32(v1), BV16_SEXT32($h));
  goto $truebb12, $falsebb12;
$30:
  assert {:block_sourceloc} {:sourceloc_num 358} true;
  assert {:sourceloc} {:sourceloc_num 359} true;
  v226 := $$out[0];
  assert {:sourceloc} {:sourceloc_num 360} true;
  $$pSobelOriginal[BV32_ADD(BV32_MUL(BV16_SEXT32(v1), BV16_ZEXT32($SobelPitch)), BV32_MUL(BV32_ADD(BV16_SEXT32(v183), BV16_SEXT32($ib.2)), 4))] := v226;
  assert {:sourceloc} {:sourceloc_num 361} true;
  v227 := $$out[1];
  assert {:sourceloc} {:sourceloc_num 362} true;
  $$pSobelOriginal[BV32_ADD(BV32_ADD(BV32_MUL(BV16_SEXT32(v1), BV16_ZEXT32($SobelPitch)), BV32_MUL(BV32_ADD(BV16_SEXT32(v183), BV16_SEXT32($ib.2)), 4)), 1)] := v227;
  assert {:sourceloc} {:sourceloc_num 363} true;
  v228 := $$out[2];
  assert {:sourceloc} {:sourceloc_num 364} true;
  $$pSobelOriginal[BV32_ADD(BV32_ADD(BV32_MUL(BV16_SEXT32(v1), BV16_ZEXT32($SobelPitch)), BV32_MUL(BV32_ADD(BV16_SEXT32(v183), BV16_SEXT32($ib.2)), 4)), 2)] := v228;
  assert {:sourceloc} {:sourceloc_num 365} true;
  v229 := $$out[3];
  assert {:sourceloc} {:sourceloc_num 366} true;
  $$pSobelOriginal[BV32_ADD(BV32_ADD(BV32_MUL(BV16_SEXT32(v1), BV16_ZEXT32($SobelPitch)), BV32_MUL(BV32_ADD(BV16_SEXT32(v183), BV16_SEXT32($ib.2)), 4)), 3)] := v229;
  goto $31;
$31:
  assert {:block_sourceloc} {:sourceloc_num 367} true;
  goto $32;
$32:
  assert {:block_sourceloc} {:sourceloc_num 368} true;
  $ib.2 := BV_EXTRACT(BV32_ADD(BV16_SEXT32($ib.2), group_size_x), 16, 0);
  goto $11;
$33:
  assert {:block_sourceloc} {:sourceloc_num 369} true;
  call {:sourceloc_num 370} $bugle_barrier(-1, -1);
  return;
$truebb:
  assume {:partition} v3;
  assert {:block_sourceloc} {:sourceloc_num 371} true;
  goto $2;
$falsebb:
  assume {:partition} !v3;
  assert {:block_sourceloc} {:sourceloc_num 372} true;
  goto $4;
$truebb0:
  assume {:partition} v92;
  assert {:block_sourceloc} {:sourceloc_num 373} true;
  goto $5;
$falsebb0:
  assume {:partition} !v92;
  assert {:block_sourceloc} {:sourceloc_num 374} true;
  goto $10;
$truebb1:
  assume {:partition} v94;
  assert {:block_sourceloc} {:sourceloc_num 375} true;
  goto $7;
$falsebb1:
  assume {:partition} !v94;
  assert {:block_sourceloc} {:sourceloc_num 376} true;
  goto $9;
$truebb2:
  assume {:partition} v185;
  assert {:block_sourceloc} {:sourceloc_num 377} true;
  goto $12;
$falsebb2:
  assume {:partition} !v185;
  assert {:block_sourceloc} {:sourceloc_num 378} true;
  goto $33;
$truebb3:
  assume {:partition} v198;
  assert {:block_sourceloc} {:sourceloc_num 379} true;
  goto $13;
$falsebb3:
  assume {:partition} !v198;
  assert {:block_sourceloc} {:sourceloc_num 380} true;
  goto $14;
$truebb4:
  assume {:partition} v199;
  assert {:block_sourceloc} {:sourceloc_num 381} true;
  goto $15;
$falsebb4:
  assume {:partition} !v199;
  assert {:block_sourceloc} {:sourceloc_num 382} true;
  goto $16;
$truebb5:
  assume {:partition} v206;
  assert {:block_sourceloc} {:sourceloc_num 383} true;
  goto $17;
$falsebb5:
  assume {:partition} !v206;
  assert {:block_sourceloc} {:sourceloc_num 384} true;
  goto $18;
$truebb6:
  assume {:partition} v207;
  assert {:block_sourceloc} {:sourceloc_num 385} true;
  goto $19;
$falsebb6:
  assume {:partition} !v207;
  assert {:block_sourceloc} {:sourceloc_num 386} true;
  goto $20;
$truebb7:
  assume {:partition} v214;
  assert {:block_sourceloc} {:sourceloc_num 387} true;
  goto $21;
$falsebb7:
  assume {:partition} !v214;
  assert {:block_sourceloc} {:sourceloc_num 388} true;
  goto $22;
$truebb8:
  assume {:partition} v215;
  assert {:block_sourceloc} {:sourceloc_num 389} true;
  goto $23;
$falsebb8:
  assume {:partition} !v215;
  assert {:block_sourceloc} {:sourceloc_num 390} true;
  goto $24;
$truebb9:
  assume {:partition} v222;
  assert {:block_sourceloc} {:sourceloc_num 391} true;
  goto $25;
$falsebb9:
  assume {:partition} !v222;
  assert {:block_sourceloc} {:sourceloc_num 392} true;
  goto $26;
$truebb10:
  assume {:partition} v223;
  assert {:block_sourceloc} {:sourceloc_num 393} true;
  goto $27;
$falsebb10:
  assume {:partition} !v223;
  assert {:block_sourceloc} {:sourceloc_num 394} true;
  goto $28;
$truebb11:
  assume {:partition} v224;
  assert {:block_sourceloc} {:sourceloc_num 395} true;
  goto $29;
$falsebb11:
  assume {:partition} !v224;
  assert {:block_sourceloc} {:sourceloc_num 396} true;
  goto $31;
$truebb12:
  assume {:partition} v225;
  assert {:block_sourceloc} {:sourceloc_num 397} true;
  goto $30;
$falsebb12:
  assume {:partition} !v225;
  assert {:block_sourceloc} {:sourceloc_num 398} true;
  goto $31;
}
procedure {:source_name "_Z5tex2DIhET_7textureIS0_Li2EL19cudaTextureReadMode0EEff"} $_Z5tex2DIhET_7textureIS0_Li2EL19cudaTextureReadMode0EEff($0:int, $1:int, $2:int, $3:int, $4:int) returns ($ret:int);
procedure {:source_name "bugle_barrier"} {:barrier} $bugle_barrier($0:int, $1:int);
procedure {:source_name "abs"} $abs($0:int) returns ($ret:int);
axiom (if group_size_z == 1 then 1 else 0) != 0;
axiom (if num_groups_z == 1 then 1 else 0) != 0;
axiom (if group_size_x == 16 then 1 else 0) != 0;
axiom (if group_size_y == 4 then 1 else 0) != 0;
axiom (if num_groups_x == 2 then 1 else 0) != 0;
axiom (if num_groups_y == 128 then 1 else 0) != 0;
