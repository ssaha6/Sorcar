type _SIZE_T_TYPE = bv32;

procedure _ATOMIC_OP32(x : [int]int, y : int) returns (z : int, A : [int]int);
procedure _ATOMIC_OP8(x : [int]int, y : int) returns (z : int, A : [int]int);
var {:source_name "od"} {:global} $$od : [int]int;
axiom {:array_info "$$od"} {:global} {:elem_width 32} {:source_name "od"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$od : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$od : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$od : bool;

var {:source_name ""} $$0 : [int]int;
axiom {:array_info "$$0"} {:elem_width 32} {:source_name ""} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name ""} $$1 : [int]int;
axiom {:array_info "$$1"} {:elem_width 32} {:source_name ""} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name "a.i5"} $$a.i5 : [int]int;
axiom {:array_info "$$a.i5"} {:elem_width 32} {:source_name "a.i5"} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name ""} $$2 : [int]int;
axiom {:array_info "$$2"} {:elem_width 32} {:source_name ""} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name "b.i4"} $$b.i4 : [int]int;
axiom {:array_info "$$b.i4"} {:elem_width 32} {:source_name "b.i4"} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name ""} $$3 : [int]int;
axiom {:array_info "$$3"} {:elem_width 32} {:source_name ""} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name ""} $$4 : [int]int;
axiom {:array_info "$$4"} {:elem_width 32} {:source_name ""} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name "b.i3"} $$b.i3 : [int]int;
axiom {:array_info "$$b.i3"} {:elem_width 32} {:source_name "b.i3"} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name ""} $$5 : [int]int;
axiom {:array_info "$$5"} {:elem_width 32} {:source_name ""} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name "rgba.i2"} $$rgba.i2 : [int]int;
axiom {:array_info "$$rgba.i2"} {:elem_width 32} {:source_name "rgba.i2"} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name ""} $$6 : [int]int;
axiom {:array_info "$$6"} {:elem_width 32} {:source_name ""} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name ""} $$7 : [int]int;
axiom {:array_info "$$7"} {:elem_width 32} {:source_name ""} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name "a.i"} $$a.i : [int]int;
axiom {:array_info "$$a.i"} {:elem_width 32} {:source_name "a.i"} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name ""} $$8 : [int]int;
axiom {:array_info "$$8"} {:elem_width 32} {:source_name ""} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name "b.i"} $$b.i : [int]int;
axiom {:array_info "$$b.i"} {:elem_width 32} {:source_name "b.i"} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name ""} $$9 : [int]int;
axiom {:array_info "$$9"} {:elem_width 32} {:source_name ""} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name "rgba.i"} $$rgba.i : [int]int;
axiom {:array_info "$$rgba.i"} {:elem_width 32} {:source_name "rgba.i"} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name ""} $$10 : [int]int;
axiom {:array_info "$$10"} {:elem_width 32} {:source_name ""} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name ""} $$11 : [int]int;
axiom {:array_info "$$11"} {:elem_width 32} {:source_name ""} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name "t"} $$t : [int]int;
axiom {:array_info "$$t"} {:elem_width 32} {:source_name "t"} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name ""} $$12 : [int]int;
axiom {:array_info "$$12"} {:elem_width 32} {:source_name ""} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name ""} $$13 : [int]int;
axiom {:array_info "$$13"} {:elem_width 8} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name ""} $$14 : [int]int;
axiom {:array_info "$$14"} {:elem_width 32} {:source_name ""} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name ""} $$15 : [int]int;
axiom {:array_info "$$15"} {:elem_width 32} {:source_name ""} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name ""} $$16 : [int]int;
axiom {:array_info "$$16"} {:elem_width 32} {:source_name ""} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name ""} $$17 : [int]int;
axiom {:array_info "$$17"} {:elem_width 8} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name ""} $$18 : [int]int;
axiom {:array_info "$$18"} {:elem_width 32} {:source_name ""} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name ""} $$19 : [int]int;
axiom {:array_info "$$19"} {:elem_width 8} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name ""} $$20 : [int]int;
axiom {:array_info "$$20"} {:elem_width 32} {:source_name ""} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name ""} $$21 : [int]int;
axiom {:array_info "$$21"} {:elem_width 32} {:source_name ""} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name "rgbaTex"} {:global} $$rgbaTex : [int]int;
axiom {:array_info "$$rgbaTex"} {:global} {:elem_width 8} {:source_name "rgbaTex"} {:source_elem_width 96} {:source_dimensions "1"} true;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 96} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$rgbaTex : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 96} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$rgbaTex : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 96} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$rgbaTex : bool;

const _WATCHED_OFFSET : int;
const {:group_id_x} group_id_x : int;
const {:group_size_x} group_size_x : int;
const {:group_size_y} group_size_y : int;
const {:group_size_z} group_size_z : int;
const {:local_id_x} local_id_x : int;
const {:num_groups_x} num_groups_x : int;
const {:num_groups_y} num_groups_y : int;
const {:num_groups_z} num_groups_z : int;
function BV_CONCAT(int, int) : int;
function BV_EXTRACT(int, int, int) : int;
function FADD32(int, int) : int;
function FDIV32(int, int) : int;
function FMUL32(int, int) : int;
function FP32_TO_UI32(int) : int;
function FSUB32(int, int) : int;
function SI32_TO_FP32(int) : int;
function UI32_TO_FP32(int) : int;
function {:inline true} BV32_ADD(x : int, y : int) : int {
  x + y
}
function {:inline true} BV32_MUL(x : int, y : int) : int {
  x * y
}
function {:inline true} BV32_OR(x : int, y : int) : int {
  if x == y then x else (if x == 0 then y else (if y == 0 then x else BV32_OR_UF(x, y)))
}
function BV32_OR_UF(int, int) : int;
function {:inline true} BV32_SHL(x : int, y : int) : int {
  if x >= 0 && y == 1 then x*2 else BV32_SHL_UF(x,y)
}
function BV32_SHL_UF(int, int) : int;
function {:inline true} BV32_SLE(x : int, y : int) : bool {
  x <= y
}
function {:inline true} BV32_SLT(x : int, y : int) : bool {
  x < y
}
function {:inline true} BV32_SUB(x : int, y : int) : int {
  x - y
}
function {:inline true} BV32_ULT(x : int, y : int) : bool {
  x < y
}
procedure {:source_name "d_boxfilter_rgba_x"} {:kernel} $_Z18d_boxfilter_rgba_xPjiii($w:int, $h:int, $r:int)
requires {:sourceloc_num 0} (if $w == 1024 then 1 else 0) != 0;
requires {:sourceloc_num 1} (if $h == 1024 then 1 else 0) != 0;
{
  var $x.0:int;
  var $x1.0:int;
  var v0:int;
  var v1:int;
  var v2:bool;
  var v3:int;
  var v4:int;
  var v5:int;
  var v6:int;
  var v7:int;
  var v8:int;
  var v9:int;
  var v10:int;
  var v11:bool;
  var v12:int;
  var v13:int;
  var v14:int;
  var v15:int;
  var v20:int;
  var v16:int;
  var v17:int;
  var v18:int;
  var v19:int;
  var v21:int;
  var v22:int;
  var v23:int;
  var v24:int;
  var v25:int;
  var v26:int;
  var v27:int;
  var v40:int;
  var v28:int;
  var v29:int;
  var v30:int;
  var v31:int;
  var v32:int;
  var v33:int;
  var v34:int;
  var v35:int;
  var v36:int;
  var v37:int;
  var v38:int;
  var v39:int;
  var v41:int;
  var v42:int;
  var v43:int;
  var v44:int;
  var v45:int;
  var v46:int;
  var v47:int;
  var v48:int;
  var v49:int;
  var v50:int;
  var v51:int;
  var v52:int;
  var v53:int;
  var v54:int;
  var v55:int;
  var v56:int;
  var v57:int;
  var v58:int;
  var v59:int;
  var v60:int;
  var v61:int;
  var v62:int;
  var v63:int;
  var v64:int;
  var v65:int;
  var v66:int;
  var v67:int;
  var v68:int;
  var v69:int;
  var v70:int;
  var v71:int;
  var v72:int;
  var v73:int;
  var v74:int;
  var v75:int;
  var v76:int;
  var v77:int;
  var v78:int;
  var v79:int;
  var v80:int;
  var v81:int;
  var v82:int;
  var v83:int;
  var v84:int;
  var v85:int;
  var v86:int;
  var v87:int;
  var v88:int;
  var v89:int;
  var v90:int;
  var v91:int;
  var v92:int;
  var v93:bool;
  var v94:int;
  var v95:int;
  var v96:int;
  var v97:int;
  var v102:int;
  var v98:int;
  var v99:int;
  var v100:int;
  var v101:int;
  var v103:int;
  var v104:int;
  var v105:int;
  var v106:int;
  var v107:int;
  var v108:int;
  var v109:int;
  var v110:int;
  var v111:int;
  var v112:int;
  var v113:int;
  var v114:int;
  var v115:int;
  var v116:int;
  var v117:int;
  var v118:int;
  var v119:int;
  var v120:int;
  var v121:int;
  var v143:int;
  var v144:int;
  var v145:int;
  var v146:int;
  var v122:int;
  var v123:int;
  var v124:int;
  var v125:int;
  var v126:int;
  var v127:int;
  var v128:int;
  var v129:int;
  var v130:int;
  var v131:int;
  var v132:int;
  var v133:int;
  var v134:int;
  var v142:int;
  var v135:int;
  var v136:int;
  var v137:int;
  var v138:int;
  var v139:int;
  var v140:int;
  var v141:int;
  var v188:int;
  var v189:int;
  var v147:int;
  var v148:int;
  var v149:int;
  var v150:int;
  var v151:int;
  var v152:int;
  var v153:int;
  var v154:int;
  var v155:int;
  var v156:int;
  var v157:int;
  var v158:int;
  var v159:int;
  var v160:int;
  var v161:int;
  var v162:int;
  var v190:int;
  var v163:int;
  var v164:int;
  var v165:int;
  var v166:int;
  var v167:int;
  var v168:int;
  var v169:int;
  var v170:int;
  var v171:int;
  var v172:int;
  var v173:int;
  var v174:int;
  var v175:int;
  var v176:int;
  var v177:int;
  var v178:int;
  var v179:int;
  var v180:int;
  var v181:int;
  var v182:int;
  var v183:int;
  var v184:int;
  var v185:int;
  var v186:int;
  var v187:int;
  var v191:int;
  var v192:int;
  var v193:int;
  var v194:int;
  var v195:int;
  var v196:int;
  var v197:int;
  var v198:int;
  var v199:int;
  var v200:int;
  var v201:int;
  var v202:int;
  var v203:int;
  var v204:int;
  var v205:int;
  var v206:int;
  var v207:int;
  var v208:int;
  var v209:int;
  var v210:int;
  var v211:int;
  var v212:int;
  var v213:int;
  var v214:int;
  var v215:int;
  var v216:int;
  var v217:int;
  var v218:int;
  var v219:int;
$0:
  assert {:block_sourceloc} {:sourceloc_num 2} true;
  v0 := FDIV32(1065353216, SI32_TO_FP32(BV32_ADD(BV32_SHL($r, 1), 1)));
  v1 := BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x);
  v2 := BV32_ULT(v1, $h);
  goto $truebb, $falsebb;
$1:
  assert {:block_sourceloc} {:sourceloc_num 3} true;
  assert {:sourceloc} {:sourceloc_num 4} true;
  $$10[0] := 0;
  assert {:sourceloc} {:sourceloc_num 5} true;
  $$10[1] := 0;
  assert {:sourceloc} {:sourceloc_num 6} true;
  $$10[2] := 0;
  assert {:sourceloc} {:sourceloc_num 7} true;
  $$10[3] := 0;
  assert {:sourceloc} {:sourceloc_num 8} true;
  v3 := $$10[0];
  assert {:sourceloc} {:sourceloc_num 9} true;
  v4 := $$10[1];
  assert {:sourceloc} {:sourceloc_num 10} true;
  v5 := $$10[2];
  assert {:sourceloc} {:sourceloc_num 11} true;
  v6 := $$10[3];
  assert {:sourceloc} {:sourceloc_num 12} true;
  $$11[0] := v3;
  assert {:sourceloc} {:sourceloc_num 13} true;
  $$11[1] := v4;
  assert {:sourceloc} {:sourceloc_num 14} true;
  $$11[2] := v5;
  assert {:sourceloc} {:sourceloc_num 15} true;
  $$11[3] := v6;
  assert {:sourceloc} {:sourceloc_num 16} true;
  v7 := $$11[0];
  assert {:sourceloc} {:sourceloc_num 17} true;
  v8 := $$11[1];
  assert {:sourceloc} {:sourceloc_num 18} true;
  v9 := $$11[2];
  assert {:sourceloc} {:sourceloc_num 19} true;
  v10 := $$11[3];
  assert {:sourceloc} {:sourceloc_num 20} true;
  $$t[0] := v7;
  assert {:sourceloc} {:sourceloc_num 21} true;
  $$t[1] := v8;
  assert {:sourceloc} {:sourceloc_num 22} true;
  $$t[2] := v9;
  assert {:sourceloc} {:sourceloc_num 23} true;
  $$t[3] := v10;
  $x.0 := BV32_SUB(0, $r);
  goto $2;
$2:
  assert {:block_sourceloc} {:sourceloc_num 24} true;
  v11 := BV32_SLE($x.0, $r);
  goto $truebb0, $falsebb0;
$3:
  assert {:block_sourceloc} {:sourceloc_num 25} true;
  assert {:sourceloc} {:sourceloc_num 26} true;
  v12 := $$rgbaTex[0];
  assert {:sourceloc} {:sourceloc_num 27} true;
  $$13[0] := v12;
  assert {:sourceloc} {:sourceloc_num 28} true;
  v13 := $$rgbaTex[1];
  assert {:sourceloc} {:sourceloc_num 29} true;
  $$13[1] := v13;
  assert {:sourceloc} {:sourceloc_num 30} true;
  v14 := $$rgbaTex[2];
  assert {:sourceloc} {:sourceloc_num 31} true;
  $$13[2] := v14;
  assert {:sourceloc} {:sourceloc_num 32} true;
  v15 := $$rgbaTex[3];
  assert {:sourceloc} {:sourceloc_num 33} true;
  $$13[3] := v15;
  assert {:sourceloc} {:sourceloc_num 34} true;
  v16 := $$rgbaTex[4];
  assert {:sourceloc} {:sourceloc_num 35} true;
  $$13[4] := v16;
  assert {:sourceloc} {:sourceloc_num 36} true;
  v17 := $$rgbaTex[5];
  assert {:sourceloc} {:sourceloc_num 37} true;
  $$13[5] := v17;
  assert {:sourceloc} {:sourceloc_num 38} true;
  v18 := $$rgbaTex[6];
  assert {:sourceloc} {:sourceloc_num 39} true;
  $$13[6] := v18;
  assert {:sourceloc} {:sourceloc_num 40} true;
  v19 := $$rgbaTex[7];
  assert {:sourceloc} {:sourceloc_num 41} true;
  $$13[7] := v19;
  assert {:sourceloc} {:sourceloc_num 42} true;
  v20 := $$rgbaTex[8];
  assert {:sourceloc} {:sourceloc_num 43} true;
  $$13[8] := v20;
  assert {:sourceloc} {:sourceloc_num 44} true;
  v21 := $$rgbaTex[9];
  assert {:sourceloc} {:sourceloc_num 45} true;
  $$13[9] := v21;
  assert {:sourceloc} {:sourceloc_num 46} true;
  v22 := $$rgbaTex[10];
  assert {:sourceloc} {:sourceloc_num 47} true;
  $$13[10] := v22;
  assert {:sourceloc} {:sourceloc_num 48} true;
  v23 := $$rgbaTex[11];
  assert {:sourceloc} {:sourceloc_num 49} true;
  $$13[11] := v23;
  assert {:sourceloc} {:sourceloc_num 50} true;
  v24 := $$13[0];
  assert {:sourceloc} {:sourceloc_num 51} true;
  v25 := $$13[1];
  assert {:sourceloc} {:sourceloc_num 52} true;
  v26 := $$13[2];
  assert {:sourceloc} {:sourceloc_num 53} true;
  v27 := $$13[3];
  assert {:sourceloc} {:sourceloc_num 54} true;
  v28 := $$13[4];
  assert {:sourceloc} {:sourceloc_num 55} true;
  v29 := $$13[5];
  assert {:sourceloc} {:sourceloc_num 56} true;
  v30 := $$13[6];
  assert {:sourceloc} {:sourceloc_num 57} true;
  v31 := $$13[7];
  assert {:sourceloc} {:sourceloc_num 58} true;
  v32 := $$13[8];
  assert {:sourceloc} {:sourceloc_num 59} true;
  v33 := $$13[9];
  assert {:sourceloc} {:sourceloc_num 60} true;
  v34 := $$13[10];
  assert {:sourceloc} {:sourceloc_num 61} true;
  v35 := $$13[11];
  call {:sourceloc_num 62}   v36 := $_Z5tex2D7textureI6uchar4Li2EL19cudaTextureReadMode1EEff(BV_CONCAT(BV_CONCAT(BV_CONCAT(v27, v26), v25), v24), BV_CONCAT(BV_CONCAT(BV_CONCAT(v31, v30), v29), v28), BV_CONCAT(BV_CONCAT(BV_CONCAT(v35, v34), v33), v32), SI32_TO_FP32($x.0), UI32_TO_FP32(v1));
  assert {:sourceloc} {:sourceloc_num 63} true;
  $$12[0] := BV_EXTRACT(v36, 32, 0);
  assert {:sourceloc} {:sourceloc_num 64} true;
  $$12[1] := BV_EXTRACT(v36, 64, 32);
  assert {:sourceloc} {:sourceloc_num 65} true;
  $$12[2] := BV_EXTRACT(v36, 96, 64);
  assert {:sourceloc} {:sourceloc_num 66} true;
  $$12[3] := BV_EXTRACT(v36, 128, 96);
  assert {:sourceloc} {:sourceloc_num 67} true;
  v37 := $$12[0];
  assert {:sourceloc} {:sourceloc_num 68} true;
  v38 := $$12[1];
  assert {:sourceloc} {:sourceloc_num 69} true;
  v39 := $$12[2];
  assert {:sourceloc} {:sourceloc_num 70} true;
  v40 := $$12[3];
  assert {:sourceloc} {:sourceloc_num 71} true;
  $$b.i[0] := v37;
  assert {:sourceloc} {:sourceloc_num 72} true;
  $$b.i[1] := v38;
  assert {:sourceloc} {:sourceloc_num 73} true;
  $$b.i[2] := v39;
  assert {:sourceloc} {:sourceloc_num 74} true;
  $$b.i[3] := v40;
  assert {:sourceloc} {:sourceloc_num 75} true;
  v41 := $$t[0];
  assert {:sourceloc} {:sourceloc_num 76} true;
  v42 := $$b.i[0];
  assert {:sourceloc} {:sourceloc_num 77} true;
  v43 := $$t[1];
  assert {:sourceloc} {:sourceloc_num 78} true;
  v44 := $$b.i[1];
  assert {:sourceloc} {:sourceloc_num 79} true;
  v45 := $$t[2];
  assert {:sourceloc} {:sourceloc_num 80} true;
  v46 := $$b.i[2];
  assert {:sourceloc} {:sourceloc_num 81} true;
  v47 := $$t[3];
  assert {:sourceloc} {:sourceloc_num 82} true;
  v48 := $$b.i[3];
  assert {:sourceloc} {:sourceloc_num 83} true;
  $$8[0] := FADD32(v41, v42);
  assert {:sourceloc} {:sourceloc_num 84} true;
  $$8[1] := FADD32(v43, v44);
  assert {:sourceloc} {:sourceloc_num 85} true;
  $$8[2] := FADD32(v45, v46);
  assert {:sourceloc} {:sourceloc_num 86} true;
  $$8[3] := FADD32(v47, v48);
  assert {:sourceloc} {:sourceloc_num 87} true;
  v49 := $$8[0];
  assert {:sourceloc} {:sourceloc_num 88} true;
  v50 := $$8[1];
  assert {:sourceloc} {:sourceloc_num 89} true;
  v51 := $$8[2];
  assert {:sourceloc} {:sourceloc_num 90} true;
  v52 := $$8[3];
  assert {:sourceloc} {:sourceloc_num 91} true;
  $$9[0] := v49;
  assert {:sourceloc} {:sourceloc_num 92} true;
  $$9[1] := v50;
  assert {:sourceloc} {:sourceloc_num 93} true;
  $$9[2] := v51;
  assert {:sourceloc} {:sourceloc_num 94} true;
  $$9[3] := v52;
  assert {:sourceloc} {:sourceloc_num 95} true;
  v53 := $$9[0];
  assert {:sourceloc} {:sourceloc_num 96} true;
  $$t[0] := v53;
  assert {:sourceloc} {:sourceloc_num 97} true;
  v54 := $$9[1];
  assert {:sourceloc} {:sourceloc_num 98} true;
  $$t[1] := v54;
  assert {:sourceloc} {:sourceloc_num 99} true;
  v55 := $$9[2];
  assert {:sourceloc} {:sourceloc_num 100} true;
  $$t[2] := v55;
  assert {:sourceloc} {:sourceloc_num 101} true;
  v56 := $$9[3];
  assert {:sourceloc} {:sourceloc_num 102} true;
  $$t[3] := v56;
  goto $4;
$4:
  assert {:block_sourceloc} {:sourceloc_num 103} true;
  $x.0 := BV32_ADD($x.0, 1);
  goto $2;
$5:
  assert {:block_sourceloc} {:sourceloc_num 104} true;
  assert {:sourceloc} {:sourceloc_num 105} true;
  v57 := $$t[0];
  assert {:sourceloc} {:sourceloc_num 106} true;
  $$15[0] := v57;
  assert {:sourceloc} {:sourceloc_num 107} true;
  v58 := $$t[1];
  assert {:sourceloc} {:sourceloc_num 108} true;
  $$15[1] := v58;
  assert {:sourceloc} {:sourceloc_num 109} true;
  v59 := $$t[2];
  assert {:sourceloc} {:sourceloc_num 110} true;
  $$15[2] := v59;
  assert {:sourceloc} {:sourceloc_num 111} true;
  v60 := $$t[3];
  assert {:sourceloc} {:sourceloc_num 112} true;
  $$15[3] := v60;
  assert {:sourceloc} {:sourceloc_num 113} true;
  v61 := $$15[0];
  assert {:sourceloc} {:sourceloc_num 114} true;
  v62 := $$15[1];
  assert {:sourceloc} {:sourceloc_num 115} true;
  v63 := $$15[2];
  assert {:sourceloc} {:sourceloc_num 116} true;
  v64 := $$15[3];
  assert {:sourceloc} {:sourceloc_num 117} true;
  $$a.i[0] := v61;
  assert {:sourceloc} {:sourceloc_num 118} true;
  $$a.i[1] := v62;
  assert {:sourceloc} {:sourceloc_num 119} true;
  $$a.i[2] := v63;
  assert {:sourceloc} {:sourceloc_num 120} true;
  $$a.i[3] := v64;
  assert {:sourceloc} {:sourceloc_num 121} true;
  v65 := $$a.i[0];
  assert {:sourceloc} {:sourceloc_num 122} true;
  v66 := $$a.i[1];
  assert {:sourceloc} {:sourceloc_num 123} true;
  v67 := $$a.i[2];
  assert {:sourceloc} {:sourceloc_num 124} true;
  v68 := $$a.i[3];
  assert {:sourceloc} {:sourceloc_num 125} true;
  $$6[0] := FMUL32(v65, v0);
  assert {:sourceloc} {:sourceloc_num 126} true;
  $$6[1] := FMUL32(v66, v0);
  assert {:sourceloc} {:sourceloc_num 127} true;
  $$6[2] := FMUL32(v67, v0);
  assert {:sourceloc} {:sourceloc_num 128} true;
  $$6[3] := FMUL32(v68, v0);
  assert {:sourceloc} {:sourceloc_num 129} true;
  v69 := $$6[0];
  assert {:sourceloc} {:sourceloc_num 130} true;
  v70 := $$6[1];
  assert {:sourceloc} {:sourceloc_num 131} true;
  v71 := $$6[2];
  assert {:sourceloc} {:sourceloc_num 132} true;
  v72 := $$6[3];
  assert {:sourceloc} {:sourceloc_num 133} true;
  $$7[0] := v69;
  assert {:sourceloc} {:sourceloc_num 134} true;
  $$7[1] := v70;
  assert {:sourceloc} {:sourceloc_num 135} true;
  $$7[2] := v71;
  assert {:sourceloc} {:sourceloc_num 136} true;
  $$7[3] := v72;
  assert {:sourceloc} {:sourceloc_num 137} true;
  v73 := $$7[0];
  assert {:sourceloc} {:sourceloc_num 138} true;
  v74 := $$7[1];
  assert {:sourceloc} {:sourceloc_num 139} true;
  v75 := $$7[2];
  assert {:sourceloc} {:sourceloc_num 140} true;
  v76 := $$7[3];
  assert {:sourceloc} {:sourceloc_num 141} true;
  $$14[0] := v73;
  assert {:sourceloc} {:sourceloc_num 142} true;
  $$14[1] := v74;
  assert {:sourceloc} {:sourceloc_num 143} true;
  $$14[2] := v75;
  assert {:sourceloc} {:sourceloc_num 144} true;
  $$14[3] := v76;
  assert {:sourceloc} {:sourceloc_num 145} true;
  v77 := $$14[0];
  assert {:sourceloc} {:sourceloc_num 146} true;
  v78 := $$14[1];
  assert {:sourceloc} {:sourceloc_num 147} true;
  v79 := $$14[2];
  assert {:sourceloc} {:sourceloc_num 148} true;
  v80 := $$14[3];
  assert {:sourceloc} {:sourceloc_num 149} true;
  $$rgba.i2[0] := v77;
  assert {:sourceloc} {:sourceloc_num 150} true;
  $$rgba.i2[1] := v78;
  assert {:sourceloc} {:sourceloc_num 151} true;
  $$rgba.i2[2] := v79;
  assert {:sourceloc} {:sourceloc_num 152} true;
  $$rgba.i2[3] := v80;
  assert {:sourceloc} {:sourceloc_num 153} true;
  v81 := $$rgba.i2[0];
  call {:sourceloc_num 154}   v82 := $__saturatef(v81);
  assert {:sourceloc} {:sourceloc_num 155} true;
  $$rgba.i2[0] := v82;
  assert {:sourceloc} {:sourceloc_num 156} true;
  v83 := $$rgba.i2[1];
  call {:sourceloc_num 157}   v84 := $__saturatef(v83);
  assert {:sourceloc} {:sourceloc_num 158} true;
  $$rgba.i2[1] := v84;
  assert {:sourceloc} {:sourceloc_num 159} true;
  v85 := $$rgba.i2[2];
  call {:sourceloc_num 160}   v86 := $__saturatef(v85);
  assert {:sourceloc} {:sourceloc_num 161} true;
  $$rgba.i2[2] := v86;
  assert {:sourceloc} {:sourceloc_num 162} true;
  v87 := $$rgba.i2[3];
  call {:sourceloc_num 163}   v88 := $__saturatef(v87);
  assert {:sourceloc} {:sourceloc_num 164} true;
  $$rgba.i2[3] := v88;
  assert {:sourceloc} {:sourceloc_num 165} true;
  v89 := $$rgba.i2[3];
  assert {:sourceloc} {:sourceloc_num 166} true;
  v90 := $$rgba.i2[2];
  assert {:sourceloc} {:sourceloc_num 167} true;
  v91 := $$rgba.i2[1];
  assert {:sourceloc} {:sourceloc_num 168} true;
  v92 := $$rgba.i2[0];
  assert {:sourceloc} {:sourceloc_num 169} true;
  $$od[BV32_MUL(v1, $w)] := BV32_OR(BV32_OR(BV32_OR(BV32_SHL(FP32_TO_UI32(FMUL32(v89, 1132396544)), 24), BV32_SHL(FP32_TO_UI32(FMUL32(v90, 1132396544)), 16)), BV32_SHL(FP32_TO_UI32(FMUL32(v91, 1132396544)), 8)), FP32_TO_UI32(FMUL32(v92, 1132396544)));
  $x1.0 := 1;
  goto $6;
$6:
  assert {:block_sourceloc} {:sourceloc_num 170} true;
  v93 := BV32_SLT($x1.0, $w);
  goto $truebb1, $falsebb1;
$7:
  assert {:block_sourceloc} {:sourceloc_num 171} true;
  assert {:sourceloc} {:sourceloc_num 172} true;
  v94 := $$rgbaTex[0];
  assert {:sourceloc} {:sourceloc_num 173} true;
  $$17[0] := v94;
  assert {:sourceloc} {:sourceloc_num 174} true;
  v95 := $$rgbaTex[1];
  assert {:sourceloc} {:sourceloc_num 175} true;
  $$17[1] := v95;
  assert {:sourceloc} {:sourceloc_num 176} true;
  v96 := $$rgbaTex[2];
  assert {:sourceloc} {:sourceloc_num 177} true;
  $$17[2] := v96;
  assert {:sourceloc} {:sourceloc_num 178} true;
  v97 := $$rgbaTex[3];
  assert {:sourceloc} {:sourceloc_num 179} true;
  $$17[3] := v97;
  assert {:sourceloc} {:sourceloc_num 180} true;
  v98 := $$rgbaTex[4];
  assert {:sourceloc} {:sourceloc_num 181} true;
  $$17[4] := v98;
  assert {:sourceloc} {:sourceloc_num 182} true;
  v99 := $$rgbaTex[5];
  assert {:sourceloc} {:sourceloc_num 183} true;
  $$17[5] := v99;
  assert {:sourceloc} {:sourceloc_num 184} true;
  v100 := $$rgbaTex[6];
  assert {:sourceloc} {:sourceloc_num 185} true;
  $$17[6] := v100;
  assert {:sourceloc} {:sourceloc_num 186} true;
  v101 := $$rgbaTex[7];
  assert {:sourceloc} {:sourceloc_num 187} true;
  $$17[7] := v101;
  assert {:sourceloc} {:sourceloc_num 188} true;
  v102 := $$rgbaTex[8];
  assert {:sourceloc} {:sourceloc_num 189} true;
  $$17[8] := v102;
  assert {:sourceloc} {:sourceloc_num 190} true;
  v103 := $$rgbaTex[9];
  assert {:sourceloc} {:sourceloc_num 191} true;
  $$17[9] := v103;
  assert {:sourceloc} {:sourceloc_num 192} true;
  v104 := $$rgbaTex[10];
  assert {:sourceloc} {:sourceloc_num 193} true;
  $$17[10] := v104;
  assert {:sourceloc} {:sourceloc_num 194} true;
  v105 := $$rgbaTex[11];
  assert {:sourceloc} {:sourceloc_num 195} true;
  $$17[11] := v105;
  assert {:sourceloc} {:sourceloc_num 196} true;
  v106 := $$17[0];
  assert {:sourceloc} {:sourceloc_num 197} true;
  v107 := $$17[1];
  assert {:sourceloc} {:sourceloc_num 198} true;
  v108 := $$17[2];
  assert {:sourceloc} {:sourceloc_num 199} true;
  v109 := $$17[3];
  assert {:sourceloc} {:sourceloc_num 200} true;
  v110 := $$17[4];
  assert {:sourceloc} {:sourceloc_num 201} true;
  v111 := $$17[5];
  assert {:sourceloc} {:sourceloc_num 202} true;
  v112 := $$17[6];
  assert {:sourceloc} {:sourceloc_num 203} true;
  v113 := $$17[7];
  assert {:sourceloc} {:sourceloc_num 204} true;
  v114 := $$17[8];
  assert {:sourceloc} {:sourceloc_num 205} true;
  v115 := $$17[9];
  assert {:sourceloc} {:sourceloc_num 206} true;
  v116 := $$17[10];
  assert {:sourceloc} {:sourceloc_num 207} true;
  v117 := $$17[11];
  call {:sourceloc_num 208}   v118 := $_Z5tex2D7textureI6uchar4Li2EL19cudaTextureReadMode1EEff(BV_CONCAT(BV_CONCAT(BV_CONCAT(v109, v108), v107), v106), BV_CONCAT(BV_CONCAT(BV_CONCAT(v113, v112), v111), v110), BV_CONCAT(BV_CONCAT(BV_CONCAT(v117, v116), v115), v114), SI32_TO_FP32(BV32_ADD($x1.0, $r)), UI32_TO_FP32(v1));
  assert {:sourceloc} {:sourceloc_num 209} true;
  $$16[0] := BV_EXTRACT(v118, 32, 0);
  assert {:sourceloc} {:sourceloc_num 210} true;
  $$16[1] := BV_EXTRACT(v118, 64, 32);
  assert {:sourceloc} {:sourceloc_num 211} true;
  $$16[2] := BV_EXTRACT(v118, 96, 64);
  assert {:sourceloc} {:sourceloc_num 212} true;
  $$16[3] := BV_EXTRACT(v118, 128, 96);
  assert {:sourceloc} {:sourceloc_num 213} true;
  v119 := $$16[0];
  assert {:sourceloc} {:sourceloc_num 214} true;
  v120 := $$16[1];
  assert {:sourceloc} {:sourceloc_num 215} true;
  v121 := $$16[2];
  assert {:sourceloc} {:sourceloc_num 216} true;
  v122 := $$16[3];
  assert {:sourceloc} {:sourceloc_num 217} true;
  $$b.i3[0] := v119;
  assert {:sourceloc} {:sourceloc_num 218} true;
  $$b.i3[1] := v120;
  assert {:sourceloc} {:sourceloc_num 219} true;
  $$b.i3[2] := v121;
  assert {:sourceloc} {:sourceloc_num 220} true;
  $$b.i3[3] := v122;
  assert {:sourceloc} {:sourceloc_num 221} true;
  v123 := $$t[0];
  assert {:sourceloc} {:sourceloc_num 222} true;
  v124 := $$b.i3[0];
  assert {:sourceloc} {:sourceloc_num 223} true;
  v125 := $$t[1];
  assert {:sourceloc} {:sourceloc_num 224} true;
  v126 := $$b.i3[1];
  assert {:sourceloc} {:sourceloc_num 225} true;
  v127 := $$t[2];
  assert {:sourceloc} {:sourceloc_num 226} true;
  v128 := $$b.i3[2];
  assert {:sourceloc} {:sourceloc_num 227} true;
  v129 := $$t[3];
  assert {:sourceloc} {:sourceloc_num 228} true;
  v130 := $$b.i3[3];
  assert {:sourceloc} {:sourceloc_num 229} true;
  $$4[0] := FADD32(v123, v124);
  assert {:sourceloc} {:sourceloc_num 230} true;
  $$4[1] := FADD32(v125, v126);
  assert {:sourceloc} {:sourceloc_num 231} true;
  $$4[2] := FADD32(v127, v128);
  assert {:sourceloc} {:sourceloc_num 232} true;
  $$4[3] := FADD32(v129, v130);
  assert {:sourceloc} {:sourceloc_num 233} true;
  v131 := $$4[0];
  assert {:sourceloc} {:sourceloc_num 234} true;
  v132 := $$4[1];
  assert {:sourceloc} {:sourceloc_num 235} true;
  v133 := $$4[2];
  assert {:sourceloc} {:sourceloc_num 236} true;
  v134 := $$4[3];
  assert {:sourceloc} {:sourceloc_num 237} true;
  $$5[0] := v131;
  assert {:sourceloc} {:sourceloc_num 238} true;
  $$5[1] := v132;
  assert {:sourceloc} {:sourceloc_num 239} true;
  $$5[2] := v133;
  assert {:sourceloc} {:sourceloc_num 240} true;
  $$5[3] := v134;
  assert {:sourceloc} {:sourceloc_num 241} true;
  v135 := $$5[0];
  assert {:sourceloc} {:sourceloc_num 242} true;
  $$t[0] := v135;
  assert {:sourceloc} {:sourceloc_num 243} true;
  v136 := $$5[1];
  assert {:sourceloc} {:sourceloc_num 244} true;
  $$t[1] := v136;
  assert {:sourceloc} {:sourceloc_num 245} true;
  v137 := $$5[2];
  assert {:sourceloc} {:sourceloc_num 246} true;
  $$t[2] := v137;
  assert {:sourceloc} {:sourceloc_num 247} true;
  v138 := $$5[3];
  assert {:sourceloc} {:sourceloc_num 248} true;
  $$t[3] := v138;
  assert {:sourceloc} {:sourceloc_num 249} true;
  v139 := $$rgbaTex[0];
  assert {:sourceloc} {:sourceloc_num 250} true;
  $$19[0] := v139;
  assert {:sourceloc} {:sourceloc_num 251} true;
  v140 := $$rgbaTex[1];
  assert {:sourceloc} {:sourceloc_num 252} true;
  $$19[1] := v140;
  assert {:sourceloc} {:sourceloc_num 253} true;
  v141 := $$rgbaTex[2];
  assert {:sourceloc} {:sourceloc_num 254} true;
  $$19[2] := v141;
  assert {:sourceloc} {:sourceloc_num 255} true;
  v142 := $$rgbaTex[3];
  assert {:sourceloc} {:sourceloc_num 256} true;
  $$19[3] := v142;
  assert {:sourceloc} {:sourceloc_num 257} true;
  v143 := $$rgbaTex[4];
  assert {:sourceloc} {:sourceloc_num 258} true;
  $$19[4] := v143;
  assert {:sourceloc} {:sourceloc_num 259} true;
  v144 := $$rgbaTex[5];
  assert {:sourceloc} {:sourceloc_num 260} true;
  $$19[5] := v144;
  assert {:sourceloc} {:sourceloc_num 261} true;
  v145 := $$rgbaTex[6];
  assert {:sourceloc} {:sourceloc_num 262} true;
  $$19[6] := v145;
  assert {:sourceloc} {:sourceloc_num 263} true;
  v146 := $$rgbaTex[7];
  assert {:sourceloc} {:sourceloc_num 264} true;
  $$19[7] := v146;
  assert {:sourceloc} {:sourceloc_num 265} true;
  v147 := $$rgbaTex[8];
  assert {:sourceloc} {:sourceloc_num 266} true;
  $$19[8] := v147;
  assert {:sourceloc} {:sourceloc_num 267} true;
  v148 := $$rgbaTex[9];
  assert {:sourceloc} {:sourceloc_num 268} true;
  $$19[9] := v148;
  assert {:sourceloc} {:sourceloc_num 269} true;
  v149 := $$rgbaTex[10];
  assert {:sourceloc} {:sourceloc_num 270} true;
  $$19[10] := v149;
  assert {:sourceloc} {:sourceloc_num 271} true;
  v150 := $$rgbaTex[11];
  assert {:sourceloc} {:sourceloc_num 272} true;
  $$19[11] := v150;
  assert {:sourceloc} {:sourceloc_num 273} true;
  v151 := $$19[0];
  assert {:sourceloc} {:sourceloc_num 274} true;
  v152 := $$19[1];
  assert {:sourceloc} {:sourceloc_num 275} true;
  v153 := $$19[2];
  assert {:sourceloc} {:sourceloc_num 276} true;
  v154 := $$19[3];
  assert {:sourceloc} {:sourceloc_num 277} true;
  v155 := $$19[4];
  assert {:sourceloc} {:sourceloc_num 278} true;
  v156 := $$19[5];
  assert {:sourceloc} {:sourceloc_num 279} true;
  v157 := $$19[6];
  assert {:sourceloc} {:sourceloc_num 280} true;
  v158 := $$19[7];
  assert {:sourceloc} {:sourceloc_num 281} true;
  v159 := $$19[8];
  assert {:sourceloc} {:sourceloc_num 282} true;
  v160 := $$19[9];
  assert {:sourceloc} {:sourceloc_num 283} true;
  v161 := $$19[10];
  assert {:sourceloc} {:sourceloc_num 284} true;
  v162 := $$19[11];
  call {:sourceloc_num 285}   v163 := $_Z5tex2D7textureI6uchar4Li2EL19cudaTextureReadMode1EEff(BV_CONCAT(BV_CONCAT(BV_CONCAT(v154, v153), v152), v151), BV_CONCAT(BV_CONCAT(BV_CONCAT(v158, v157), v156), v155), BV_CONCAT(BV_CONCAT(BV_CONCAT(v162, v161), v160), v159), SI32_TO_FP32(BV32_SUB(BV32_SUB($x1.0, $r), 1)), UI32_TO_FP32(v1));
  assert {:sourceloc} {:sourceloc_num 286} true;
  $$18[0] := BV_EXTRACT(v163, 32, 0);
  assert {:sourceloc} {:sourceloc_num 287} true;
  $$18[1] := BV_EXTRACT(v163, 64, 32);
  assert {:sourceloc} {:sourceloc_num 288} true;
  $$18[2] := BV_EXTRACT(v163, 96, 64);
  assert {:sourceloc} {:sourceloc_num 289} true;
  $$18[3] := BV_EXTRACT(v163, 128, 96);
  assert {:sourceloc} {:sourceloc_num 290} true;
  v164 := $$18[0];
  assert {:sourceloc} {:sourceloc_num 291} true;
  v165 := $$18[1];
  assert {:sourceloc} {:sourceloc_num 292} true;
  v166 := $$18[2];
  assert {:sourceloc} {:sourceloc_num 293} true;
  v167 := $$18[3];
  assert {:sourceloc} {:sourceloc_num 294} true;
  $$b.i4[0] := v164;
  assert {:sourceloc} {:sourceloc_num 295} true;
  $$b.i4[1] := v165;
  assert {:sourceloc} {:sourceloc_num 296} true;
  $$b.i4[2] := v166;
  assert {:sourceloc} {:sourceloc_num 297} true;
  $$b.i4[3] := v167;
  assert {:sourceloc} {:sourceloc_num 298} true;
  v168 := $$t[0];
  assert {:sourceloc} {:sourceloc_num 299} true;
  v169 := $$b.i4[0];
  assert {:sourceloc} {:sourceloc_num 300} true;
  v170 := $$t[1];
  assert {:sourceloc} {:sourceloc_num 301} true;
  v171 := $$b.i4[1];
  assert {:sourceloc} {:sourceloc_num 302} true;
  v172 := $$t[2];
  assert {:sourceloc} {:sourceloc_num 303} true;
  v173 := $$b.i4[2];
  assert {:sourceloc} {:sourceloc_num 304} true;
  v174 := $$t[3];
  assert {:sourceloc} {:sourceloc_num 305} true;
  v175 := $$b.i4[3];
  assert {:sourceloc} {:sourceloc_num 306} true;
  $$2[0] := FSUB32(v168, v169);
  assert {:sourceloc} {:sourceloc_num 307} true;
  $$2[1] := FSUB32(v170, v171);
  assert {:sourceloc} {:sourceloc_num 308} true;
  $$2[2] := FSUB32(v172, v173);
  assert {:sourceloc} {:sourceloc_num 309} true;
  $$2[3] := FSUB32(v174, v175);
  assert {:sourceloc} {:sourceloc_num 310} true;
  v176 := $$2[0];
  assert {:sourceloc} {:sourceloc_num 311} true;
  v177 := $$2[1];
  assert {:sourceloc} {:sourceloc_num 312} true;
  v178 := $$2[2];
  assert {:sourceloc} {:sourceloc_num 313} true;
  v179 := $$2[3];
  assert {:sourceloc} {:sourceloc_num 314} true;
  $$3[0] := v176;
  assert {:sourceloc} {:sourceloc_num 315} true;
  $$3[1] := v177;
  assert {:sourceloc} {:sourceloc_num 316} true;
  $$3[2] := v178;
  assert {:sourceloc} {:sourceloc_num 317} true;
  $$3[3] := v179;
  assert {:sourceloc} {:sourceloc_num 318} true;
  v180 := $$3[0];
  assert {:sourceloc} {:sourceloc_num 319} true;
  $$t[0] := v180;
  assert {:sourceloc} {:sourceloc_num 320} true;
  v181 := $$3[1];
  assert {:sourceloc} {:sourceloc_num 321} true;
  $$t[1] := v181;
  assert {:sourceloc} {:sourceloc_num 322} true;
  v182 := $$3[2];
  assert {:sourceloc} {:sourceloc_num 323} true;
  $$t[2] := v182;
  assert {:sourceloc} {:sourceloc_num 324} true;
  v183 := $$3[3];
  assert {:sourceloc} {:sourceloc_num 325} true;
  $$t[3] := v183;
  assert {:sourceloc} {:sourceloc_num 326} true;
  v184 := $$t[0];
  assert {:sourceloc} {:sourceloc_num 327} true;
  $$21[0] := v184;
  assert {:sourceloc} {:sourceloc_num 328} true;
  v185 := $$t[1];
  assert {:sourceloc} {:sourceloc_num 329} true;
  $$21[1] := v185;
  assert {:sourceloc} {:sourceloc_num 330} true;
  v186 := $$t[2];
  assert {:sourceloc} {:sourceloc_num 331} true;
  $$21[2] := v186;
  assert {:sourceloc} {:sourceloc_num 332} true;
  v187 := $$t[3];
  assert {:sourceloc} {:sourceloc_num 333} true;
  $$21[3] := v187;
  assert {:sourceloc} {:sourceloc_num 334} true;
  v188 := $$21[0];
  assert {:sourceloc} {:sourceloc_num 335} true;
  v189 := $$21[1];
  assert {:sourceloc} {:sourceloc_num 336} true;
  v190 := $$21[2];
  assert {:sourceloc} {:sourceloc_num 337} true;
  v191 := $$21[3];
  assert {:sourceloc} {:sourceloc_num 338} true;
  $$a.i5[0] := v188;
  assert {:sourceloc} {:sourceloc_num 339} true;
  $$a.i5[1] := v189;
  assert {:sourceloc} {:sourceloc_num 340} true;
  $$a.i5[2] := v190;
  assert {:sourceloc} {:sourceloc_num 341} true;
  $$a.i5[3] := v191;
  assert {:sourceloc} {:sourceloc_num 342} true;
  v192 := $$a.i5[0];
  assert {:sourceloc} {:sourceloc_num 343} true;
  v193 := $$a.i5[1];
  assert {:sourceloc} {:sourceloc_num 344} true;
  v194 := $$a.i5[2];
  assert {:sourceloc} {:sourceloc_num 345} true;
  v195 := $$a.i5[3];
  assert {:sourceloc} {:sourceloc_num 346} true;
  $$0[0] := FMUL32(v192, v0);
  assert {:sourceloc} {:sourceloc_num 347} true;
  $$0[1] := FMUL32(v193, v0);
  assert {:sourceloc} {:sourceloc_num 348} true;
  $$0[2] := FMUL32(v194, v0);
  assert {:sourceloc} {:sourceloc_num 349} true;
  $$0[3] := FMUL32(v195, v0);
  assert {:sourceloc} {:sourceloc_num 350} true;
  v196 := $$0[0];
  assert {:sourceloc} {:sourceloc_num 351} true;
  v197 := $$0[1];
  assert {:sourceloc} {:sourceloc_num 352} true;
  v198 := $$0[2];
  assert {:sourceloc} {:sourceloc_num 353} true;
  v199 := $$0[3];
  assert {:sourceloc} {:sourceloc_num 354} true;
  $$1[0] := v196;
  assert {:sourceloc} {:sourceloc_num 355} true;
  $$1[1] := v197;
  assert {:sourceloc} {:sourceloc_num 356} true;
  $$1[2] := v198;
  assert {:sourceloc} {:sourceloc_num 357} true;
  $$1[3] := v199;
  assert {:sourceloc} {:sourceloc_num 358} true;
  v200 := $$1[0];
  assert {:sourceloc} {:sourceloc_num 359} true;
  v201 := $$1[1];
  assert {:sourceloc} {:sourceloc_num 360} true;
  v202 := $$1[2];
  assert {:sourceloc} {:sourceloc_num 361} true;
  v203 := $$1[3];
  assert {:sourceloc} {:sourceloc_num 362} true;
  $$20[0] := v200;
  assert {:sourceloc} {:sourceloc_num 363} true;
  $$20[1] := v201;
  assert {:sourceloc} {:sourceloc_num 364} true;
  $$20[2] := v202;
  assert {:sourceloc} {:sourceloc_num 365} true;
  $$20[3] := v203;
  assert {:sourceloc} {:sourceloc_num 366} true;
  v204 := $$20[0];
  assert {:sourceloc} {:sourceloc_num 367} true;
  v205 := $$20[1];
  assert {:sourceloc} {:sourceloc_num 368} true;
  v206 := $$20[2];
  assert {:sourceloc} {:sourceloc_num 369} true;
  v207 := $$20[3];
  assert {:sourceloc} {:sourceloc_num 370} true;
  $$rgba.i[0] := v204;
  assert {:sourceloc} {:sourceloc_num 371} true;
  $$rgba.i[1] := v205;
  assert {:sourceloc} {:sourceloc_num 372} true;
  $$rgba.i[2] := v206;
  assert {:sourceloc} {:sourceloc_num 373} true;
  $$rgba.i[3] := v207;
  assert {:sourceloc} {:sourceloc_num 374} true;
  v208 := $$rgba.i[0];
  call {:sourceloc_num 375}   v209 := $__saturatef(v208);
  assert {:sourceloc} {:sourceloc_num 376} true;
  $$rgba.i[0] := v209;
  assert {:sourceloc} {:sourceloc_num 377} true;
  v210 := $$rgba.i[1];
  call {:sourceloc_num 378}   v211 := $__saturatef(v210);
  assert {:sourceloc} {:sourceloc_num 379} true;
  $$rgba.i[1] := v211;
  assert {:sourceloc} {:sourceloc_num 380} true;
  v212 := $$rgba.i[2];
  call {:sourceloc_num 381}   v213 := $__saturatef(v212);
  assert {:sourceloc} {:sourceloc_num 382} true;
  $$rgba.i[2] := v213;
  assert {:sourceloc} {:sourceloc_num 383} true;
  v214 := $$rgba.i[3];
  call {:sourceloc_num 384}   v215 := $__saturatef(v214);
  assert {:sourceloc} {:sourceloc_num 385} true;
  $$rgba.i[3] := v215;
  assert {:sourceloc} {:sourceloc_num 386} true;
  v216 := $$rgba.i[3];
  assert {:sourceloc} {:sourceloc_num 387} true;
  v217 := $$rgba.i[2];
  assert {:sourceloc} {:sourceloc_num 388} true;
  v218 := $$rgba.i[1];
  assert {:sourceloc} {:sourceloc_num 389} true;
  v219 := $$rgba.i[0];
  assert {:sourceloc} {:sourceloc_num 390} true;
  $$od[BV32_ADD(BV32_MUL(v1, $w), $x1.0)] := BV32_OR(BV32_OR(BV32_OR(BV32_SHL(FP32_TO_UI32(FMUL32(v216, 1132396544)), 24), BV32_SHL(FP32_TO_UI32(FMUL32(v217, 1132396544)), 16)), BV32_SHL(FP32_TO_UI32(FMUL32(v218, 1132396544)), 8)), FP32_TO_UI32(FMUL32(v219, 1132396544)));
  goto $8;
$8:
  assert {:block_sourceloc} {:sourceloc_num 391} true;
  $x1.0 := BV32_ADD($x1.0, 1);
  goto $6;
$9:
  assert {:block_sourceloc} {:sourceloc_num 392} true;
  goto $10;
$10:
  assert {:block_sourceloc} {:sourceloc_num 393} true;
  return;
$truebb:
  assume {:partition} v2;
  assert {:block_sourceloc} {:sourceloc_num 394} true;
  goto $1;
$falsebb:
  assume {:partition} !v2;
  assert {:block_sourceloc} {:sourceloc_num 395} true;
  goto $10;
$truebb0:
  assume {:partition} v11;
  assert {:block_sourceloc} {:sourceloc_num 396} true;
  goto $3;
$falsebb0:
  assume {:partition} !v11;
  assert {:block_sourceloc} {:sourceloc_num 397} true;
  goto $5;
$truebb1:
  assume {:partition} v93;
  assert {:block_sourceloc} {:sourceloc_num 398} true;
  goto $7;
$falsebb1:
  assume {:partition} !v93;
  assert {:block_sourceloc} {:sourceloc_num 399} true;
  goto $9;
}
procedure {:source_name "_Z5tex2D7textureI6uchar4Li2EL19cudaTextureReadMode1EEff"} $_Z5tex2D7textureI6uchar4Li2EL19cudaTextureReadMode1EEff($0:int, $1:int, $2:int, $3:int, $4:int) returns ($ret:int);
procedure {:source_name "__saturatef"} $__saturatef($0:int) returns ($ret:int);
axiom (if group_size_y == 1 then 1 else 0) != 0;
axiom (if group_size_z == 1 then 1 else 0) != 0;
axiom (if num_groups_y == 1 then 1 else 0) != 0;
axiom (if num_groups_z == 1 then 1 else 0) != 0;
axiom (if group_size_x == 64 then 1 else 0) != 0;
axiom (if num_groups_x == 16 then 1 else 0) != 0;
