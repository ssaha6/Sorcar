type _SIZE_T_TYPE = bv32;

procedure _ATOMIC_OP32(x : [int]int, y : int) returns (z : int, A : [int]int);
procedure _ATOMIC_OP8(x : [int]int, y : int) returns (z : int, A : [int]int);
var {:source_name "d_Dst"} {:global} $$d_Dst : [int]int;
axiom {:array_info "$$d_Dst"} {:global} {:elem_width 32} {:source_name "d_Dst"} {:source_elem_width 64} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 64} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$d_Dst : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 64} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$d_Dst : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 64} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$d_Dst : bool;

var {:source_name "d_Src"} {:global} $$d_Src : [int]int;
axiom {:array_info "$$d_Src"} {:global} {:elem_width 32} {:source_name "d_Src"} {:source_elem_width 64} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 64} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$d_Src : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 64} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$d_Src : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 64} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$d_Src : bool;

var {:source_name "D1"} $$D1 : [int]int;
axiom {:array_info "$$D1"} {:elem_width 32} {:source_name "D1"} {:source_elem_width 64} {:source_dimensions "1"} true;

var {:source_name ""} $$0 : [int]int;
axiom {:array_info "$$0"} {:elem_width 8} {:source_name ""} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name "D2"} $$D2 : [int]int;
axiom {:array_info "$$D2"} {:elem_width 32} {:source_name "D2"} {:source_elem_width 64} {:source_dimensions "1"} true;

var {:source_name ""} $$1 : [int]int;
axiom {:array_info "$$1"} {:elem_width 8} {:source_name ""} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name "twiddle"} $$twiddle : [int]int;
axiom {:array_info "$$twiddle"} {:elem_width 32} {:source_name "twiddle"} {:source_elem_width 64} {:source_dimensions "1"} true;

var {:source_name "D15"} $$D15 : [int]int;
axiom {:array_info "$$D15"} {:elem_width 32} {:source_name "D15"} {:source_elem_width 64} {:source_dimensions "1"} true;

var {:source_name ""} $$2 : [int]int;
axiom {:array_info "$$2"} {:elem_width 8} {:source_name ""} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name "D26"} $$D26 : [int]int;
axiom {:array_info "$$D26"} {:elem_width 32} {:source_name "D26"} {:source_elem_width 64} {:source_dimensions "1"} true;

var {:source_name ""} $$3 : [int]int;
axiom {:array_info "$$3"} {:elem_width 8} {:source_name ""} {:source_elem_width 128} {:source_dimensions "1"} true;

var {:source_name "twiddle7"} $$twiddle7 : [int]int;
axiom {:array_info "$$twiddle7"} {:elem_width 32} {:source_name "twiddle7"} {:source_elem_width 64} {:source_dimensions "1"} true;

var {:source_name "texComplexA"} {:global} $$texComplexA : [int]int;
axiom {:array_info "$$texComplexA"} {:global} {:elem_width 8} {:source_name "texComplexA"} {:source_elem_width 128} {:source_dimensions "1"} true;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 128} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$texComplexA : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 128} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$texComplexA : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 128} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$texComplexA : bool;

const _WATCHED_OFFSET : int;
const {:group_id_x} group_id_x : int;
const {:group_size_x} group_size_x : int;
const {:group_size_y} group_size_y : int;
const {:group_size_z} group_size_z : int;
const {:local_id_x} local_id_x : int;
const {:num_groups_x} num_groups_x : int;
const {:num_groups_y} num_groups_y : int;
const {:num_groups_z} num_groups_z : int;
function  BV32_LSHR(int, int) : int;
function BV_CONCAT(int, int) : int;
function BV_EXTRACT(int, int, int) : int;
function FADD32(int, int) : int;
function FLT32(int, int) : bool;
function FMUL32(int, int) : int;
function FSUB32(int, int) : int;
function UI32_TO_FP32(int) : int;
function {:inline true} BV32_ADD(x : int, y : int) : int {
  x + y
}
function {:inline true} BV32_AND(x : int, y : int) : int {
  if x == y then x else (if x == 0 || y == 0 then 0 else BV32_AND_UF(x, y))
}
function BV32_AND_UF(int, int) : int;
function {:inline true} BV32_MUL(x : int, y : int) : int {
  x * y
}
function {:inline true} BV32_SUB(x : int, y : int) : int {
  x - y
}
function {:inline true} BV32_UDIV(x : int, y : int) : int {
  x div y
}
function {:inline true} BV32_UGE(x : int, y : int) : bool {
  x >= y
}
function {:inline true} BV32_UGT(x : int, y : int) : bool {
  x > y
}
procedure BV32_CTLZ(val : int, isZeroUndef : bool) returns (count : int);
procedure {:source_name "spPreprocess2D_kernel"} {:kernel} $_Z21spPreprocess2D_kernelP6float2S0_jjjjf($DY:int, $DX:int, $threadCount:int, $padding:int, $phaseBase:int)
requires {:sourceloc_num 0} (if $DY == 2048 then 1 else 0) != 0;
requires {:sourceloc_num 1} (if $DX == 1024 then 1 else 0) != 0;
requires {:sourceloc_num 2} (if $threadCount == 1048576 then 1 else 0) != 0;
requires {:sourceloc_num 3} (if $padding == 16 then 1 else 0) != 0;
{
  var $0:int;
  var $1:int;
  var $2:int;
  var $3:int;
  var $4:int;
  var v1:bool;
  var v92:int;
  var v0:int;
  var v2:int;
  var v3:int;
  var v4:int;
  var v5:int;
  var v6:int;
  var v7:int;
  var v8:int;
  var v9:bool;
  var v10:bool;
  var v12:int;
  var v11:int;
  var v13:bool;
  var v14:int;
  var v15:bool;
  var v16:bool;
  var v17:int;
  var v18:int;
  var v19:int;
  var v20:int;
  var v21:int;
  var v22:int;
  var v23:int;
  var v24:int;
  var v25:int;
  var v26:int;
  var v27:int;
  var v28:int;
  var v29:int;
  var v30:int;
  var v31:int;
  var v32:int;
  var v52:int;
  var v53:int;
  var v33:int;
  var v34:int;
  var v35:int;
  var v36:int;
  var v37:int;
  var v38:int;
  var v39:int;
  var v40:int;
  var v41:int;
  var v42:int;
  var v43:int;
  var v44:int;
  var v45:int;
  var v46:int;
  var v47:int;
  var v48:int;
  var v49:int;
  var v51:int;
  var v50:int;
  var v54:int;
  var v55:int;
  var v56:int;
  var v57:int;
  var v58:int;
  var v59:int;
  var v60:int;
  var v61:int;
  var v62:int;
  var v63:int;
  var v64:int;
  var v65:int;
  var v66:int;
  var v67:int;
  var v68:int;
  var v69:int;
  var v70:int;
  var v71:int;
  var v72:int;
  var v73:int;
  var v74:int;
  var v75:int;
  var v76:int;
  var v77:int;
  var v78:int;
  var v79:int;
  var v80:int;
  var v81:int;
  var v82:int;
  var v83:int;
  var v84:int;
  var v85:int;
  var v86:int;
  var v87:int;
  var v88:int;
  var v89:int;
  var v90:int;
  var v91:int;
  var v93:int;
  var v94:int;
  var v95:int;
  var v96:int;
  var v97:int;
  var v98:int;
  var v99:int;
  var v100:int;
  var v101:int;
  var v102:int;
  var v103:int;
  var v104:int;
  var v105:int;
  var v106:int;
  var v107:int;
  var v110:bool;
  var v108:int;
  var v109:int;
  var v111:bool;
  var v112:int;
  var v113:bool;
  var v114:int;
  var v115:int;
  var v120:int;
  var v116:int;
  var v117:int;
  var v118:int;
  var v119:int;
  var v128:int;
  var v121:int;
  var v122:int;
  var v123:int;
  var v124:int;
  var v125:int;
  var v126:int;
  var v127:int;
  var v129:int;
  var v130:int;
  var v131:int;
  var v132:int;
  var v133:int;
  var v134:int;
  var v135:int;
  var v136:int;
  var v137:int;
  var v138:int;
  var v139:int;
  var v140:int;
  var v141:int;
  var v142:int;
  var v143:int;
  var v144:int;
  var v145:int;
  var v146:int;
  var v147:int;
  var v148:int;
  var v149:int;
  var v150:int;
  var v151:int;
  var v152:int;
  var v153:int;
  var v154:int;
  var v155:int;
  var v156:int;
  var v157:int;
  var v158:int;
  var v159:int;
  var v160:int;
  var v161:int;
  var v162:int;
  var v163:int;
  var v164:int;
  var v165:int;
  var v166:int;
  var v167:int;
  var v168:int;
  var v169:int;
  var v170:int;
  var v171:int;
  var v172:int;
  var v173:int;
  var v174:int;
  var v175:int;
  var v176:int;
  var v177:int;
  var v178:int;
  var v179:int;
  var v180:int;
  var v181:int;
  var v182:int;
  var v183:int;
  var v184:int;
  var v185:int;
  var v186:int;
  var v187:int;
  var v188:int;
  var v189:int;
  var v190:int;
  var v191:int;
  var v192:int;
  var v193:int;
  var v194:int;
  var v195:int;
  var v196:int;
  var v197:int;
  var v198:int;
  var v199:int;
  var v200:int;
  var v201:int;
  var v202:int;
  var v203:int;
$0:
  assert {:block_sourceloc} {:sourceloc_num 4} true;
  v0 := BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x);
  v1 := BV32_UGE(v0, $threadCount);
  goto $truebb, $falsebb;
$1:
  assert {:block_sourceloc} {:sourceloc_num 5} true;
  goto $17;
$2:
  assert {:block_sourceloc} {:sourceloc_num 6} true;
  v2 := BV32_UDIV($DX, 2);
  v3 := BV32_AND(v0, BV32_SUB(v2, 1));
  call v4 := BV32_CTLZ(BV32_AND(v2, BV32_SUB(0, v2)), false);
  v5 := BV32_LSHR(v0, BV32_SUB(BV32_SUB(32, v4), 1));
  v6 := BV32_AND(v5, BV32_SUB($DY, 1));
  call v7 := BV32_CTLZ(BV32_AND($DY, BV32_SUB(0, $DY)), false);
  v8 := BV32_LSHR(v5, BV32_SUB(BV32_SUB(32, v7), 1));
  v9 := v3 == 0;
  goto $truebb0, $falsebb0;
$3:
  assert {:block_sourceloc} {:sourceloc_num 7} true;
  v10 := BV32_UGT(v6, BV32_UDIV($DY, 2));
  goto $truebb1, $falsebb1;
$4:
  assert {:block_sourceloc} {:sourceloc_num 8} true;
  goto $17;
$5:
  assert {:block_sourceloc} {:sourceloc_num 9} true;
  v11 := BV32_MUL(BV32_MUL(v8, $DY), BV32_ADD($DX, $padding));
  v12 := BV32_MUL(BV32_MUL(v8, $DY), $DX);
  v13 := v6 != 0;
  goto $truebb2, $falsebb2;
$6:
  assert {:block_sourceloc} {:sourceloc_num 10} true;
  $0 := BV32_SUB($DY, v6);
  goto $_ZL3modjj.exit;
$7:
  assert {:block_sourceloc} {:sourceloc_num 11} true;
  $0 := v6;
  goto $_ZL3modjj.exit;
$_ZL3modjj.exit:
  assert {:block_sourceloc} {:sourceloc_num 12} true;
  v14 := BV32_ADD(BV32_ADD(v12, BV32_MUL(v6, $DX)), v3);
  v15 := v6 != 0;
  goto $truebb3, $falsebb3;
$8:
  assert {:block_sourceloc} {:sourceloc_num 13} true;
  $1 := BV32_SUB($DY, v6);
  goto $_ZL3modjj.exit14;
$9:
  assert {:block_sourceloc} {:sourceloc_num 14} true;
  $1 := v6;
  goto $_ZL3modjj.exit14;
$_ZL3modjj.exit14:
  assert {:block_sourceloc} {:sourceloc_num 15} true;
  v16 := v3 != 0;
  goto $truebb4, $falsebb4;
$10:
  assert {:block_sourceloc} {:sourceloc_num 16} true;
  $2 := BV32_SUB($DX, v3);
  goto $_ZL3modjj.exit15;
$11:
  assert {:block_sourceloc} {:sourceloc_num 17} true;
  $2 := v3;
  goto $_ZL3modjj.exit15;
$_ZL3modjj.exit15:
  assert {:block_sourceloc} {:sourceloc_num 18} true;
  assert {:sourceloc} {:sourceloc_num 19} true;
  v17 := $$texComplexA[0];
  assert {:sourceloc} {:sourceloc_num 20} true;
  $$0[0] := v17;
  assert {:sourceloc} {:sourceloc_num 21} true;
  v18 := $$texComplexA[1];
  assert {:sourceloc} {:sourceloc_num 22} true;
  $$0[1] := v18;
  assert {:sourceloc} {:sourceloc_num 23} true;
  v19 := $$texComplexA[2];
  assert {:sourceloc} {:sourceloc_num 24} true;
  $$0[2] := v19;
  assert {:sourceloc} {:sourceloc_num 25} true;
  v20 := $$texComplexA[3];
  assert {:sourceloc} {:sourceloc_num 26} true;
  $$0[3] := v20;
  assert {:sourceloc} {:sourceloc_num 27} true;
  v21 := $$texComplexA[4];
  assert {:sourceloc} {:sourceloc_num 28} true;
  $$0[4] := v21;
  assert {:sourceloc} {:sourceloc_num 29} true;
  v22 := $$texComplexA[5];
  assert {:sourceloc} {:sourceloc_num 30} true;
  $$0[5] := v22;
  assert {:sourceloc} {:sourceloc_num 31} true;
  v23 := $$texComplexA[6];
  assert {:sourceloc} {:sourceloc_num 32} true;
  $$0[6] := v23;
  assert {:sourceloc} {:sourceloc_num 33} true;
  v24 := $$texComplexA[7];
  assert {:sourceloc} {:sourceloc_num 34} true;
  $$0[7] := v24;
  assert {:sourceloc} {:sourceloc_num 35} true;
  v25 := $$texComplexA[8];
  assert {:sourceloc} {:sourceloc_num 36} true;
  $$0[8] := v25;
  assert {:sourceloc} {:sourceloc_num 37} true;
  v26 := $$texComplexA[9];
  assert {:sourceloc} {:sourceloc_num 38} true;
  $$0[9] := v26;
  assert {:sourceloc} {:sourceloc_num 39} true;
  v27 := $$texComplexA[10];
  assert {:sourceloc} {:sourceloc_num 40} true;
  $$0[10] := v27;
  assert {:sourceloc} {:sourceloc_num 41} true;
  v28 := $$texComplexA[11];
  assert {:sourceloc} {:sourceloc_num 42} true;
  $$0[11] := v28;
  assert {:sourceloc} {:sourceloc_num 43} true;
  v29 := $$texComplexA[12];
  assert {:sourceloc} {:sourceloc_num 44} true;
  $$0[12] := v29;
  assert {:sourceloc} {:sourceloc_num 45} true;
  v30 := $$texComplexA[13];
  assert {:sourceloc} {:sourceloc_num 46} true;
  $$0[13] := v30;
  assert {:sourceloc} {:sourceloc_num 47} true;
  v31 := $$texComplexA[14];
  assert {:sourceloc} {:sourceloc_num 48} true;
  $$0[14] := v31;
  assert {:sourceloc} {:sourceloc_num 49} true;
  v32 := $$texComplexA[15];
  assert {:sourceloc} {:sourceloc_num 50} true;
  $$0[15] := v32;
  assert {:sourceloc} {:sourceloc_num 51} true;
  v33 := $$0[0];
  assert {:sourceloc} {:sourceloc_num 52} true;
  v34 := $$0[1];
  assert {:sourceloc} {:sourceloc_num 53} true;
  v35 := $$0[2];
  assert {:sourceloc} {:sourceloc_num 54} true;
  v36 := $$0[3];
  assert {:sourceloc} {:sourceloc_num 55} true;
  v37 := $$0[4];
  assert {:sourceloc} {:sourceloc_num 56} true;
  v38 := $$0[5];
  assert {:sourceloc} {:sourceloc_num 57} true;
  v39 := $$0[6];
  assert {:sourceloc} {:sourceloc_num 58} true;
  v40 := $$0[7];
  assert {:sourceloc} {:sourceloc_num 59} true;
  v41 := $$0[8];
  assert {:sourceloc} {:sourceloc_num 60} true;
  v42 := $$0[9];
  assert {:sourceloc} {:sourceloc_num 61} true;
  v43 := $$0[10];
  assert {:sourceloc} {:sourceloc_num 62} true;
  v44 := $$0[11];
  assert {:sourceloc} {:sourceloc_num 63} true;
  v45 := $$0[12];
  assert {:sourceloc} {:sourceloc_num 64} true;
  v46 := $$0[13];
  assert {:sourceloc} {:sourceloc_num 65} true;
  v47 := $$0[14];
  assert {:sourceloc} {:sourceloc_num 66} true;
  v48 := $$0[15];
  call {:sourceloc_num 67}   v49 := $_Z10tex1DfetchI6float2ET_7textureIS1_Li1EL19cudaTextureReadMode0EEi(BV_CONCAT(BV_CONCAT(BV_CONCAT(BV_CONCAT(BV_CONCAT(BV_CONCAT(BV_CONCAT(v40, v39), v38), v37), v36), v35), v34), v33), BV_CONCAT(BV_CONCAT(BV_CONCAT(v44, v43), v42), v41), BV_CONCAT(BV_CONCAT(BV_CONCAT(v48, v47), v46), v45), BV32_ADD(BV32_ADD(v11, BV32_MUL(v6, BV32_ADD($DX, $padding))), v3));
  assert {:sourceloc} {:sourceloc_num 68} true;
  $$D1[0] := BV_EXTRACT(v49, 32, 0);
  assert {:sourceloc} {:sourceloc_num 69} true;
  $$D1[1] := BV_EXTRACT(v49, 64, 32);
  assert {:sourceloc} {:sourceloc_num 70} true;
  v50 := $$texComplexA[0];
  assert {:sourceloc} {:sourceloc_num 71} true;
  $$1[0] := v50;
  assert {:sourceloc} {:sourceloc_num 72} true;
  v51 := $$texComplexA[1];
  assert {:sourceloc} {:sourceloc_num 73} true;
  $$1[1] := v51;
  assert {:sourceloc} {:sourceloc_num 74} true;
  v52 := $$texComplexA[2];
  assert {:sourceloc} {:sourceloc_num 75} true;
  $$1[2] := v52;
  assert {:sourceloc} {:sourceloc_num 76} true;
  v53 := $$texComplexA[3];
  assert {:sourceloc} {:sourceloc_num 77} true;
  $$1[3] := v53;
  assert {:sourceloc} {:sourceloc_num 78} true;
  v54 := $$texComplexA[4];
  assert {:sourceloc} {:sourceloc_num 79} true;
  $$1[4] := v54;
  assert {:sourceloc} {:sourceloc_num 80} true;
  v55 := $$texComplexA[5];
  assert {:sourceloc} {:sourceloc_num 81} true;
  $$1[5] := v55;
  assert {:sourceloc} {:sourceloc_num 82} true;
  v56 := $$texComplexA[6];
  assert {:sourceloc} {:sourceloc_num 83} true;
  $$1[6] := v56;
  assert {:sourceloc} {:sourceloc_num 84} true;
  v57 := $$texComplexA[7];
  assert {:sourceloc} {:sourceloc_num 85} true;
  $$1[7] := v57;
  assert {:sourceloc} {:sourceloc_num 86} true;
  v58 := $$texComplexA[8];
  assert {:sourceloc} {:sourceloc_num 87} true;
  $$1[8] := v58;
  assert {:sourceloc} {:sourceloc_num 88} true;
  v59 := $$texComplexA[9];
  assert {:sourceloc} {:sourceloc_num 89} true;
  $$1[9] := v59;
  assert {:sourceloc} {:sourceloc_num 90} true;
  v60 := $$texComplexA[10];
  assert {:sourceloc} {:sourceloc_num 91} true;
  $$1[10] := v60;
  assert {:sourceloc} {:sourceloc_num 92} true;
  v61 := $$texComplexA[11];
  assert {:sourceloc} {:sourceloc_num 93} true;
  $$1[11] := v61;
  assert {:sourceloc} {:sourceloc_num 94} true;
  v62 := $$texComplexA[12];
  assert {:sourceloc} {:sourceloc_num 95} true;
  $$1[12] := v62;
  assert {:sourceloc} {:sourceloc_num 96} true;
  v63 := $$texComplexA[13];
  assert {:sourceloc} {:sourceloc_num 97} true;
  $$1[13] := v63;
  assert {:sourceloc} {:sourceloc_num 98} true;
  v64 := $$texComplexA[14];
  assert {:sourceloc} {:sourceloc_num 99} true;
  $$1[14] := v64;
  assert {:sourceloc} {:sourceloc_num 100} true;
  v65 := $$texComplexA[15];
  assert {:sourceloc} {:sourceloc_num 101} true;
  $$1[15] := v65;
  assert {:sourceloc} {:sourceloc_num 102} true;
  v66 := $$1[0];
  assert {:sourceloc} {:sourceloc_num 103} true;
  v67 := $$1[1];
  assert {:sourceloc} {:sourceloc_num 104} true;
  v68 := $$1[2];
  assert {:sourceloc} {:sourceloc_num 105} true;
  v69 := $$1[3];
  assert {:sourceloc} {:sourceloc_num 106} true;
  v70 := $$1[4];
  assert {:sourceloc} {:sourceloc_num 107} true;
  v71 := $$1[5];
  assert {:sourceloc} {:sourceloc_num 108} true;
  v72 := $$1[6];
  assert {:sourceloc} {:sourceloc_num 109} true;
  v73 := $$1[7];
  assert {:sourceloc} {:sourceloc_num 110} true;
  v74 := $$1[8];
  assert {:sourceloc} {:sourceloc_num 111} true;
  v75 := $$1[9];
  assert {:sourceloc} {:sourceloc_num 112} true;
  v76 := $$1[10];
  assert {:sourceloc} {:sourceloc_num 113} true;
  v77 := $$1[11];
  assert {:sourceloc} {:sourceloc_num 114} true;
  v78 := $$1[12];
  assert {:sourceloc} {:sourceloc_num 115} true;
  v79 := $$1[13];
  assert {:sourceloc} {:sourceloc_num 116} true;
  v80 := $$1[14];
  assert {:sourceloc} {:sourceloc_num 117} true;
  v81 := $$1[15];
  call {:sourceloc_num 118}   v82 := $_Z10tex1DfetchI6float2ET_7textureIS1_Li1EL19cudaTextureReadMode0EEi(BV_CONCAT(BV_CONCAT(BV_CONCAT(BV_CONCAT(BV_CONCAT(BV_CONCAT(BV_CONCAT(v73, v72), v71), v70), v69), v68), v67), v66), BV_CONCAT(BV_CONCAT(BV_CONCAT(v77, v76), v75), v74), BV_CONCAT(BV_CONCAT(BV_CONCAT(v81, v80), v79), v78), BV32_ADD(BV32_ADD(v11, BV32_MUL($0, BV32_ADD($DX, $padding))), BV32_SUB($DX, v3)));
  assert {:sourceloc} {:sourceloc_num 119} true;
  $$D2[0] := BV_EXTRACT(v82, 32, 0);
  assert {:sourceloc} {:sourceloc_num 120} true;
  $$D2[1] := BV_EXTRACT(v82, 64, 32);
  v83 := FMUL32($phaseBase, UI32_TO_FP32(v3));
  call {:sourceloc_num 121}   v84 := $sinf(v83);
  assert {:sourceloc} {:sourceloc_num 122} true;
  $$twiddle[1] := v84;
  call {:sourceloc_num 123}   v85 := $cosf(v83);
  assert {:sourceloc} {:sourceloc_num 124} true;
  $$twiddle[0] := v85;
  assert {:sourceloc} {:sourceloc_num 125} true;
  v86 := $$D1[0];
  assert {:sourceloc} {:sourceloc_num 126} true;
  v87 := $$D2[0];
  v88 := FADD32(v86, v87);
  assert {:sourceloc} {:sourceloc_num 127} true;
  v89 := $$D1[1];
  assert {:sourceloc} {:sourceloc_num 128} true;
  v90 := $$D2[1];
  v91 := FSUB32(v89, v90);
  assert {:sourceloc} {:sourceloc_num 129} true;
  v92 := $$D1[1];
  assert {:sourceloc} {:sourceloc_num 130} true;
  v93 := $$D2[1];
  v94 := FADD32(v92, v93);
  assert {:sourceloc} {:sourceloc_num 131} true;
  v95 := $$D1[0];
  assert {:sourceloc} {:sourceloc_num 132} true;
  v96 := $$D2[0];
  v97 := FSUB32(v95, v96);
  assert {:sourceloc} {:sourceloc_num 133} true;
  v98 := $$twiddle[0];
  assert {:sourceloc} {:sourceloc_num 134} true;
  v99 := $$twiddle[1];
  assert {:sourceloc} {:sourceloc_num 135} true;
  $$D1[0] := FSUB32(v88, FSUB32(FMUL32(v94, v98), FMUL32(v97, v99)));
  assert {:sourceloc} {:sourceloc_num 136} true;
  v100 := $$twiddle[0];
  assert {:sourceloc} {:sourceloc_num 137} true;
  v101 := $$twiddle[1];
  assert {:sourceloc} {:sourceloc_num 138} true;
  $$D1[1] := FADD32(FADD32(FMUL32(v97, v100), FMUL32(v94, v101)), v91);
  assert {:sourceloc} {:sourceloc_num 139} true;
  v102 := $$twiddle[0];
  assert {:sourceloc} {:sourceloc_num 140} true;
  v103 := $$twiddle[1];
  assert {:sourceloc} {:sourceloc_num 141} true;
  $$D2[0] := FADD32(v88, FSUB32(FMUL32(v94, v102), FMUL32(v97, v103)));
  assert {:sourceloc} {:sourceloc_num 142} true;
  v104 := $$twiddle[0];
  assert {:sourceloc} {:sourceloc_num 143} true;
  v105 := $$twiddle[1];
  assert {:sourceloc} {:sourceloc_num 144} true;
  $$D2[1] := FSUB32(FADD32(FMUL32(v97, v104), FMUL32(v94, v105)), v91);
  assert {:sourceloc} {:sourceloc_num 145} true;
  v106 := $$D1[0];
  assert {:sourceloc} {:sourceloc_num 146} true;
  $$d_Dst[BV32_MUL(v14, 2)] := v106;
  assert {:sourceloc} {:sourceloc_num 147} true;
  v107 := $$D1[1];
  assert {:sourceloc} {:sourceloc_num 148} true;
  $$d_Dst[BV32_ADD(BV32_MUL(v14, 2), 1)] := v107;
  assert {:sourceloc} {:sourceloc_num 149} true;
  v108 := $$D2[0];
  assert {:sourceloc} {:sourceloc_num 150} true;
  $$d_Dst[BV32_MUL(BV32_ADD(BV32_ADD(v12, BV32_MUL($1, $DX)), $2), 2)] := v108;
  assert {:sourceloc} {:sourceloc_num 151} true;
  v109 := $$D2[1];
  assert {:sourceloc} {:sourceloc_num 152} true;
  $$d_Dst[BV32_ADD(BV32_MUL(BV32_ADD(BV32_ADD(v12, BV32_MUL($1, $DX)), $2), 2), 1)] := v109;
  v110 := v3 == 0;
  goto $truebb5, $falsebb5;
$12:
  assert {:block_sourceloc} {:sourceloc_num 153} true;
  v111 := v6 != 0;
  goto $truebb6, $falsebb6;
$13:
  assert {:block_sourceloc} {:sourceloc_num 154} true;
  $3 := BV32_SUB($DY, v6);
  goto $_ZL3modjj.exit9;
$14:
  assert {:block_sourceloc} {:sourceloc_num 155} true;
  $3 := v6;
  goto $_ZL3modjj.exit9;
$_ZL3modjj.exit9:
  assert {:block_sourceloc} {:sourceloc_num 156} true;
  v112 := BV32_ADD(BV32_ADD(v12, BV32_MUL(v6, $DX)), BV32_UDIV($DX, 2));
  v113 := v6 != 0;
  goto $truebb7, $falsebb7;
$15:
  assert {:block_sourceloc} {:sourceloc_num 157} true;
  $4 := BV32_SUB($DY, v6);
  goto $_ZL3modjj.exit8;
$16:
  assert {:block_sourceloc} {:sourceloc_num 158} true;
  $4 := v6;
  goto $_ZL3modjj.exit8;
$_ZL3modjj.exit8:
  assert {:block_sourceloc} {:sourceloc_num 159} true;
  assert {:sourceloc} {:sourceloc_num 160} true;
  v114 := $$texComplexA[0];
  assert {:sourceloc} {:sourceloc_num 161} true;
  $$2[0] := v114;
  assert {:sourceloc} {:sourceloc_num 162} true;
  v115 := $$texComplexA[1];
  assert {:sourceloc} {:sourceloc_num 163} true;
  $$2[1] := v115;
  assert {:sourceloc} {:sourceloc_num 164} true;
  v116 := $$texComplexA[2];
  assert {:sourceloc} {:sourceloc_num 165} true;
  $$2[2] := v116;
  assert {:sourceloc} {:sourceloc_num 166} true;
  v117 := $$texComplexA[3];
  assert {:sourceloc} {:sourceloc_num 167} true;
  $$2[3] := v117;
  assert {:sourceloc} {:sourceloc_num 168} true;
  v118 := $$texComplexA[4];
  assert {:sourceloc} {:sourceloc_num 169} true;
  $$2[4] := v118;
  assert {:sourceloc} {:sourceloc_num 170} true;
  v119 := $$texComplexA[5];
  assert {:sourceloc} {:sourceloc_num 171} true;
  $$2[5] := v119;
  assert {:sourceloc} {:sourceloc_num 172} true;
  v120 := $$texComplexA[6];
  assert {:sourceloc} {:sourceloc_num 173} true;
  $$2[6] := v120;
  assert {:sourceloc} {:sourceloc_num 174} true;
  v121 := $$texComplexA[7];
  assert {:sourceloc} {:sourceloc_num 175} true;
  $$2[7] := v121;
  assert {:sourceloc} {:sourceloc_num 176} true;
  v122 := $$texComplexA[8];
  assert {:sourceloc} {:sourceloc_num 177} true;
  $$2[8] := v122;
  assert {:sourceloc} {:sourceloc_num 178} true;
  v123 := $$texComplexA[9];
  assert {:sourceloc} {:sourceloc_num 179} true;
  $$2[9] := v123;
  assert {:sourceloc} {:sourceloc_num 180} true;
  v124 := $$texComplexA[10];
  assert {:sourceloc} {:sourceloc_num 181} true;
  $$2[10] := v124;
  assert {:sourceloc} {:sourceloc_num 182} true;
  v125 := $$texComplexA[11];
  assert {:sourceloc} {:sourceloc_num 183} true;
  $$2[11] := v125;
  assert {:sourceloc} {:sourceloc_num 184} true;
  v126 := $$texComplexA[12];
  assert {:sourceloc} {:sourceloc_num 185} true;
  $$2[12] := v126;
  assert {:sourceloc} {:sourceloc_num 186} true;
  v127 := $$texComplexA[13];
  assert {:sourceloc} {:sourceloc_num 187} true;
  $$2[13] := v127;
  assert {:sourceloc} {:sourceloc_num 188} true;
  v128 := $$texComplexA[14];
  assert {:sourceloc} {:sourceloc_num 189} true;
  $$2[14] := v128;
  assert {:sourceloc} {:sourceloc_num 190} true;
  v129 := $$texComplexA[15];
  assert {:sourceloc} {:sourceloc_num 191} true;
  $$2[15] := v129;
  assert {:sourceloc} {:sourceloc_num 192} true;
  v130 := $$2[0];
  assert {:sourceloc} {:sourceloc_num 193} true;
  v131 := $$2[1];
  assert {:sourceloc} {:sourceloc_num 194} true;
  v132 := $$2[2];
  assert {:sourceloc} {:sourceloc_num 195} true;
  v133 := $$2[3];
  assert {:sourceloc} {:sourceloc_num 196} true;
  v134 := $$2[4];
  assert {:sourceloc} {:sourceloc_num 197} true;
  v135 := $$2[5];
  assert {:sourceloc} {:sourceloc_num 198} true;
  v136 := $$2[6];
  assert {:sourceloc} {:sourceloc_num 199} true;
  v137 := $$2[7];
  assert {:sourceloc} {:sourceloc_num 200} true;
  v138 := $$2[8];
  assert {:sourceloc} {:sourceloc_num 201} true;
  v139 := $$2[9];
  assert {:sourceloc} {:sourceloc_num 202} true;
  v140 := $$2[10];
  assert {:sourceloc} {:sourceloc_num 203} true;
  v141 := $$2[11];
  assert {:sourceloc} {:sourceloc_num 204} true;
  v142 := $$2[12];
  assert {:sourceloc} {:sourceloc_num 205} true;
  v143 := $$2[13];
  assert {:sourceloc} {:sourceloc_num 206} true;
  v144 := $$2[14];
  assert {:sourceloc} {:sourceloc_num 207} true;
  v145 := $$2[15];
  call {:sourceloc_num 208}   v146 := $_Z10tex1DfetchI6float2ET_7textureIS1_Li1EL19cudaTextureReadMode0EEi(BV_CONCAT(BV_CONCAT(BV_CONCAT(BV_CONCAT(BV_CONCAT(BV_CONCAT(BV_CONCAT(v137, v136), v135), v134), v133), v132), v131), v130), BV_CONCAT(BV_CONCAT(BV_CONCAT(v141, v140), v139), v138), BV_CONCAT(BV_CONCAT(BV_CONCAT(v145, v144), v143), v142), BV32_ADD(BV32_ADD(v11, BV32_MUL(v6, BV32_ADD($DX, $padding))), BV32_UDIV($DX, 2)));
  assert {:sourceloc} {:sourceloc_num 209} true;
  $$D15[0] := BV_EXTRACT(v146, 32, 0);
  assert {:sourceloc} {:sourceloc_num 210} true;
  $$D15[1] := BV_EXTRACT(v146, 64, 32);
  assert {:sourceloc} {:sourceloc_num 211} true;
  v147 := $$texComplexA[0];
  assert {:sourceloc} {:sourceloc_num 212} true;
  $$3[0] := v147;
  assert {:sourceloc} {:sourceloc_num 213} true;
  v148 := $$texComplexA[1];
  assert {:sourceloc} {:sourceloc_num 214} true;
  $$3[1] := v148;
  assert {:sourceloc} {:sourceloc_num 215} true;
  v149 := $$texComplexA[2];
  assert {:sourceloc} {:sourceloc_num 216} true;
  $$3[2] := v149;
  assert {:sourceloc} {:sourceloc_num 217} true;
  v150 := $$texComplexA[3];
  assert {:sourceloc} {:sourceloc_num 218} true;
  $$3[3] := v150;
  assert {:sourceloc} {:sourceloc_num 219} true;
  v151 := $$texComplexA[4];
  assert {:sourceloc} {:sourceloc_num 220} true;
  $$3[4] := v151;
  assert {:sourceloc} {:sourceloc_num 221} true;
  v152 := $$texComplexA[5];
  assert {:sourceloc} {:sourceloc_num 222} true;
  $$3[5] := v152;
  assert {:sourceloc} {:sourceloc_num 223} true;
  v153 := $$texComplexA[6];
  assert {:sourceloc} {:sourceloc_num 224} true;
  $$3[6] := v153;
  assert {:sourceloc} {:sourceloc_num 225} true;
  v154 := $$texComplexA[7];
  assert {:sourceloc} {:sourceloc_num 226} true;
  $$3[7] := v154;
  assert {:sourceloc} {:sourceloc_num 227} true;
  v155 := $$texComplexA[8];
  assert {:sourceloc} {:sourceloc_num 228} true;
  $$3[8] := v155;
  assert {:sourceloc} {:sourceloc_num 229} true;
  v156 := $$texComplexA[9];
  assert {:sourceloc} {:sourceloc_num 230} true;
  $$3[9] := v156;
  assert {:sourceloc} {:sourceloc_num 231} true;
  v157 := $$texComplexA[10];
  assert {:sourceloc} {:sourceloc_num 232} true;
  $$3[10] := v157;
  assert {:sourceloc} {:sourceloc_num 233} true;
  v158 := $$texComplexA[11];
  assert {:sourceloc} {:sourceloc_num 234} true;
  $$3[11] := v158;
  assert {:sourceloc} {:sourceloc_num 235} true;
  v159 := $$texComplexA[12];
  assert {:sourceloc} {:sourceloc_num 236} true;
  $$3[12] := v159;
  assert {:sourceloc} {:sourceloc_num 237} true;
  v160 := $$texComplexA[13];
  assert {:sourceloc} {:sourceloc_num 238} true;
  $$3[13] := v160;
  assert {:sourceloc} {:sourceloc_num 239} true;
  v161 := $$texComplexA[14];
  assert {:sourceloc} {:sourceloc_num 240} true;
  $$3[14] := v161;
  assert {:sourceloc} {:sourceloc_num 241} true;
  v162 := $$texComplexA[15];
  assert {:sourceloc} {:sourceloc_num 242} true;
  $$3[15] := v162;
  assert {:sourceloc} {:sourceloc_num 243} true;
  v163 := $$3[0];
  assert {:sourceloc} {:sourceloc_num 244} true;
  v164 := $$3[1];
  assert {:sourceloc} {:sourceloc_num 245} true;
  v165 := $$3[2];
  assert {:sourceloc} {:sourceloc_num 246} true;
  v166 := $$3[3];
  assert {:sourceloc} {:sourceloc_num 247} true;
  v167 := $$3[4];
  assert {:sourceloc} {:sourceloc_num 248} true;
  v168 := $$3[5];
  assert {:sourceloc} {:sourceloc_num 249} true;
  v169 := $$3[6];
  assert {:sourceloc} {:sourceloc_num 250} true;
  v170 := $$3[7];
  assert {:sourceloc} {:sourceloc_num 251} true;
  v171 := $$3[8];
  assert {:sourceloc} {:sourceloc_num 252} true;
  v172 := $$3[9];
  assert {:sourceloc} {:sourceloc_num 253} true;
  v173 := $$3[10];
  assert {:sourceloc} {:sourceloc_num 254} true;
  v174 := $$3[11];
  assert {:sourceloc} {:sourceloc_num 255} true;
  v175 := $$3[12];
  assert {:sourceloc} {:sourceloc_num 256} true;
  v176 := $$3[13];
  assert {:sourceloc} {:sourceloc_num 257} true;
  v177 := $$3[14];
  assert {:sourceloc} {:sourceloc_num 258} true;
  v178 := $$3[15];
  call {:sourceloc_num 259}   v179 := $_Z10tex1DfetchI6float2ET_7textureIS1_Li1EL19cudaTextureReadMode0EEi(BV_CONCAT(BV_CONCAT(BV_CONCAT(BV_CONCAT(BV_CONCAT(BV_CONCAT(BV_CONCAT(v170, v169), v168), v167), v166), v165), v164), v163), BV_CONCAT(BV_CONCAT(BV_CONCAT(v174, v173), v172), v171), BV_CONCAT(BV_CONCAT(BV_CONCAT(v178, v177), v176), v175), BV32_ADD(BV32_ADD(v11, BV32_MUL($3, BV32_ADD($DX, $padding))), BV32_UDIV($DX, 2)));
  assert {:sourceloc} {:sourceloc_num 260} true;
  $$D26[0] := BV_EXTRACT(v179, 32, 0);
  assert {:sourceloc} {:sourceloc_num 261} true;
  $$D26[1] := BV_EXTRACT(v179, 64, 32);
  assert {:sourceloc} {:sourceloc_num 262} true;
  $$twiddle7[0] := 0;
  assert {:sourceloc} {:sourceloc_num 263} true;
  $$twiddle7[1] := (if FLT32(0, $phaseBase) then 1065353216 else -1082130432);
  assert {:sourceloc} {:sourceloc_num 264} true;
  v180 := $$D15[0];
  assert {:sourceloc} {:sourceloc_num 265} true;
  v181 := $$D26[0];
  v182 := FADD32(v180, v181);
  assert {:sourceloc} {:sourceloc_num 266} true;
  v183 := $$D15[1];
  assert {:sourceloc} {:sourceloc_num 267} true;
  v184 := $$D26[1];
  v185 := FSUB32(v183, v184);
  assert {:sourceloc} {:sourceloc_num 268} true;
  v186 := $$D15[1];
  assert {:sourceloc} {:sourceloc_num 269} true;
  v187 := $$D26[1];
  v188 := FADD32(v186, v187);
  assert {:sourceloc} {:sourceloc_num 270} true;
  v189 := $$D15[0];
  assert {:sourceloc} {:sourceloc_num 271} true;
  v190 := $$D26[0];
  v191 := FSUB32(v189, v190);
  assert {:sourceloc} {:sourceloc_num 272} true;
  v192 := $$twiddle7[0];
  assert {:sourceloc} {:sourceloc_num 273} true;
  v193 := $$twiddle7[1];
  assert {:sourceloc} {:sourceloc_num 274} true;
  $$D15[0] := FSUB32(v182, FSUB32(FMUL32(v188, v192), FMUL32(v191, v193)));
  assert {:sourceloc} {:sourceloc_num 275} true;
  v194 := $$twiddle7[0];
  assert {:sourceloc} {:sourceloc_num 276} true;
  v195 := $$twiddle7[1];
  assert {:sourceloc} {:sourceloc_num 277} true;
  $$D15[1] := FADD32(FADD32(FMUL32(v191, v194), FMUL32(v188, v195)), v185);
  assert {:sourceloc} {:sourceloc_num 278} true;
  v196 := $$twiddle7[0];
  assert {:sourceloc} {:sourceloc_num 279} true;
  v197 := $$twiddle7[1];
  assert {:sourceloc} {:sourceloc_num 280} true;
  $$D26[0] := FADD32(v182, FSUB32(FMUL32(v188, v196), FMUL32(v191, v197)));
  assert {:sourceloc} {:sourceloc_num 281} true;
  v198 := $$twiddle7[0];
  assert {:sourceloc} {:sourceloc_num 282} true;
  v199 := $$twiddle7[1];
  assert {:sourceloc} {:sourceloc_num 283} true;
  $$D26[1] := FSUB32(FADD32(FMUL32(v191, v198), FMUL32(v188, v199)), v185);
  assert {:sourceloc} {:sourceloc_num 284} true;
  v200 := $$D15[0];
  assert {:sourceloc} {:sourceloc_num 285} true;
  $$d_Dst[BV32_MUL(v112, 2)] := v200;
  assert {:sourceloc} {:sourceloc_num 286} true;
  v201 := $$D15[1];
  assert {:sourceloc} {:sourceloc_num 287} true;
  $$d_Dst[BV32_ADD(BV32_MUL(v112, 2), 1)] := v201;
  assert {:sourceloc} {:sourceloc_num 288} true;
  v202 := $$D26[0];
  assert {:sourceloc} {:sourceloc_num 289} true;
  $$d_Dst[BV32_MUL(BV32_ADD(BV32_ADD(v12, BV32_MUL($4, $DX)), BV32_UDIV($DX, 2)), 2)] := v202;
  assert {:sourceloc} {:sourceloc_num 290} true;
  v203 := $$D26[1];
  assert {:sourceloc} {:sourceloc_num 291} true;
  $$d_Dst[BV32_ADD(BV32_MUL(BV32_ADD(BV32_ADD(v12, BV32_MUL($4, $DX)), BV32_UDIV($DX, 2)), 2), 1)] := v203;
  goto $17;
$17:
  assert {:block_sourceloc} {:sourceloc_num 292} true;
  return;
$truebb:
  assume {:partition} v1;
  assert {:block_sourceloc} {:sourceloc_num 293} true;
  goto $1;
$falsebb:
  assume {:partition} !v1;
  assert {:block_sourceloc} {:sourceloc_num 294} true;
  goto $2;
$truebb0:
  assume {:partition} v9;
  assert {:block_sourceloc} {:sourceloc_num 295} true;
  goto $3;
$falsebb0:
  assume {:partition} !v9;
  assert {:block_sourceloc} {:sourceloc_num 296} true;
  goto $5;
$truebb1:
  assume {:partition} v10;
  assert {:block_sourceloc} {:sourceloc_num 297} true;
  goto $4;
$falsebb1:
  assume {:partition} !v10;
  assert {:block_sourceloc} {:sourceloc_num 298} true;
  goto $5;
$truebb2:
  assume {:partition} v13;
  assert {:block_sourceloc} {:sourceloc_num 299} true;
  goto $6;
$falsebb2:
  assume {:partition} !v13;
  assert {:block_sourceloc} {:sourceloc_num 300} true;
  goto $7;
$truebb3:
  assume {:partition} v15;
  assert {:block_sourceloc} {:sourceloc_num 301} true;
  goto $8;
$falsebb3:
  assume {:partition} !v15;
  assert {:block_sourceloc} {:sourceloc_num 302} true;
  goto $9;
$truebb4:
  assume {:partition} v16;
  assert {:block_sourceloc} {:sourceloc_num 303} true;
  goto $10;
$falsebb4:
  assume {:partition} !v16;
  assert {:block_sourceloc} {:sourceloc_num 304} true;
  goto $11;
$truebb5:
  assume {:partition} v110;
  assert {:block_sourceloc} {:sourceloc_num 305} true;
  goto $12;
$falsebb5:
  assume {:partition} !v110;
  assert {:block_sourceloc} {:sourceloc_num 306} true;
  goto $17;
$truebb6:
  assume {:partition} v111;
  assert {:block_sourceloc} {:sourceloc_num 307} true;
  goto $13;
$falsebb6:
  assume {:partition} !v111;
  assert {:block_sourceloc} {:sourceloc_num 308} true;
  goto $14;
$truebb7:
  assume {:partition} v113;
  assert {:block_sourceloc} {:sourceloc_num 309} true;
  goto $15;
$falsebb7:
  assume {:partition} !v113;
  assert {:block_sourceloc} {:sourceloc_num 310} true;
  goto $16;
}
procedure {:source_name "_Z10tex1DfetchI6float2ET_7textureIS1_Li1EL19cudaTextureReadMode0EEi"} $_Z10tex1DfetchI6float2ET_7textureIS1_Li1EL19cudaTextureReadMode0EEi($0:int, $1:int, $2:int, $3:int) returns ($ret:int);
procedure {:source_name "sinf"} $sinf($0:int) returns ($ret:int);
procedure {:source_name "cosf"} $cosf($0:int) returns ($ret:int);
axiom (if group_size_y == 1 then 1 else 0) != 0;
axiom (if group_size_z == 1 then 1 else 0) != 0;
axiom (if num_groups_y == 1 then 1 else 0) != 0;
axiom (if num_groups_z == 1 then 1 else 0) != 0;
axiom (if group_size_x == 256 then 1 else 0) != 0;
axiom (if num_groups_x == 4096 then 1 else 0) != 0;
