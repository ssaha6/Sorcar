type _SIZE_T_TYPE = bv32;

procedure _ATOMIC_OP8(x : [int]int, y : int) returns (z : int, A : [int]int);
var {:source_name "pSobelOriginal"} {:global} $$pSobelOriginal : [int]int;
axiom {:array_info "$$pSobelOriginal"} {:global} {:elem_width 8} {:source_name "pSobelOriginal"} {:source_elem_width 8} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 8} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$pSobelOriginal : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 8} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$pSobelOriginal : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 8} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$pSobelOriginal : bool;

var {:source_name ""} $$0 : [int]int;
axiom {:array_info "$$0"} {:elem_width 8} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name ""} $$1 : [int]int;
axiom {:array_info "$$1"} {:elem_width 8} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name ""} $$2 : [int]int;
axiom {:array_info "$$2"} {:elem_width 8} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name ""} $$3 : [int]int;
axiom {:array_info "$$3"} {:elem_width 8} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name "tex"} {:global} $$tex : [int]int;
axiom {:array_info "$$tex"} {:global} {:elem_width 8} {:source_name "tex"} {:source_elem_width 96} {:source_dimensions "1"} true;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 96} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$tex : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 96} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$tex : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 96} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$tex : bool;

const _WATCHED_OFFSET : int;
const {:group_id_x} group_id_x : int;
const {:group_size_x} group_size_x : int;
const {:group_size_y} group_size_y : int;
const {:group_size_z} group_size_z : int;
const {:local_id_x} local_id_x : int;
const {:num_groups_x} num_groups_x : int;
const {:num_groups_y} num_groups_y : int;
const {:num_groups_z} num_groups_z : int;
function BV_CONCAT(int, int) : int;
function FLT32(int, int) : bool;
function FMUL32(int, int) : int;
function FP32_TO_UI8(int) : int;
function SI32_TO_FP32(int) : int;
function UI32_TO_FP32(int) : int;
function {:inline true} BV32_ADD(x : int, y : int) : int {
  x + y
}
function {:inline true} BV32_MUL(x : int, y : int) : int {
  x * y
}
function {:inline true} BV32_SLT(x : int, y : int) : bool {
  x < y
}
function {:inline true} BV32_UREM(x : int, y : int) : int {
  x mod y
}
function {:inline true} BV8_ZEXT32(x : int) : int {
  x
}
procedure {:source_name "SobelCopyImage"} {:kernel} $_Z14SobelCopyImagePhjiif($Pitch:int, $w:int, $h:int, $fscale:int)
requires {:sourceloc_num 0} (if $Pitch == 512 then 1 else 0) != 0;
requires {:sourceloc_num 1} (if $w == 512 then 1 else 0) != 0;
{
  var $i.0:int;
  var $0:int;
  var $1:int;
  var $2:int;
  var v0:bool;
  var v1:int;
  var v2:int;
  var v3:int;
  var v4:int;
  var v9:int;
  var v5:int;
  var v6:int;
  var v7:int;
  var v8:int;
  var v17:int;
  var v10:int;
  var v11:int;
  var v12:int;
  var v13:int;
  var v14:int;
  var v15:int;
  var v16:int;
  var v18:int;
  var v19:int;
  var v20:int;
  var v21:int;
  var v22:int;
  var v23:bool;
  var v24:int;
  var v25:int;
  var v26:int;
  var v27:int;
  var v32:int;
  var v28:int;
  var v29:int;
  var v30:int;
  var v31:int;
  var v40:int;
  var v33:int;
  var v34:int;
  var v35:int;
  var v36:int;
  var v37:int;
  var v38:int;
  var v39:int;
  var v41:int;
  var v42:int;
  var v43:int;
  var v44:int;
  var v45:int;
  var v46:bool;
  var v47:int;
  var v48:int;
  var v49:int;
  var v50:int;
  var v55:int;
  var v51:int;
  var v52:int;
  var v53:int;
  var v54:int;
  var v63:int;
  var v56:int;
  var v57:int;
  var v58:int;
  var v59:int;
  var v60:int;
  var v61:int;
  var v62:int;
  var v64:int;
  var v65:int;
  var v66:int;
  var v67:int;
  var v68:int;
  var v69:bool;
  var v70:int;
  var v71:int;
  var v72:int;
  var v73:int;
  var v78:int;
  var v74:int;
  var v75:int;
  var v76:int;
  var v77:int;
  var v86:int;
  var v79:int;
  var v80:int;
  var v81:int;
  var v82:int;
  var v83:int;
  var v84:int;
  var v85:int;
  var v87:int;
  var v88:int;
  var v89:int;
  var v90:int;
  var v91:int;
$0:
  assert {:block_sourceloc} {:sourceloc_num 2} true;
  $i.0 := local_id_x;
  goto $1;
$1:
  assert {:block_sourceloc} {:sourceloc_num 3} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 4} (if BV32_UREM($i.0, group_size_x) == local_id_x then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 5} (if (_WRITE_HAS_OCCURRED_$$pSobelOriginal ==> BV32_UREM(BV32_UREM(_WATCHED_OFFSET, $Pitch), group_size_x) == local_id_x) then 1 else 0) != 0;
  v0 := BV32_SLT($i.0, $w);
  goto $truebb, $falsebb;
$2:
  assert {:block_sourceloc} {:sourceloc_num 6} true;
  assert {:sourceloc} {:sourceloc_num 7} true;
  v1 := $$tex[0];
  assert {:sourceloc} {:sourceloc_num 8} true;
  $$0[0] := v1;
  assert {:sourceloc} {:sourceloc_num 9} true;
  v2 := $$tex[1];
  assert {:sourceloc} {:sourceloc_num 10} true;
  $$0[1] := v2;
  assert {:sourceloc} {:sourceloc_num 11} true;
  v3 := $$tex[2];
  assert {:sourceloc} {:sourceloc_num 12} true;
  $$0[2] := v3;
  assert {:sourceloc} {:sourceloc_num 13} true;
  v4 := $$tex[3];
  assert {:sourceloc} {:sourceloc_num 14} true;
  $$0[3] := v4;
  assert {:sourceloc} {:sourceloc_num 15} true;
  v5 := $$tex[4];
  assert {:sourceloc} {:sourceloc_num 16} true;
  $$0[4] := v5;
  assert {:sourceloc} {:sourceloc_num 17} true;
  v6 := $$tex[5];
  assert {:sourceloc} {:sourceloc_num 18} true;
  $$0[5] := v6;
  assert {:sourceloc} {:sourceloc_num 19} true;
  v7 := $$tex[6];
  assert {:sourceloc} {:sourceloc_num 20} true;
  $$0[6] := v7;
  assert {:sourceloc} {:sourceloc_num 21} true;
  v8 := $$tex[7];
  assert {:sourceloc} {:sourceloc_num 22} true;
  $$0[7] := v8;
  assert {:sourceloc} {:sourceloc_num 23} true;
  v9 := $$tex[8];
  assert {:sourceloc} {:sourceloc_num 24} true;
  $$0[8] := v9;
  assert {:sourceloc} {:sourceloc_num 25} true;
  v10 := $$tex[9];
  assert {:sourceloc} {:sourceloc_num 26} true;
  $$0[9] := v10;
  assert {:sourceloc} {:sourceloc_num 27} true;
  v11 := $$tex[10];
  assert {:sourceloc} {:sourceloc_num 28} true;
  $$0[10] := v11;
  assert {:sourceloc} {:sourceloc_num 29} true;
  v12 := $$tex[11];
  assert {:sourceloc} {:sourceloc_num 30} true;
  $$0[11] := v12;
  assert {:sourceloc} {:sourceloc_num 31} true;
  v13 := $$0[0];
  assert {:sourceloc} {:sourceloc_num 32} true;
  v14 := $$0[4];
  assert {:sourceloc} {:sourceloc_num 33} true;
  v15 := $$0[5];
  assert {:sourceloc} {:sourceloc_num 34} true;
  v16 := $$0[6];
  assert {:sourceloc} {:sourceloc_num 35} true;
  v17 := $$0[7];
  assert {:sourceloc} {:sourceloc_num 36} true;
  v18 := $$0[8];
  assert {:sourceloc} {:sourceloc_num 37} true;
  v19 := $$0[9];
  assert {:sourceloc} {:sourceloc_num 38} true;
  v20 := $$0[10];
  assert {:sourceloc} {:sourceloc_num 39} true;
  v21 := $$0[11];
  call {:sourceloc_num 40}   v22 := $_Z5tex2DIhET_7textureIS0_Li2EL19cudaTextureReadMode0EEff(v13, BV_CONCAT(BV_CONCAT(BV_CONCAT(v17, v16), v15), v14), BV_CONCAT(BV_CONCAT(BV_CONCAT(v21, v20), v19), v18), SI32_TO_FP32($i.0), UI32_TO_FP32(group_id_x));
  v23 := FLT32(FMUL32(SI32_TO_FP32(BV8_ZEXT32(v22)), $fscale), 0);
  goto $truebb0, $falsebb0;
$3:
  assert {:block_sourceloc} {:sourceloc_num 41} true;
  $0 := 0;
  goto $5;
$4:
  assert {:block_sourceloc} {:sourceloc_num 42} true;
  assert {:sourceloc} {:sourceloc_num 43} true;
  v24 := $$tex[0];
  assert {:sourceloc} {:sourceloc_num 44} true;
  $$1[0] := v24;
  assert {:sourceloc} {:sourceloc_num 45} true;
  v25 := $$tex[1];
  assert {:sourceloc} {:sourceloc_num 46} true;
  $$1[1] := v25;
  assert {:sourceloc} {:sourceloc_num 47} true;
  v26 := $$tex[2];
  assert {:sourceloc} {:sourceloc_num 48} true;
  $$1[2] := v26;
  assert {:sourceloc} {:sourceloc_num 49} true;
  v27 := $$tex[3];
  assert {:sourceloc} {:sourceloc_num 50} true;
  $$1[3] := v27;
  assert {:sourceloc} {:sourceloc_num 51} true;
  v28 := $$tex[4];
  assert {:sourceloc} {:sourceloc_num 52} true;
  $$1[4] := v28;
  assert {:sourceloc} {:sourceloc_num 53} true;
  v29 := $$tex[5];
  assert {:sourceloc} {:sourceloc_num 54} true;
  $$1[5] := v29;
  assert {:sourceloc} {:sourceloc_num 55} true;
  v30 := $$tex[6];
  assert {:sourceloc} {:sourceloc_num 56} true;
  $$1[6] := v30;
  assert {:sourceloc} {:sourceloc_num 57} true;
  v31 := $$tex[7];
  assert {:sourceloc} {:sourceloc_num 58} true;
  $$1[7] := v31;
  assert {:sourceloc} {:sourceloc_num 59} true;
  v32 := $$tex[8];
  assert {:sourceloc} {:sourceloc_num 60} true;
  $$1[8] := v32;
  assert {:sourceloc} {:sourceloc_num 61} true;
  v33 := $$tex[9];
  assert {:sourceloc} {:sourceloc_num 62} true;
  $$1[9] := v33;
  assert {:sourceloc} {:sourceloc_num 63} true;
  v34 := $$tex[10];
  assert {:sourceloc} {:sourceloc_num 64} true;
  $$1[10] := v34;
  assert {:sourceloc} {:sourceloc_num 65} true;
  v35 := $$tex[11];
  assert {:sourceloc} {:sourceloc_num 66} true;
  $$1[11] := v35;
  assert {:sourceloc} {:sourceloc_num 67} true;
  v36 := $$1[0];
  assert {:sourceloc} {:sourceloc_num 68} true;
  v37 := $$1[4];
  assert {:sourceloc} {:sourceloc_num 69} true;
  v38 := $$1[5];
  assert {:sourceloc} {:sourceloc_num 70} true;
  v39 := $$1[6];
  assert {:sourceloc} {:sourceloc_num 71} true;
  v40 := $$1[7];
  assert {:sourceloc} {:sourceloc_num 72} true;
  v41 := $$1[8];
  assert {:sourceloc} {:sourceloc_num 73} true;
  v42 := $$1[9];
  assert {:sourceloc} {:sourceloc_num 74} true;
  v43 := $$1[10];
  assert {:sourceloc} {:sourceloc_num 75} true;
  v44 := $$1[11];
  call {:sourceloc_num 76}   v45 := $_Z5tex2DIhET_7textureIS0_Li2EL19cudaTextureReadMode0EEff(v36, BV_CONCAT(BV_CONCAT(BV_CONCAT(v40, v39), v38), v37), BV_CONCAT(BV_CONCAT(BV_CONCAT(v44, v43), v42), v41), SI32_TO_FP32($i.0), UI32_TO_FP32(group_id_x));
  $0 := FMUL32(SI32_TO_FP32(BV8_ZEXT32(v45)), $fscale);
  goto $5;
$5:
  assert {:block_sourceloc} {:sourceloc_num 77} true;
  v46 := FLT32($0, 1132396544);
  goto $truebb1, $falsebb1;
$6:
  assert {:block_sourceloc} {:sourceloc_num 78} true;
  assert {:sourceloc} {:sourceloc_num 79} true;
  v47 := $$tex[0];
  assert {:sourceloc} {:sourceloc_num 80} true;
  $$2[0] := v47;
  assert {:sourceloc} {:sourceloc_num 81} true;
  v48 := $$tex[1];
  assert {:sourceloc} {:sourceloc_num 82} true;
  $$2[1] := v48;
  assert {:sourceloc} {:sourceloc_num 83} true;
  v49 := $$tex[2];
  assert {:sourceloc} {:sourceloc_num 84} true;
  $$2[2] := v49;
  assert {:sourceloc} {:sourceloc_num 85} true;
  v50 := $$tex[3];
  assert {:sourceloc} {:sourceloc_num 86} true;
  $$2[3] := v50;
  assert {:sourceloc} {:sourceloc_num 87} true;
  v51 := $$tex[4];
  assert {:sourceloc} {:sourceloc_num 88} true;
  $$2[4] := v51;
  assert {:sourceloc} {:sourceloc_num 89} true;
  v52 := $$tex[5];
  assert {:sourceloc} {:sourceloc_num 90} true;
  $$2[5] := v52;
  assert {:sourceloc} {:sourceloc_num 91} true;
  v53 := $$tex[6];
  assert {:sourceloc} {:sourceloc_num 92} true;
  $$2[6] := v53;
  assert {:sourceloc} {:sourceloc_num 93} true;
  v54 := $$tex[7];
  assert {:sourceloc} {:sourceloc_num 94} true;
  $$2[7] := v54;
  assert {:sourceloc} {:sourceloc_num 95} true;
  v55 := $$tex[8];
  assert {:sourceloc} {:sourceloc_num 96} true;
  $$2[8] := v55;
  assert {:sourceloc} {:sourceloc_num 97} true;
  v56 := $$tex[9];
  assert {:sourceloc} {:sourceloc_num 98} true;
  $$2[9] := v56;
  assert {:sourceloc} {:sourceloc_num 99} true;
  v57 := $$tex[10];
  assert {:sourceloc} {:sourceloc_num 100} true;
  $$2[10] := v57;
  assert {:sourceloc} {:sourceloc_num 101} true;
  v58 := $$tex[11];
  assert {:sourceloc} {:sourceloc_num 102} true;
  $$2[11] := v58;
  assert {:sourceloc} {:sourceloc_num 103} true;
  v59 := $$2[0];
  assert {:sourceloc} {:sourceloc_num 104} true;
  v60 := $$2[4];
  assert {:sourceloc} {:sourceloc_num 105} true;
  v61 := $$2[5];
  assert {:sourceloc} {:sourceloc_num 106} true;
  v62 := $$2[6];
  assert {:sourceloc} {:sourceloc_num 107} true;
  v63 := $$2[7];
  assert {:sourceloc} {:sourceloc_num 108} true;
  v64 := $$2[8];
  assert {:sourceloc} {:sourceloc_num 109} true;
  v65 := $$2[9];
  assert {:sourceloc} {:sourceloc_num 110} true;
  v66 := $$2[10];
  assert {:sourceloc} {:sourceloc_num 111} true;
  v67 := $$2[11];
  call {:sourceloc_num 112}   v68 := $_Z5tex2DIhET_7textureIS0_Li2EL19cudaTextureReadMode0EEff(v59, BV_CONCAT(BV_CONCAT(BV_CONCAT(v63, v62), v61), v60), BV_CONCAT(BV_CONCAT(BV_CONCAT(v67, v66), v65), v64), SI32_TO_FP32($i.0), UI32_TO_FP32(group_id_x));
  v69 := FLT32(FMUL32(SI32_TO_FP32(BV8_ZEXT32(v68)), $fscale), 0);
  goto $truebb2, $falsebb2;
$7:
  assert {:block_sourceloc} {:sourceloc_num 113} true;
  $1 := 0;
  goto $9;
$8:
  assert {:block_sourceloc} {:sourceloc_num 114} true;
  assert {:sourceloc} {:sourceloc_num 115} true;
  v70 := $$tex[0];
  assert {:sourceloc} {:sourceloc_num 116} true;
  $$3[0] := v70;
  assert {:sourceloc} {:sourceloc_num 117} true;
  v71 := $$tex[1];
  assert {:sourceloc} {:sourceloc_num 118} true;
  $$3[1] := v71;
  assert {:sourceloc} {:sourceloc_num 119} true;
  v72 := $$tex[2];
  assert {:sourceloc} {:sourceloc_num 120} true;
  $$3[2] := v72;
  assert {:sourceloc} {:sourceloc_num 121} true;
  v73 := $$tex[3];
  assert {:sourceloc} {:sourceloc_num 122} true;
  $$3[3] := v73;
  assert {:sourceloc} {:sourceloc_num 123} true;
  v74 := $$tex[4];
  assert {:sourceloc} {:sourceloc_num 124} true;
  $$3[4] := v74;
  assert {:sourceloc} {:sourceloc_num 125} true;
  v75 := $$tex[5];
  assert {:sourceloc} {:sourceloc_num 126} true;
  $$3[5] := v75;
  assert {:sourceloc} {:sourceloc_num 127} true;
  v76 := $$tex[6];
  assert {:sourceloc} {:sourceloc_num 128} true;
  $$3[6] := v76;
  assert {:sourceloc} {:sourceloc_num 129} true;
  v77 := $$tex[7];
  assert {:sourceloc} {:sourceloc_num 130} true;
  $$3[7] := v77;
  assert {:sourceloc} {:sourceloc_num 131} true;
  v78 := $$tex[8];
  assert {:sourceloc} {:sourceloc_num 132} true;
  $$3[8] := v78;
  assert {:sourceloc} {:sourceloc_num 133} true;
  v79 := $$tex[9];
  assert {:sourceloc} {:sourceloc_num 134} true;
  $$3[9] := v79;
  assert {:sourceloc} {:sourceloc_num 135} true;
  v80 := $$tex[10];
  assert {:sourceloc} {:sourceloc_num 136} true;
  $$3[10] := v80;
  assert {:sourceloc} {:sourceloc_num 137} true;
  v81 := $$tex[11];
  assert {:sourceloc} {:sourceloc_num 138} true;
  $$3[11] := v81;
  assert {:sourceloc} {:sourceloc_num 139} true;
  v82 := $$3[0];
  assert {:sourceloc} {:sourceloc_num 140} true;
  v83 := $$3[4];
  assert {:sourceloc} {:sourceloc_num 141} true;
  v84 := $$3[5];
  assert {:sourceloc} {:sourceloc_num 142} true;
  v85 := $$3[6];
  assert {:sourceloc} {:sourceloc_num 143} true;
  v86 := $$3[7];
  assert {:sourceloc} {:sourceloc_num 144} true;
  v87 := $$3[8];
  assert {:sourceloc} {:sourceloc_num 145} true;
  v88 := $$3[9];
  assert {:sourceloc} {:sourceloc_num 146} true;
  v89 := $$3[10];
  assert {:sourceloc} {:sourceloc_num 147} true;
  v90 := $$3[11];
  call {:sourceloc_num 148}   v91 := $_Z5tex2DIhET_7textureIS0_Li2EL19cudaTextureReadMode0EEff(v82, BV_CONCAT(BV_CONCAT(BV_CONCAT(v86, v85), v84), v83), BV_CONCAT(BV_CONCAT(BV_CONCAT(v90, v89), v88), v87), SI32_TO_FP32($i.0), UI32_TO_FP32(group_id_x));
  $1 := FMUL32(SI32_TO_FP32(BV8_ZEXT32(v91)), $fscale);
  goto $9;
$9:
  assert {:block_sourceloc} {:sourceloc_num 149} true;
  $2 := $1;
  goto $11;
$10:
  assert {:block_sourceloc} {:sourceloc_num 150} true;
  $2 := 1132396544;
  goto $11;
$11:
  assert {:block_sourceloc} {:sourceloc_num 151} true;
  assert {:sourceloc} {:sourceloc_num 152} true;
  $$pSobelOriginal[BV32_ADD(BV32_MUL(group_id_x, $Pitch), $i.0)] := FP32_TO_UI8($2);
  goto $12;
$12:
  assert {:block_sourceloc} {:sourceloc_num 153} true;
  $i.0 := BV32_ADD($i.0, group_size_x);
  goto $1;
$13:
  assert {:block_sourceloc} {:sourceloc_num 154} true;
  return;
$truebb:
  assume {:partition} v0;
  assert {:block_sourceloc} {:sourceloc_num 155} true;
  goto $2;
$falsebb:
  assume {:partition} !v0;
  assert {:block_sourceloc} {:sourceloc_num 156} true;
  goto $13;
$truebb0:
  assume {:partition} v23;
  assert {:block_sourceloc} {:sourceloc_num 157} true;
  goto $3;
$falsebb0:
  assume {:partition} !v23;
  assert {:block_sourceloc} {:sourceloc_num 158} true;
  goto $4;
$truebb1:
  assume {:partition} v46;
  assert {:block_sourceloc} {:sourceloc_num 159} true;
  goto $6;
$falsebb1:
  assume {:partition} !v46;
  assert {:block_sourceloc} {:sourceloc_num 160} true;
  goto $10;
$truebb2:
  assume {:partition} v69;
  assert {:block_sourceloc} {:sourceloc_num 161} true;
  goto $7;
$falsebb2:
  assume {:partition} !v69;
  assert {:block_sourceloc} {:sourceloc_num 162} true;
  goto $8;
}
procedure {:source_name "_Z5tex2DIhET_7textureIS0_Li2EL19cudaTextureReadMode0EEff"} $_Z5tex2DIhET_7textureIS0_Li2EL19cudaTextureReadMode0EEff($0:int, $1:int, $2:int, $3:int, $4:int) returns ($ret:int);
axiom (if group_size_y == 1 then 1 else 0) != 0;
axiom (if group_size_z == 1 then 1 else 0) != 0;
axiom (if num_groups_y == 1 then 1 else 0) != 0;
axiom (if num_groups_z == 1 then 1 else 0) != 0;
axiom (if group_size_x == 384 then 1 else 0) != 0;
axiom (if num_groups_x == 512 then 1 else 0) != 0;
