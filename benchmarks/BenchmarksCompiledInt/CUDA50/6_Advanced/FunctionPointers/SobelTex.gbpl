type _SIZE_T_TYPE = bv32;

procedure _ATOMIC_OP8(x : [int]int, y : int) returns (z : int, A : [int]int);
procedure _ATOMIC_OP32(x : [int]int, y : int) returns (z : int, A : [int]int);
var {:source_name "pSobelOriginal"} {:global} $$pSobelOriginal : [int]int;
axiom {:array_info "$$pSobelOriginal"} {:global} {:elem_width 8} {:source_name "pSobelOriginal"} {:source_elem_width 8} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 8} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$pSobelOriginal : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 8} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$pSobelOriginal : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 8} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$pSobelOriginal : bool;

var {:source_name ""} $$0 : [int]int;
axiom {:array_info "$$0"} {:elem_width 8} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name ""} $$1 : [int]int;
axiom {:array_info "$$1"} {:elem_width 8} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name ""} $$2 : [int]int;
axiom {:array_info "$$2"} {:elem_width 8} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name ""} $$3 : [int]int;
axiom {:array_info "$$3"} {:elem_width 8} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name ""} $$4 : [int]int;
axiom {:array_info "$$4"} {:elem_width 8} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name ""} $$5 : [int]int;
axiom {:array_info "$$5"} {:elem_width 8} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name ""} $$6 : [int]int;
axiom {:array_info "$$6"} {:elem_width 8} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name ""} $$7 : [int]int;
axiom {:array_info "$$7"} {:elem_width 8} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name ""} $$8 : [int]int;
axiom {:array_info "$$8"} {:elem_width 8} {:source_name ""} {:source_elem_width 96} {:source_dimensions "1"} true;

var {:source_name "blockFunction_table"} {:global} $$blockFunction_table : [int]functionPtr;
axiom {:array_info "$$blockFunction_table"} {:global} {:elem_width 32} {:source_name "blockFunction_table"} {:source_elem_width 32} {:source_dimensions "2"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$blockFunction_table : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$blockFunction_table : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$blockFunction_table : bool;

var {:source_name "tex"} {:global} $$tex : [int]int;
axiom {:array_info "$$tex"} {:global} {:elem_width 8} {:source_name "tex"} {:source_elem_width 96} {:source_dimensions "1"} true;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 96} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$tex : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 96} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$tex : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 96} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$tex : bool;

const _WATCHED_OFFSET : int;
type functionPtr = bv3;
const $functionId$$_Z12ComputeSobelhhhhhhhhhf : functionPtr;
axiom $functionId$$_Z12ComputeSobelhhhhhhhhhf == 1bv3;
const $functionId$$abs : functionPtr;
axiom $functionId$$abs == 2bv3;
const $functionId$$_Z10ComputeBoxhhhhhhhhhf : functionPtr;
axiom $functionId$$_Z10ComputeBoxhhhhhhhhhf == 3bv3;
const $functionId$$_Z9Thresholdhf : functionPtr;
axiom $functionId$$_Z9Thresholdhf == 4bv3;
const $functionId$$_Z8SobelTexPhjiifiPFhhfE : functionPtr;
axiom $functionId$$_Z8SobelTexPhjiifiPFhhfE == 5bv3;
const $functionId$$_Z5tex2DIhET_7textureIS0_Li2EL19cudaTextureReadMode0EEff : functionPtr;
axiom $functionId$$_Z5tex2DIhET_7textureIS0_Li2EL19cudaTextureReadMode0EEff == 6bv3;
const $functionId$$null$ : functionPtr;
axiom $functionId$$null$ == 0bv3;

const {:group_id_x} group_id_x : int;
const {:group_size_x} group_size_x : int;
const {:group_size_y} group_size_y : int;
const {:group_size_z} group_size_z : int;
const {:local_id_x} local_id_x : int;
const {:num_groups_x} num_groups_x : int;
const {:num_groups_y} num_groups_y : int;
const {:num_groups_z} num_groups_z : int;
function BV16_SEXT32(int) : int;
function BV_CONCAT(int, int) : int;
function BV_EXTRACT(int, int, int) : int;
function FADD32(int, int) : int;
function FLT32(int, int) : bool;
function FMUL32(int, int) : int;
function FP32_TO_SI16(int) : int;
function FSUB32(int, int) : int;
function SI16_TO_FP32(int) : int;
function SI32_TO_FP32(int) : int;
function UI32_TO_FP32(int) : int;
function {:inline true} BV1_ZEXT32(x : int) : int {
  x
}
function {:inline true} BV32_ADD(x : int, y : int) : int {
  x + y
}
function {:inline true} BV32_MUL(x : int, y : int) : int {
  x * y
}
function {:inline true} BV32_OR(x : int, y : int) : int {
  if x == y then x else (if x == 0 then y else (if y == 0 then x else BV32_OR_UF(x, y)))
}
function BV32_OR_UF(int, int) : int;
function {:inline true} BV32_SDIV(x : int, y : int) : int {
  x div y
}
function {:inline true} BV32_SGT(x : int, y : int) : bool {
  x > y
}
function {:inline true} BV32_SLT(x : int, y : int) : bool {
  x < y
}
function {:inline true} BV32_SUB(x : int, y : int) : int {
  x - y
}
function {:inline true} BV32_UDIV(x : int, y : int) : int {
  x div y
}
function {:inline true} BV32_UREM(x : int, y : int) : int {
  x mod y
}
function {:inline true} BV8_ZEXT32(x : int) : int {
  x
}
procedure {:source_name "ComputeSobel"} $_Z12ComputeSobelhhhhhhhhhf($ul:int, $um:int, $ur:int, $ml:int, $mm:int, $mr:int, $ll:int, $lm:int, $lr:int, $fScale:int) returns ($ret:int)
{
  var $0:int;
  var $1:int;
  var v0:int;
  var v1:int;
  var v2:int;
  var v3:bool;
  var v4:bool;
$0:
  assert {:block_sourceloc} {:sourceloc_num 0} true;
  call {:sourceloc_num 1}   v0 := $abs(SI32_TO_FP32(BV16_SEXT32(BV_EXTRACT(BV32_SUB(BV32_SUB(BV32_SUB(BV32_ADD(BV32_ADD(BV8_ZEXT32($ur), BV32_MUL(2, BV8_ZEXT32($mr))), BV8_ZEXT32($lr)), BV8_ZEXT32($ul)), BV32_MUL(2, BV8_ZEXT32($ml))), BV8_ZEXT32($ll)), 16, 0))));
  call {:sourceloc_num 2}   v1 := $abs(SI32_TO_FP32(BV16_SEXT32(BV_EXTRACT(BV32_SUB(BV32_SUB(BV32_SUB(BV32_ADD(BV32_ADD(BV8_ZEXT32($ul), BV32_MUL(2, BV8_ZEXT32($um))), BV8_ZEXT32($ur)), BV8_ZEXT32($ll)), BV32_MUL(2, BV8_ZEXT32($lm))), BV8_ZEXT32($lr)), 16, 0))));
  v2 := FP32_TO_SI16(FMUL32($fScale, FADD32(v0, v1)));
  v3 := BV32_SLT(BV16_SEXT32(v2), 0);
  goto $truebb, $falsebb;
$1:
  assert {:block_sourceloc} {:sourceloc_num 3} true;
  $0 := 0;
  goto $6;
$2:
  assert {:block_sourceloc} {:sourceloc_num 4} true;
  v4 := BV32_SGT(BV16_SEXT32(v2), 255);
  goto $truebb0, $falsebb0;
$3:
  assert {:block_sourceloc} {:sourceloc_num 5} true;
  $1 := 255;
  goto $5;
$4:
  assert {:block_sourceloc} {:sourceloc_num 6} true;
  $1 := BV16_SEXT32(v2);
  goto $5;
$5:
  assert {:block_sourceloc} {:sourceloc_num 7} true;
  $0 := $1;
  goto $6;
$6:
  assert {:block_sourceloc} {:sourceloc_num 8} true;
  $ret := BV_EXTRACT($0, 8, 0);
  return;
$truebb:
  assume {:partition} v3;
  assert {:block_sourceloc} {:sourceloc_num 9} true;
  goto $1;
$falsebb:
  assume {:partition} !v3;
  assert {:block_sourceloc} {:sourceloc_num 10} true;
  goto $2;
$truebb0:
  assume {:partition} v4;
  assert {:block_sourceloc} {:sourceloc_num 11} true;
  goto $3;
$falsebb0:
  assume {:partition} !v4;
  assert {:block_sourceloc} {:sourceloc_num 12} true;
  goto $4;
}
procedure {:source_name "abs"} $abs($0:int) returns ($ret:int);
procedure {:source_name "ComputeBox"} $_Z10ComputeBoxhhhhhhhhhf($ul:int, $um:int, $ur:int, $ml:int, $mm:int, $mr:int, $ll:int, $lm:int, $lr:int, $fscale:int) returns ($ret:int)
{
  var $0:int;
  var $1:int;
  var v0:int;
  var v1:bool;
  var v2:bool;
$0:
  assert {:block_sourceloc} {:sourceloc_num 13} true;
  v0 := FP32_TO_SI16(FMUL32(SI16_TO_FP32(BV_EXTRACT(BV32_SDIV(BV16_SEXT32(BV_EXTRACT(BV32_ADD(BV32_ADD(BV32_ADD(BV32_ADD(BV32_ADD(BV32_ADD(BV32_ADD(BV32_ADD(BV8_ZEXT32($ul), BV8_ZEXT32($um)), BV8_ZEXT32($ur)), BV8_ZEXT32($ml)), BV8_ZEXT32($mm)), BV8_ZEXT32($mr)), BV8_ZEXT32($ll)), BV8_ZEXT32($lm)), BV8_ZEXT32($lr)), 16, 0)), 9), 16, 0)), $fscale));
  v1 := BV32_SLT(BV16_SEXT32(v0), 0);
  goto $truebb, $falsebb;
$1:
  assert {:block_sourceloc} {:sourceloc_num 14} true;
  $0 := 0;
  goto $6;
$2:
  assert {:block_sourceloc} {:sourceloc_num 15} true;
  v2 := BV32_SGT(BV16_SEXT32(v0), 255);
  goto $truebb0, $falsebb0;
$3:
  assert {:block_sourceloc} {:sourceloc_num 16} true;
  $1 := 255;
  goto $5;
$4:
  assert {:block_sourceloc} {:sourceloc_num 17} true;
  $1 := BV16_SEXT32(v0);
  goto $5;
$5:
  assert {:block_sourceloc} {:sourceloc_num 18} true;
  $0 := $1;
  goto $6;
$6:
  assert {:block_sourceloc} {:sourceloc_num 19} true;
  $ret := BV_EXTRACT($0, 8, 0);
  return;
$truebb:
  assume {:partition} v1;
  assert {:block_sourceloc} {:sourceloc_num 20} true;
  goto $1;
$falsebb:
  assume {:partition} !v1;
  assert {:block_sourceloc} {:sourceloc_num 21} true;
  goto $2;
$truebb0:
  assume {:partition} v2;
  assert {:block_sourceloc} {:sourceloc_num 22} true;
  goto $3;
$falsebb0:
  assume {:partition} !v2;
  assert {:block_sourceloc} {:sourceloc_num 23} true;
  goto $4;
}
procedure {:source_name "Threshold"} $_Z9Thresholdhf($in:int, $thresh:int) returns ($ret:int)
{
  var $.0:int;
  var v0:bool;
$0:
  assert {:block_sourceloc} {:sourceloc_num 24} true;
  v0 := FLT32($thresh, SI32_TO_FP32(BV8_ZEXT32($in)));
  goto $truebb, $falsebb;
$1:
  assert {:block_sourceloc} {:sourceloc_num 25} true;
  $.0 := -1;
  goto $3;
$2:
  assert {:block_sourceloc} {:sourceloc_num 26} true;
  $.0 := 0;
  goto $3;
$3:
  assert {:block_sourceloc} {:sourceloc_num 27} true;
  $ret := $.0;
  return;
$truebb:
  assume {:partition} v0;
  assert {:block_sourceloc} {:sourceloc_num 28} true;
  goto $1;
$falsebb:
  assume {:partition} !v0;
  assert {:block_sourceloc} {:sourceloc_num 29} true;
  goto $2;
}
procedure {:source_name "SobelTex"} {:kernel} $_Z8SobelTexPhjiifiPFhhfE($Pitch:int, $w:int, $h:int, $fScale:int, $blockOperation:int, $pPointOperation:functionPtr)
requires {:sourceloc_num 30} (if $Pitch == 512 then 1 else 0) != 0;
requires {:sourceloc_num 31} (if $w == 512 then 1 else 0) != 0;
requires {:sourceloc_num 32} (if $h == 512 then 1 else 0) != 0;
requires {:sourceloc_num 33} (if BV32_OR(BV1_ZEXT32((if $blockOperation == 0 then 1 else 0)), BV1_ZEXT32((if $blockOperation == 1 then 1 else 0))) != 0 then 1 else 0) != 0;
requires {:sourceloc_num 34} (if $$blockFunction_table[0] == $functionId$$_Z12ComputeSobelhhhhhhhhhf then 1 else 0) != 0;
requires {:sourceloc_num 35} (if $$blockFunction_table[1] == $functionId$$_Z10ComputeBoxhhhhhhhhhf then 1 else 0) != 0;
requires {:sourceloc_num 36} (if BV32_OR(BV1_ZEXT32((if $pPointOperation == $functionId$$_Z9Thresholdhf then 1 else 0)), BV1_ZEXT32((if $pPointOperation == $functionId$$null$ then 1 else 0))) != 0 then 1 else 0) != 0;
{
  var $i.0:int;
  var $tmp.0:int;
  var v135:int;
  var v136:int;
  var v137:int;
  var v138:int;
  var v0:bool;
  var v1:int;
  var v2:int;
  var v3:int;
  var v4:int;
  var v9:int;
  var v5:int;
  var v6:int;
  var v7:int;
  var v8:int;
  var v15:int;
  var v10:int;
  var v11:int;
  var v12:int;
  var v13:int;
  var v14:int;
  var v16:int;
  var v17:int;
  var v18:int;
  var v19:int;
  var v20:int;
  var v21:int;
  var v22:int;
  var v34:int;
  var v23:int;
  var v24:int;
  var v25:int;
  var v26:int;
  var v27:int;
  var v28:int;
  var v29:int;
  var v30:int;
  var v31:int;
  var v32:int;
  var v33:int;
  var v66:int;
  var v35:int;
  var v36:int;
  var v37:int;
  var v38:int;
  var v39:int;
  var v40:int;
  var v41:int;
  var v42:int;
  var v43:int;
  var v44:int;
  var v45:int;
  var v46:int;
  var v47:int;
  var v48:int;
  var v49:int;
  var v50:int;
  var v51:int;
  var v52:int;
  var v53:int;
  var v54:int;
  var v55:int;
  var v56:int;
  var v57:int;
  var v58:int;
  var v59:int;
  var v60:int;
  var v61:int;
  var v62:int;
  var v63:int;
  var v64:int;
  var v65:int;
  var v132:int;
  var v133:int;
  var v134:int;
  var v67:int;
  var v68:int;
  var v69:int;
  var v70:int;
  var v71:int;
  var v72:int;
  var v73:int;
  var v74:int;
  var v75:int;
  var v76:int;
  var v77:int;
  var v78:int;
  var v79:int;
  var v80:int;
  var v81:int;
  var v82:int;
  var v83:int;
  var v84:int;
  var v85:int;
  var v86:int;
  var v87:int;
  var v88:int;
  var v89:int;
  var v90:int;
  var v91:int;
  var v92:int;
  var v93:int;
  var v94:int;
  var v95:int;
  var v96:int;
  var v97:int;
  var v98:int;
  var v99:int;
  var v100:int;
  var v101:int;
  var v102:int;
  var v103:int;
  var v104:int;
  var v105:int;
  var v106:int;
  var v107:int;
  var v108:int;
  var v109:int;
  var v110:int;
  var v111:int;
  var v112:int;
  var v113:int;
  var v114:int;
  var v115:int;
  var v116:int;
  var v117:int;
  var v118:int;
  var v119:int;
  var v120:int;
  var v121:int;
  var v122:int;
  var v123:int;
  var v124:int;
  var v125:int;
  var v126:int;
  var v127:int;
  var v128:int;
  var v129:int;
  var v130:int;
  var v131:int;
  var v139:int;
  var v140:int;
  var v141:int;
  var v142:int;
  var v143:int;
  var v144:int;
  var v145:int;
  var v146:int;
  var v147:int;
  var v148:int;
  var v149:int;
  var v150:int;
  var v151:int;
  var v152:int;
  var v153:int;
  var v154:int;
  var v155:int;
  var v156:int;
  var v157:int;
  var v158:int;
  var v159:int;
  var v160:int;
  var v161:int;
  var v162:int;
  var v163:int;
  var v164:int;
  var v165:int;
  var v166:int;
  var v167:int;
  var v168:int;
  var v169:int;
  var v170:int;
  var v171:int;
  var v172:int;
  var v173:int;
  var v174:int;
  var v175:int;
  var v176:int;
  var v177:int;
  var v178:int;
  var v179:int;
  var v180:int;
  var v181:int;
  var v182:int;
  var v183:int;
  var v184:int;
  var v185:int;
  var v186:int;
  var v187:int;
  var v188:int;
  var v189:int;
  var v190:int;
  var v191:int;
  var v192:int;
  var v193:int;
  var v194:int;
  var v195:int;
  var v196:int;
  var v197:int;
  var v198:int;
  var v199:functionPtr;
  var v200:int;
  var v201:bool;
  var v202:int;
$0:
  assert {:block_sourceloc} {:sourceloc_num 37} true;
  $i.0 := local_id_x;
  goto $1;
$1:
  assert {:block_sourceloc} {:sourceloc_num 38} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 39} (if BV32_UREM($i.0, group_size_x) == local_id_x then 1 else 0) != 0;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 40} (if (_WRITE_HAS_OCCURRED_$$pSobelOriginal ==> BV32_UREM(BV32_UREM(BV32_UDIV(_WATCHED_OFFSET, 1), $Pitch), group_size_x) == local_id_x) then 1 else 0) != 0;
  v0 := BV32_SLT($i.0, $w);
  goto $truebb, $falsebb;
$2:
  assert {:block_sourceloc} {:sourceloc_num 41} true;
  assert {:sourceloc} {:sourceloc_num 42} true;
  v1 := $$tex[0];
  assert {:sourceloc} {:sourceloc_num 43} true;
  $$0[0] := v1;
  assert {:sourceloc} {:sourceloc_num 44} true;
  v2 := $$tex[1];
  assert {:sourceloc} {:sourceloc_num 45} true;
  $$0[1] := v2;
  assert {:sourceloc} {:sourceloc_num 46} true;
  v3 := $$tex[2];
  assert {:sourceloc} {:sourceloc_num 47} true;
  $$0[2] := v3;
  assert {:sourceloc} {:sourceloc_num 48} true;
  v4 := $$tex[3];
  assert {:sourceloc} {:sourceloc_num 49} true;
  $$0[3] := v4;
  assert {:sourceloc} {:sourceloc_num 50} true;
  v5 := $$tex[4];
  assert {:sourceloc} {:sourceloc_num 51} true;
  $$0[4] := v5;
  assert {:sourceloc} {:sourceloc_num 52} true;
  v6 := $$tex[5];
  assert {:sourceloc} {:sourceloc_num 53} true;
  $$0[5] := v6;
  assert {:sourceloc} {:sourceloc_num 54} true;
  v7 := $$tex[6];
  assert {:sourceloc} {:sourceloc_num 55} true;
  $$0[6] := v7;
  assert {:sourceloc} {:sourceloc_num 56} true;
  v8 := $$tex[7];
  assert {:sourceloc} {:sourceloc_num 57} true;
  $$0[7] := v8;
  assert {:sourceloc} {:sourceloc_num 58} true;
  v9 := $$tex[8];
  assert {:sourceloc} {:sourceloc_num 59} true;
  $$0[8] := v9;
  assert {:sourceloc} {:sourceloc_num 60} true;
  v10 := $$tex[9];
  assert {:sourceloc} {:sourceloc_num 61} true;
  $$0[9] := v10;
  assert {:sourceloc} {:sourceloc_num 62} true;
  v11 := $$tex[10];
  assert {:sourceloc} {:sourceloc_num 63} true;
  $$0[10] := v11;
  assert {:sourceloc} {:sourceloc_num 64} true;
  v12 := $$tex[11];
  assert {:sourceloc} {:sourceloc_num 65} true;
  $$0[11] := v12;
  assert {:sourceloc} {:sourceloc_num 66} true;
  v13 := $$0[0];
  assert {:sourceloc} {:sourceloc_num 67} true;
  v14 := $$0[4];
  assert {:sourceloc} {:sourceloc_num 68} true;
  v15 := $$0[5];
  assert {:sourceloc} {:sourceloc_num 69} true;
  v16 := $$0[6];
  assert {:sourceloc} {:sourceloc_num 70} true;
  v17 := $$0[7];
  assert {:sourceloc} {:sourceloc_num 71} true;
  v18 := $$0[8];
  assert {:sourceloc} {:sourceloc_num 72} true;
  v19 := $$0[9];
  assert {:sourceloc} {:sourceloc_num 73} true;
  v20 := $$0[10];
  assert {:sourceloc} {:sourceloc_num 74} true;
  v21 := $$0[11];
  call {:sourceloc_num 75}   v22 := $_Z5tex2DIhET_7textureIS0_Li2EL19cudaTextureReadMode0EEff(v13, BV_CONCAT(BV_CONCAT(BV_CONCAT(v17, v16), v15), v14), BV_CONCAT(BV_CONCAT(BV_CONCAT(v21, v20), v19), v18), FSUB32(SI32_TO_FP32($i.0), 1065353216), FSUB32(UI32_TO_FP32(group_id_x), 1065353216));
  assert {:sourceloc} {:sourceloc_num 76} true;
  v23 := $$tex[0];
  assert {:sourceloc} {:sourceloc_num 77} true;
  $$1[0] := v23;
  assert {:sourceloc} {:sourceloc_num 78} true;
  v24 := $$tex[1];
  assert {:sourceloc} {:sourceloc_num 79} true;
  $$1[1] := v24;
  assert {:sourceloc} {:sourceloc_num 80} true;
  v25 := $$tex[2];
  assert {:sourceloc} {:sourceloc_num 81} true;
  $$1[2] := v25;
  assert {:sourceloc} {:sourceloc_num 82} true;
  v26 := $$tex[3];
  assert {:sourceloc} {:sourceloc_num 83} true;
  $$1[3] := v26;
  assert {:sourceloc} {:sourceloc_num 84} true;
  v27 := $$tex[4];
  assert {:sourceloc} {:sourceloc_num 85} true;
  $$1[4] := v27;
  assert {:sourceloc} {:sourceloc_num 86} true;
  v28 := $$tex[5];
  assert {:sourceloc} {:sourceloc_num 87} true;
  $$1[5] := v28;
  assert {:sourceloc} {:sourceloc_num 88} true;
  v29 := $$tex[6];
  assert {:sourceloc} {:sourceloc_num 89} true;
  $$1[6] := v29;
  assert {:sourceloc} {:sourceloc_num 90} true;
  v30 := $$tex[7];
  assert {:sourceloc} {:sourceloc_num 91} true;
  $$1[7] := v30;
  assert {:sourceloc} {:sourceloc_num 92} true;
  v31 := $$tex[8];
  assert {:sourceloc} {:sourceloc_num 93} true;
  $$1[8] := v31;
  assert {:sourceloc} {:sourceloc_num 94} true;
  v32 := $$tex[9];
  assert {:sourceloc} {:sourceloc_num 95} true;
  $$1[9] := v32;
  assert {:sourceloc} {:sourceloc_num 96} true;
  v33 := $$tex[10];
  assert {:sourceloc} {:sourceloc_num 97} true;
  $$1[10] := v33;
  assert {:sourceloc} {:sourceloc_num 98} true;
  v34 := $$tex[11];
  assert {:sourceloc} {:sourceloc_num 99} true;
  $$1[11] := v34;
  assert {:sourceloc} {:sourceloc_num 100} true;
  v35 := $$1[0];
  assert {:sourceloc} {:sourceloc_num 101} true;
  v36 := $$1[4];
  assert {:sourceloc} {:sourceloc_num 102} true;
  v37 := $$1[5];
  assert {:sourceloc} {:sourceloc_num 103} true;
  v38 := $$1[6];
  assert {:sourceloc} {:sourceloc_num 104} true;
  v39 := $$1[7];
  assert {:sourceloc} {:sourceloc_num 105} true;
  v40 := $$1[8];
  assert {:sourceloc} {:sourceloc_num 106} true;
  v41 := $$1[9];
  assert {:sourceloc} {:sourceloc_num 107} true;
  v42 := $$1[10];
  assert {:sourceloc} {:sourceloc_num 108} true;
  v43 := $$1[11];
  call {:sourceloc_num 109}   v44 := $_Z5tex2DIhET_7textureIS0_Li2EL19cudaTextureReadMode0EEff(v35, BV_CONCAT(BV_CONCAT(BV_CONCAT(v39, v38), v37), v36), BV_CONCAT(BV_CONCAT(BV_CONCAT(v43, v42), v41), v40), FADD32(SI32_TO_FP32($i.0), 0), FSUB32(UI32_TO_FP32(group_id_x), 1065353216));
  assert {:sourceloc} {:sourceloc_num 110} true;
  v45 := $$tex[0];
  assert {:sourceloc} {:sourceloc_num 111} true;
  $$2[0] := v45;
  assert {:sourceloc} {:sourceloc_num 112} true;
  v46 := $$tex[1];
  assert {:sourceloc} {:sourceloc_num 113} true;
  $$2[1] := v46;
  assert {:sourceloc} {:sourceloc_num 114} true;
  v47 := $$tex[2];
  assert {:sourceloc} {:sourceloc_num 115} true;
  $$2[2] := v47;
  assert {:sourceloc} {:sourceloc_num 116} true;
  v48 := $$tex[3];
  assert {:sourceloc} {:sourceloc_num 117} true;
  $$2[3] := v48;
  assert {:sourceloc} {:sourceloc_num 118} true;
  v49 := $$tex[4];
  assert {:sourceloc} {:sourceloc_num 119} true;
  $$2[4] := v49;
  assert {:sourceloc} {:sourceloc_num 120} true;
  v50 := $$tex[5];
  assert {:sourceloc} {:sourceloc_num 121} true;
  $$2[5] := v50;
  assert {:sourceloc} {:sourceloc_num 122} true;
  v51 := $$tex[6];
  assert {:sourceloc} {:sourceloc_num 123} true;
  $$2[6] := v51;
  assert {:sourceloc} {:sourceloc_num 124} true;
  v52 := $$tex[7];
  assert {:sourceloc} {:sourceloc_num 125} true;
  $$2[7] := v52;
  assert {:sourceloc} {:sourceloc_num 126} true;
  v53 := $$tex[8];
  assert {:sourceloc} {:sourceloc_num 127} true;
  $$2[8] := v53;
  assert {:sourceloc} {:sourceloc_num 128} true;
  v54 := $$tex[9];
  assert {:sourceloc} {:sourceloc_num 129} true;
  $$2[9] := v54;
  assert {:sourceloc} {:sourceloc_num 130} true;
  v55 := $$tex[10];
  assert {:sourceloc} {:sourceloc_num 131} true;
  $$2[10] := v55;
  assert {:sourceloc} {:sourceloc_num 132} true;
  v56 := $$tex[11];
  assert {:sourceloc} {:sourceloc_num 133} true;
  $$2[11] := v56;
  assert {:sourceloc} {:sourceloc_num 134} true;
  v57 := $$2[0];
  assert {:sourceloc} {:sourceloc_num 135} true;
  v58 := $$2[4];
  assert {:sourceloc} {:sourceloc_num 136} true;
  v59 := $$2[5];
  assert {:sourceloc} {:sourceloc_num 137} true;
  v60 := $$2[6];
  assert {:sourceloc} {:sourceloc_num 138} true;
  v61 := $$2[7];
  assert {:sourceloc} {:sourceloc_num 139} true;
  v62 := $$2[8];
  assert {:sourceloc} {:sourceloc_num 140} true;
  v63 := $$2[9];
  assert {:sourceloc} {:sourceloc_num 141} true;
  v64 := $$2[10];
  assert {:sourceloc} {:sourceloc_num 142} true;
  v65 := $$2[11];
  call {:sourceloc_num 143}   v66 := $_Z5tex2DIhET_7textureIS0_Li2EL19cudaTextureReadMode0EEff(v57, BV_CONCAT(BV_CONCAT(BV_CONCAT(v61, v60), v59), v58), BV_CONCAT(BV_CONCAT(BV_CONCAT(v65, v64), v63), v62), FADD32(SI32_TO_FP32($i.0), 1065353216), FSUB32(UI32_TO_FP32(group_id_x), 1065353216));
  assert {:sourceloc} {:sourceloc_num 144} true;
  v67 := $$tex[0];
  assert {:sourceloc} {:sourceloc_num 145} true;
  $$3[0] := v67;
  assert {:sourceloc} {:sourceloc_num 146} true;
  v68 := $$tex[1];
  assert {:sourceloc} {:sourceloc_num 147} true;
  $$3[1] := v68;
  assert {:sourceloc} {:sourceloc_num 148} true;
  v69 := $$tex[2];
  assert {:sourceloc} {:sourceloc_num 149} true;
  $$3[2] := v69;
  assert {:sourceloc} {:sourceloc_num 150} true;
  v70 := $$tex[3];
  assert {:sourceloc} {:sourceloc_num 151} true;
  $$3[3] := v70;
  assert {:sourceloc} {:sourceloc_num 152} true;
  v71 := $$tex[4];
  assert {:sourceloc} {:sourceloc_num 153} true;
  $$3[4] := v71;
  assert {:sourceloc} {:sourceloc_num 154} true;
  v72 := $$tex[5];
  assert {:sourceloc} {:sourceloc_num 155} true;
  $$3[5] := v72;
  assert {:sourceloc} {:sourceloc_num 156} true;
  v73 := $$tex[6];
  assert {:sourceloc} {:sourceloc_num 157} true;
  $$3[6] := v73;
  assert {:sourceloc} {:sourceloc_num 158} true;
  v74 := $$tex[7];
  assert {:sourceloc} {:sourceloc_num 159} true;
  $$3[7] := v74;
  assert {:sourceloc} {:sourceloc_num 160} true;
  v75 := $$tex[8];
  assert {:sourceloc} {:sourceloc_num 161} true;
  $$3[8] := v75;
  assert {:sourceloc} {:sourceloc_num 162} true;
  v76 := $$tex[9];
  assert {:sourceloc} {:sourceloc_num 163} true;
  $$3[9] := v76;
  assert {:sourceloc} {:sourceloc_num 164} true;
  v77 := $$tex[10];
  assert {:sourceloc} {:sourceloc_num 165} true;
  $$3[10] := v77;
  assert {:sourceloc} {:sourceloc_num 166} true;
  v78 := $$tex[11];
  assert {:sourceloc} {:sourceloc_num 167} true;
  $$3[11] := v78;
  assert {:sourceloc} {:sourceloc_num 168} true;
  v79 := $$3[0];
  assert {:sourceloc} {:sourceloc_num 169} true;
  v80 := $$3[4];
  assert {:sourceloc} {:sourceloc_num 170} true;
  v81 := $$3[5];
  assert {:sourceloc} {:sourceloc_num 171} true;
  v82 := $$3[6];
  assert {:sourceloc} {:sourceloc_num 172} true;
  v83 := $$3[7];
  assert {:sourceloc} {:sourceloc_num 173} true;
  v84 := $$3[8];
  assert {:sourceloc} {:sourceloc_num 174} true;
  v85 := $$3[9];
  assert {:sourceloc} {:sourceloc_num 175} true;
  v86 := $$3[10];
  assert {:sourceloc} {:sourceloc_num 176} true;
  v87 := $$3[11];
  call {:sourceloc_num 177}   v88 := $_Z5tex2DIhET_7textureIS0_Li2EL19cudaTextureReadMode0EEff(v79, BV_CONCAT(BV_CONCAT(BV_CONCAT(v83, v82), v81), v80), BV_CONCAT(BV_CONCAT(BV_CONCAT(v87, v86), v85), v84), FSUB32(SI32_TO_FP32($i.0), 1065353216), FADD32(UI32_TO_FP32(group_id_x), 0));
  assert {:sourceloc} {:sourceloc_num 178} true;
  v89 := $$tex[0];
  assert {:sourceloc} {:sourceloc_num 179} true;
  $$4[0] := v89;
  assert {:sourceloc} {:sourceloc_num 180} true;
  v90 := $$tex[1];
  assert {:sourceloc} {:sourceloc_num 181} true;
  $$4[1] := v90;
  assert {:sourceloc} {:sourceloc_num 182} true;
  v91 := $$tex[2];
  assert {:sourceloc} {:sourceloc_num 183} true;
  $$4[2] := v91;
  assert {:sourceloc} {:sourceloc_num 184} true;
  v92 := $$tex[3];
  assert {:sourceloc} {:sourceloc_num 185} true;
  $$4[3] := v92;
  assert {:sourceloc} {:sourceloc_num 186} true;
  v93 := $$tex[4];
  assert {:sourceloc} {:sourceloc_num 187} true;
  $$4[4] := v93;
  assert {:sourceloc} {:sourceloc_num 188} true;
  v94 := $$tex[5];
  assert {:sourceloc} {:sourceloc_num 189} true;
  $$4[5] := v94;
  assert {:sourceloc} {:sourceloc_num 190} true;
  v95 := $$tex[6];
  assert {:sourceloc} {:sourceloc_num 191} true;
  $$4[6] := v95;
  assert {:sourceloc} {:sourceloc_num 192} true;
  v96 := $$tex[7];
  assert {:sourceloc} {:sourceloc_num 193} true;
  $$4[7] := v96;
  assert {:sourceloc} {:sourceloc_num 194} true;
  v97 := $$tex[8];
  assert {:sourceloc} {:sourceloc_num 195} true;
  $$4[8] := v97;
  assert {:sourceloc} {:sourceloc_num 196} true;
  v98 := $$tex[9];
  assert {:sourceloc} {:sourceloc_num 197} true;
  $$4[9] := v98;
  assert {:sourceloc} {:sourceloc_num 198} true;
  v99 := $$tex[10];
  assert {:sourceloc} {:sourceloc_num 199} true;
  $$4[10] := v99;
  assert {:sourceloc} {:sourceloc_num 200} true;
  v100 := $$tex[11];
  assert {:sourceloc} {:sourceloc_num 201} true;
  $$4[11] := v100;
  assert {:sourceloc} {:sourceloc_num 202} true;
  v101 := $$4[0];
  assert {:sourceloc} {:sourceloc_num 203} true;
  v102 := $$4[4];
  assert {:sourceloc} {:sourceloc_num 204} true;
  v103 := $$4[5];
  assert {:sourceloc} {:sourceloc_num 205} true;
  v104 := $$4[6];
  assert {:sourceloc} {:sourceloc_num 206} true;
  v105 := $$4[7];
  assert {:sourceloc} {:sourceloc_num 207} true;
  v106 := $$4[8];
  assert {:sourceloc} {:sourceloc_num 208} true;
  v107 := $$4[9];
  assert {:sourceloc} {:sourceloc_num 209} true;
  v108 := $$4[10];
  assert {:sourceloc} {:sourceloc_num 210} true;
  v109 := $$4[11];
  call {:sourceloc_num 211}   v110 := $_Z5tex2DIhET_7textureIS0_Li2EL19cudaTextureReadMode0EEff(v101, BV_CONCAT(BV_CONCAT(BV_CONCAT(v105, v104), v103), v102), BV_CONCAT(BV_CONCAT(BV_CONCAT(v109, v108), v107), v106), FADD32(SI32_TO_FP32($i.0), 0), FADD32(UI32_TO_FP32(group_id_x), 0));
  assert {:sourceloc} {:sourceloc_num 212} true;
  v111 := $$tex[0];
  assert {:sourceloc} {:sourceloc_num 213} true;
  $$5[0] := v111;
  assert {:sourceloc} {:sourceloc_num 214} true;
  v112 := $$tex[1];
  assert {:sourceloc} {:sourceloc_num 215} true;
  $$5[1] := v112;
  assert {:sourceloc} {:sourceloc_num 216} true;
  v113 := $$tex[2];
  assert {:sourceloc} {:sourceloc_num 217} true;
  $$5[2] := v113;
  assert {:sourceloc} {:sourceloc_num 218} true;
  v114 := $$tex[3];
  assert {:sourceloc} {:sourceloc_num 219} true;
  $$5[3] := v114;
  assert {:sourceloc} {:sourceloc_num 220} true;
  v115 := $$tex[4];
  assert {:sourceloc} {:sourceloc_num 221} true;
  $$5[4] := v115;
  assert {:sourceloc} {:sourceloc_num 222} true;
  v116 := $$tex[5];
  assert {:sourceloc} {:sourceloc_num 223} true;
  $$5[5] := v116;
  assert {:sourceloc} {:sourceloc_num 224} true;
  v117 := $$tex[6];
  assert {:sourceloc} {:sourceloc_num 225} true;
  $$5[6] := v117;
  assert {:sourceloc} {:sourceloc_num 226} true;
  v118 := $$tex[7];
  assert {:sourceloc} {:sourceloc_num 227} true;
  $$5[7] := v118;
  assert {:sourceloc} {:sourceloc_num 228} true;
  v119 := $$tex[8];
  assert {:sourceloc} {:sourceloc_num 229} true;
  $$5[8] := v119;
  assert {:sourceloc} {:sourceloc_num 230} true;
  v120 := $$tex[9];
  assert {:sourceloc} {:sourceloc_num 231} true;
  $$5[9] := v120;
  assert {:sourceloc} {:sourceloc_num 232} true;
  v121 := $$tex[10];
  assert {:sourceloc} {:sourceloc_num 233} true;
  $$5[10] := v121;
  assert {:sourceloc} {:sourceloc_num 234} true;
  v122 := $$tex[11];
  assert {:sourceloc} {:sourceloc_num 235} true;
  $$5[11] := v122;
  assert {:sourceloc} {:sourceloc_num 236} true;
  v123 := $$5[0];
  assert {:sourceloc} {:sourceloc_num 237} true;
  v124 := $$5[4];
  assert {:sourceloc} {:sourceloc_num 238} true;
  v125 := $$5[5];
  assert {:sourceloc} {:sourceloc_num 239} true;
  v126 := $$5[6];
  assert {:sourceloc} {:sourceloc_num 240} true;
  v127 := $$5[7];
  assert {:sourceloc} {:sourceloc_num 241} true;
  v128 := $$5[8];
  assert {:sourceloc} {:sourceloc_num 242} true;
  v129 := $$5[9];
  assert {:sourceloc} {:sourceloc_num 243} true;
  v130 := $$5[10];
  assert {:sourceloc} {:sourceloc_num 244} true;
  v131 := $$5[11];
  call {:sourceloc_num 245}   v132 := $_Z5tex2DIhET_7textureIS0_Li2EL19cudaTextureReadMode0EEff(v123, BV_CONCAT(BV_CONCAT(BV_CONCAT(v127, v126), v125), v124), BV_CONCAT(BV_CONCAT(BV_CONCAT(v131, v130), v129), v128), FADD32(SI32_TO_FP32($i.0), 1065353216), FADD32(UI32_TO_FP32(group_id_x), 0));
  assert {:sourceloc} {:sourceloc_num 246} true;
  v133 := $$tex[0];
  assert {:sourceloc} {:sourceloc_num 247} true;
  $$6[0] := v133;
  assert {:sourceloc} {:sourceloc_num 248} true;
  v134 := $$tex[1];
  assert {:sourceloc} {:sourceloc_num 249} true;
  $$6[1] := v134;
  assert {:sourceloc} {:sourceloc_num 250} true;
  v135 := $$tex[2];
  assert {:sourceloc} {:sourceloc_num 251} true;
  $$6[2] := v135;
  assert {:sourceloc} {:sourceloc_num 252} true;
  v136 := $$tex[3];
  assert {:sourceloc} {:sourceloc_num 253} true;
  $$6[3] := v136;
  assert {:sourceloc} {:sourceloc_num 254} true;
  v137 := $$tex[4];
  assert {:sourceloc} {:sourceloc_num 255} true;
  $$6[4] := v137;
  assert {:sourceloc} {:sourceloc_num 256} true;
  v138 := $$tex[5];
  assert {:sourceloc} {:sourceloc_num 257} true;
  $$6[5] := v138;
  assert {:sourceloc} {:sourceloc_num 258} true;
  v139 := $$tex[6];
  assert {:sourceloc} {:sourceloc_num 259} true;
  $$6[6] := v139;
  assert {:sourceloc} {:sourceloc_num 260} true;
  v140 := $$tex[7];
  assert {:sourceloc} {:sourceloc_num 261} true;
  $$6[7] := v140;
  assert {:sourceloc} {:sourceloc_num 262} true;
  v141 := $$tex[8];
  assert {:sourceloc} {:sourceloc_num 263} true;
  $$6[8] := v141;
  assert {:sourceloc} {:sourceloc_num 264} true;
  v142 := $$tex[9];
  assert {:sourceloc} {:sourceloc_num 265} true;
  $$6[9] := v142;
  assert {:sourceloc} {:sourceloc_num 266} true;
  v143 := $$tex[10];
  assert {:sourceloc} {:sourceloc_num 267} true;
  $$6[10] := v143;
  assert {:sourceloc} {:sourceloc_num 268} true;
  v144 := $$tex[11];
  assert {:sourceloc} {:sourceloc_num 269} true;
  $$6[11] := v144;
  assert {:sourceloc} {:sourceloc_num 270} true;
  v145 := $$6[0];
  assert {:sourceloc} {:sourceloc_num 271} true;
  v146 := $$6[4];
  assert {:sourceloc} {:sourceloc_num 272} true;
  v147 := $$6[5];
  assert {:sourceloc} {:sourceloc_num 273} true;
  v148 := $$6[6];
  assert {:sourceloc} {:sourceloc_num 274} true;
  v149 := $$6[7];
  assert {:sourceloc} {:sourceloc_num 275} true;
  v150 := $$6[8];
  assert {:sourceloc} {:sourceloc_num 276} true;
  v151 := $$6[9];
  assert {:sourceloc} {:sourceloc_num 277} true;
  v152 := $$6[10];
  assert {:sourceloc} {:sourceloc_num 278} true;
  v153 := $$6[11];
  call {:sourceloc_num 279}   v154 := $_Z5tex2DIhET_7textureIS0_Li2EL19cudaTextureReadMode0EEff(v145, BV_CONCAT(BV_CONCAT(BV_CONCAT(v149, v148), v147), v146), BV_CONCAT(BV_CONCAT(BV_CONCAT(v153, v152), v151), v150), FSUB32(SI32_TO_FP32($i.0), 1065353216), FADD32(UI32_TO_FP32(group_id_x), 1065353216));
  assert {:sourceloc} {:sourceloc_num 280} true;
  v155 := $$tex[0];
  assert {:sourceloc} {:sourceloc_num 281} true;
  $$7[0] := v155;
  assert {:sourceloc} {:sourceloc_num 282} true;
  v156 := $$tex[1];
  assert {:sourceloc} {:sourceloc_num 283} true;
  $$7[1] := v156;
  assert {:sourceloc} {:sourceloc_num 284} true;
  v157 := $$tex[2];
  assert {:sourceloc} {:sourceloc_num 285} true;
  $$7[2] := v157;
  assert {:sourceloc} {:sourceloc_num 286} true;
  v158 := $$tex[3];
  assert {:sourceloc} {:sourceloc_num 287} true;
  $$7[3] := v158;
  assert {:sourceloc} {:sourceloc_num 288} true;
  v159 := $$tex[4];
  assert {:sourceloc} {:sourceloc_num 289} true;
  $$7[4] := v159;
  assert {:sourceloc} {:sourceloc_num 290} true;
  v160 := $$tex[5];
  assert {:sourceloc} {:sourceloc_num 291} true;
  $$7[5] := v160;
  assert {:sourceloc} {:sourceloc_num 292} true;
  v161 := $$tex[6];
  assert {:sourceloc} {:sourceloc_num 293} true;
  $$7[6] := v161;
  assert {:sourceloc} {:sourceloc_num 294} true;
  v162 := $$tex[7];
  assert {:sourceloc} {:sourceloc_num 295} true;
  $$7[7] := v162;
  assert {:sourceloc} {:sourceloc_num 296} true;
  v163 := $$tex[8];
  assert {:sourceloc} {:sourceloc_num 297} true;
  $$7[8] := v163;
  assert {:sourceloc} {:sourceloc_num 298} true;
  v164 := $$tex[9];
  assert {:sourceloc} {:sourceloc_num 299} true;
  $$7[9] := v164;
  assert {:sourceloc} {:sourceloc_num 300} true;
  v165 := $$tex[10];
  assert {:sourceloc} {:sourceloc_num 301} true;
  $$7[10] := v165;
  assert {:sourceloc} {:sourceloc_num 302} true;
  v166 := $$tex[11];
  assert {:sourceloc} {:sourceloc_num 303} true;
  $$7[11] := v166;
  assert {:sourceloc} {:sourceloc_num 304} true;
  v167 := $$7[0];
  assert {:sourceloc} {:sourceloc_num 305} true;
  v168 := $$7[4];
  assert {:sourceloc} {:sourceloc_num 306} true;
  v169 := $$7[5];
  assert {:sourceloc} {:sourceloc_num 307} true;
  v170 := $$7[6];
  assert {:sourceloc} {:sourceloc_num 308} true;
  v171 := $$7[7];
  assert {:sourceloc} {:sourceloc_num 309} true;
  v172 := $$7[8];
  assert {:sourceloc} {:sourceloc_num 310} true;
  v173 := $$7[9];
  assert {:sourceloc} {:sourceloc_num 311} true;
  v174 := $$7[10];
  assert {:sourceloc} {:sourceloc_num 312} true;
  v175 := $$7[11];
  call {:sourceloc_num 313}   v176 := $_Z5tex2DIhET_7textureIS0_Li2EL19cudaTextureReadMode0EEff(v167, BV_CONCAT(BV_CONCAT(BV_CONCAT(v171, v170), v169), v168), BV_CONCAT(BV_CONCAT(BV_CONCAT(v175, v174), v173), v172), FADD32(SI32_TO_FP32($i.0), 0), FADD32(UI32_TO_FP32(group_id_x), 1065353216));
  assert {:sourceloc} {:sourceloc_num 314} true;
  v177 := $$tex[0];
  assert {:sourceloc} {:sourceloc_num 315} true;
  $$8[0] := v177;
  assert {:sourceloc} {:sourceloc_num 316} true;
  v178 := $$tex[1];
  assert {:sourceloc} {:sourceloc_num 317} true;
  $$8[1] := v178;
  assert {:sourceloc} {:sourceloc_num 318} true;
  v179 := $$tex[2];
  assert {:sourceloc} {:sourceloc_num 319} true;
  $$8[2] := v179;
  assert {:sourceloc} {:sourceloc_num 320} true;
  v180 := $$tex[3];
  assert {:sourceloc} {:sourceloc_num 321} true;
  $$8[3] := v180;
  assert {:sourceloc} {:sourceloc_num 322} true;
  v181 := $$tex[4];
  assert {:sourceloc} {:sourceloc_num 323} true;
  $$8[4] := v181;
  assert {:sourceloc} {:sourceloc_num 324} true;
  v182 := $$tex[5];
  assert {:sourceloc} {:sourceloc_num 325} true;
  $$8[5] := v182;
  assert {:sourceloc} {:sourceloc_num 326} true;
  v183 := $$tex[6];
  assert {:sourceloc} {:sourceloc_num 327} true;
  $$8[6] := v183;
  assert {:sourceloc} {:sourceloc_num 328} true;
  v184 := $$tex[7];
  assert {:sourceloc} {:sourceloc_num 329} true;
  $$8[7] := v184;
  assert {:sourceloc} {:sourceloc_num 330} true;
  v185 := $$tex[8];
  assert {:sourceloc} {:sourceloc_num 331} true;
  $$8[8] := v185;
  assert {:sourceloc} {:sourceloc_num 332} true;
  v186 := $$tex[9];
  assert {:sourceloc} {:sourceloc_num 333} true;
  $$8[9] := v186;
  assert {:sourceloc} {:sourceloc_num 334} true;
  v187 := $$tex[10];
  assert {:sourceloc} {:sourceloc_num 335} true;
  $$8[10] := v187;
  assert {:sourceloc} {:sourceloc_num 336} true;
  v188 := $$tex[11];
  assert {:sourceloc} {:sourceloc_num 337} true;
  $$8[11] := v188;
  assert {:sourceloc} {:sourceloc_num 338} true;
  v189 := $$8[0];
  assert {:sourceloc} {:sourceloc_num 339} true;
  v190 := $$8[4];
  assert {:sourceloc} {:sourceloc_num 340} true;
  v191 := $$8[5];
  assert {:sourceloc} {:sourceloc_num 341} true;
  v192 := $$8[6];
  assert {:sourceloc} {:sourceloc_num 342} true;
  v193 := $$8[7];
  assert {:sourceloc} {:sourceloc_num 343} true;
  v194 := $$8[8];
  assert {:sourceloc} {:sourceloc_num 344} true;
  v195 := $$8[9];
  assert {:sourceloc} {:sourceloc_num 345} true;
  v196 := $$8[10];
  assert {:sourceloc} {:sourceloc_num 346} true;
  v197 := $$8[11];
  call {:sourceloc_num 347}   v198 := $_Z5tex2DIhET_7textureIS0_Li2EL19cudaTextureReadMode0EEff(v189, BV_CONCAT(BV_CONCAT(BV_CONCAT(v193, v192), v191), v190), BV_CONCAT(BV_CONCAT(BV_CONCAT(v197, v196), v195), v194), FADD32(SI32_TO_FP32($i.0), 1065353216), FADD32(UI32_TO_FP32(group_id_x), 1065353216));
  assert {:sourceloc} {:sourceloc_num 348} true;
  v199 := $$blockFunction_table[$blockOperation];
  if (v199 == $functionId$$_Z12ComputeSobelhhhhhhhhhf) {
    call {:sourceloc_num 349} v200 := $_Z12ComputeSobelhhhhhhhhhf(v22, v44, v66, v88, v110, v132, v154, v176, v198, $fScale);
  } else if (v199 == $functionId$$_Z10ComputeBoxhhhhhhhhhf) {
    call {:sourceloc_num 350} v200 := $_Z10ComputeBoxhhhhhhhhhf(v22, v44, v66, v88, v110, v132, v154, v176, v198, $fScale);
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 351} false;
  }
  v201 := $pPointOperation != $functionId$$null$;
  goto $truebb0, $falsebb0;
$3:
  assert {:block_sourceloc} {:sourceloc_num 352} true;
  if ($pPointOperation == $functionId$$_Z9Thresholdhf) {
    call {:sourceloc_num 353} v202 := $_Z9Thresholdhf(v200, 1125515264);
  } else {
    assert {:bad_pointer_access} {:sourceloc_num 354} false;
  }
  $tmp.0 := v202;
  goto $4;
$4:
  assert {:block_sourceloc} {:sourceloc_num 355} true;
  assert {:sourceloc} {:sourceloc_num 356} true;
  $$pSobelOriginal[BV32_ADD(BV32_MUL(group_id_x, $Pitch), $i.0)] := $tmp.0;
  goto $5;
$5:
  assert {:block_sourceloc} {:sourceloc_num 357} true;
  $i.0 := BV32_ADD($i.0, group_size_x);
  goto $1;
$6:
  assert {:block_sourceloc} {:sourceloc_num 358} true;
  return;
$truebb:
  assume {:partition} v0;
  assert {:block_sourceloc} {:sourceloc_num 359} true;
  goto $2;
$falsebb:
  assume {:partition} !v0;
  assert {:block_sourceloc} {:sourceloc_num 360} true;
  goto $6;
$truebb0:
  assume {:partition} v201;
  assert {:block_sourceloc} {:sourceloc_num 361} true;
  goto $3;
$falsebb0:
  assume {:partition} !v201;
  assert {:block_sourceloc} {:sourceloc_num 362} true;
  $tmp.0 := v200;
  goto $4;
}
procedure {:source_name "_Z5tex2DIhET_7textureIS0_Li2EL19cudaTextureReadMode0EEff"} $_Z5tex2DIhET_7textureIS0_Li2EL19cudaTextureReadMode0EEff($0:int, $1:int, $2:int, $3:int, $4:int) returns ($ret:int);
axiom (if group_size_y == 1 then 1 else 0) != 0;
axiom (if group_size_z == 1 then 1 else 0) != 0;
axiom (if num_groups_y == 1 then 1 else 0) != 0;
axiom (if num_groups_z == 1 then 1 else 0) != 0;
axiom (if group_size_x == 384 then 1 else 0) != 0;
axiom (if num_groups_x == 512 then 1 else 0) != 0;
