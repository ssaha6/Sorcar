type _SIZE_T_TYPE = bv32;

procedure _ATOMIC_OP32(x : [bv32]bv32, y : bv32) returns (z : bv32, A : [bv32]bv32);
procedure _ATOMIC_OP8(x : [bv32]bv8, y : bv32) returns (z : bv8, A : [bv32]bv8);
var {:source_name "result"} {:global} $$result : [bv32]bv32;
axiom {:array_info "$$result"} {:global} {:elem_width 32} {:source_name "result"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$result : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$result : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$result : bool;
const $arrayId$$result : arrayId;
axiom $arrayId$$result == 1bv5;

var {:source_name "inData"} {:global} $$inData : [bv32]bv32;
axiom {:array_info "$$inData"} {:global} {:elem_width 32} {:source_name "inData"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$inData : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$inData : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$inData : bool;
const $arrayId$$inData : arrayId;
axiom $arrayId$$inData == 2bv5;

var {:source_name "agg.tmp"} $$agg.tmp : [bv32]bv32;
axiom {:array_info "$$agg.tmp"} {:elem_width 32} {:source_name "agg.tmp"} {:source_elem_width 96} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp : arrayId;
axiom $arrayId$$agg.tmp == 3bv5;

var {:source_name "agg.tmp97"} $$agg.tmp97 : [bv32]bv32;
axiom {:array_info "$$agg.tmp97"} {:elem_width 32} {:source_name "agg.tmp97"} {:source_elem_width 96} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp97 : arrayId;
axiom $arrayId$$agg.tmp97 == 4bv5;

var {:source_name "agg.tmp149"} $$agg.tmp149 : [bv32]bv32;
axiom {:array_info "$$agg.tmp149"} {:elem_width 32} {:source_name "agg.tmp149"} {:source_elem_width 96} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp149 : arrayId;
axiom $arrayId$$agg.tmp149 == 5bv5;

var {:source_name "agg.tmp201"} $$agg.tmp201 : [bv32]bv32;
axiom {:array_info "$$agg.tmp201"} {:elem_width 32} {:source_name "agg.tmp201"} {:source_elem_width 96} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp201 : arrayId;
axiom $arrayId$$agg.tmp201 == 6bv5;

var {:source_name "agg.tmp253"} $$agg.tmp253 : [bv32]bv32;
axiom {:array_info "$$agg.tmp253"} {:elem_width 32} {:source_name "agg.tmp253"} {:source_elem_width 96} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp253 : arrayId;
axiom $arrayId$$agg.tmp253 == 7bv5;

var {:source_name "agg.tmp305"} $$agg.tmp305 : [bv32]bv32;
axiom {:array_info "$$agg.tmp305"} {:elem_width 32} {:source_name "agg.tmp305"} {:source_elem_width 96} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp305 : arrayId;
axiom $arrayId$$agg.tmp305 == 8bv5;

var {:source_name "agg.tmp357"} $$agg.tmp357 : [bv32]bv32;
axiom {:array_info "$$agg.tmp357"} {:elem_width 32} {:source_name "agg.tmp357"} {:source_elem_width 96} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp357 : arrayId;
axiom $arrayId$$agg.tmp357 == 9bv5;

var {:source_name "agg.tmp409"} $$agg.tmp409 : [bv32]bv32;
axiom {:array_info "$$agg.tmp409"} {:elem_width 32} {:source_name "agg.tmp409"} {:source_elem_width 96} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp409 : arrayId;
axiom $arrayId$$agg.tmp409 == 10bv5;

var {:source_name "agg.tmp461"} $$agg.tmp461 : [bv32]bv32;
axiom {:array_info "$$agg.tmp461"} {:elem_width 32} {:source_name "agg.tmp461"} {:source_elem_width 96} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp461 : arrayId;
axiom $arrayId$$agg.tmp461 == 11bv5;

var {:source_name "agg.tmp513"} $$agg.tmp513 : [bv32]bv32;
axiom {:array_info "$$agg.tmp513"} {:elem_width 32} {:source_name "agg.tmp513"} {:source_elem_width 96} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp513 : arrayId;
axiom $arrayId$$agg.tmp513 == 12bv5;

var {:source_name "agg.tmp557"} $$agg.tmp557 : [bv32]bv32;
axiom {:array_info "$$agg.tmp557"} {:elem_width 32} {:source_name "agg.tmp557"} {:source_elem_width 96} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp557 : arrayId;
axiom $arrayId$$agg.tmp557 == 13bv5;

var {:source_name "stageBlock1"} {:group_shared} $$_ZZ13aesEncrypt128PjS_iE11stageBlock1 : [bv32]bv8;
axiom {:array_info "$$_ZZ13aesEncrypt128PjS_iE11stageBlock1"} {:group_shared} {:elem_width 8} {:source_name "stageBlock1"} {:source_elem_width 32} {:source_dimensions "256"} true;
var {:race_checking} {:group_shared} {:elem_width 8} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE11stageBlock1 : bool;
var {:race_checking} {:group_shared} {:elem_width 8} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE11stageBlock1 : bool;
var {:race_checking} {:group_shared} {:elem_width 8} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE11stageBlock1 : bool;
const $arrayId$$_ZZ13aesEncrypt128PjS_iE11stageBlock1 : arrayId;
axiom $arrayId$$_ZZ13aesEncrypt128PjS_iE11stageBlock1 == 14bv5;

var {:source_name "tBox0Block"} {:group_shared} $$_ZZ13aesEncrypt128PjS_iE10tBox0Block : [bv32]bv32;
axiom {:array_info "$$_ZZ13aesEncrypt128PjS_iE10tBox0Block"} {:group_shared} {:elem_width 32} {:source_name "tBox0Block"} {:source_elem_width 32} {:source_dimensions "256"} true;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE10tBox0Block : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE10tBox0Block : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE10tBox0Block : bool;
const $arrayId$$_ZZ13aesEncrypt128PjS_iE10tBox0Block : arrayId;
axiom $arrayId$$_ZZ13aesEncrypt128PjS_iE10tBox0Block == 15bv5;

var {:source_name "tBox1Block"} {:group_shared} $$_ZZ13aesEncrypt128PjS_iE10tBox1Block : [bv32]bv8;
axiom {:array_info "$$_ZZ13aesEncrypt128PjS_iE10tBox1Block"} {:group_shared} {:elem_width 8} {:source_name "tBox1Block"} {:source_elem_width 32} {:source_dimensions "256"} true;
var {:race_checking} {:group_shared} {:elem_width 8} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE10tBox1Block : bool;
var {:race_checking} {:group_shared} {:elem_width 8} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE10tBox1Block : bool;
var {:race_checking} {:group_shared} {:elem_width 8} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE10tBox1Block : bool;
const $arrayId$$_ZZ13aesEncrypt128PjS_iE10tBox1Block : arrayId;
axiom $arrayId$$_ZZ13aesEncrypt128PjS_iE10tBox1Block == 16bv5;

var {:source_name "tBox2Block"} {:group_shared} $$_ZZ13aesEncrypt128PjS_iE10tBox2Block : [bv32]bv32;
axiom {:array_info "$$_ZZ13aesEncrypt128PjS_iE10tBox2Block"} {:group_shared} {:elem_width 32} {:source_name "tBox2Block"} {:source_elem_width 32} {:source_dimensions "256"} true;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE10tBox2Block : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE10tBox2Block : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE10tBox2Block : bool;
const $arrayId$$_ZZ13aesEncrypt128PjS_iE10tBox2Block : arrayId;
axiom $arrayId$$_ZZ13aesEncrypt128PjS_iE10tBox2Block == 17bv5;

var {:source_name "tBox3Block"} {:group_shared} $$_ZZ13aesEncrypt128PjS_iE10tBox3Block : [bv32]bv32;
axiom {:array_info "$$_ZZ13aesEncrypt128PjS_iE10tBox3Block"} {:group_shared} {:elem_width 32} {:source_name "tBox3Block"} {:source_elem_width 32} {:source_dimensions "256"} true;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE10tBox3Block : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE10tBox3Block : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE10tBox3Block : bool;
const $arrayId$$_ZZ13aesEncrypt128PjS_iE10tBox3Block : arrayId;
axiom $arrayId$$_ZZ13aesEncrypt128PjS_iE10tBox3Block == 18bv5;

var {:source_name "TBox0"} {:constant} $$TBox0 : [bv32]bv32;
axiom {:array_info "$$TBox0"} {:constant} {:elem_width 32} {:source_name "TBox0"} {:source_elem_width 32} {:source_dimensions "256"} true;
const $arrayId$$TBox0 : arrayId;
axiom $arrayId$$TBox0 == 19bv5;

var {:source_name "TBox1"} {:constant} $$TBox1 : [bv32]bv32;
axiom {:array_info "$$TBox1"} {:constant} {:elem_width 32} {:source_name "TBox1"} {:source_elem_width 32} {:source_dimensions "256"} true;
const $arrayId$$TBox1 : arrayId;
axiom $arrayId$$TBox1 == 20bv5;

var {:source_name "TBox2"} {:constant} $$TBox2 : [bv32]bv32;
axiom {:array_info "$$TBox2"} {:constant} {:elem_width 32} {:source_name "TBox2"} {:source_elem_width 32} {:source_dimensions "256"} true;
const $arrayId$$TBox2 : arrayId;
axiom $arrayId$$TBox2 == 21bv5;

var {:source_name "TBox3"} {:constant} $$TBox3 : [bv32]bv32;
axiom {:array_info "$$TBox3"} {:constant} {:elem_width 32} {:source_name "TBox3"} {:source_elem_width 32} {:source_dimensions "256"} true;
const $arrayId$$TBox3 : arrayId;
axiom $arrayId$$TBox3 == 22bv5;

var {:source_name "texEKey128"} {:global} $$texEKey128 : [bv32]bv32;
axiom {:array_info "$$texEKey128"} {:global} {:elem_width 32} {:source_name "texEKey128"} {:source_elem_width 96} {:source_dimensions "1"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 96} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$texEKey128 : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 96} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$texEKey128 : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 96} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$texEKey128 : bool;
const $arrayId$$texEKey128 : arrayId;
axiom $arrayId$$texEKey128 == 23bv5;

var {:source_name "stageBlock2"} {:group_shared} $$_ZZ13aesEncrypt128PjS_iE11stageBlock2 : [bv32]bv8;
axiom {:array_info "$$_ZZ13aesEncrypt128PjS_iE11stageBlock2"} {:group_shared} {:elem_width 8} {:source_name "stageBlock2"} {:source_elem_width 32} {:source_dimensions "256"} true;
var {:race_checking} {:group_shared} {:elem_width 8} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE11stageBlock2 : bool;
var {:race_checking} {:group_shared} {:elem_width 8} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE11stageBlock2 : bool;
var {:race_checking} {:group_shared} {:elem_width 8} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE11stageBlock2 : bool;
const $arrayId$$_ZZ13aesEncrypt128PjS_iE11stageBlock2 : arrayId;
axiom $arrayId$$_ZZ13aesEncrypt128PjS_iE11stageBlock2 == 24bv5;

var {:source_name "posIdx_E"} {:constant} $$posIdx_E : [bv32]bv8;
axiom {:array_info "$$posIdx_E"} {:constant} {:elem_width 8} {:source_name "posIdx_E"} {:source_elem_width 8} {:source_dimensions "32"} true;
const $arrayId$$posIdx_E : arrayId;
axiom $arrayId$$posIdx_E == 25bv5;

type ptr = bv32;
type arrayId = bv5;

function {:inline true} MKPTR(base: arrayId, offset: bv32) : ptr {
  base ++ offset[27:0]
}

function {:inline true} base#MKPTR(p: ptr) : arrayId {
  p[32:27]
}

function {:inline true} offset#MKPTR(p : ptr) : bv32 {
  0bv5++p[27:0]
}

const $arrayId$$null$ : arrayId;
axiom $arrayId$$null$ == 0bv5;

const _WATCHED_OFFSET : bv32;
const {:group_id_x} group_id_x : bv32;
const {:group_size_x} group_size_x : bv32;
const {:group_size_y} group_size_y : bv32;
const {:group_size_z} group_size_z : bv32;
const {:local_id_x} local_id_x : bv32;
const {:num_groups_x} num_groups_x : bv32;
const {:num_groups_y} num_groups_y : bv32;
const {:num_groups_z} num_groups_z : bv32;
function {:bvbuiltin "bvadd"} BV32_ADD(bv32, bv32) : bv32;
function {:bvbuiltin "bvand"} BV32_AND(bv32, bv32) : bv32;
function {:bvbuiltin "bvlshr"} BV32_LSHR(bv32, bv32) : bv32;
function {:bvbuiltin "bvmul"} BV32_MUL(bv32, bv32) : bv32;
function {:bvbuiltin "bvudiv"} BV32_UDIV(bv32, bv32) : bv32;
function {:bvbuiltin "bvult"} BV32_ULT(bv32, bv32) : bool;
function {:bvbuiltin "bvurem"} BV32_UREM(bv32, bv32) : bv32;
function {:bvbuiltin "bvxor"} BV32_XOR(bv32, bv32) : bv32;
function {:bvbuiltin "zero_extend 24"} BV8_ZEXT32(bv8) : bv32;
procedure {:source_name "aesEncrypt128"} {:kernel} $_Z13aesEncrypt128PjS_i($inputSize:bv32)
{
  var $cnt.0:bv32;
  var v4:bv32;
  var v5:bv32;
  var v6:bv32;
  var v11:bv32;
  var v7:bv32;
  var v17:bv8;
  var v18:bv8;
  var v9:bv32;
  var v19:bv8;
  var v13:bv8;
  var v12:bv8;
  var v8:bv32;
  var v10:bv32;
  var v15:bv8;
  var v14:bv8;
  var v2:bv32;
  var v36:bv32;
  var v0:bv32;
  var v1:bv32;
  var v30:bv32;
  var v29:bv8;
  var v23:bv8;
  var v25:bv32;
  var v26:bv8;
  var v21:bv8;
  var v20:bv8;
  var v24:bv8;
  var v27:bv8;
  var v22:bv8;
  var v28:bv8;
  var v35:bv32;
  var v37:bv8;
  var v38:bv8;
  var v32:bv32;
  var v39:bv8;
  var v33:bv32;
  var v34:bv32;
  var v31:bv32;
  var v76:bv32;
  var v56:bv32;
  var v96:bv32;
  var v196:bv32;
  var v176:bv32;
  var v200:bv8;
  var v202:bv8;
  var v205:bv32;
  var v197:bv8;
  var v194:bv32;
  var v204:bv8;
  var v201:bv8;
  var v198:bv8;
  var v195:bv32;
  var v199:bv8;
  var v193:bv32;
  var v203:bv8;
  var v208:bv32;
  var v211:bv8;
  var v212:bv8;
  var v207:bv32;
  var v215:bv8;
  var v210:bv8;
  var v213:bv8;
  var v214:bv8;
  var v206:bv32;
  var v209:bv8;
  var v216:bv8;
  var v16:bv32;
  var v3:bool;
  var v55:bv32;
  var v52:bv32;
  var v50:bv32;
  var v42:bv8;
  var v45:bv32;
  var v44:bv8;
  var v46:bv8;
  var v47:bv8;
  var v41:bv8;
  var v48:bv8;
  var v49:bv8;
  var v51:bv32;
  var v40:bv8;
  var v43:bv8;
  var v68:bv8;
  var v54:bv32;
  var v59:bv8;
  var v61:bv8;
  var v53:bv32;
  var v62:bv8;
  var v63:bv8;
  var v65:bv32;
  var v58:bv8;
  var v60:bv8;
  var v57:bv8;
  var v66:bv8;
  var v67:bv8;
  var v64:bv8;
  var v81:bv8;
  var v75:bv32;
  var v83:bv8;
  var v69:bv8;
  var v82:bv8;
  var v72:bv32;
  var v79:bv8;
  var v80:bv8;
  var v77:bv8;
  var v74:bv32;
  var v70:bv32;
  var v71:bv32;
  var v73:bv32;
  var v78:bv8;
  var v86:bv8;
  var v94:bv32;
  var v84:bv8;
  var v88:bv8;
  var v95:bv32;
  var v92:bv32;
  var v85:bv32;
  var v91:bv32;
  var v87:bv8;
  var v89:bv8;
  var v90:bv32;
  var v93:bv32;
  var v107:bv8;
  var v100:bv8;
  var v105:bv32;
  var v109:bv8;
  var v104:bv8;
  var v101:bv8;
  var v97:bv8;
  var v108:bv8;
  var v110:bv32;
  var v115:bv32;
  var v106:bv8;
  var v98:bv8;
  var v102:bv8;
  var v99:bv8;
  var v103:bv8;
  var v111:bv32;
  var v112:bv32;
  var v114:bv32;
  var v113:bv32;
  var v156:bv32;
  var v116:bv32;
  var v136:bv32;
  var v178:bv8;
  var v188:bv8;
  var v189:bv8;
  var v192:bv32;
  var v186:bv8;
  var v182:bv8;
  var v179:bv8;
  var v183:bv8;
  var v187:bv8;
  var v180:bv8;
  var v181:bv8;
  var v184:bv8;
  var v185:bv32;
  var v190:bv32;
  var v191:bv32;
  var v129:bv8;
  var v126:bv8;
  var v117:bv8;
  var v130:bv32;
  var v118:bv8;
  var v131:bv32;
  var v128:bv8;
  var v123:bv8;
  var v119:bv8;
  var v120:bv8;
  var v124:bv8;
  var v125:bv32;
  var v121:bv8;
  var v122:bv8;
  var v127:bv8;
  var v145:bv32;
  var v132:bv32;
  var v140:bv8;
  var v141:bv8;
  var v133:bv32;
  var v143:bv8;
  var v134:bv32;
  var v135:bv32;
  var v137:bv8;
  var v139:bv8;
  var v138:bv8;
  var v142:bv8;
  var v144:bv8;
  var v151:bv32;
  var v158:bv8;
  var v146:bv8;
  var v155:bv32;
  var v148:bv8;
  var v159:bv8;
  var v149:bv8;
  var v152:bv32;
  var v150:bv32;
  var v153:bv32;
  var v154:bv32;
  var v157:bv8;
  var v147:bv8;
  var v164:bv8;
  var v165:bv32;
  var v161:bv8;
  var v160:bv8;
  var v167:bv8;
  var v168:bv8;
  var v175:bv32;
  var v166:bv8;
  var v173:bv32;
  var v162:bv8;
  var v170:bv32;
  var v171:bv32;
  var v169:bv8;
  var v163:bv8;
  var v172:bv32;
  var v174:bv32;
  var v177:bv8;
$entry:
  assert {:block_sourceloc} {:sourceloc_num 0} true;
  v0 := BV32_UREM(local_id_x, 4bv32);
  v1 := BV32_MUL(BV32_UDIV(local_id_x, 4bv32), 4bv32);
  assert {:sourceloc} {:sourceloc_num 1} true;
  v2 := $$inData[BV32_ADD(BV32_MUL(256bv32, group_id_x), local_id_x)];
  assert {:sourceloc} {:sourceloc_num 2} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_MUL(local_id_x, 4bv32)] := v2[8:0];
  assert {:sourceloc} {:sourceloc_num 3} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 1bv32)] := v2[16:8];
  assert {:sourceloc} {:sourceloc_num 4} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 2bv32)] := v2[24:16];
  assert {:sourceloc} {:sourceloc_num 5} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 3bv32)] := v2[32:24];
  $cnt.0 := 0bv32;
  goto $for.cond;
$for.cond:
  assert {:block_sourceloc} {:sourceloc_num 6} true;
  assert {:originated_from_invariant} {:sourceloc_num 7} (if (_WRITE_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE10tBox0Block ==> BV32_UDIV(BV32_MUL(4bv32, _WATCHED_OFFSET), 4bv32) == local_id_x) then 1bv1 else 0bv1) != 0bv1;
  assert {:originated_from_invariant} {:sourceloc_num 8} (if (_WRITE_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE10tBox1Block ==> BV32_UDIV(_WATCHED_OFFSET, 4bv32) == local_id_x) then 1bv1 else 0bv1) != 0bv1;
  assert {:originated_from_invariant} {:sourceloc_num 9} (if (_WRITE_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE10tBox2Block ==> BV32_UDIV(BV32_MUL(4bv32, _WATCHED_OFFSET), 4bv32) == local_id_x) then 1bv1 else 0bv1) != 0bv1;
  assert {:originated_from_invariant} {:sourceloc_num 10} (if (_WRITE_HAS_OCCURRED_$$_ZZ13aesEncrypt128PjS_iE10tBox3Block ==> BV32_UDIV(BV32_MUL(4bv32, _WATCHED_OFFSET), 4bv32) == local_id_x) then 1bv1 else 0bv1) != 0bv1;
  v3 := BV32_ULT($cnt.0, 1bv32);
  goto $truebb, $falsebb;
$for.body:
  assert {:block_sourceloc} {:sourceloc_num 11} true;
  assert {:sourceloc} {:sourceloc_num 12} true;
  v4 := $$TBox0[BV32_ADD(local_id_x, $cnt.0)];
  assert {:sourceloc} {:sourceloc_num 13} true;
  $$_ZZ13aesEncrypt128PjS_iE10tBox0Block[BV32_ADD(local_id_x, $cnt.0)] := v4;
  assert {:sourceloc} {:sourceloc_num 14} true;
  v5 := $$TBox1[BV32_ADD(local_id_x, $cnt.0)];
  assert {:sourceloc} {:sourceloc_num 15} true;
  $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_MUL(BV32_ADD(local_id_x, $cnt.0), 4bv32)] := v5[8:0];
  assert {:sourceloc} {:sourceloc_num 16} true;
  $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV32_ADD(local_id_x, $cnt.0), 4bv32), 1bv32)] := v5[16:8];
  assert {:sourceloc} {:sourceloc_num 17} true;
  $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV32_ADD(local_id_x, $cnt.0), 4bv32), 2bv32)] := v5[24:16];
  assert {:sourceloc} {:sourceloc_num 18} true;
  $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV32_ADD(local_id_x, $cnt.0), 4bv32), 3bv32)] := v5[32:24];
  assert {:sourceloc} {:sourceloc_num 19} true;
  v6 := $$TBox2[BV32_ADD(local_id_x, $cnt.0)];
  assert {:sourceloc} {:sourceloc_num 20} true;
  $$_ZZ13aesEncrypt128PjS_iE10tBox2Block[BV32_ADD(local_id_x, $cnt.0)] := v6;
  assert {:sourceloc} {:sourceloc_num 21} true;
  v7 := $$TBox3[BV32_ADD(local_id_x, $cnt.0)];
  assert {:sourceloc} {:sourceloc_num 22} true;
  $$_ZZ13aesEncrypt128PjS_iE10tBox3Block[BV32_ADD(local_id_x, $cnt.0)] := v7;
  goto $for.inc;
$for.inc:
  assert {:block_sourceloc} {:sourceloc_num 23} true;
  $cnt.0 := BV32_ADD($cnt.0, 1bv32);
  goto $for.cond;
$for.end:
  assert {:block_sourceloc} {:sourceloc_num 24} true;
  call {:sourceloc_num 25} $bugle_barrier(1bv1, 1bv1);
  assert {:sourceloc} {:sourceloc_num 26} true;
  v8 := $$texEKey128[0bv32];
  assert {:sourceloc} {:sourceloc_num 27} true;
  $$agg.tmp[0bv32] := v8;
  assert {:sourceloc} {:sourceloc_num 28} true;
  v9 := $$texEKey128[1bv32];
  assert {:sourceloc} {:sourceloc_num 29} true;
  $$agg.tmp[1bv32] := v9;
  assert {:sourceloc} {:sourceloc_num 30} true;
  v10 := $$texEKey128[2bv32];
  assert {:sourceloc} {:sourceloc_num 31} true;
  $$agg.tmp[2bv32] := v10;
  call {:sourceloc_num 32}   v11 := $_Z10tex1DfetchIjET_7textureIS0_Li1EL19cudaTextureReadMode0EEi(MKPTR($arrayId$$agg.tmp, 0bv32), v0);
  assert {:sourceloc} {:sourceloc_num 33} true;
  v12 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_MUL(local_id_x, 4bv32)];
  assert {:sourceloc} {:sourceloc_num 34} true;
  v13 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 35} true;
  v14 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 36} true;
  v15 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 3bv32)];
  v16 := BV32_XOR(v15 ++ v14 ++ v13 ++ v12, v11);
  assert {:sourceloc} {:sourceloc_num 37} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_MUL(local_id_x, 4bv32)] := v16[8:0];
  assert {:sourceloc} {:sourceloc_num 38} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 1bv32)] := v16[16:8];
  assert {:sourceloc} {:sourceloc_num 39} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 2bv32)] := v16[24:16];
  assert {:sourceloc} {:sourceloc_num 40} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 3bv32)] := v16[32:24];
  call {:sourceloc_num 41} $bugle_barrier(1bv1, 1bv1);
  assert {:sourceloc} {:sourceloc_num 42} true;
  v17 := $$posIdx_E[BV32_MUL(v0, 4bv32)];
  assert {:sourceloc} {:sourceloc_num 43} true;
  v18 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_MUL(BV32_ADD(BV8_ZEXT32(v17), v1), 4bv32)];
  assert {:sourceloc} {:sourceloc_num 44} true;
  v19 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4bv32), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 45} true;
  v20 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v19), v1), 4bv32), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 46} true;
  v21 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4bv32), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 47} true;
  v22 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v21), v1), 4bv32), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 48} true;
  v23 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 49} true;
  v24 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v23), v1), 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 50} true;
  v25 := $$_ZZ13aesEncrypt128PjS_iE10tBox0Block[BV8_ZEXT32(v18)];
  assert {:sourceloc} {:sourceloc_num 51} true;
  v26 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_MUL(BV8_ZEXT32(v20), 4bv32)];
  assert {:sourceloc} {:sourceloc_num 52} true;
  v27 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v20), 4bv32), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 53} true;
  v28 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v20), 4bv32), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 54} true;
  v29 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v20), 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 55} true;
  v30 := $$_ZZ13aesEncrypt128PjS_iE10tBox2Block[BV8_ZEXT32(v22)];
  assert {:sourceloc} {:sourceloc_num 56} true;
  v31 := $$_ZZ13aesEncrypt128PjS_iE10tBox3Block[BV8_ZEXT32(v24)];
  assert {:sourceloc} {:sourceloc_num 57} true;
  v32 := $$texEKey128[0bv32];
  assert {:sourceloc} {:sourceloc_num 58} true;
  $$agg.tmp97[0bv32] := v32;
  assert {:sourceloc} {:sourceloc_num 59} true;
  v33 := $$texEKey128[1bv32];
  assert {:sourceloc} {:sourceloc_num 60} true;
  $$agg.tmp97[1bv32] := v33;
  assert {:sourceloc} {:sourceloc_num 61} true;
  v34 := $$texEKey128[2bv32];
  assert {:sourceloc} {:sourceloc_num 62} true;
  $$agg.tmp97[2bv32] := v34;
  call {:sourceloc_num 63}   v35 := $_Z10tex1DfetchIjET_7textureIS0_Li1EL19cudaTextureReadMode0EEi(MKPTR($arrayId$$agg.tmp97, 0bv32), BV32_ADD(v0, 4bv32));
  v36 := BV32_XOR(BV32_XOR(BV32_XOR(BV32_XOR(v25, v29 ++ v28 ++ v27 ++ v26), v30), v31), v35);
  assert {:sourceloc} {:sourceloc_num 64} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_MUL(local_id_x, 4bv32)] := v36[8:0];
  assert {:sourceloc} {:sourceloc_num 65} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 1bv32)] := v36[16:8];
  assert {:sourceloc} {:sourceloc_num 66} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 2bv32)] := v36[24:16];
  assert {:sourceloc} {:sourceloc_num 67} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 3bv32)] := v36[32:24];
  call {:sourceloc_num 68} $bugle_barrier(1bv1, 1bv1);
  assert {:sourceloc} {:sourceloc_num 69} true;
  v37 := $$posIdx_E[BV32_MUL(v0, 4bv32)];
  assert {:sourceloc} {:sourceloc_num 70} true;
  v38 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_MUL(BV32_ADD(BV8_ZEXT32(v37), v1), 4bv32)];
  assert {:sourceloc} {:sourceloc_num 71} true;
  v39 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4bv32), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 72} true;
  v40 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v39), v1), 4bv32), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 73} true;
  v41 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4bv32), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 74} true;
  v42 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v41), v1), 4bv32), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 75} true;
  v43 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 76} true;
  v44 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v43), v1), 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 77} true;
  v45 := $$_ZZ13aesEncrypt128PjS_iE10tBox0Block[BV8_ZEXT32(v38)];
  assert {:sourceloc} {:sourceloc_num 78} true;
  v46 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_MUL(BV8_ZEXT32(v40), 4bv32)];
  assert {:sourceloc} {:sourceloc_num 79} true;
  v47 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v40), 4bv32), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 80} true;
  v48 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v40), 4bv32), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 81} true;
  v49 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v40), 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 82} true;
  v50 := $$_ZZ13aesEncrypt128PjS_iE10tBox2Block[BV8_ZEXT32(v42)];
  assert {:sourceloc} {:sourceloc_num 83} true;
  v51 := $$_ZZ13aesEncrypt128PjS_iE10tBox3Block[BV8_ZEXT32(v44)];
  assert {:sourceloc} {:sourceloc_num 84} true;
  v52 := $$texEKey128[0bv32];
  assert {:sourceloc} {:sourceloc_num 85} true;
  $$agg.tmp149[0bv32] := v52;
  assert {:sourceloc} {:sourceloc_num 86} true;
  v53 := $$texEKey128[1bv32];
  assert {:sourceloc} {:sourceloc_num 87} true;
  $$agg.tmp149[1bv32] := v53;
  assert {:sourceloc} {:sourceloc_num 88} true;
  v54 := $$texEKey128[2bv32];
  assert {:sourceloc} {:sourceloc_num 89} true;
  $$agg.tmp149[2bv32] := v54;
  call {:sourceloc_num 90}   v55 := $_Z10tex1DfetchIjET_7textureIS0_Li1EL19cudaTextureReadMode0EEi(MKPTR($arrayId$$agg.tmp149, 0bv32), BV32_ADD(v0, 8bv32));
  v56 := BV32_XOR(BV32_XOR(BV32_XOR(BV32_XOR(v45, v49 ++ v48 ++ v47 ++ v46), v50), v51), v55);
  assert {:sourceloc} {:sourceloc_num 91} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_MUL(local_id_x, 4bv32)] := v56[8:0];
  assert {:sourceloc} {:sourceloc_num 92} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 1bv32)] := v56[16:8];
  assert {:sourceloc} {:sourceloc_num 93} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 2bv32)] := v56[24:16];
  assert {:sourceloc} {:sourceloc_num 94} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 3bv32)] := v56[32:24];
  call {:sourceloc_num 95} $bugle_barrier(1bv1, 1bv1);
  assert {:sourceloc} {:sourceloc_num 96} true;
  v57 := $$posIdx_E[BV32_MUL(v0, 4bv32)];
  assert {:sourceloc} {:sourceloc_num 97} true;
  v58 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_MUL(BV32_ADD(BV8_ZEXT32(v57), v1), 4bv32)];
  assert {:sourceloc} {:sourceloc_num 98} true;
  v59 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4bv32), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 99} true;
  v60 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v59), v1), 4bv32), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 100} true;
  v61 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4bv32), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 101} true;
  v62 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v61), v1), 4bv32), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 102} true;
  v63 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 103} true;
  v64 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v63), v1), 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 104} true;
  v65 := $$_ZZ13aesEncrypt128PjS_iE10tBox0Block[BV8_ZEXT32(v58)];
  assert {:sourceloc} {:sourceloc_num 105} true;
  v66 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_MUL(BV8_ZEXT32(v60), 4bv32)];
  assert {:sourceloc} {:sourceloc_num 106} true;
  v67 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v60), 4bv32), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 107} true;
  v68 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v60), 4bv32), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 108} true;
  v69 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v60), 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 109} true;
  v70 := $$_ZZ13aesEncrypt128PjS_iE10tBox2Block[BV8_ZEXT32(v62)];
  assert {:sourceloc} {:sourceloc_num 110} true;
  v71 := $$_ZZ13aesEncrypt128PjS_iE10tBox3Block[BV8_ZEXT32(v64)];
  assert {:sourceloc} {:sourceloc_num 111} true;
  v72 := $$texEKey128[0bv32];
  assert {:sourceloc} {:sourceloc_num 112} true;
  $$agg.tmp201[0bv32] := v72;
  assert {:sourceloc} {:sourceloc_num 113} true;
  v73 := $$texEKey128[1bv32];
  assert {:sourceloc} {:sourceloc_num 114} true;
  $$agg.tmp201[1bv32] := v73;
  assert {:sourceloc} {:sourceloc_num 115} true;
  v74 := $$texEKey128[2bv32];
  assert {:sourceloc} {:sourceloc_num 116} true;
  $$agg.tmp201[2bv32] := v74;
  call {:sourceloc_num 117}   v75 := $_Z10tex1DfetchIjET_7textureIS0_Li1EL19cudaTextureReadMode0EEi(MKPTR($arrayId$$agg.tmp201, 0bv32), BV32_ADD(v0, 12bv32));
  v76 := BV32_XOR(BV32_XOR(BV32_XOR(BV32_XOR(v65, v69 ++ v68 ++ v67 ++ v66), v70), v71), v75);
  assert {:sourceloc} {:sourceloc_num 118} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_MUL(local_id_x, 4bv32)] := v76[8:0];
  assert {:sourceloc} {:sourceloc_num 119} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 1bv32)] := v76[16:8];
  assert {:sourceloc} {:sourceloc_num 120} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 2bv32)] := v76[24:16];
  assert {:sourceloc} {:sourceloc_num 121} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 3bv32)] := v76[32:24];
  call {:sourceloc_num 122} $bugle_barrier(1bv1, 1bv1);
  assert {:sourceloc} {:sourceloc_num 123} true;
  v77 := $$posIdx_E[BV32_MUL(v0, 4bv32)];
  assert {:sourceloc} {:sourceloc_num 124} true;
  v78 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_MUL(BV32_ADD(BV8_ZEXT32(v77), v1), 4bv32)];
  assert {:sourceloc} {:sourceloc_num 125} true;
  v79 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4bv32), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 126} true;
  v80 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v79), v1), 4bv32), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 127} true;
  v81 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4bv32), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 128} true;
  v82 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v81), v1), 4bv32), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 129} true;
  v83 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 130} true;
  v84 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v83), v1), 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 131} true;
  v85 := $$_ZZ13aesEncrypt128PjS_iE10tBox0Block[BV8_ZEXT32(v78)];
  assert {:sourceloc} {:sourceloc_num 132} true;
  v86 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_MUL(BV8_ZEXT32(v80), 4bv32)];
  assert {:sourceloc} {:sourceloc_num 133} true;
  v87 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v80), 4bv32), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 134} true;
  v88 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v80), 4bv32), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 135} true;
  v89 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v80), 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 136} true;
  v90 := $$_ZZ13aesEncrypt128PjS_iE10tBox2Block[BV8_ZEXT32(v82)];
  assert {:sourceloc} {:sourceloc_num 137} true;
  v91 := $$_ZZ13aesEncrypt128PjS_iE10tBox3Block[BV8_ZEXT32(v84)];
  assert {:sourceloc} {:sourceloc_num 138} true;
  v92 := $$texEKey128[0bv32];
  assert {:sourceloc} {:sourceloc_num 139} true;
  $$agg.tmp253[0bv32] := v92;
  assert {:sourceloc} {:sourceloc_num 140} true;
  v93 := $$texEKey128[1bv32];
  assert {:sourceloc} {:sourceloc_num 141} true;
  $$agg.tmp253[1bv32] := v93;
  assert {:sourceloc} {:sourceloc_num 142} true;
  v94 := $$texEKey128[2bv32];
  assert {:sourceloc} {:sourceloc_num 143} true;
  $$agg.tmp253[2bv32] := v94;
  call {:sourceloc_num 144}   v95 := $_Z10tex1DfetchIjET_7textureIS0_Li1EL19cudaTextureReadMode0EEi(MKPTR($arrayId$$agg.tmp253, 0bv32), BV32_ADD(v0, 16bv32));
  v96 := BV32_XOR(BV32_XOR(BV32_XOR(BV32_XOR(v85, v89 ++ v88 ++ v87 ++ v86), v90), v91), v95);
  assert {:sourceloc} {:sourceloc_num 145} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_MUL(local_id_x, 4bv32)] := v96[8:0];
  assert {:sourceloc} {:sourceloc_num 146} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 1bv32)] := v96[16:8];
  assert {:sourceloc} {:sourceloc_num 147} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 2bv32)] := v96[24:16];
  assert {:sourceloc} {:sourceloc_num 148} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 3bv32)] := v96[32:24];
  call {:sourceloc_num 149} $bugle_barrier(1bv1, 1bv1);
  assert {:sourceloc} {:sourceloc_num 150} true;
  v97 := $$posIdx_E[BV32_MUL(v0, 4bv32)];
  assert {:sourceloc} {:sourceloc_num 151} true;
  v98 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_MUL(BV32_ADD(BV8_ZEXT32(v97), v1), 4bv32)];
  assert {:sourceloc} {:sourceloc_num 152} true;
  v99 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4bv32), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 153} true;
  v100 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v99), v1), 4bv32), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 154} true;
  v101 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4bv32), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 155} true;
  v102 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v101), v1), 4bv32), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 156} true;
  v103 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 157} true;
  v104 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v103), v1), 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 158} true;
  v105 := $$_ZZ13aesEncrypt128PjS_iE10tBox0Block[BV8_ZEXT32(v98)];
  assert {:sourceloc} {:sourceloc_num 159} true;
  v106 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_MUL(BV8_ZEXT32(v100), 4bv32)];
  assert {:sourceloc} {:sourceloc_num 160} true;
  v107 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v100), 4bv32), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 161} true;
  v108 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v100), 4bv32), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 162} true;
  v109 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v100), 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 163} true;
  v110 := $$_ZZ13aesEncrypt128PjS_iE10tBox2Block[BV8_ZEXT32(v102)];
  assert {:sourceloc} {:sourceloc_num 164} true;
  v111 := $$_ZZ13aesEncrypt128PjS_iE10tBox3Block[BV8_ZEXT32(v104)];
  assert {:sourceloc} {:sourceloc_num 165} true;
  v112 := $$texEKey128[0bv32];
  assert {:sourceloc} {:sourceloc_num 166} true;
  $$agg.tmp305[0bv32] := v112;
  assert {:sourceloc} {:sourceloc_num 167} true;
  v113 := $$texEKey128[1bv32];
  assert {:sourceloc} {:sourceloc_num 168} true;
  $$agg.tmp305[1bv32] := v113;
  assert {:sourceloc} {:sourceloc_num 169} true;
  v114 := $$texEKey128[2bv32];
  assert {:sourceloc} {:sourceloc_num 170} true;
  $$agg.tmp305[2bv32] := v114;
  call {:sourceloc_num 171}   v115 := $_Z10tex1DfetchIjET_7textureIS0_Li1EL19cudaTextureReadMode0EEi(MKPTR($arrayId$$agg.tmp305, 0bv32), BV32_ADD(v0, 20bv32));
  v116 := BV32_XOR(BV32_XOR(BV32_XOR(BV32_XOR(v105, v109 ++ v108 ++ v107 ++ v106), v110), v111), v115);
  assert {:sourceloc} {:sourceloc_num 172} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_MUL(local_id_x, 4bv32)] := v116[8:0];
  assert {:sourceloc} {:sourceloc_num 173} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 1bv32)] := v116[16:8];
  assert {:sourceloc} {:sourceloc_num 174} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 2bv32)] := v116[24:16];
  assert {:sourceloc} {:sourceloc_num 175} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 3bv32)] := v116[32:24];
  call {:sourceloc_num 176} $bugle_barrier(1bv1, 1bv1);
  assert {:sourceloc} {:sourceloc_num 177} true;
  v117 := $$posIdx_E[BV32_MUL(v0, 4bv32)];
  assert {:sourceloc} {:sourceloc_num 178} true;
  v118 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_MUL(BV32_ADD(BV8_ZEXT32(v117), v1), 4bv32)];
  assert {:sourceloc} {:sourceloc_num 179} true;
  v119 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4bv32), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 180} true;
  v120 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v119), v1), 4bv32), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 181} true;
  v121 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4bv32), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 182} true;
  v122 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v121), v1), 4bv32), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 183} true;
  v123 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 184} true;
  v124 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v123), v1), 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 185} true;
  v125 := $$_ZZ13aesEncrypt128PjS_iE10tBox0Block[BV8_ZEXT32(v118)];
  assert {:sourceloc} {:sourceloc_num 186} true;
  v126 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_MUL(BV8_ZEXT32(v120), 4bv32)];
  assert {:sourceloc} {:sourceloc_num 187} true;
  v127 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v120), 4bv32), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 188} true;
  v128 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v120), 4bv32), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 189} true;
  v129 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v120), 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 190} true;
  v130 := $$_ZZ13aesEncrypt128PjS_iE10tBox2Block[BV8_ZEXT32(v122)];
  assert {:sourceloc} {:sourceloc_num 191} true;
  v131 := $$_ZZ13aesEncrypt128PjS_iE10tBox3Block[BV8_ZEXT32(v124)];
  assert {:sourceloc} {:sourceloc_num 192} true;
  v132 := $$texEKey128[0bv32];
  assert {:sourceloc} {:sourceloc_num 193} true;
  $$agg.tmp357[0bv32] := v132;
  assert {:sourceloc} {:sourceloc_num 194} true;
  v133 := $$texEKey128[1bv32];
  assert {:sourceloc} {:sourceloc_num 195} true;
  $$agg.tmp357[1bv32] := v133;
  assert {:sourceloc} {:sourceloc_num 196} true;
  v134 := $$texEKey128[2bv32];
  assert {:sourceloc} {:sourceloc_num 197} true;
  $$agg.tmp357[2bv32] := v134;
  call {:sourceloc_num 198}   v135 := $_Z10tex1DfetchIjET_7textureIS0_Li1EL19cudaTextureReadMode0EEi(MKPTR($arrayId$$agg.tmp357, 0bv32), BV32_ADD(v0, 24bv32));
  v136 := BV32_XOR(BV32_XOR(BV32_XOR(BV32_XOR(v125, v129 ++ v128 ++ v127 ++ v126), v130), v131), v135);
  assert {:sourceloc} {:sourceloc_num 199} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_MUL(local_id_x, 4bv32)] := v136[8:0];
  assert {:sourceloc} {:sourceloc_num 200} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 1bv32)] := v136[16:8];
  assert {:sourceloc} {:sourceloc_num 201} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 2bv32)] := v136[24:16];
  assert {:sourceloc} {:sourceloc_num 202} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 3bv32)] := v136[32:24];
  call {:sourceloc_num 203} $bugle_barrier(1bv1, 1bv1);
  assert {:sourceloc} {:sourceloc_num 204} true;
  v137 := $$posIdx_E[BV32_MUL(v0, 4bv32)];
  assert {:sourceloc} {:sourceloc_num 205} true;
  v138 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_MUL(BV32_ADD(BV8_ZEXT32(v137), v1), 4bv32)];
  assert {:sourceloc} {:sourceloc_num 206} true;
  v139 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4bv32), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 207} true;
  v140 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v139), v1), 4bv32), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 208} true;
  v141 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4bv32), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 209} true;
  v142 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v141), v1), 4bv32), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 210} true;
  v143 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 211} true;
  v144 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v143), v1), 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 212} true;
  v145 := $$_ZZ13aesEncrypt128PjS_iE10tBox0Block[BV8_ZEXT32(v138)];
  assert {:sourceloc} {:sourceloc_num 213} true;
  v146 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_MUL(BV8_ZEXT32(v140), 4bv32)];
  assert {:sourceloc} {:sourceloc_num 214} true;
  v147 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v140), 4bv32), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 215} true;
  v148 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v140), 4bv32), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 216} true;
  v149 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v140), 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 217} true;
  v150 := $$_ZZ13aesEncrypt128PjS_iE10tBox2Block[BV8_ZEXT32(v142)];
  assert {:sourceloc} {:sourceloc_num 218} true;
  v151 := $$_ZZ13aesEncrypt128PjS_iE10tBox3Block[BV8_ZEXT32(v144)];
  assert {:sourceloc} {:sourceloc_num 219} true;
  v152 := $$texEKey128[0bv32];
  assert {:sourceloc} {:sourceloc_num 220} true;
  $$agg.tmp409[0bv32] := v152;
  assert {:sourceloc} {:sourceloc_num 221} true;
  v153 := $$texEKey128[1bv32];
  assert {:sourceloc} {:sourceloc_num 222} true;
  $$agg.tmp409[1bv32] := v153;
  assert {:sourceloc} {:sourceloc_num 223} true;
  v154 := $$texEKey128[2bv32];
  assert {:sourceloc} {:sourceloc_num 224} true;
  $$agg.tmp409[2bv32] := v154;
  call {:sourceloc_num 225}   v155 := $_Z10tex1DfetchIjET_7textureIS0_Li1EL19cudaTextureReadMode0EEi(MKPTR($arrayId$$agg.tmp409, 0bv32), BV32_ADD(v0, 28bv32));
  v156 := BV32_XOR(BV32_XOR(BV32_XOR(BV32_XOR(v145, v149 ++ v148 ++ v147 ++ v146), v150), v151), v155);
  assert {:sourceloc} {:sourceloc_num 226} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_MUL(local_id_x, 4bv32)] := v156[8:0];
  assert {:sourceloc} {:sourceloc_num 227} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 1bv32)] := v156[16:8];
  assert {:sourceloc} {:sourceloc_num 228} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 2bv32)] := v156[24:16];
  assert {:sourceloc} {:sourceloc_num 229} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 3bv32)] := v156[32:24];
  call {:sourceloc_num 230} $bugle_barrier(1bv1, 1bv1);
  assert {:sourceloc} {:sourceloc_num 231} true;
  v157 := $$posIdx_E[BV32_MUL(v0, 4bv32)];
  assert {:sourceloc} {:sourceloc_num 232} true;
  v158 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_MUL(BV32_ADD(BV8_ZEXT32(v157), v1), 4bv32)];
  assert {:sourceloc} {:sourceloc_num 233} true;
  v159 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4bv32), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 234} true;
  v160 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v159), v1), 4bv32), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 235} true;
  v161 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4bv32), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 236} true;
  v162 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v161), v1), 4bv32), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 237} true;
  v163 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 238} true;
  v164 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v163), v1), 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 239} true;
  v165 := $$_ZZ13aesEncrypt128PjS_iE10tBox0Block[BV8_ZEXT32(v158)];
  assert {:sourceloc} {:sourceloc_num 240} true;
  v166 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_MUL(BV8_ZEXT32(v160), 4bv32)];
  assert {:sourceloc} {:sourceloc_num 241} true;
  v167 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v160), 4bv32), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 242} true;
  v168 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v160), 4bv32), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 243} true;
  v169 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v160), 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 244} true;
  v170 := $$_ZZ13aesEncrypt128PjS_iE10tBox2Block[BV8_ZEXT32(v162)];
  assert {:sourceloc} {:sourceloc_num 245} true;
  v171 := $$_ZZ13aesEncrypt128PjS_iE10tBox3Block[BV8_ZEXT32(v164)];
  assert {:sourceloc} {:sourceloc_num 246} true;
  v172 := $$texEKey128[0bv32];
  assert {:sourceloc} {:sourceloc_num 247} true;
  $$agg.tmp461[0bv32] := v172;
  assert {:sourceloc} {:sourceloc_num 248} true;
  v173 := $$texEKey128[1bv32];
  assert {:sourceloc} {:sourceloc_num 249} true;
  $$agg.tmp461[1bv32] := v173;
  assert {:sourceloc} {:sourceloc_num 250} true;
  v174 := $$texEKey128[2bv32];
  assert {:sourceloc} {:sourceloc_num 251} true;
  $$agg.tmp461[2bv32] := v174;
  call {:sourceloc_num 252}   v175 := $_Z10tex1DfetchIjET_7textureIS0_Li1EL19cudaTextureReadMode0EEi(MKPTR($arrayId$$agg.tmp461, 0bv32), BV32_ADD(v0, 32bv32));
  v176 := BV32_XOR(BV32_XOR(BV32_XOR(BV32_XOR(v165, v169 ++ v168 ++ v167 ++ v166), v170), v171), v175);
  assert {:sourceloc} {:sourceloc_num 253} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_MUL(local_id_x, 4bv32)] := v176[8:0];
  assert {:sourceloc} {:sourceloc_num 254} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 1bv32)] := v176[16:8];
  assert {:sourceloc} {:sourceloc_num 255} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 2bv32)] := v176[24:16];
  assert {:sourceloc} {:sourceloc_num 256} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 3bv32)] := v176[32:24];
  call {:sourceloc_num 257} $bugle_barrier(1bv1, 1bv1);
  assert {:sourceloc} {:sourceloc_num 258} true;
  v177 := $$posIdx_E[BV32_MUL(v0, 4bv32)];
  assert {:sourceloc} {:sourceloc_num 259} true;
  v178 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_MUL(BV32_ADD(BV8_ZEXT32(v177), v1), 4bv32)];
  assert {:sourceloc} {:sourceloc_num 260} true;
  v179 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4bv32), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 261} true;
  v180 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v179), v1), 4bv32), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 262} true;
  v181 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4bv32), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 263} true;
  v182 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v181), v1), 4bv32), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 264} true;
  v183 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 265} true;
  v184 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v183), v1), 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 266} true;
  v185 := $$_ZZ13aesEncrypt128PjS_iE10tBox0Block[BV8_ZEXT32(v178)];
  assert {:sourceloc} {:sourceloc_num 267} true;
  v186 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_MUL(BV8_ZEXT32(v180), 4bv32)];
  assert {:sourceloc} {:sourceloc_num 268} true;
  v187 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v180), 4bv32), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 269} true;
  v188 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v180), 4bv32), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 270} true;
  v189 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v180), 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 271} true;
  v190 := $$_ZZ13aesEncrypt128PjS_iE10tBox2Block[BV8_ZEXT32(v182)];
  assert {:sourceloc} {:sourceloc_num 272} true;
  v191 := $$_ZZ13aesEncrypt128PjS_iE10tBox3Block[BV8_ZEXT32(v184)];
  assert {:sourceloc} {:sourceloc_num 273} true;
  v192 := $$texEKey128[0bv32];
  assert {:sourceloc} {:sourceloc_num 274} true;
  $$agg.tmp513[0bv32] := v192;
  assert {:sourceloc} {:sourceloc_num 275} true;
  v193 := $$texEKey128[1bv32];
  assert {:sourceloc} {:sourceloc_num 276} true;
  $$agg.tmp513[1bv32] := v193;
  assert {:sourceloc} {:sourceloc_num 277} true;
  v194 := $$texEKey128[2bv32];
  assert {:sourceloc} {:sourceloc_num 278} true;
  $$agg.tmp513[2bv32] := v194;
  call {:sourceloc_num 279}   v195 := $_Z10tex1DfetchIjET_7textureIS0_Li1EL19cudaTextureReadMode0EEi(MKPTR($arrayId$$agg.tmp513, 0bv32), BV32_ADD(v0, 36bv32));
  v196 := BV32_XOR(BV32_XOR(BV32_XOR(BV32_XOR(v185, v189 ++ v188 ++ v187 ++ v186), v190), v191), v195);
  assert {:sourceloc} {:sourceloc_num 280} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_MUL(local_id_x, 4bv32)] := v196[8:0];
  assert {:sourceloc} {:sourceloc_num 281} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 1bv32)] := v196[16:8];
  assert {:sourceloc} {:sourceloc_num 282} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 2bv32)] := v196[24:16];
  assert {:sourceloc} {:sourceloc_num 283} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 3bv32)] := v196[32:24];
  call {:sourceloc_num 284} $bugle_barrier(1bv1, 1bv1);
  assert {:sourceloc} {:sourceloc_num 285} true;
  v197 := $$posIdx_E[BV32_MUL(v0, 4bv32)];
  assert {:sourceloc} {:sourceloc_num 286} true;
  v198 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_MUL(BV32_ADD(BV8_ZEXT32(v197), v1), 4bv32)];
  assert {:sourceloc} {:sourceloc_num 287} true;
  v199 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4bv32), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 288} true;
  v200 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v199), v1), 4bv32), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 289} true;
  v201 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4bv32), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 290} true;
  v202 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v201), v1), 4bv32), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 291} true;
  v203 := $$posIdx_E[BV32_ADD(BV32_MUL(v0, 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 292} true;
  v204 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock1[BV32_ADD(BV32_MUL(BV32_ADD(BV8_ZEXT32(v203), v1), 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 293} true;
  v205 := $$texEKey128[0bv32];
  assert {:sourceloc} {:sourceloc_num 294} true;
  $$agg.tmp557[0bv32] := v205;
  assert {:sourceloc} {:sourceloc_num 295} true;
  v206 := $$texEKey128[1bv32];
  assert {:sourceloc} {:sourceloc_num 296} true;
  $$agg.tmp557[1bv32] := v206;
  assert {:sourceloc} {:sourceloc_num 297} true;
  v207 := $$texEKey128[2bv32];
  assert {:sourceloc} {:sourceloc_num 298} true;
  $$agg.tmp557[2bv32] := v207;
  call {:sourceloc_num 299}   v208 := $_Z10tex1DfetchIjET_7textureIS0_Li1EL19cudaTextureReadMode0EEi(MKPTR($arrayId$$agg.tmp557, 0bv32), BV32_ADD(v0, 40bv32));
  assert {:sourceloc} {:sourceloc_num 300} true;
  v209 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v204), 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 301} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 3bv32)] := BV32_XOR(BV8_ZEXT32(v209), BV32_LSHR(v208, 24bv32))[8:0];
  assert {:sourceloc} {:sourceloc_num 302} true;
  v210 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v202), 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 303} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 2bv32)] := BV32_XOR(BV8_ZEXT32(v210), BV32_AND(BV32_LSHR(v208, 16bv32), 255bv32))[8:0];
  assert {:sourceloc} {:sourceloc_num 304} true;
  v211 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v200), 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 305} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 1bv32)] := BV32_XOR(BV8_ZEXT32(v211), BV32_AND(BV32_LSHR(v208, 8bv32), 255bv32))[8:0];
  assert {:sourceloc} {:sourceloc_num 306} true;
  v212 := $$_ZZ13aesEncrypt128PjS_iE10tBox1Block[BV32_ADD(BV32_MUL(BV8_ZEXT32(v198), 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 307} true;
  $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_MUL(local_id_x, 4bv32)] := BV32_XOR(BV8_ZEXT32(v212), BV32_AND(v208, 255bv32))[8:0];
  call {:sourceloc_num 308} $bugle_barrier(1bv1, 1bv1);
  assert {:sourceloc} {:sourceloc_num 309} true;
  v213 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_MUL(local_id_x, 4bv32)];
  assert {:sourceloc} {:sourceloc_num 310} true;
  v214 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 311} true;
  v215 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 312} true;
  v216 := $$_ZZ13aesEncrypt128PjS_iE11stageBlock2[BV32_ADD(BV32_MUL(local_id_x, 4bv32), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 313} true;
  $$result[BV32_ADD(BV32_MUL(256bv32, group_id_x), local_id_x)] := v216 ++ v215 ++ v214 ++ v213;
  return;
$truebb:
  assume {:partition} v3;
  assert {:block_sourceloc} {:sourceloc_num 314} true;
  goto $for.body;
$falsebb:
  assume {:partition} !v3;
  assert {:block_sourceloc} {:sourceloc_num 315} true;
  goto $for.end;
}
procedure {:source_name "bugle_barrier"} {:barrier} $bugle_barrier($0:bv1, $1:bv1);
procedure {:source_name "_Z10tex1DfetchIjET_7textureIS0_Li1EL19cudaTextureReadMode0EEi"} $_Z10tex1DfetchIjET_7textureIS0_Li1EL19cudaTextureReadMode0EEi($0:ptr, $1:bv32) returns ($ret:bv32);
axiom (if group_size_y == 1bv32 then 1bv1 else 0bv1) != 0bv1;
axiom (if group_size_z == 1bv32 then 1bv1 else 0bv1) != 0bv1;
axiom (if num_groups_y == 1bv32 then 1bv1 else 0bv1) != 0bv1;
axiom (if num_groups_z == 1bv32 then 1bv1 else 0bv1) != 0bv1;
axiom (if group_size_x == 256bv32 then 1bv1 else 0bv1) != 0bv1;
axiom (if num_groups_x == 128bv32 then 1bv1 else 0bv1) != 0bv1;
