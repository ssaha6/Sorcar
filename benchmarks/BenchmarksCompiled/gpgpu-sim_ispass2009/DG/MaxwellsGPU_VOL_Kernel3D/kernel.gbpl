type _SIZE_T_TYPE = bv32;

procedure _ATOMIC_OP32(x : [bv32]bv32, y : bv32) returns (z : bv32, A : [bv32]bv32);
procedure _ATOMIC_OP8(x : [bv32]bv8, y : bv32) returns (z : bv8, A : [bv32]bv8);
var {:source_name "g_rhsQ"} {:global} $$g_rhsQ : [bv32]bv32;
axiom {:array_info "$$g_rhsQ"} {:global} {:elem_width 32} {:source_name "g_rhsQ"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$g_rhsQ : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$g_rhsQ : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$g_rhsQ : bool;
const $arrayId$$g_rhsQ : arrayId;
axiom $arrayId$$g_rhsQ == 1bv5;

var {:source_name "agg.tmp"} $$agg.tmp : [bv32]bv8;
axiom {:array_info "$$agg.tmp"} {:elem_width 8} {:source_name "agg.tmp"} {:source_elem_width 96} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp : arrayId;
axiom $arrayId$$agg.tmp == 2bv5;

var {:source_name "agg.tmp4"} $$agg.tmp4 : [bv32]bv8;
axiom {:array_info "$$agg.tmp4"} {:elem_width 8} {:source_name "agg.tmp4"} {:source_elem_width 96} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp4 : arrayId;
axiom $arrayId$$agg.tmp4 == 3bv5;

var {:source_name "agg.tmp9"} $$agg.tmp9 : [bv32]bv8;
axiom {:array_info "$$agg.tmp9"} {:elem_width 8} {:source_name "agg.tmp9"} {:source_elem_width 96} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp9 : arrayId;
axiom $arrayId$$agg.tmp9 == 4bv5;

var {:source_name "agg.tmp14"} $$agg.tmp14 : [bv32]bv8;
axiom {:array_info "$$agg.tmp14"} {:elem_width 8} {:source_name "agg.tmp14"} {:source_elem_width 96} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp14 : arrayId;
axiom $arrayId$$agg.tmp14 == 5bv5;

var {:source_name "agg.tmp19"} $$agg.tmp19 : [bv32]bv8;
axiom {:array_info "$$agg.tmp19"} {:elem_width 8} {:source_name "agg.tmp19"} {:source_elem_width 96} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp19 : arrayId;
axiom $arrayId$$agg.tmp19 == 6bv5;

var {:source_name "agg.tmp24"} $$agg.tmp24 : [bv32]bv8;
axiom {:array_info "$$agg.tmp24"} {:elem_width 8} {:source_name "agg.tmp24"} {:source_elem_width 96} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp24 : arrayId;
axiom $arrayId$$agg.tmp24 == 7bv5;

var {:source_name "agg.tmp27"} $$agg.tmp27 : [bv32]bv8;
axiom {:array_info "$$agg.tmp27"} {:elem_width 8} {:source_name "agg.tmp27"} {:source_elem_width 96} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp27 : arrayId;
axiom $arrayId$$agg.tmp27 == 8bv5;

var {:source_name "D"} $$D : [bv32]bv32;
axiom {:array_info "$$D"} {:elem_width 32} {:source_name "D"} {:source_elem_width 128} {:source_dimensions "1"} true;
const $arrayId$$D : arrayId;
axiom $arrayId$$D == 9bv5;

var {:source_name "agg.tmp32"} $$agg.tmp32 : [bv32]bv8;
axiom {:array_info "$$agg.tmp32"} {:elem_width 8} {:source_name "agg.tmp32"} {:source_elem_width 192} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp32 : arrayId;
axiom $arrayId$$agg.tmp32 == 10bv5;

var {:source_name "ref.tmp"} $$ref.tmp : [bv32]bv32;
axiom {:array_info "$$ref.tmp"} {:elem_width 32} {:source_name "ref.tmp"} {:source_elem_width 128} {:source_dimensions "1"} true;
const $arrayId$$ref.tmp : arrayId;
axiom $arrayId$$ref.tmp == 11bv5;

var {:source_name "agg.tmp98"} $$agg.tmp98 : [bv32]bv8;
axiom {:array_info "$$agg.tmp98"} {:elem_width 8} {:source_name "agg.tmp98"} {:source_elem_width 192} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp98 : arrayId;
axiom $arrayId$$agg.tmp98 == 12bv5;

var {:source_name "ref.tmp168"} $$ref.tmp168 : [bv32]bv32;
axiom {:array_info "$$ref.tmp168"} {:elem_width 32} {:source_name "ref.tmp168"} {:source_elem_width 128} {:source_dimensions "1"} true;
const $arrayId$$ref.tmp168 : arrayId;
axiom $arrayId$$ref.tmp168 == 13bv5;

var {:source_name "agg.tmp169"} $$agg.tmp169 : [bv32]bv8;
axiom {:array_info "$$agg.tmp169"} {:elem_width 8} {:source_name "agg.tmp169"} {:source_elem_width 192} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp169 : arrayId;
axiom $arrayId$$agg.tmp169 == 14bv5;

var {:source_name "t_Q"} {:global} $$t_Q : [bv32]bv8;
axiom {:array_info "$$t_Q"} {:global} {:elem_width 8} {:source_name "t_Q"} {:source_elem_width 96} {:source_dimensions "1"} true;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 96} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$t_Q : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 96} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$t_Q : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 96} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$t_Q : bool;
const $arrayId$$t_Q : arrayId;
axiom $arrayId$$t_Q == 15bv5;

var {:source_name "s_Q"} {:group_shared} $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE3s_Q : [bv32]bv32;
axiom {:array_info "$$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE3s_Q"} {:group_shared} {:elem_width 32} {:source_name "s_Q"} {:source_elem_width 32} {:source_dimensions "576"} true;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE3s_Q : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE3s_Q : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE3s_Q : bool;
const $arrayId$$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE3s_Q : arrayId;
axiom $arrayId$$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE3s_Q == 16bv5;

var {:source_name "t_vgeo"} {:global} $$t_vgeo : [bv32]bv8;
axiom {:array_info "$$t_vgeo"} {:global} {:elem_width 8} {:source_name "t_vgeo"} {:source_elem_width 96} {:source_dimensions "1"} true;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 96} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$t_vgeo : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 96} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$t_vgeo : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 96} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$t_vgeo : bool;
const $arrayId$$t_vgeo : arrayId;
axiom $arrayId$$t_vgeo == 17bv5;

var {:source_name "s_facs"} {:group_shared} $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE6s_facs : [bv32]bv32;
axiom {:array_info "$$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE6s_facs"} {:group_shared} {:elem_width 32} {:source_name "s_facs"} {:source_elem_width 32} {:source_dimensions "12"} true;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE6s_facs : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE6s_facs : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE6s_facs : bool;
const $arrayId$$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE6s_facs : arrayId;
axiom $arrayId$$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE6s_facs == 18bv5;

var {:source_name "t_DrDsDt"} {:global} $$t_DrDsDt : [bv32]bv8;
axiom {:array_info "$$t_DrDsDt"} {:global} {:elem_width 8} {:source_name "t_DrDsDt"} {:source_elem_width 192} {:source_dimensions "1"} true;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 192} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$t_DrDsDt : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 192} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$t_DrDsDt : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 192} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$t_DrDsDt : bool;
const $arrayId$$t_DrDsDt : arrayId;
axiom $arrayId$$t_DrDsDt == 19bv5;

type ptr = bv32;
type arrayId = bv5;

function {:inline true} MKPTR(base: arrayId, offset: bv32) : ptr {
  base ++ offset[27:0]
}

function {:inline true} base#MKPTR(p: ptr) : arrayId {
  p[32:27]
}

function {:inline true} offset#MKPTR(p : ptr) : bv32 {
  0bv5++p[27:0]
}

const $arrayId$$null$ : arrayId;
axiom $arrayId$$null$ == 0bv5;

const _WATCHED_OFFSET : bv32;
const {:group_id_x} group_id_x : bv32;
const {:group_size_x} group_size_x : bv32;
const {:group_size_y} group_size_y : bv32;
const {:group_size_z} group_size_z : bv32;
const {:local_id_x} local_id_x : bv32;
const {:num_groups_x} num_groups_x : bv32;
const {:num_groups_y} num_groups_y : bv32;
const {:num_groups_z} num_groups_z : bv32;
function FADD32(bv32, bv32) : bv32;
function FMUL32(bv32, bv32) : bv32;
function FSUB32(bv32, bv32) : bv32;
function {:bvbuiltin "bvadd"} BV32_ADD(bv32, bv32) : bv32;
function {:bvbuiltin "bvmul"} BV32_MUL(bv32, bv32) : bv32;
function {:bvbuiltin "bvslt"} BV32_SLT(bv32, bv32) : bool;
function {:bvbuiltin "bvsub"} BV32_SUB(bv32, bv32) : bv32;
procedure {:source_name "MaxwellsGPU_VOL_Kernel3D"} {:kernel} $_Z24MaxwellsGPU_VOL_Kernel3DPf()
{
  var $dEydt.0:bv32;
  var $dEyds.0:bv32;
  var $dEydr.0:bv32;
  var $dExdt.0:bv32;
  var $dExds.0:bv32;
  var $dExdr.0:bv32;
  var $dHzdt.0:bv32;
  var $dHzds.0:bv32;
  var $dHzdr.0:bv32;
  var $dHydt.0:bv32;
  var $dHyds.0:bv32;
  var $dHydr.0:bv32;
  var $dHxdt.0:bv32;
  var $dHxds.0:bv32;
  var $dHxdr.0:bv32;
  var $m.0:bv32;
  var $dEzdr.0:bv32;
  var $dEzds.0:bv32;
  var $dEzdt.0:bv32;
  var v1:bv8;
  var v3:bv8;
  var v11:bv8;
  var v12:bv8;
  var v4:bv8;
  var v10:bv8;
  var v2:bv8;
  var v6:bv8;
  var v8:bv8;
  var v9:bv8;
  var v5:bv8;
  var v7:bv8;
  var v17:bv8;
  var v21:bv8;
  var v13:bv32;
  var v22:bv8;
  var v16:bv8;
  var v14:bv8;
  var v20:bv8;
  var v19:bv8;
  var v18:bv8;
  var v15:bv8;
  var v32:bv8;
  var v30:bv8;
  var v26:bv32;
  var v29:bv8;
  var v25:bv8;
  var v28:bv8;
  var v31:bv8;
  var v23:bv8;
  var v24:bv8;
  var v27:bv8;
  var v34:bv8;
  var v33:bv8;
  var v35:bv8;
  var v0:bv32;
  var v45:bv8;
  var v46:bv8;
  var v47:bv8;
  var v42:bv8;
  var v40:bv8;
  var v41:bv8;
  var v43:bv8;
  var v38:bv8;
  var v39:bv32;
  var v44:bv8;
  var v57:bv8;
  var v54:bv8;
  var v49:bv8;
  var v51:bv8;
  var v50:bv8;
  var v53:bv8;
  var v55:bv8;
  var v48:bv8;
  var v52:bv32;
  var v56:bv8;
  var v61:bv8;
  var v58:bv8;
  var v60:bv8;
  var v62:bv8;
  var v65:bv32;
  var v63:bv8;
  var v68:bv8;
  var v67:bv8;
  var v64:bv8;
  var v59:bv8;
  var v66:bv8;
  var v77:bv8;
  var v69:bv8;
  var v78:bv32;
  var v74:bv8;
  var v73:bv8;
  var v70:bv8;
  var v71:bv8;
  var v76:bv8;
  var v72:bv8;
  var v75:bv8;
  var v81:bv8;
  var v83:bv8;
  var v82:bv8;
  var v86:bv8;
  var v84:bv8;
  var v80:bv8;
  var v85:bv8;
  var v87:bv8;
  var v88:bv8;
  var v90:bv8;
  var v89:bv8;
  var v91:bv8;
  var v92:bv32;
  var v93:bool;
  var v79:bool;
  var v36:bv8;
  var v37:bv8;
  var v135:bv32;
  var v136:bv32;
  var v126:bv32;
  var v127:bv32;
  var v132:bv32;
  var v129:bv32;
  var v131:bv32;
  var v130:bv32;
  var v128:bv32;
  var v133:bv32;
  var v134:bv32;
  var v100:bv8;
  var v95:bv8;
  var v101:bv8;
  var v97:bv8;
  var v98:bv8;
  var v96:bv8;
  var v94:bv8;
  var v102:bv8;
  var v99:bv8;
  var v112:bv8;
  var v104:bv8;
  var v109:bv8;
  var v113:bv8;
  var v103:bv8;
  var v106:bv8;
  var v107:bv8;
  var v108:bv8;
  var v110:bv8;
  var v105:bv8;
  var v111:bv8;
  var v122:bv32;
  var v115:bv8;
  var v117:bv8;
  var v114:bv8;
  var v116:bv8;
  var v119:bv32;
  var v120:bv32;
  var v121:bv32;
  var v118:bv128;
  var v123:bv32;
  var v124:bv32;
  var v125:bv32;
  var v201:bv8;
  var v192:bv32;
  var v199:bv8;
  var v202:bv8;
  var v200:bv8;
  var v193:bv32;
  var v194:bv32;
  var v203:bv8;
  var v196:bv32;
  var v195:bv32;
  var v198:bv8;
  var v205:bv8;
  var v206:bv8;
  var v211:bv8;
  var v207:bv8;
  var v208:bv8;
  var v212:bv8;
  var v213:bv8;
  var v214:bv8;
  var v204:bv8;
  var v209:bv8;
  var v210:bv8;
  var v220:bv8;
  var v219:bv8;
  var v217:bv8;
  var v221:bv8;
  var v215:bv8;
  var v218:bv8;
  var v222:bv128;
  var v216:bv8;
  var v231:bv32;
  var v228:bv32;
  var v232:bv32;
  var v233:bv32;
  var v223:bv32;
  var v230:bv32;
  var v224:bv32;
  var v225:bv32;
  var v227:bv32;
  var v229:bv32;
  var v226:bv32;
  var v240:bv32;
  var v243:bv32;
  var v235:bv32;
  var v244:bv32;
  var v239:bv32;
  var v241:bv32;
  var v242:bv32;
  var v234:bv32;
  var v238:bv32;
  var v236:bv32;
  var v237:bv32;
  var v251:bv32;
  var v254:bv32;
  var v246:bv32;
  var v253:bv32;
  var v250:bv32;
  var v248:bv32;
  var v245:bv32;
  var v252:bv32;
  var v247:bv32;
  var v249:bv32;
  var v257:bv32;
  var v259:bv32;
  var v256:bv32;
  var v255:bv32;
  var v258:bv32;
  var v143:bv32;
  var v147:bv8;
  var v142:bv32;
  var v144:bv8;
  var v145:bv8;
  var v139:bv32;
  var v137:bv32;
  var v146:bv8;
  var v148:bv8;
  var v138:bv32;
  var v140:bv32;
  var v141:bv32;
  var v155:bv8;
  var v156:bv8;
  var v157:bv8;
  var v153:bv8;
  var v152:bv8;
  var v154:bv8;
  var v158:bv8;
  var v150:bv8;
  var v151:bv8;
  var v149:bv8;
  var v165:bv8;
  var v166:bv8;
  var v160:bv8;
  var v164:bv8;
  var v168:bv128;
  var v159:bv8;
  var v162:bv8;
  var v161:bv8;
  var v163:bv8;
  var v167:bv8;
  var v174:bv32;
  var v175:bv32;
  var v169:bv32;
  var v176:bv32;
  var v177:bv32;
  var v173:bv32;
  var v172:bv32;
  var v170:bv32;
  var v171:bv32;
  var v185:bv32;
  var v186:bv32;
  var v187:bv32;
  var v188:bv32;
  var v184:bv32;
  var v183:bv32;
  var v178:bv32;
  var v180:bv32;
  var v179:bv32;
  var v181:bv32;
  var v182:bv32;
  var v189:bv32;
  var v190:bv32;
  var v191:bv32;
  var v197:bv32;
  var v260:bv32;
$entry:
  assert {:block_sourceloc} {:sourceloc_num 0} true;
  v0 := BV32_ADD(local_id_x, BV32_MUL(BV32_MUL(group_id_x, 6bv32), 96bv32));
  assert {:sourceloc} {:sourceloc_num 1} true;
  v1 := $$t_Q[0bv32];
  assert {:sourceloc} {:sourceloc_num 2} true;
  $$agg.tmp[0bv32] := v1;
  assert {:sourceloc} {:sourceloc_num 3} true;
  v2 := $$t_Q[1bv32];
  assert {:sourceloc} {:sourceloc_num 4} true;
  $$agg.tmp[1bv32] := v2;
  assert {:sourceloc} {:sourceloc_num 5} true;
  v3 := $$t_Q[2bv32];
  assert {:sourceloc} {:sourceloc_num 6} true;
  $$agg.tmp[2bv32] := v3;
  assert {:sourceloc} {:sourceloc_num 7} true;
  v4 := $$t_Q[3bv32];
  assert {:sourceloc} {:sourceloc_num 8} true;
  $$agg.tmp[3bv32] := v4;
  assert {:sourceloc} {:sourceloc_num 9} true;
  v5 := $$t_Q[4bv32];
  assert {:sourceloc} {:sourceloc_num 10} true;
  $$agg.tmp[4bv32] := v5;
  assert {:sourceloc} {:sourceloc_num 11} true;
  v6 := $$t_Q[5bv32];
  assert {:sourceloc} {:sourceloc_num 12} true;
  $$agg.tmp[5bv32] := v6;
  assert {:sourceloc} {:sourceloc_num 13} true;
  v7 := $$t_Q[6bv32];
  assert {:sourceloc} {:sourceloc_num 14} true;
  $$agg.tmp[6bv32] := v7;
  assert {:sourceloc} {:sourceloc_num 15} true;
  v8 := $$t_Q[7bv32];
  assert {:sourceloc} {:sourceloc_num 16} true;
  $$agg.tmp[7bv32] := v8;
  assert {:sourceloc} {:sourceloc_num 17} true;
  v9 := $$t_Q[8bv32];
  assert {:sourceloc} {:sourceloc_num 18} true;
  $$agg.tmp[8bv32] := v9;
  assert {:sourceloc} {:sourceloc_num 19} true;
  v10 := $$t_Q[9bv32];
  assert {:sourceloc} {:sourceloc_num 20} true;
  $$agg.tmp[9bv32] := v10;
  assert {:sourceloc} {:sourceloc_num 21} true;
  v11 := $$t_Q[10bv32];
  assert {:sourceloc} {:sourceloc_num 22} true;
  $$agg.tmp[10bv32] := v11;
  assert {:sourceloc} {:sourceloc_num 23} true;
  v12 := $$t_Q[11bv32];
  assert {:sourceloc} {:sourceloc_num 24} true;
  $$agg.tmp[11bv32] := v12;
  call {:sourceloc_num 25}   v13 := $_Z10tex1DfetchIfET_7textureIS0_Li1EL19cudaTextureReadMode0EEi(MKPTR($arrayId$$agg.tmp, 0bv32), v0);
  assert {:sourceloc} {:sourceloc_num 26} true;
  $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE3s_Q[local_id_x] := v13;
  assert {:sourceloc} {:sourceloc_num 27} true;
  v14 := $$t_Q[0bv32];
  assert {:sourceloc} {:sourceloc_num 28} true;
  $$agg.tmp4[0bv32] := v14;
  assert {:sourceloc} {:sourceloc_num 29} true;
  v15 := $$t_Q[1bv32];
  assert {:sourceloc} {:sourceloc_num 30} true;
  $$agg.tmp4[1bv32] := v15;
  assert {:sourceloc} {:sourceloc_num 31} true;
  v16 := $$t_Q[2bv32];
  assert {:sourceloc} {:sourceloc_num 32} true;
  $$agg.tmp4[2bv32] := v16;
  assert {:sourceloc} {:sourceloc_num 33} true;
  v17 := $$t_Q[3bv32];
  assert {:sourceloc} {:sourceloc_num 34} true;
  $$agg.tmp4[3bv32] := v17;
  assert {:sourceloc} {:sourceloc_num 35} true;
  v18 := $$t_Q[4bv32];
  assert {:sourceloc} {:sourceloc_num 36} true;
  $$agg.tmp4[4bv32] := v18;
  assert {:sourceloc} {:sourceloc_num 37} true;
  v19 := $$t_Q[5bv32];
  assert {:sourceloc} {:sourceloc_num 38} true;
  $$agg.tmp4[5bv32] := v19;
  assert {:sourceloc} {:sourceloc_num 39} true;
  v20 := $$t_Q[6bv32];
  assert {:sourceloc} {:sourceloc_num 40} true;
  $$agg.tmp4[6bv32] := v20;
  assert {:sourceloc} {:sourceloc_num 41} true;
  v21 := $$t_Q[7bv32];
  assert {:sourceloc} {:sourceloc_num 42} true;
  $$agg.tmp4[7bv32] := v21;
  assert {:sourceloc} {:sourceloc_num 43} true;
  v22 := $$t_Q[8bv32];
  assert {:sourceloc} {:sourceloc_num 44} true;
  $$agg.tmp4[8bv32] := v22;
  assert {:sourceloc} {:sourceloc_num 45} true;
  v23 := $$t_Q[9bv32];
  assert {:sourceloc} {:sourceloc_num 46} true;
  $$agg.tmp4[9bv32] := v23;
  assert {:sourceloc} {:sourceloc_num 47} true;
  v24 := $$t_Q[10bv32];
  assert {:sourceloc} {:sourceloc_num 48} true;
  $$agg.tmp4[10bv32] := v24;
  assert {:sourceloc} {:sourceloc_num 49} true;
  v25 := $$t_Q[11bv32];
  assert {:sourceloc} {:sourceloc_num 50} true;
  $$agg.tmp4[11bv32] := v25;
  call {:sourceloc_num 51}   v26 := $_Z10tex1DfetchIfET_7textureIS0_Li1EL19cudaTextureReadMode0EEi(MKPTR($arrayId$$agg.tmp4, 0bv32), BV32_ADD(v0, 96bv32));
  assert {:sourceloc} {:sourceloc_num 52} true;
  $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE3s_Q[BV32_ADD(local_id_x, 96bv32)] := v26;
  assert {:sourceloc} {:sourceloc_num 53} true;
  v27 := $$t_Q[0bv32];
  assert {:sourceloc} {:sourceloc_num 54} true;
  $$agg.tmp9[0bv32] := v27;
  assert {:sourceloc} {:sourceloc_num 55} true;
  v28 := $$t_Q[1bv32];
  assert {:sourceloc} {:sourceloc_num 56} true;
  $$agg.tmp9[1bv32] := v28;
  assert {:sourceloc} {:sourceloc_num 57} true;
  v29 := $$t_Q[2bv32];
  assert {:sourceloc} {:sourceloc_num 58} true;
  $$agg.tmp9[2bv32] := v29;
  assert {:sourceloc} {:sourceloc_num 59} true;
  v30 := $$t_Q[3bv32];
  assert {:sourceloc} {:sourceloc_num 60} true;
  $$agg.tmp9[3bv32] := v30;
  assert {:sourceloc} {:sourceloc_num 61} true;
  v31 := $$t_Q[4bv32];
  assert {:sourceloc} {:sourceloc_num 62} true;
  $$agg.tmp9[4bv32] := v31;
  assert {:sourceloc} {:sourceloc_num 63} true;
  v32 := $$t_Q[5bv32];
  assert {:sourceloc} {:sourceloc_num 64} true;
  $$agg.tmp9[5bv32] := v32;
  assert {:sourceloc} {:sourceloc_num 65} true;
  v33 := $$t_Q[6bv32];
  assert {:sourceloc} {:sourceloc_num 66} true;
  $$agg.tmp9[6bv32] := v33;
  assert {:sourceloc} {:sourceloc_num 67} true;
  v34 := $$t_Q[7bv32];
  assert {:sourceloc} {:sourceloc_num 68} true;
  $$agg.tmp9[7bv32] := v34;
  assert {:sourceloc} {:sourceloc_num 69} true;
  v35 := $$t_Q[8bv32];
  assert {:sourceloc} {:sourceloc_num 70} true;
  $$agg.tmp9[8bv32] := v35;
  assert {:sourceloc} {:sourceloc_num 71} true;
  v36 := $$t_Q[9bv32];
  assert {:sourceloc} {:sourceloc_num 72} true;
  $$agg.tmp9[9bv32] := v36;
  assert {:sourceloc} {:sourceloc_num 73} true;
  v37 := $$t_Q[10bv32];
  assert {:sourceloc} {:sourceloc_num 74} true;
  $$agg.tmp9[10bv32] := v37;
  assert {:sourceloc} {:sourceloc_num 75} true;
  v38 := $$t_Q[11bv32];
  assert {:sourceloc} {:sourceloc_num 76} true;
  $$agg.tmp9[11bv32] := v38;
  call {:sourceloc_num 77}   v39 := $_Z10tex1DfetchIfET_7textureIS0_Li1EL19cudaTextureReadMode0EEi(MKPTR($arrayId$$agg.tmp9, 0bv32), BV32_ADD(v0, 192bv32));
  assert {:sourceloc} {:sourceloc_num 78} true;
  $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE3s_Q[BV32_ADD(local_id_x, 192bv32)] := v39;
  assert {:sourceloc} {:sourceloc_num 79} true;
  v40 := $$t_Q[0bv32];
  assert {:sourceloc} {:sourceloc_num 80} true;
  $$agg.tmp14[0bv32] := v40;
  assert {:sourceloc} {:sourceloc_num 81} true;
  v41 := $$t_Q[1bv32];
  assert {:sourceloc} {:sourceloc_num 82} true;
  $$agg.tmp14[1bv32] := v41;
  assert {:sourceloc} {:sourceloc_num 83} true;
  v42 := $$t_Q[2bv32];
  assert {:sourceloc} {:sourceloc_num 84} true;
  $$agg.tmp14[2bv32] := v42;
  assert {:sourceloc} {:sourceloc_num 85} true;
  v43 := $$t_Q[3bv32];
  assert {:sourceloc} {:sourceloc_num 86} true;
  $$agg.tmp14[3bv32] := v43;
  assert {:sourceloc} {:sourceloc_num 87} true;
  v44 := $$t_Q[4bv32];
  assert {:sourceloc} {:sourceloc_num 88} true;
  $$agg.tmp14[4bv32] := v44;
  assert {:sourceloc} {:sourceloc_num 89} true;
  v45 := $$t_Q[5bv32];
  assert {:sourceloc} {:sourceloc_num 90} true;
  $$agg.tmp14[5bv32] := v45;
  assert {:sourceloc} {:sourceloc_num 91} true;
  v46 := $$t_Q[6bv32];
  assert {:sourceloc} {:sourceloc_num 92} true;
  $$agg.tmp14[6bv32] := v46;
  assert {:sourceloc} {:sourceloc_num 93} true;
  v47 := $$t_Q[7bv32];
  assert {:sourceloc} {:sourceloc_num 94} true;
  $$agg.tmp14[7bv32] := v47;
  assert {:sourceloc} {:sourceloc_num 95} true;
  v48 := $$t_Q[8bv32];
  assert {:sourceloc} {:sourceloc_num 96} true;
  $$agg.tmp14[8bv32] := v48;
  assert {:sourceloc} {:sourceloc_num 97} true;
  v49 := $$t_Q[9bv32];
  assert {:sourceloc} {:sourceloc_num 98} true;
  $$agg.tmp14[9bv32] := v49;
  assert {:sourceloc} {:sourceloc_num 99} true;
  v50 := $$t_Q[10bv32];
  assert {:sourceloc} {:sourceloc_num 100} true;
  $$agg.tmp14[10bv32] := v50;
  assert {:sourceloc} {:sourceloc_num 101} true;
  v51 := $$t_Q[11bv32];
  assert {:sourceloc} {:sourceloc_num 102} true;
  $$agg.tmp14[11bv32] := v51;
  call {:sourceloc_num 103}   v52 := $_Z10tex1DfetchIfET_7textureIS0_Li1EL19cudaTextureReadMode0EEi(MKPTR($arrayId$$agg.tmp14, 0bv32), BV32_ADD(v0, 288bv32));
  assert {:sourceloc} {:sourceloc_num 104} true;
  $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE3s_Q[BV32_ADD(local_id_x, 288bv32)] := v52;
  assert {:sourceloc} {:sourceloc_num 105} true;
  v53 := $$t_Q[0bv32];
  assert {:sourceloc} {:sourceloc_num 106} true;
  $$agg.tmp19[0bv32] := v53;
  assert {:sourceloc} {:sourceloc_num 107} true;
  v54 := $$t_Q[1bv32];
  assert {:sourceloc} {:sourceloc_num 108} true;
  $$agg.tmp19[1bv32] := v54;
  assert {:sourceloc} {:sourceloc_num 109} true;
  v55 := $$t_Q[2bv32];
  assert {:sourceloc} {:sourceloc_num 110} true;
  $$agg.tmp19[2bv32] := v55;
  assert {:sourceloc} {:sourceloc_num 111} true;
  v56 := $$t_Q[3bv32];
  assert {:sourceloc} {:sourceloc_num 112} true;
  $$agg.tmp19[3bv32] := v56;
  assert {:sourceloc} {:sourceloc_num 113} true;
  v57 := $$t_Q[4bv32];
  assert {:sourceloc} {:sourceloc_num 114} true;
  $$agg.tmp19[4bv32] := v57;
  assert {:sourceloc} {:sourceloc_num 115} true;
  v58 := $$t_Q[5bv32];
  assert {:sourceloc} {:sourceloc_num 116} true;
  $$agg.tmp19[5bv32] := v58;
  assert {:sourceloc} {:sourceloc_num 117} true;
  v59 := $$t_Q[6bv32];
  assert {:sourceloc} {:sourceloc_num 118} true;
  $$agg.tmp19[6bv32] := v59;
  assert {:sourceloc} {:sourceloc_num 119} true;
  v60 := $$t_Q[7bv32];
  assert {:sourceloc} {:sourceloc_num 120} true;
  $$agg.tmp19[7bv32] := v60;
  assert {:sourceloc} {:sourceloc_num 121} true;
  v61 := $$t_Q[8bv32];
  assert {:sourceloc} {:sourceloc_num 122} true;
  $$agg.tmp19[8bv32] := v61;
  assert {:sourceloc} {:sourceloc_num 123} true;
  v62 := $$t_Q[9bv32];
  assert {:sourceloc} {:sourceloc_num 124} true;
  $$agg.tmp19[9bv32] := v62;
  assert {:sourceloc} {:sourceloc_num 125} true;
  v63 := $$t_Q[10bv32];
  assert {:sourceloc} {:sourceloc_num 126} true;
  $$agg.tmp19[10bv32] := v63;
  assert {:sourceloc} {:sourceloc_num 127} true;
  v64 := $$t_Q[11bv32];
  assert {:sourceloc} {:sourceloc_num 128} true;
  $$agg.tmp19[11bv32] := v64;
  call {:sourceloc_num 129}   v65 := $_Z10tex1DfetchIfET_7textureIS0_Li1EL19cudaTextureReadMode0EEi(MKPTR($arrayId$$agg.tmp19, 0bv32), BV32_ADD(v0, 384bv32));
  assert {:sourceloc} {:sourceloc_num 130} true;
  $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE3s_Q[BV32_ADD(local_id_x, 384bv32)] := v65;
  assert {:sourceloc} {:sourceloc_num 131} true;
  v66 := $$t_Q[0bv32];
  assert {:sourceloc} {:sourceloc_num 132} true;
  $$agg.tmp24[0bv32] := v66;
  assert {:sourceloc} {:sourceloc_num 133} true;
  v67 := $$t_Q[1bv32];
  assert {:sourceloc} {:sourceloc_num 134} true;
  $$agg.tmp24[1bv32] := v67;
  assert {:sourceloc} {:sourceloc_num 135} true;
  v68 := $$t_Q[2bv32];
  assert {:sourceloc} {:sourceloc_num 136} true;
  $$agg.tmp24[2bv32] := v68;
  assert {:sourceloc} {:sourceloc_num 137} true;
  v69 := $$t_Q[3bv32];
  assert {:sourceloc} {:sourceloc_num 138} true;
  $$agg.tmp24[3bv32] := v69;
  assert {:sourceloc} {:sourceloc_num 139} true;
  v70 := $$t_Q[4bv32];
  assert {:sourceloc} {:sourceloc_num 140} true;
  $$agg.tmp24[4bv32] := v70;
  assert {:sourceloc} {:sourceloc_num 141} true;
  v71 := $$t_Q[5bv32];
  assert {:sourceloc} {:sourceloc_num 142} true;
  $$agg.tmp24[5bv32] := v71;
  assert {:sourceloc} {:sourceloc_num 143} true;
  v72 := $$t_Q[6bv32];
  assert {:sourceloc} {:sourceloc_num 144} true;
  $$agg.tmp24[6bv32] := v72;
  assert {:sourceloc} {:sourceloc_num 145} true;
  v73 := $$t_Q[7bv32];
  assert {:sourceloc} {:sourceloc_num 146} true;
  $$agg.tmp24[7bv32] := v73;
  assert {:sourceloc} {:sourceloc_num 147} true;
  v74 := $$t_Q[8bv32];
  assert {:sourceloc} {:sourceloc_num 148} true;
  $$agg.tmp24[8bv32] := v74;
  assert {:sourceloc} {:sourceloc_num 149} true;
  v75 := $$t_Q[9bv32];
  assert {:sourceloc} {:sourceloc_num 150} true;
  $$agg.tmp24[9bv32] := v75;
  assert {:sourceloc} {:sourceloc_num 151} true;
  v76 := $$t_Q[10bv32];
  assert {:sourceloc} {:sourceloc_num 152} true;
  $$agg.tmp24[10bv32] := v76;
  assert {:sourceloc} {:sourceloc_num 153} true;
  v77 := $$t_Q[11bv32];
  assert {:sourceloc} {:sourceloc_num 154} true;
  $$agg.tmp24[11bv32] := v77;
  call {:sourceloc_num 155}   v78 := $_Z10tex1DfetchIfET_7textureIS0_Li1EL19cudaTextureReadMode0EEi(MKPTR($arrayId$$agg.tmp24, 0bv32), BV32_ADD(v0, 480bv32));
  assert {:sourceloc} {:sourceloc_num 156} true;
  $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE3s_Q[BV32_ADD(local_id_x, 480bv32)] := v78;
  v79 := BV32_SLT(local_id_x, 12bv32);
  goto $truebb, $falsebb;
$if.then:
  assert {:block_sourceloc} {:sourceloc_num 157} true;
  assert {:sourceloc} {:sourceloc_num 158} true;
  v80 := $$t_vgeo[0bv32];
  assert {:sourceloc} {:sourceloc_num 159} true;
  $$agg.tmp27[0bv32] := v80;
  assert {:sourceloc} {:sourceloc_num 160} true;
  v81 := $$t_vgeo[1bv32];
  assert {:sourceloc} {:sourceloc_num 161} true;
  $$agg.tmp27[1bv32] := v81;
  assert {:sourceloc} {:sourceloc_num 162} true;
  v82 := $$t_vgeo[2bv32];
  assert {:sourceloc} {:sourceloc_num 163} true;
  $$agg.tmp27[2bv32] := v82;
  assert {:sourceloc} {:sourceloc_num 164} true;
  v83 := $$t_vgeo[3bv32];
  assert {:sourceloc} {:sourceloc_num 165} true;
  $$agg.tmp27[3bv32] := v83;
  assert {:sourceloc} {:sourceloc_num 166} true;
  v84 := $$t_vgeo[4bv32];
  assert {:sourceloc} {:sourceloc_num 167} true;
  $$agg.tmp27[4bv32] := v84;
  assert {:sourceloc} {:sourceloc_num 168} true;
  v85 := $$t_vgeo[5bv32];
  assert {:sourceloc} {:sourceloc_num 169} true;
  $$agg.tmp27[5bv32] := v85;
  assert {:sourceloc} {:sourceloc_num 170} true;
  v86 := $$t_vgeo[6bv32];
  assert {:sourceloc} {:sourceloc_num 171} true;
  $$agg.tmp27[6bv32] := v86;
  assert {:sourceloc} {:sourceloc_num 172} true;
  v87 := $$t_vgeo[7bv32];
  assert {:sourceloc} {:sourceloc_num 173} true;
  $$agg.tmp27[7bv32] := v87;
  assert {:sourceloc} {:sourceloc_num 174} true;
  v88 := $$t_vgeo[8bv32];
  assert {:sourceloc} {:sourceloc_num 175} true;
  $$agg.tmp27[8bv32] := v88;
  assert {:sourceloc} {:sourceloc_num 176} true;
  v89 := $$t_vgeo[9bv32];
  assert {:sourceloc} {:sourceloc_num 177} true;
  $$agg.tmp27[9bv32] := v89;
  assert {:sourceloc} {:sourceloc_num 178} true;
  v90 := $$t_vgeo[10bv32];
  assert {:sourceloc} {:sourceloc_num 179} true;
  $$agg.tmp27[10bv32] := v90;
  assert {:sourceloc} {:sourceloc_num 180} true;
  v91 := $$t_vgeo[11bv32];
  assert {:sourceloc} {:sourceloc_num 181} true;
  $$agg.tmp27[11bv32] := v91;
  call {:sourceloc_num 182}   v92 := $_Z10tex1DfetchIfET_7textureIS0_Li1EL19cudaTextureReadMode0EEi(MKPTR($arrayId$$agg.tmp27, 0bv32), BV32_ADD(BV32_MUL(12bv32, group_id_x), local_id_x));
  assert {:sourceloc} {:sourceloc_num 183} true;
  $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE6s_facs[local_id_x] := v92;
  goto $if.end;
$if.end:
  assert {:block_sourceloc} {:sourceloc_num 184} true;
  call {:sourceloc_num 185} $bugle_barrier(1bv1, 1bv1);
  $dEydt.0, $dEyds.0, $dEydr.0, $dExdt.0, $dExds.0, $dExdr.0, $dHzdt.0, $dHzds.0, $dHzdr.0, $dHydt.0, $dHyds.0, $dHydr.0, $dHxdt.0, $dHxds.0, $dHxdr.0, $m.0, $dEzdr.0, $dEzds.0, $dEzdt.0 := 0bv32, 0bv32, 0bv32, 0bv32, 0bv32, 0bv32, 0bv32, 0bv32, 0bv32, 0bv32, 0bv32, 0bv32, 0bv32, 0bv32, 0bv32, 0bv32, 0bv32, 0bv32, 0bv32;
  goto $for.cond;
$for.cond:
  assert {:block_sourceloc} {:sourceloc_num 186} true;
  v93 := BV32_SUB(84bv32, $m.0) != 0bv32;
  goto $truebb0, $falsebb0;
$for.body:
  assert {:block_sourceloc} {:sourceloc_num 187} true;
  assert {:sourceloc} {:sourceloc_num 188} true;
  v94 := $$t_DrDsDt[0bv32];
  assert {:sourceloc} {:sourceloc_num 189} true;
  $$agg.tmp32[0bv32] := v94;
  assert {:sourceloc} {:sourceloc_num 190} true;
  v95 := $$t_DrDsDt[1bv32];
  assert {:sourceloc} {:sourceloc_num 191} true;
  $$agg.tmp32[1bv32] := v95;
  assert {:sourceloc} {:sourceloc_num 192} true;
  v96 := $$t_DrDsDt[2bv32];
  assert {:sourceloc} {:sourceloc_num 193} true;
  $$agg.tmp32[2bv32] := v96;
  assert {:sourceloc} {:sourceloc_num 194} true;
  v97 := $$t_DrDsDt[3bv32];
  assert {:sourceloc} {:sourceloc_num 195} true;
  $$agg.tmp32[3bv32] := v97;
  assert {:sourceloc} {:sourceloc_num 196} true;
  v98 := $$t_DrDsDt[4bv32];
  assert {:sourceloc} {:sourceloc_num 197} true;
  $$agg.tmp32[4bv32] := v98;
  assert {:sourceloc} {:sourceloc_num 198} true;
  v99 := $$t_DrDsDt[5bv32];
  assert {:sourceloc} {:sourceloc_num 199} true;
  $$agg.tmp32[5bv32] := v99;
  assert {:sourceloc} {:sourceloc_num 200} true;
  v100 := $$t_DrDsDt[6bv32];
  assert {:sourceloc} {:sourceloc_num 201} true;
  $$agg.tmp32[6bv32] := v100;
  assert {:sourceloc} {:sourceloc_num 202} true;
  v101 := $$t_DrDsDt[7bv32];
  assert {:sourceloc} {:sourceloc_num 203} true;
  $$agg.tmp32[7bv32] := v101;
  assert {:sourceloc} {:sourceloc_num 204} true;
  v102 := $$t_DrDsDt[8bv32];
  assert {:sourceloc} {:sourceloc_num 205} true;
  $$agg.tmp32[8bv32] := v102;
  assert {:sourceloc} {:sourceloc_num 206} true;
  v103 := $$t_DrDsDt[9bv32];
  assert {:sourceloc} {:sourceloc_num 207} true;
  $$agg.tmp32[9bv32] := v103;
  assert {:sourceloc} {:sourceloc_num 208} true;
  v104 := $$t_DrDsDt[10bv32];
  assert {:sourceloc} {:sourceloc_num 209} true;
  $$agg.tmp32[10bv32] := v104;
  assert {:sourceloc} {:sourceloc_num 210} true;
  v105 := $$t_DrDsDt[11bv32];
  assert {:sourceloc} {:sourceloc_num 211} true;
  $$agg.tmp32[11bv32] := v105;
  assert {:sourceloc} {:sourceloc_num 212} true;
  v106 := $$t_DrDsDt[12bv32];
  assert {:sourceloc} {:sourceloc_num 213} true;
  $$agg.tmp32[12bv32] := v106;
  assert {:sourceloc} {:sourceloc_num 214} true;
  v107 := $$t_DrDsDt[13bv32];
  assert {:sourceloc} {:sourceloc_num 215} true;
  $$agg.tmp32[13bv32] := v107;
  assert {:sourceloc} {:sourceloc_num 216} true;
  v108 := $$t_DrDsDt[14bv32];
  assert {:sourceloc} {:sourceloc_num 217} true;
  $$agg.tmp32[14bv32] := v108;
  assert {:sourceloc} {:sourceloc_num 218} true;
  v109 := $$t_DrDsDt[15bv32];
  assert {:sourceloc} {:sourceloc_num 219} true;
  $$agg.tmp32[15bv32] := v109;
  assert {:sourceloc} {:sourceloc_num 220} true;
  v110 := $$t_DrDsDt[16bv32];
  assert {:sourceloc} {:sourceloc_num 221} true;
  $$agg.tmp32[16bv32] := v110;
  assert {:sourceloc} {:sourceloc_num 222} true;
  v111 := $$t_DrDsDt[17bv32];
  assert {:sourceloc} {:sourceloc_num 223} true;
  $$agg.tmp32[17bv32] := v111;
  assert {:sourceloc} {:sourceloc_num 224} true;
  v112 := $$t_DrDsDt[18bv32];
  assert {:sourceloc} {:sourceloc_num 225} true;
  $$agg.tmp32[18bv32] := v112;
  assert {:sourceloc} {:sourceloc_num 226} true;
  v113 := $$t_DrDsDt[19bv32];
  assert {:sourceloc} {:sourceloc_num 227} true;
  $$agg.tmp32[19bv32] := v113;
  assert {:sourceloc} {:sourceloc_num 228} true;
  v114 := $$t_DrDsDt[20bv32];
  assert {:sourceloc} {:sourceloc_num 229} true;
  $$agg.tmp32[20bv32] := v114;
  assert {:sourceloc} {:sourceloc_num 230} true;
  v115 := $$t_DrDsDt[21bv32];
  assert {:sourceloc} {:sourceloc_num 231} true;
  $$agg.tmp32[21bv32] := v115;
  assert {:sourceloc} {:sourceloc_num 232} true;
  v116 := $$t_DrDsDt[22bv32];
  assert {:sourceloc} {:sourceloc_num 233} true;
  $$agg.tmp32[22bv32] := v116;
  assert {:sourceloc} {:sourceloc_num 234} true;
  v117 := $$t_DrDsDt[23bv32];
  assert {:sourceloc} {:sourceloc_num 235} true;
  $$agg.tmp32[23bv32] := v117;
  call {:sourceloc_num 236}   v118 := $_Z10tex1DfetchI6float4ET_7textureIS1_Li1EL19cudaTextureReadMode0EEi(MKPTR($arrayId$$agg.tmp32, 0bv32), BV32_ADD(local_id_x, BV32_MUL($m.0, 96bv32)));
  assert {:sourceloc} {:sourceloc_num 237} true;
  $$D[0bv32] := v118[32:0];
  assert {:sourceloc} {:sourceloc_num 238} true;
  $$D[1bv32] := v118[64:32];
  assert {:sourceloc} {:sourceloc_num 239} true;
  $$D[2bv32] := v118[96:64];
  assert {:sourceloc} {:sourceloc_num 240} true;
  $$D[3bv32] := v118[128:96];
  assert {:sourceloc} {:sourceloc_num 241} true;
  v119 := $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE3s_Q[$m.0];
  assert {:sourceloc} {:sourceloc_num 242} true;
  v120 := $$D[0bv32];
  assert {:sourceloc} {:sourceloc_num 243} true;
  v121 := $$D[1bv32];
  assert {:sourceloc} {:sourceloc_num 244} true;
  v122 := $$D[2bv32];
  assert {:sourceloc} {:sourceloc_num 245} true;
  v123 := $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE3s_Q[BV32_ADD($m.0, 96bv32)];
  assert {:sourceloc} {:sourceloc_num 246} true;
  v124 := $$D[0bv32];
  assert {:sourceloc} {:sourceloc_num 247} true;
  v125 := $$D[1bv32];
  assert {:sourceloc} {:sourceloc_num 248} true;
  v126 := $$D[2bv32];
  assert {:sourceloc} {:sourceloc_num 249} true;
  v127 := $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE3s_Q[BV32_ADD($m.0, 192bv32)];
  assert {:sourceloc} {:sourceloc_num 250} true;
  v128 := $$D[0bv32];
  assert {:sourceloc} {:sourceloc_num 251} true;
  v129 := $$D[1bv32];
  assert {:sourceloc} {:sourceloc_num 252} true;
  v130 := $$D[2bv32];
  assert {:sourceloc} {:sourceloc_num 253} true;
  v131 := $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE3s_Q[BV32_ADD($m.0, 288bv32)];
  assert {:sourceloc} {:sourceloc_num 254} true;
  v132 := $$D[0bv32];
  assert {:sourceloc} {:sourceloc_num 255} true;
  v133 := $$D[1bv32];
  assert {:sourceloc} {:sourceloc_num 256} true;
  v134 := $$D[2bv32];
  assert {:sourceloc} {:sourceloc_num 257} true;
  v135 := $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE3s_Q[BV32_ADD($m.0, 384bv32)];
  assert {:sourceloc} {:sourceloc_num 258} true;
  v136 := $$D[0bv32];
  assert {:sourceloc} {:sourceloc_num 259} true;
  v137 := $$D[1bv32];
  assert {:sourceloc} {:sourceloc_num 260} true;
  v138 := $$D[2bv32];
  assert {:sourceloc} {:sourceloc_num 261} true;
  v139 := $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE3s_Q[BV32_ADD($m.0, 480bv32)];
  assert {:sourceloc} {:sourceloc_num 262} true;
  v140 := $$D[0bv32];
  assert {:sourceloc} {:sourceloc_num 263} true;
  v141 := $$D[1bv32];
  assert {:sourceloc} {:sourceloc_num 264} true;
  v142 := $$D[2bv32];
  v143 := BV32_ADD($m.0, 1bv32);
  assert {:sourceloc} {:sourceloc_num 265} true;
  v144 := $$t_DrDsDt[0bv32];
  assert {:sourceloc} {:sourceloc_num 266} true;
  $$agg.tmp98[0bv32] := v144;
  assert {:sourceloc} {:sourceloc_num 267} true;
  v145 := $$t_DrDsDt[1bv32];
  assert {:sourceloc} {:sourceloc_num 268} true;
  $$agg.tmp98[1bv32] := v145;
  assert {:sourceloc} {:sourceloc_num 269} true;
  v146 := $$t_DrDsDt[2bv32];
  assert {:sourceloc} {:sourceloc_num 270} true;
  $$agg.tmp98[2bv32] := v146;
  assert {:sourceloc} {:sourceloc_num 271} true;
  v147 := $$t_DrDsDt[3bv32];
  assert {:sourceloc} {:sourceloc_num 272} true;
  $$agg.tmp98[3bv32] := v147;
  assert {:sourceloc} {:sourceloc_num 273} true;
  v148 := $$t_DrDsDt[4bv32];
  assert {:sourceloc} {:sourceloc_num 274} true;
  $$agg.tmp98[4bv32] := v148;
  assert {:sourceloc} {:sourceloc_num 275} true;
  v149 := $$t_DrDsDt[5bv32];
  assert {:sourceloc} {:sourceloc_num 276} true;
  $$agg.tmp98[5bv32] := v149;
  assert {:sourceloc} {:sourceloc_num 277} true;
  v150 := $$t_DrDsDt[6bv32];
  assert {:sourceloc} {:sourceloc_num 278} true;
  $$agg.tmp98[6bv32] := v150;
  assert {:sourceloc} {:sourceloc_num 279} true;
  v151 := $$t_DrDsDt[7bv32];
  assert {:sourceloc} {:sourceloc_num 280} true;
  $$agg.tmp98[7bv32] := v151;
  assert {:sourceloc} {:sourceloc_num 281} true;
  v152 := $$t_DrDsDt[8bv32];
  assert {:sourceloc} {:sourceloc_num 282} true;
  $$agg.tmp98[8bv32] := v152;
  assert {:sourceloc} {:sourceloc_num 283} true;
  v153 := $$t_DrDsDt[9bv32];
  assert {:sourceloc} {:sourceloc_num 284} true;
  $$agg.tmp98[9bv32] := v153;
  assert {:sourceloc} {:sourceloc_num 285} true;
  v154 := $$t_DrDsDt[10bv32];
  assert {:sourceloc} {:sourceloc_num 286} true;
  $$agg.tmp98[10bv32] := v154;
  assert {:sourceloc} {:sourceloc_num 287} true;
  v155 := $$t_DrDsDt[11bv32];
  assert {:sourceloc} {:sourceloc_num 288} true;
  $$agg.tmp98[11bv32] := v155;
  assert {:sourceloc} {:sourceloc_num 289} true;
  v156 := $$t_DrDsDt[12bv32];
  assert {:sourceloc} {:sourceloc_num 290} true;
  $$agg.tmp98[12bv32] := v156;
  assert {:sourceloc} {:sourceloc_num 291} true;
  v157 := $$t_DrDsDt[13bv32];
  assert {:sourceloc} {:sourceloc_num 292} true;
  $$agg.tmp98[13bv32] := v157;
  assert {:sourceloc} {:sourceloc_num 293} true;
  v158 := $$t_DrDsDt[14bv32];
  assert {:sourceloc} {:sourceloc_num 294} true;
  $$agg.tmp98[14bv32] := v158;
  assert {:sourceloc} {:sourceloc_num 295} true;
  v159 := $$t_DrDsDt[15bv32];
  assert {:sourceloc} {:sourceloc_num 296} true;
  $$agg.tmp98[15bv32] := v159;
  assert {:sourceloc} {:sourceloc_num 297} true;
  v160 := $$t_DrDsDt[16bv32];
  assert {:sourceloc} {:sourceloc_num 298} true;
  $$agg.tmp98[16bv32] := v160;
  assert {:sourceloc} {:sourceloc_num 299} true;
  v161 := $$t_DrDsDt[17bv32];
  assert {:sourceloc} {:sourceloc_num 300} true;
  $$agg.tmp98[17bv32] := v161;
  assert {:sourceloc} {:sourceloc_num 301} true;
  v162 := $$t_DrDsDt[18bv32];
  assert {:sourceloc} {:sourceloc_num 302} true;
  $$agg.tmp98[18bv32] := v162;
  assert {:sourceloc} {:sourceloc_num 303} true;
  v163 := $$t_DrDsDt[19bv32];
  assert {:sourceloc} {:sourceloc_num 304} true;
  $$agg.tmp98[19bv32] := v163;
  assert {:sourceloc} {:sourceloc_num 305} true;
  v164 := $$t_DrDsDt[20bv32];
  assert {:sourceloc} {:sourceloc_num 306} true;
  $$agg.tmp98[20bv32] := v164;
  assert {:sourceloc} {:sourceloc_num 307} true;
  v165 := $$t_DrDsDt[21bv32];
  assert {:sourceloc} {:sourceloc_num 308} true;
  $$agg.tmp98[21bv32] := v165;
  assert {:sourceloc} {:sourceloc_num 309} true;
  v166 := $$t_DrDsDt[22bv32];
  assert {:sourceloc} {:sourceloc_num 310} true;
  $$agg.tmp98[22bv32] := v166;
  assert {:sourceloc} {:sourceloc_num 311} true;
  v167 := $$t_DrDsDt[23bv32];
  assert {:sourceloc} {:sourceloc_num 312} true;
  $$agg.tmp98[23bv32] := v167;
  call {:sourceloc_num 313}   v168 := $_Z10tex1DfetchI6float4ET_7textureIS1_Li1EL19cudaTextureReadMode0EEi(MKPTR($arrayId$$agg.tmp98, 0bv32), BV32_ADD(local_id_x, BV32_MUL(v143, 96bv32)));
  assert {:sourceloc} {:sourceloc_num 314} true;
  $$ref.tmp[0bv32] := v168[32:0];
  assert {:sourceloc} {:sourceloc_num 315} true;
  $$ref.tmp[1bv32] := v168[64:32];
  assert {:sourceloc} {:sourceloc_num 316} true;
  $$ref.tmp[2bv32] := v168[96:64];
  assert {:sourceloc} {:sourceloc_num 317} true;
  $$ref.tmp[3bv32] := v168[128:96];
  assert {:sourceloc} {:sourceloc_num 318} true;
  v169 := $$ref.tmp[0bv32];
  assert {:sourceloc} {:sourceloc_num 319} true;
  $$D[0bv32] := v169;
  assert {:sourceloc} {:sourceloc_num 320} true;
  v170 := $$ref.tmp[1bv32];
  assert {:sourceloc} {:sourceloc_num 321} true;
  $$D[1bv32] := v170;
  assert {:sourceloc} {:sourceloc_num 322} true;
  v171 := $$ref.tmp[2bv32];
  assert {:sourceloc} {:sourceloc_num 323} true;
  $$D[2bv32] := v171;
  assert {:sourceloc} {:sourceloc_num 324} true;
  v172 := $$ref.tmp[3bv32];
  assert {:sourceloc} {:sourceloc_num 325} true;
  $$D[3bv32] := v172;
  assert {:sourceloc} {:sourceloc_num 326} true;
  v173 := $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE3s_Q[v143];
  assert {:sourceloc} {:sourceloc_num 327} true;
  v174 := $$D[0bv32];
  assert {:sourceloc} {:sourceloc_num 328} true;
  v175 := $$D[1bv32];
  assert {:sourceloc} {:sourceloc_num 329} true;
  v176 := $$D[2bv32];
  assert {:sourceloc} {:sourceloc_num 330} true;
  v177 := $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE3s_Q[BV32_ADD($m.0, 97bv32)];
  assert {:sourceloc} {:sourceloc_num 331} true;
  v178 := $$D[0bv32];
  assert {:sourceloc} {:sourceloc_num 332} true;
  v179 := $$D[1bv32];
  assert {:sourceloc} {:sourceloc_num 333} true;
  v180 := $$D[2bv32];
  assert {:sourceloc} {:sourceloc_num 334} true;
  v181 := $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE3s_Q[BV32_ADD($m.0, 193bv32)];
  assert {:sourceloc} {:sourceloc_num 335} true;
  v182 := $$D[0bv32];
  assert {:sourceloc} {:sourceloc_num 336} true;
  v183 := $$D[1bv32];
  assert {:sourceloc} {:sourceloc_num 337} true;
  v184 := $$D[2bv32];
  assert {:sourceloc} {:sourceloc_num 338} true;
  v185 := $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE3s_Q[BV32_ADD($m.0, 289bv32)];
  assert {:sourceloc} {:sourceloc_num 339} true;
  v186 := $$D[0bv32];
  assert {:sourceloc} {:sourceloc_num 340} true;
  v187 := $$D[1bv32];
  assert {:sourceloc} {:sourceloc_num 341} true;
  v188 := $$D[2bv32];
  assert {:sourceloc} {:sourceloc_num 342} true;
  v189 := $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE3s_Q[BV32_ADD($m.0, 385bv32)];
  assert {:sourceloc} {:sourceloc_num 343} true;
  v190 := $$D[0bv32];
  assert {:sourceloc} {:sourceloc_num 344} true;
  v191 := $$D[1bv32];
  assert {:sourceloc} {:sourceloc_num 345} true;
  v192 := $$D[2bv32];
  assert {:sourceloc} {:sourceloc_num 346} true;
  v193 := $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE3s_Q[BV32_ADD($m.0, 481bv32)];
  assert {:sourceloc} {:sourceloc_num 347} true;
  v194 := $$D[0bv32];
  assert {:sourceloc} {:sourceloc_num 348} true;
  v195 := $$D[1bv32];
  assert {:sourceloc} {:sourceloc_num 349} true;
  v196 := $$D[2bv32];
  v197 := BV32_ADD($m.0, 2bv32);
  assert {:sourceloc} {:sourceloc_num 350} true;
  v198 := $$t_DrDsDt[0bv32];
  assert {:sourceloc} {:sourceloc_num 351} true;
  $$agg.tmp169[0bv32] := v198;
  assert {:sourceloc} {:sourceloc_num 352} true;
  v199 := $$t_DrDsDt[1bv32];
  assert {:sourceloc} {:sourceloc_num 353} true;
  $$agg.tmp169[1bv32] := v199;
  assert {:sourceloc} {:sourceloc_num 354} true;
  v200 := $$t_DrDsDt[2bv32];
  assert {:sourceloc} {:sourceloc_num 355} true;
  $$agg.tmp169[2bv32] := v200;
  assert {:sourceloc} {:sourceloc_num 356} true;
  v201 := $$t_DrDsDt[3bv32];
  assert {:sourceloc} {:sourceloc_num 357} true;
  $$agg.tmp169[3bv32] := v201;
  assert {:sourceloc} {:sourceloc_num 358} true;
  v202 := $$t_DrDsDt[4bv32];
  assert {:sourceloc} {:sourceloc_num 359} true;
  $$agg.tmp169[4bv32] := v202;
  assert {:sourceloc} {:sourceloc_num 360} true;
  v203 := $$t_DrDsDt[5bv32];
  assert {:sourceloc} {:sourceloc_num 361} true;
  $$agg.tmp169[5bv32] := v203;
  assert {:sourceloc} {:sourceloc_num 362} true;
  v204 := $$t_DrDsDt[6bv32];
  assert {:sourceloc} {:sourceloc_num 363} true;
  $$agg.tmp169[6bv32] := v204;
  assert {:sourceloc} {:sourceloc_num 364} true;
  v205 := $$t_DrDsDt[7bv32];
  assert {:sourceloc} {:sourceloc_num 365} true;
  $$agg.tmp169[7bv32] := v205;
  assert {:sourceloc} {:sourceloc_num 366} true;
  v206 := $$t_DrDsDt[8bv32];
  assert {:sourceloc} {:sourceloc_num 367} true;
  $$agg.tmp169[8bv32] := v206;
  assert {:sourceloc} {:sourceloc_num 368} true;
  v207 := $$t_DrDsDt[9bv32];
  assert {:sourceloc} {:sourceloc_num 369} true;
  $$agg.tmp169[9bv32] := v207;
  assert {:sourceloc} {:sourceloc_num 370} true;
  v208 := $$t_DrDsDt[10bv32];
  assert {:sourceloc} {:sourceloc_num 371} true;
  $$agg.tmp169[10bv32] := v208;
  assert {:sourceloc} {:sourceloc_num 372} true;
  v209 := $$t_DrDsDt[11bv32];
  assert {:sourceloc} {:sourceloc_num 373} true;
  $$agg.tmp169[11bv32] := v209;
  assert {:sourceloc} {:sourceloc_num 374} true;
  v210 := $$t_DrDsDt[12bv32];
  assert {:sourceloc} {:sourceloc_num 375} true;
  $$agg.tmp169[12bv32] := v210;
  assert {:sourceloc} {:sourceloc_num 376} true;
  v211 := $$t_DrDsDt[13bv32];
  assert {:sourceloc} {:sourceloc_num 377} true;
  $$agg.tmp169[13bv32] := v211;
  assert {:sourceloc} {:sourceloc_num 378} true;
  v212 := $$t_DrDsDt[14bv32];
  assert {:sourceloc} {:sourceloc_num 379} true;
  $$agg.tmp169[14bv32] := v212;
  assert {:sourceloc} {:sourceloc_num 380} true;
  v213 := $$t_DrDsDt[15bv32];
  assert {:sourceloc} {:sourceloc_num 381} true;
  $$agg.tmp169[15bv32] := v213;
  assert {:sourceloc} {:sourceloc_num 382} true;
  v214 := $$t_DrDsDt[16bv32];
  assert {:sourceloc} {:sourceloc_num 383} true;
  $$agg.tmp169[16bv32] := v214;
  assert {:sourceloc} {:sourceloc_num 384} true;
  v215 := $$t_DrDsDt[17bv32];
  assert {:sourceloc} {:sourceloc_num 385} true;
  $$agg.tmp169[17bv32] := v215;
  assert {:sourceloc} {:sourceloc_num 386} true;
  v216 := $$t_DrDsDt[18bv32];
  assert {:sourceloc} {:sourceloc_num 387} true;
  $$agg.tmp169[18bv32] := v216;
  assert {:sourceloc} {:sourceloc_num 388} true;
  v217 := $$t_DrDsDt[19bv32];
  assert {:sourceloc} {:sourceloc_num 389} true;
  $$agg.tmp169[19bv32] := v217;
  assert {:sourceloc} {:sourceloc_num 390} true;
  v218 := $$t_DrDsDt[20bv32];
  assert {:sourceloc} {:sourceloc_num 391} true;
  $$agg.tmp169[20bv32] := v218;
  assert {:sourceloc} {:sourceloc_num 392} true;
  v219 := $$t_DrDsDt[21bv32];
  assert {:sourceloc} {:sourceloc_num 393} true;
  $$agg.tmp169[21bv32] := v219;
  assert {:sourceloc} {:sourceloc_num 394} true;
  v220 := $$t_DrDsDt[22bv32];
  assert {:sourceloc} {:sourceloc_num 395} true;
  $$agg.tmp169[22bv32] := v220;
  assert {:sourceloc} {:sourceloc_num 396} true;
  v221 := $$t_DrDsDt[23bv32];
  assert {:sourceloc} {:sourceloc_num 397} true;
  $$agg.tmp169[23bv32] := v221;
  call {:sourceloc_num 398}   v222 := $_Z10tex1DfetchI6float4ET_7textureIS1_Li1EL19cudaTextureReadMode0EEi(MKPTR($arrayId$$agg.tmp169, 0bv32), BV32_ADD(local_id_x, BV32_MUL(v197, 96bv32)));
  assert {:sourceloc} {:sourceloc_num 399} true;
  $$ref.tmp168[0bv32] := v222[32:0];
  assert {:sourceloc} {:sourceloc_num 400} true;
  $$ref.tmp168[1bv32] := v222[64:32];
  assert {:sourceloc} {:sourceloc_num 401} true;
  $$ref.tmp168[2bv32] := v222[96:64];
  assert {:sourceloc} {:sourceloc_num 402} true;
  $$ref.tmp168[3bv32] := v222[128:96];
  assert {:sourceloc} {:sourceloc_num 403} true;
  v223 := $$ref.tmp168[0bv32];
  assert {:sourceloc} {:sourceloc_num 404} true;
  $$D[0bv32] := v223;
  assert {:sourceloc} {:sourceloc_num 405} true;
  v224 := $$ref.tmp168[1bv32];
  assert {:sourceloc} {:sourceloc_num 406} true;
  $$D[1bv32] := v224;
  assert {:sourceloc} {:sourceloc_num 407} true;
  v225 := $$ref.tmp168[2bv32];
  assert {:sourceloc} {:sourceloc_num 408} true;
  $$D[2bv32] := v225;
  assert {:sourceloc} {:sourceloc_num 409} true;
  v226 := $$ref.tmp168[3bv32];
  assert {:sourceloc} {:sourceloc_num 410} true;
  $$D[3bv32] := v226;
  assert {:sourceloc} {:sourceloc_num 411} true;
  v227 := $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE3s_Q[v197];
  assert {:sourceloc} {:sourceloc_num 412} true;
  v228 := $$D[0bv32];
  assert {:sourceloc} {:sourceloc_num 413} true;
  v229 := $$D[1bv32];
  assert {:sourceloc} {:sourceloc_num 414} true;
  v230 := $$D[2bv32];
  assert {:sourceloc} {:sourceloc_num 415} true;
  v231 := $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE3s_Q[BV32_ADD($m.0, 98bv32)];
  assert {:sourceloc} {:sourceloc_num 416} true;
  v232 := $$D[0bv32];
  assert {:sourceloc} {:sourceloc_num 417} true;
  v233 := $$D[1bv32];
  assert {:sourceloc} {:sourceloc_num 418} true;
  v234 := $$D[2bv32];
  assert {:sourceloc} {:sourceloc_num 419} true;
  v235 := $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE3s_Q[BV32_ADD($m.0, 194bv32)];
  assert {:sourceloc} {:sourceloc_num 420} true;
  v236 := $$D[0bv32];
  assert {:sourceloc} {:sourceloc_num 421} true;
  v237 := $$D[1bv32];
  assert {:sourceloc} {:sourceloc_num 422} true;
  v238 := $$D[2bv32];
  assert {:sourceloc} {:sourceloc_num 423} true;
  v239 := $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE3s_Q[BV32_ADD($m.0, 290bv32)];
  assert {:sourceloc} {:sourceloc_num 424} true;
  v240 := $$D[0bv32];
  assert {:sourceloc} {:sourceloc_num 425} true;
  v241 := $$D[1bv32];
  assert {:sourceloc} {:sourceloc_num 426} true;
  v242 := $$D[2bv32];
  assert {:sourceloc} {:sourceloc_num 427} true;
  v243 := $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE3s_Q[BV32_ADD($m.0, 386bv32)];
  assert {:sourceloc} {:sourceloc_num 428} true;
  v244 := $$D[0bv32];
  assert {:sourceloc} {:sourceloc_num 429} true;
  v245 := $$D[1bv32];
  assert {:sourceloc} {:sourceloc_num 430} true;
  v246 := $$D[2bv32];
  assert {:sourceloc} {:sourceloc_num 431} true;
  v247 := $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE3s_Q[BV32_ADD($m.0, 482bv32)];
  assert {:sourceloc} {:sourceloc_num 432} true;
  v248 := $$D[0bv32];
  assert {:sourceloc} {:sourceloc_num 433} true;
  v249 := $$D[1bv32];
  assert {:sourceloc} {:sourceloc_num 434} true;
  v250 := $$D[2bv32];
  $dEydt.0, $dEyds.0, $dEydr.0, $dExdt.0, $dExds.0, $dExdr.0, $dHzdt.0, $dHzds.0, $dHzdr.0, $dHydt.0, $dHyds.0, $dHydr.0, $dHxdt.0, $dHxds.0, $dHxdr.0, $m.0, $dEzdr.0, $dEzds.0, $dEzdt.0 := FADD32(FADD32(FADD32($dEydt.0, FMUL32(v138, v135)), FMUL32(v192, v189)), FMUL32(v246, v243)), FADD32(FADD32(FADD32($dEyds.0, FMUL32(v137, v135)), FMUL32(v191, v189)), FMUL32(v245, v243)), FADD32(FADD32(FADD32($dEydr.0, FMUL32(v136, v135)), FMUL32(v190, v189)), FMUL32(v244, v243)), FADD32(FADD32(FADD32($dExdt.0, FMUL32(v134, v131)), FMUL32(v188, v185)), FMUL32(v242, v239)), FADD32(FADD32(FADD32($dExds.0, FMUL32(v133, v131)), FMUL32(v187, v185)), FMUL32(v241, v239)), FADD32(FADD32(FADD32($dExdr.0, FMUL32(v132, v131)), FMUL32(v186, v185)), FMUL32(v240, v239)), FADD32(FADD32(FADD32($dHzdt.0, FMUL32(v130, v127)), FMUL32(v184, v181)), FMUL32(v238, v235)), FADD32(FADD32(FADD32($dHzds.0, FMUL32(v129, v127)), FMUL32(v183, v181)), FMUL32(v237, v235)), FADD32(FADD32(FADD32($dHzdr.0, FMUL32(v128, v127)), FMUL32(v182, v181)), FMUL32(v236, v235)), FADD32(FADD32(FADD32($dHydt.0, FMUL32(v126, v123)), FMUL32(v180, v177)), FMUL32(v234, v231)), FADD32(FADD32(FADD32($dHyds.0, FMUL32(v125, v123)), FMUL32(v179, v177)), FMUL32(v233, v231)), FADD32(FADD32(FADD32($dHydr.0, FMUL32(v124, v123)), FMUL32(v178, v177)), FMUL32(v232, v231)), FADD32(FADD32(FADD32($dHxdt.0, FMUL32(v122, v119)), FMUL32(v176, v173)), FMUL32(v230, v227)), FADD32(FADD32(FADD32($dHxds.0, FMUL32(v121, v119)), FMUL32(v175, v173)), FMUL32(v229, v227)), FADD32(FADD32(FADD32($dHxdr.0, FMUL32(v120, v119)), FMUL32(v174, v173)), FMUL32(v228, v227)), BV32_ADD($m.0, 3bv32), FADD32(FADD32(FADD32($dEzdr.0, FMUL32(v140, v139)), FMUL32(v194, v193)), FMUL32(v248, v247)), FADD32(FADD32(FADD32($dEzds.0, FMUL32(v141, v139)), FMUL32(v195, v193)), FMUL32(v249, v247)), FADD32(FADD32(FADD32($dEzdt.0, FMUL32(v142, v139)), FMUL32(v196, v193)), FMUL32(v250, v247));
  goto $for.cond;
$for.end:
  assert {:block_sourceloc} {:sourceloc_num 435} true;
  assert {:sourceloc} {:sourceloc_num 436} true;
  v251 := $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE6s_facs[0bv32];
  assert {:sourceloc} {:sourceloc_num 437} true;
  v252 := $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE6s_facs[1bv32];
  assert {:sourceloc} {:sourceloc_num 438} true;
  v253 := $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE6s_facs[2bv32];
  assert {:sourceloc} {:sourceloc_num 439} true;
  v254 := $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE6s_facs[4bv32];
  assert {:sourceloc} {:sourceloc_num 440} true;
  v255 := $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE6s_facs[5bv32];
  assert {:sourceloc} {:sourceloc_num 441} true;
  v256 := $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE6s_facs[6bv32];
  assert {:sourceloc} {:sourceloc_num 442} true;
  v257 := $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE6s_facs[8bv32];
  assert {:sourceloc} {:sourceloc_num 443} true;
  v258 := $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE6s_facs[9bv32];
  assert {:sourceloc} {:sourceloc_num 444} true;
  v259 := $$_ZZ24MaxwellsGPU_VOL_Kernel3DPfE6s_facs[10bv32];
  v260 := BV32_ADD(local_id_x, BV32_MUL(576bv32, group_id_x));
  assert {:sourceloc} {:sourceloc_num 445} true;
  $$g_rhsQ[v260] := FSUB32(2147483648bv32, FSUB32(FSUB32(FSUB32(FADD32(FADD32(FMUL32(v252, $dEzdr.0), FMUL32(v255, $dEzds.0)), FMUL32(v258, $dEzdt.0)), FMUL32(v253, $dEydr.0)), FMUL32(v256, $dEyds.0)), FMUL32(v259, $dEydt.0)));
  assert {:sourceloc} {:sourceloc_num 446} true;
  $$g_rhsQ[BV32_ADD(v260, 96bv32)] := FSUB32(2147483648bv32, FSUB32(FSUB32(FSUB32(FADD32(FADD32(FMUL32(v253, $dExdr.0), FMUL32(v256, $dExds.0)), FMUL32(v259, $dExdt.0)), FMUL32(v251, $dEzdr.0)), FMUL32(v254, $dEzds.0)), FMUL32(v257, $dEzdt.0)));
  assert {:sourceloc} {:sourceloc_num 447} true;
  $$g_rhsQ[BV32_ADD(v260, 192bv32)] := FSUB32(2147483648bv32, FSUB32(FSUB32(FSUB32(FADD32(FADD32(FMUL32(v251, $dEydr.0), FMUL32(v254, $dEyds.0)), FMUL32(v257, $dEydt.0)), FMUL32(v252, $dExdr.0)), FMUL32(v255, $dExds.0)), FMUL32(v258, $dExdt.0)));
  assert {:sourceloc} {:sourceloc_num 448} true;
  $$g_rhsQ[BV32_ADD(v260, 288bv32)] := FSUB32(FSUB32(FSUB32(FADD32(FADD32(FMUL32(v252, $dHzdr.0), FMUL32(v255, $dHzds.0)), FMUL32(v258, $dHzdt.0)), FMUL32(v253, $dHydr.0)), FMUL32(v256, $dHyds.0)), FMUL32(v259, $dHydt.0));
  assert {:sourceloc} {:sourceloc_num 449} true;
  $$g_rhsQ[BV32_ADD(v260, 384bv32)] := FSUB32(FSUB32(FSUB32(FADD32(FADD32(FMUL32(v253, $dHxdr.0), FMUL32(v256, $dHxds.0)), FMUL32(v259, $dHxdt.0)), FMUL32(v251, $dHzdr.0)), FMUL32(v254, $dHzds.0)), FMUL32(v257, $dHzdt.0));
  assert {:sourceloc} {:sourceloc_num 450} true;
  $$g_rhsQ[BV32_ADD(v260, 480bv32)] := FSUB32(FSUB32(FSUB32(FADD32(FADD32(FMUL32(v251, $dHydr.0), FMUL32(v254, $dHyds.0)), FMUL32(v257, $dHydt.0)), FMUL32(v252, $dHxdr.0)), FMUL32(v255, $dHxds.0)), FMUL32(v258, $dHxdt.0));
  return;
$truebb:
  assume {:partition} v79;
  assert {:block_sourceloc} {:sourceloc_num 451} true;
  goto $if.then;
$falsebb:
  assume {:partition} !v79;
  assert {:block_sourceloc} {:sourceloc_num 452} true;
  goto $if.end;
$truebb0:
  assume {:partition} v93;
  assert {:block_sourceloc} {:sourceloc_num 453} true;
  goto $for.body;
$falsebb0:
  assume {:partition} !v93;
  assert {:block_sourceloc} {:sourceloc_num 454} true;
  goto $for.end;
}
procedure {:source_name "_Z10tex1DfetchIfET_7textureIS0_Li1EL19cudaTextureReadMode0EEi"} $_Z10tex1DfetchIfET_7textureIS0_Li1EL19cudaTextureReadMode0EEi($0:ptr, $1:bv32) returns ($ret:bv32);
procedure {:source_name "bugle_barrier"} {:barrier} $bugle_barrier($0:bv1, $1:bv1);
procedure {:source_name "_Z10tex1DfetchI6float4ET_7textureIS1_Li1EL19cudaTextureReadMode0EEi"} $_Z10tex1DfetchI6float4ET_7textureIS1_Li1EL19cudaTextureReadMode0EEi($0:ptr, $1:bv32) returns ($ret:bv128);
axiom (if group_size_y == 1bv32 then 1bv1 else 0bv1) != 0bv1;
axiom (if group_size_z == 1bv32 then 1bv1 else 0bv1) != 0bv1;
axiom (if num_groups_y == 1bv32 then 1bv1 else 0bv1) != 0bv1;
axiom (if num_groups_z == 1bv32 then 1bv1 else 0bv1) != 0bv1;
axiom (if group_size_x == 32bv32 then 1bv1 else 0bv1) != 0bv1;
axiom (if num_groups_x == 2bv32 then 1bv1 else 0bv1) != 0bv1;
