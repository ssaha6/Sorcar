//PASS
//--local_size=[32,16] --num_groups=[2,2]

#pragma OPENCL EXTENSION cl_khr_fp64 : enable

__kernel void kernel4(__global double *A, int n, long c0)
{
  __requires(n == 64);
  __requires(c0 < 3 * n - 2); // Possible overflow in __requires
    long b0 = get_group_id(0), b1 = get_group_id(1);
    long t0 = get_local_id(0), t1 = get_local_id(1);

    #define floord(n,d) (((n)<0) ? -((-(n)+(d)-1)/(d)) : (n)/(d))
    #define min(x,y)    ((x) < (y) ? (x) : (y))
    #define max(x,y)    ((x) > (y) ? (x) : (y))
    {
      __requires((((n) <= (2147483647)) & (((3) * (n)) >= ((c0) + (6)))) & ((c0) >= (3)));
      for (long c1 = max(32 * b0, 32 * b0 + 8192 * floord(-n - 64 * b0 + c0 - 61, 16384) + 8192); c1 < min(n - 1, (c0 + 1) / 2); c1 += 8192)
        for (long c2 = max(max(32 * b1, 32 * b1 + 8192 * floord(-2 * n - 32 * b1 + c0 - 29, 8192) + 8192), 32 * b1 + 8192 * floord(-n - 32 * b1 + c0 - c1 - 62, 8192) + 8192); c2 <= min(min(c0 - 2 * c1 - 1, c1), c0 / 3 - 1); c2 += 8192) {
          // shared
          for (long c4 = max(t1, t1 + 16 * floord(-n - t0 - t1 + c0 - c1 - c2, 16) + 16); c4 <= min(min(31, -2 * t0 + c0 - 2 * c1 - c2 - 1), t0 + c1 - c2 - 1); c4 += 16)
            A[(-t0 + c0 - c1 - c2 - c4) * n + (t0 + c1)] -= (A[(-t0 + c0 - c1 - c2 - c4) * n + (c2 + c4)] * A[(t0 + c1) * n + (c2 + c4)]);
        }
      __function_wide_invariant(__write_implies(A, ((((((((((((32) * (b0)) + (t0)) >= (0)) & ((((32) * (b0)) + (t0)) <= (8191))) & ((n) >= (((((__write_offset_bytes(A)) / (sizeof(double))) / (n)) % (n)) + (1)))) & (((((__write_offset_bytes(A)) / (sizeof(double))) / (n)) % (n)) >= ((((__write_offset_bytes(A)) / (sizeof(double))) % (n)) + (1)))) & ((((((__write_offset_bytes(A)) / (sizeof(double))) / (n)) % (n)) + ((2) * (((__write_offset_bytes(A)) / (sizeof(double))) % (n)))) >= ((c0) + (1)))) & ((c0) >= (((((__write_offset_bytes(A)) / (sizeof(double))) / (n)) % (n)) + (((__write_offset_bytes(A)) / (sizeof(double))) % (n))))) & (((((-((((__write_offset_bytes(A)) / (sizeof(double))) / (n)) % (n))) - (((__write_offset_bytes(A)) / (sizeof(double))) % (n))) + (c0)) % (8192)) >= ((32) * (b1)))) & ((((32) * (b1)) + (31)) >= ((((-((((__write_offset_bytes(A)) / (sizeof(double))) / (n)) % (n))) - (((__write_offset_bytes(A)) / (sizeof(double))) % (n))) + (c0)) % (8192)))) & ((((((32) * (b0)) + (t0)) - (((__write_offset_bytes(A)) / (sizeof(double))) % (n))) % (8192)) == (0))) & ((((((t0) + (t1)) + ((((__write_offset_bytes(A)) / (sizeof(double))) / (n)) % (n))) - (c0)) % (16)) == (0))));
      __function_wide_invariant(__read_implies(A, ((((((((((((((32) * (b0)) + (t0)) >= (0)) & ((((32) * (b0)) + (t0)) <= (8191))) & (((((__read_offset_bytes(A)) / (sizeof(double))) / (n)) % (n)) >= ((((__read_offset_bytes(A)) / (sizeof(double))) % (n)) + (1)))) & ((((__read_offset_bytes(A)) / (sizeof(double))) % (n)) >= (0))) & ((c0) >= ((((2) * ((((__read_offset_bytes(A)) / (sizeof(double))) / (n)) % (n))) + (((__read_offset_bytes(A)) / (sizeof(double))) % (n))) + (1)))) & ((((n) + ((((__read_offset_bytes(A)) / (sizeof(double))) / (n)) % (n))) + (((__read_offset_bytes(A)) / (sizeof(double))) % (n))) >= ((c0) + (1)))) & (((((__read_offset_bytes(A)) / (sizeof(double))) % (n)) % (8192)) >= ((32) * (b1)))) & ((((32) * (b1)) + (31)) >= ((((__read_offset_bytes(A)) / (sizeof(double))) % (n)) % (8192)))) & ((((((32) * (b0)) + (t0)) - ((((__read_offset_bytes(A)) / (sizeof(double))) / (n)) % (n))) % (8192)) == (0))) & ((((t1) - (((__read_offset_bytes(A)) / (sizeof(double))) % (n))) % (16)) == (0))) | (((((((((((((32) * (b0)) + (t0)) >= (0)) & ((((32) * (b0)) + (t0)) <= (8191))) & ((n) >= (((((__read_offset_bytes(A)) / (sizeof(double))) / (n)) % (n)) + (1)))) & ((((__read_offset_bytes(A)) / (sizeof(double))) % (n)) >= (0))) & ((c0) >= ((((((__read_offset_bytes(A)) / (sizeof(double))) / (n)) % (n)) + ((2) * (((__read_offset_bytes(A)) / (sizeof(double))) % (n)))) + (1)))) & ((((2) * ((((__read_offset_bytes(A)) / (sizeof(double))) / (n)) % (n))) + (((__read_offset_bytes(A)) / (sizeof(double))) % (n))) >= ((c0) + (1)))) & (((((__read_offset_bytes(A)) / (sizeof(double))) % (n)) % (8192)) >= ((32) * (b1)))) & ((((32) * (b1)) + (31)) >= ((((__read_offset_bytes(A)) / (sizeof(double))) % (n)) % (8192)))) & ((((t1) - (((__read_offset_bytes(A)) / (sizeof(double))) % (n))) % (16)) == (0))) & ((((((((32) * (b0)) + (t0)) + ((((__read_offset_bytes(A)) / (sizeof(double))) / (n)) % (n))) + (((__read_offset_bytes(A)) / (sizeof(double))) % (n))) - (c0)) % (8192)) == (0)))) | (((((((((((((32) * (b0)) + (t0)) >= (0)) & ((((32) * (b0)) + (t0)) <= (8191))) & ((n) >= (((((__read_offset_bytes(A)) / (sizeof(double))) / (n)) % (n)) + (1)))) & (((((__read_offset_bytes(A)) / (sizeof(double))) / (n)) % (n)) >= ((((__read_offset_bytes(A)) / (sizeof(double))) % (n)) + (1)))) & ((((((__read_offset_bytes(A)) / (sizeof(double))) / (n)) % (n)) + ((2) * (((__read_offset_bytes(A)) / (sizeof(double))) % (n)))) >= ((c0) + (1)))) & ((c0) >= (((((__read_offset_bytes(A)) / (sizeof(double))) / (n)) % (n)) + (((__read_offset_bytes(A)) / (sizeof(double))) % (n))))) & (((((-((((__read_offset_bytes(A)) / (sizeof(double))) / (n)) % (n))) - (((__read_offset_bytes(A)) / (sizeof(double))) % (n))) + (c0)) % (8192)) >= ((32) * (b1)))) & ((((32) * (b1)) + (31)) >= ((((-((((__read_offset_bytes(A)) / (sizeof(double))) / (n)) % (n))) - (((__read_offset_bytes(A)) / (sizeof(double))) % (n))) + (c0)) % (8192)))) & ((((((32) * (b0)) + (t0)) - (((__read_offset_bytes(A)) / (sizeof(double))) % (n))) % (8192)) == (0))) & ((((((t0) + (t1)) + ((((__read_offset_bytes(A)) / (sizeof(double))) / (n)) % (n))) - (c0)) % (16)) == (0)))));
    }
}
