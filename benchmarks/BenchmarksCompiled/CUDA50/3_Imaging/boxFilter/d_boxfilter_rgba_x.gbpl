type _SIZE_T_TYPE = bv32;

procedure _ATOMIC_OP32(x : [bv32]bv32, y : bv32) returns (z : bv32, A : [bv32]bv32);
procedure _ATOMIC_OP8(x : [bv32]bv8, y : bv32) returns (z : bv8, A : [bv32]bv8);
var {:source_name "od"} {:global} $$od : [bv32]bv32;
axiom {:array_info "$$od"} {:global} {:elem_width 32} {:source_name "od"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$od : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$od : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$od : bool;
const $arrayId$$od : arrayId;
axiom $arrayId$$od == 1bv6;

var {:source_name "retval.i.i.149"} $$retval.i.i.149 : [bv32]bv32;
axiom {:array_info "$$retval.i.i.149"} {:elem_width 32} {:source_name "retval.i.i.149"} {:source_elem_width 128} {:source_dimensions "1"} true;
const $arrayId$$retval.i.i.149 : arrayId;
axiom $arrayId$$retval.i.i.149 == 2bv6;

var {:source_name "retval.i.154"} $$retval.i.154 : [bv32]bv32;
axiom {:array_info "$$retval.i.154"} {:elem_width 32} {:source_name "retval.i.154"} {:source_elem_width 128} {:source_dimensions "1"} true;
const $arrayId$$retval.i.154 : arrayId;
axiom $arrayId$$retval.i.154 == 3bv6;

var {:source_name "agg.tmp32148"} $$agg.tmp32148 : [bv32]bv32;
axiom {:array_info "$$agg.tmp32148"} {:elem_width 32} {:source_name "agg.tmp32148"} {:source_elem_width 128} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp32148 : arrayId;
axiom $arrayId$$agg.tmp32148 == 4bv6;

var {:source_name "retval.i.i.129"} $$retval.i.i.129 : [bv32]bv32;
axiom {:array_info "$$retval.i.i.129"} {:elem_width 32} {:source_name "retval.i.i.129"} {:source_elem_width 128} {:source_dimensions "1"} true;
const $arrayId$$retval.i.i.129 : arrayId;
axiom $arrayId$$retval.i.i.129 == 5bv6;

var {:source_name "ref.tmp.i.135"} $$ref.tmp.i.135 : [bv32]bv32;
axiom {:array_info "$$ref.tmp.i.135"} {:elem_width 32} {:source_name "ref.tmp.i.135"} {:source_elem_width 128} {:source_dimensions "1"} true;
const $arrayId$$ref.tmp.i.135 : arrayId;
axiom $arrayId$$ref.tmp.i.135 == 6bv6;

var {:source_name "agg.tmp24128"} $$agg.tmp24128 : [bv32]bv32;
axiom {:array_info "$$agg.tmp24128"} {:elem_width 32} {:source_name "agg.tmp24128"} {:source_elem_width 128} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp24128 : arrayId;
axiom $arrayId$$agg.tmp24128 == 7bv6;

var {:source_name "retval.i.i.105"} $$retval.i.i.105 : [bv32]bv32;
axiom {:array_info "$$retval.i.i.105"} {:elem_width 32} {:source_name "retval.i.i.105"} {:source_elem_width 128} {:source_dimensions "1"} true;
const $arrayId$$retval.i.i.105 : arrayId;
axiom $arrayId$$retval.i.i.105 == 8bv6;

var {:source_name "ref.tmp.i.111"} $$ref.tmp.i.111 : [bv32]bv32;
axiom {:array_info "$$ref.tmp.i.111"} {:elem_width 32} {:source_name "ref.tmp.i.111"} {:source_elem_width 128} {:source_dimensions "1"} true;
const $arrayId$$ref.tmp.i.111 : arrayId;
axiom $arrayId$$ref.tmp.i.111 == 9bv6;

var {:source_name "agg.tmp18104"} $$agg.tmp18104 : [bv32]bv32;
axiom {:array_info "$$agg.tmp18104"} {:elem_width 32} {:source_name "agg.tmp18104"} {:source_elem_width 128} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp18104 : arrayId;
axiom $arrayId$$agg.tmp18104 == 10bv6;

var {:source_name "agg.tmp973"} $$agg.tmp973 : [bv32]bv32;
axiom {:array_info "$$agg.tmp973"} {:elem_width 32} {:source_name "agg.tmp973"} {:source_elem_width 128} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp973 : arrayId;
axiom $arrayId$$agg.tmp973 == 11bv6;

var {:source_name "retval.i.i.58"} $$retval.i.i.58 : [bv32]bv32;
axiom {:array_info "$$retval.i.i.58"} {:elem_width 32} {:source_name "retval.i.i.58"} {:source_elem_width 128} {:source_dimensions "1"} true;
const $arrayId$$retval.i.i.58 : arrayId;
axiom $arrayId$$retval.i.i.58 == 12bv6;

var {:source_name "retval.i.63"} $$retval.i.63 : [bv32]bv32;
axiom {:array_info "$$retval.i.63"} {:elem_width 32} {:source_name "retval.i.63"} {:source_elem_width 128} {:source_dimensions "1"} true;
const $arrayId$$retval.i.63 : arrayId;
axiom $arrayId$$retval.i.63 == 13bv6;

var {:source_name "agg.tmp1057"} $$agg.tmp1057 : [bv32]bv32;
axiom {:array_info "$$agg.tmp1057"} {:elem_width 32} {:source_name "agg.tmp1057"} {:source_elem_width 128} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp1057 : arrayId;
axiom $arrayId$$agg.tmp1057 == 14bv6;

var {:source_name "retval.i.i.43"} $$retval.i.i.43 : [bv32]bv32;
axiom {:array_info "$$retval.i.i.43"} {:elem_width 32} {:source_name "retval.i.i.43"} {:source_elem_width 128} {:source_dimensions "1"} true;
const $arrayId$$retval.i.i.43 : arrayId;
axiom $arrayId$$retval.i.i.43 == 15bv6;

var {:source_name "ref.tmp.i"} $$ref.tmp.i : [bv32]bv32;
axiom {:array_info "$$ref.tmp.i"} {:elem_width 32} {:source_name "ref.tmp.i"} {:source_elem_width 128} {:source_dimensions "1"} true;
const $arrayId$$ref.tmp.i : arrayId;
axiom $arrayId$$ref.tmp.i == 16bv6;

var {:source_name "agg.tmp42"} $$agg.tmp42 : [bv32]bv32;
axiom {:array_info "$$agg.tmp42"} {:elem_width 32} {:source_name "agg.tmp42"} {:source_elem_width 128} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp42 : arrayId;
axiom $arrayId$$agg.tmp42 == 17bv6;

var {:source_name "agg.tmp3141"} $$agg.tmp3141 : [bv32]bv32;
axiom {:array_info "$$agg.tmp3141"} {:elem_width 32} {:source_name "agg.tmp3141"} {:source_elem_width 128} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp3141 : arrayId;
axiom $arrayId$$agg.tmp3141 == 18bv6;

var {:source_name "retval.i.i"} $$retval.i.i : [bv32]bv32;
axiom {:array_info "$$retval.i.i"} {:elem_width 32} {:source_name "retval.i.i"} {:source_elem_width 128} {:source_dimensions "1"} true;
const $arrayId$$retval.i.i : arrayId;
axiom $arrayId$$retval.i.i == 19bv6;

var {:source_name "retval.i"} $$retval.i : [bv32]bv32;
axiom {:array_info "$$retval.i"} {:elem_width 32} {:source_name "retval.i"} {:source_elem_width 128} {:source_dimensions "1"} true;
const $arrayId$$retval.i : arrayId;
axiom $arrayId$$retval.i == 20bv6;

var {:source_name "t"} $$t : [bv32]bv32;
axiom {:array_info "$$t"} {:elem_width 32} {:source_name "t"} {:source_elem_width 128} {:source_dimensions "1"} true;
const $arrayId$$t : arrayId;
axiom $arrayId$$t == 21bv6;

var {:source_name "agg.tmp"} $$agg.tmp : [bv32]bv32;
axiom {:array_info "$$agg.tmp"} {:elem_width 32} {:source_name "agg.tmp"} {:source_elem_width 128} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp : arrayId;
axiom $arrayId$$agg.tmp == 22bv6;

var {:source_name "agg.tmp5"} $$agg.tmp5 : [bv32]bv8;
axiom {:array_info "$$agg.tmp5"} {:elem_width 8} {:source_name "agg.tmp5"} {:source_elem_width 96} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp5 : arrayId;
axiom $arrayId$$agg.tmp5 == 23bv6;

var {:source_name "agg.tmp9"} $$agg.tmp9 : [bv32]bv32;
axiom {:array_info "$$agg.tmp9"} {:elem_width 32} {:source_name "agg.tmp9"} {:source_elem_width 128} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp9 : arrayId;
axiom $arrayId$$agg.tmp9 == 24bv6;

var {:source_name "agg.tmp10"} $$agg.tmp10 : [bv32]bv32;
axiom {:array_info "$$agg.tmp10"} {:elem_width 32} {:source_name "agg.tmp10"} {:source_elem_width 128} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp10 : arrayId;
axiom $arrayId$$agg.tmp10 == 25bv6;

var {:source_name "agg.tmp18"} $$agg.tmp18 : [bv32]bv32;
axiom {:array_info "$$agg.tmp18"} {:elem_width 32} {:source_name "agg.tmp18"} {:source_elem_width 128} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp18 : arrayId;
axiom $arrayId$$agg.tmp18 == 26bv6;

var {:source_name "agg.tmp19"} $$agg.tmp19 : [bv32]bv8;
axiom {:array_info "$$agg.tmp19"} {:elem_width 8} {:source_name "agg.tmp19"} {:source_elem_width 96} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp19 : arrayId;
axiom $arrayId$$agg.tmp19 == 27bv6;

var {:source_name "agg.tmp24"} $$agg.tmp24 : [bv32]bv32;
axiom {:array_info "$$agg.tmp24"} {:elem_width 32} {:source_name "agg.tmp24"} {:source_elem_width 128} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp24 : arrayId;
axiom $arrayId$$agg.tmp24 == 28bv6;

var {:source_name "agg.tmp25"} $$agg.tmp25 : [bv32]bv8;
axiom {:array_info "$$agg.tmp25"} {:elem_width 8} {:source_name "agg.tmp25"} {:source_elem_width 96} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp25 : arrayId;
axiom $arrayId$$agg.tmp25 == 29bv6;

var {:source_name "agg.tmp31"} $$agg.tmp31 : [bv32]bv32;
axiom {:array_info "$$agg.tmp31"} {:elem_width 32} {:source_name "agg.tmp31"} {:source_elem_width 128} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp31 : arrayId;
axiom $arrayId$$agg.tmp31 == 30bv6;

var {:source_name "agg.tmp32"} $$agg.tmp32 : [bv32]bv32;
axiom {:array_info "$$agg.tmp32"} {:elem_width 32} {:source_name "agg.tmp32"} {:source_elem_width 128} {:source_dimensions "1"} true;
const $arrayId$$agg.tmp32 : arrayId;
axiom $arrayId$$agg.tmp32 == 31bv6;

var {:source_name "rgbaTex"} {:global} $$rgbaTex : [bv32]bv8;
axiom {:array_info "$$rgbaTex"} {:global} {:elem_width 8} {:source_name "rgbaTex"} {:source_elem_width 96} {:source_dimensions "1"} true;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 96} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$rgbaTex : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 96} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$rgbaTex : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 96} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$rgbaTex : bool;
const $arrayId$$rgbaTex : arrayId;
axiom $arrayId$$rgbaTex == 32bv6;

type ptr = bv32;
type arrayId = bv6;

function {:inline true} MKPTR(base: arrayId, offset: bv32) : ptr {
  base ++ offset[26:0]
}

function {:inline true} base#MKPTR(p: ptr) : arrayId {
  p[32:26]
}

function {:inline true} offset#MKPTR(p : ptr) : bv32 {
  0bv6++p[26:0]
}

const $arrayId$$null$ : arrayId;
axiom $arrayId$$null$ == 0bv6;

const _WATCHED_OFFSET : bv32;
const {:group_id_x} group_id_x : bv32;
const {:group_size_x} group_size_x : bv32;
const {:group_size_y} group_size_y : bv32;
const {:group_size_z} group_size_z : bv32;
const {:local_id_x} local_id_x : bv32;
const {:num_groups_x} num_groups_x : bv32;
const {:num_groups_y} num_groups_y : bv32;
const {:num_groups_z} num_groups_z : bv32;
function FADD32(bv32, bv32) : bv32;
function FDIV32(bv32, bv32) : bv32;
function FMUL32(bv32, bv32) : bv32;
function FP32_TO_UI32(bv32) : bv32;
function FSUB32(bv32, bv32) : bv32;
function SI32_TO_FP32(bv32) : bv32;
function UI32_TO_FP32(bv32) : bv32;
function {:bvbuiltin "bvadd"} BV32_ADD(bv32, bv32) : bv32;
function {:bvbuiltin "bvmul"} BV32_MUL(bv32, bv32) : bv32;
function {:bvbuiltin "bvor"} BV32_OR(bv32, bv32) : bv32;
function {:bvbuiltin "bvshl"} BV32_SHL(bv32, bv32) : bv32;
function {:bvbuiltin "bvsle"} BV32_SLE(bv32, bv32) : bool;
function {:bvbuiltin "bvslt"} BV32_SLT(bv32, bv32) : bool;
function {:bvbuiltin "bvsub"} BV32_SUB(bv32, bv32) : bv32;
function {:bvbuiltin "bvult"} BV32_ULT(bv32, bv32) : bool;
procedure {:source_name "d_boxfilter_rgba_x"} {:kernel} $_Z18d_boxfilter_rgba_xPjiii($w:bv32, $h:bv32, $r:bv32)
requires {:sourceloc_num 0} (if $w == 1024bv32 then 1bv1 else 0bv1) != 0bv1;
requires {:sourceloc_num 1} (if $h == 1024bv32 then 1bv1 else 0bv1) != 0bv1;
{
  var $x.0:bv32;
  var $x14.0:bv32;
  var v10:bv32;
  var v3:bv32;
  var v6:bv32;
  var v8:bv32;
  var v4:bv32;
  var v9:bv32;
  var v5:bv32;
  var v7:bv32;
  var v13:bv8;
  var v18:bv8;
  var v16:bv8;
  var v14:bv8;
  var v17:bv8;
  var v12:bv8;
  var v15:bv8;
  var v2:bool;
  var v0:bv32;
  var v1:bv32;
  var v11:bool;
  var v25:bv32;
  var v19:bv8;
  var v26:bv32;
  var v21:bv8;
  var v23:bv8;
  var v24:bv128;
  var v20:bv8;
  var v22:bv8;
  var v35:bv32;
  var v30:bv32;
  var v36:bv32;
  var v32:bv32;
  var v27:bv32;
  var v28:bv32;
  var v33:bv32;
  var v34:bv32;
  var v31:bv32;
  var v29:bv32;
  var v38:bv32;
  var v39:bv32;
  var v37:bv32;
  var v40:bv32;
  var v82:bv8;
  var v88:bv8;
  var v89:bv8;
  var v83:bv8;
  var v85:bv8;
  var v86:bv8;
  var v84:bv8;
  var v87:bv8;
  var v80:bv32;
  var v49:bv32;
  var v47:bv32;
  var v48:bv32;
  var v43:bv32;
  var v41:bv32;
  var v45:bv32;
  var v50:bv32;
  var v42:bv32;
  var v46:bv32;
  var v44:bv32;
  var v57:bv32;
  var v58:bv32;
  var v55:bv32;
  var v52:bv32;
  var v59:bv32;
  var v53:bv32;
  var v54:bv32;
  var v51:bv32;
  var v56:bv32;
  var v62:bv32;
  var v65:bv32;
  var v64:bv32;
  var v66:bv32;
  var v60:bv32;
  var v61:bv32;
  var v63:bv32;
  var v73:bv32;
  var v71:bv32;
  var v70:bv32;
  var v76:bv32;
  var v74:bv32;
  var v77:bv32;
  var v69:bv32;
  var v72:bv32;
  var v68:bv32;
  var v75:bv32;
  var v67:bv32;
  var v78:bv32;
  var v79:bv32;
  var v81:bool;
  var v117:bv8;
  var v118:bv8;
  var v113:bv32;
  var v110:bv32;
  var v114:bv32;
  var v115:bv8;
  var v111:bv32;
  var v112:bv32;
  var v116:bv8;
  var v123:bv8;
  var v127:bv128;
  var v124:bv8;
  var v119:bv8;
  var v120:bv8;
  var v125:bv8;
  var v122:bv8;
  var v121:bv8;
  var v126:bv8;
  var v133:bv32;
  var v128:bv32;
  var v135:bv32;
  var v129:bv32;
  var v130:bv32;
  var v136:bv32;
  var v137:bv32;
  var v131:bv32;
  var v134:bv32;
  var v132:bv32;
  var v97:bv32;
  var v93:bv8;
  var v92:bv8;
  var v95:bv32;
  var v91:bv8;
  var v96:bv32;
  var v90:bv8;
  var v94:bv128;
  var v103:bv32;
  var v104:bv32;
  var v105:bv32;
  var v106:bv32;
  var v100:bv32;
  var v101:bv32;
  var v99:bv32;
  var v102:bv32;
  var v98:bv32;
  var v108:bv32;
  var v109:bv32;
  var v107:bv32;
  var v150:bv32;
  var v153:bv32;
  var v154:bv32;
  var v151:bv32;
  var v157:bv32;
  var v156:bv32;
  var v148:bv32;
  var v149:bv32;
  var v147:bv32;
  var v155:bv32;
  var v152:bv32;
  var v163:bv32;
  var v164:bv32;
  var v162:bv32;
  var v158:bv32;
  var v160:bv32;
  var v161:bv32;
  var v159:bv32;
  var v172:bv32;
  var v173:bv32;
  var v168:bv32;
  var v169:bv32;
  var v165:bv32;
  var v170:bv32;
  var v166:bv32;
  var v171:bv32;
  var v167:bv32;
  var v176:bv32;
  var v181:bv32;
  var v179:bv32;
  var v182:bv32;
  var v174:bv32;
  var v180:bv32;
  var v175:bv32;
  var v178:bv32;
  var v177:bv32;
  var v183:bv32;
  var v141:bv32;
  var v142:bv32;
  var v138:bv32;
  var v140:bv32;
  var v143:bv32;
  var v139:bv32;
  var v145:bv32;
  var v144:bv32;
  var v146:bv32;
$entry:
  assert {:block_sourceloc} {:sourceloc_num 2} true;
  v0 := FDIV32(1065353216bv32, SI32_TO_FP32(BV32_ADD(BV32_SHL($r, 1bv32), 1bv32)));
  v1 := BV32_ADD(BV32_MUL(group_id_x, group_size_x), local_id_x);
  v2 := BV32_ULT(v1, $h);
  goto $truebb, $falsebb;
$if.then:
  assert {:block_sourceloc} {:sourceloc_num 3} true;
  assert {:sourceloc} {:sourceloc_num 4} true;
  $$retval.i.i[0bv32] := 0bv32;
  assert {:sourceloc} {:sourceloc_num 5} true;
  $$retval.i.i[1bv32] := 0bv32;
  assert {:sourceloc} {:sourceloc_num 6} true;
  $$retval.i.i[2bv32] := 0bv32;
  assert {:sourceloc} {:sourceloc_num 7} true;
  $$retval.i.i[3bv32] := 0bv32;
  assert {:sourceloc} {:sourceloc_num 8} true;
  v3 := $$retval.i.i[0bv32];
  assert {:sourceloc} {:sourceloc_num 9} true;
  v4 := $$retval.i.i[1bv32];
  assert {:sourceloc} {:sourceloc_num 10} true;
  v5 := $$retval.i.i[2bv32];
  assert {:sourceloc} {:sourceloc_num 11} true;
  v6 := $$retval.i.i[3bv32];
  assert {:sourceloc} {:sourceloc_num 12} true;
  $$retval.i[0bv32] := v3;
  assert {:sourceloc} {:sourceloc_num 13} true;
  $$retval.i[1bv32] := v4;
  assert {:sourceloc} {:sourceloc_num 14} true;
  $$retval.i[2bv32] := v5;
  assert {:sourceloc} {:sourceloc_num 15} true;
  $$retval.i[3bv32] := v6;
  assert {:sourceloc} {:sourceloc_num 16} true;
  v7 := $$retval.i[0bv32];
  assert {:sourceloc} {:sourceloc_num 17} true;
  v8 := $$retval.i[1bv32];
  assert {:sourceloc} {:sourceloc_num 18} true;
  v9 := $$retval.i[2bv32];
  assert {:sourceloc} {:sourceloc_num 19} true;
  v10 := $$retval.i[3bv32];
  assert {:sourceloc} {:sourceloc_num 20} true;
  $$t[0bv32] := v7;
  assert {:sourceloc} {:sourceloc_num 21} true;
  $$t[1bv32] := v8;
  assert {:sourceloc} {:sourceloc_num 22} true;
  $$t[2bv32] := v9;
  assert {:sourceloc} {:sourceloc_num 23} true;
  $$t[3bv32] := v10;
  $x.0 := BV32_SUB(0bv32, $r);
  goto $for.cond;
$for.cond:
  assert {:block_sourceloc} {:sourceloc_num 24} true;
  v11 := BV32_SLE($x.0, $r);
  goto $truebb0, $falsebb0;
$for.body:
  assert {:block_sourceloc} {:sourceloc_num 25} true;
  assert {:sourceloc} {:sourceloc_num 26} true;
  v12 := $$rgbaTex[0bv32];
  assert {:sourceloc} {:sourceloc_num 27} true;
  $$agg.tmp5[0bv32] := v12;
  assert {:sourceloc} {:sourceloc_num 28} true;
  v13 := $$rgbaTex[1bv32];
  assert {:sourceloc} {:sourceloc_num 29} true;
  $$agg.tmp5[1bv32] := v13;
  assert {:sourceloc} {:sourceloc_num 30} true;
  v14 := $$rgbaTex[2bv32];
  assert {:sourceloc} {:sourceloc_num 31} true;
  $$agg.tmp5[2bv32] := v14;
  assert {:sourceloc} {:sourceloc_num 32} true;
  v15 := $$rgbaTex[3bv32];
  assert {:sourceloc} {:sourceloc_num 33} true;
  $$agg.tmp5[3bv32] := v15;
  assert {:sourceloc} {:sourceloc_num 34} true;
  v16 := $$rgbaTex[4bv32];
  assert {:sourceloc} {:sourceloc_num 35} true;
  $$agg.tmp5[4bv32] := v16;
  assert {:sourceloc} {:sourceloc_num 36} true;
  v17 := $$rgbaTex[5bv32];
  assert {:sourceloc} {:sourceloc_num 37} true;
  $$agg.tmp5[5bv32] := v17;
  assert {:sourceloc} {:sourceloc_num 38} true;
  v18 := $$rgbaTex[6bv32];
  assert {:sourceloc} {:sourceloc_num 39} true;
  $$agg.tmp5[6bv32] := v18;
  assert {:sourceloc} {:sourceloc_num 40} true;
  v19 := $$rgbaTex[7bv32];
  assert {:sourceloc} {:sourceloc_num 41} true;
  $$agg.tmp5[7bv32] := v19;
  assert {:sourceloc} {:sourceloc_num 42} true;
  v20 := $$rgbaTex[8bv32];
  assert {:sourceloc} {:sourceloc_num 43} true;
  $$agg.tmp5[8bv32] := v20;
  assert {:sourceloc} {:sourceloc_num 44} true;
  v21 := $$rgbaTex[9bv32];
  assert {:sourceloc} {:sourceloc_num 45} true;
  $$agg.tmp5[9bv32] := v21;
  assert {:sourceloc} {:sourceloc_num 46} true;
  v22 := $$rgbaTex[10bv32];
  assert {:sourceloc} {:sourceloc_num 47} true;
  $$agg.tmp5[10bv32] := v22;
  assert {:sourceloc} {:sourceloc_num 48} true;
  v23 := $$rgbaTex[11bv32];
  assert {:sourceloc} {:sourceloc_num 49} true;
  $$agg.tmp5[11bv32] := v23;
  call {:sourceloc_num 50}   v24 := $_Z5tex2D7textureI6uchar4Li2EL19cudaTextureReadMode1EEff(MKPTR($arrayId$$agg.tmp5, 0bv32), SI32_TO_FP32($x.0), UI32_TO_FP32(v1));
  assert {:sourceloc} {:sourceloc_num 51} true;
  $$agg.tmp[0bv32] := v24[32:0];
  assert {:sourceloc} {:sourceloc_num 52} true;
  $$agg.tmp[1bv32] := v24[64:32];
  assert {:sourceloc} {:sourceloc_num 53} true;
  $$agg.tmp[2bv32] := v24[96:64];
  assert {:sourceloc} {:sourceloc_num 54} true;
  $$agg.tmp[3bv32] := v24[128:96];
  assert {:sourceloc} {:sourceloc_num 55} true;
  v25 := $$agg.tmp[0bv32];
  assert {:sourceloc} {:sourceloc_num 56} true;
  $$agg.tmp42[0bv32] := v25;
  assert {:sourceloc} {:sourceloc_num 57} true;
  v26 := $$agg.tmp[1bv32];
  assert {:sourceloc} {:sourceloc_num 58} true;
  $$agg.tmp42[1bv32] := v26;
  assert {:sourceloc} {:sourceloc_num 59} true;
  v27 := $$agg.tmp[2bv32];
  assert {:sourceloc} {:sourceloc_num 60} true;
  $$agg.tmp42[2bv32] := v27;
  assert {:sourceloc} {:sourceloc_num 61} true;
  v28 := $$agg.tmp[3bv32];
  assert {:sourceloc} {:sourceloc_num 62} true;
  $$agg.tmp42[3bv32] := v28;
  assert {:sourceloc} {:sourceloc_num 63} true;
  v29 := $$t[0bv32];
  assert {:sourceloc} {:sourceloc_num 64} true;
  v30 := $$agg.tmp42[0bv32];
  assert {:sourceloc} {:sourceloc_num 65} true;
  v31 := $$t[1bv32];
  assert {:sourceloc} {:sourceloc_num 66} true;
  v32 := $$agg.tmp42[1bv32];
  assert {:sourceloc} {:sourceloc_num 67} true;
  v33 := $$t[2bv32];
  assert {:sourceloc} {:sourceloc_num 68} true;
  v34 := $$agg.tmp42[2bv32];
  assert {:sourceloc} {:sourceloc_num 69} true;
  v35 := $$t[3bv32];
  assert {:sourceloc} {:sourceloc_num 70} true;
  v36 := $$agg.tmp42[3bv32];
  assert {:sourceloc} {:sourceloc_num 71} true;
  $$retval.i.i.43[0bv32] := FADD32(v29, v30);
  assert {:sourceloc} {:sourceloc_num 72} true;
  $$retval.i.i.43[1bv32] := FADD32(v31, v32);
  assert {:sourceloc} {:sourceloc_num 73} true;
  $$retval.i.i.43[2bv32] := FADD32(v33, v34);
  assert {:sourceloc} {:sourceloc_num 74} true;
  $$retval.i.i.43[3bv32] := FADD32(v35, v36);
  assert {:sourceloc} {:sourceloc_num 75} true;
  v37 := $$retval.i.i.43[0bv32];
  assert {:sourceloc} {:sourceloc_num 76} true;
  v38 := $$retval.i.i.43[1bv32];
  assert {:sourceloc} {:sourceloc_num 77} true;
  v39 := $$retval.i.i.43[2bv32];
  assert {:sourceloc} {:sourceloc_num 78} true;
  v40 := $$retval.i.i.43[3bv32];
  assert {:sourceloc} {:sourceloc_num 79} true;
  $$ref.tmp.i[0bv32] := v37;
  assert {:sourceloc} {:sourceloc_num 80} true;
  $$ref.tmp.i[1bv32] := v38;
  assert {:sourceloc} {:sourceloc_num 81} true;
  $$ref.tmp.i[2bv32] := v39;
  assert {:sourceloc} {:sourceloc_num 82} true;
  $$ref.tmp.i[3bv32] := v40;
  assert {:sourceloc} {:sourceloc_num 83} true;
  v41 := $$ref.tmp.i[0bv32];
  assert {:sourceloc} {:sourceloc_num 84} true;
  $$t[0bv32] := v41;
  assert {:sourceloc} {:sourceloc_num 85} true;
  v42 := $$ref.tmp.i[1bv32];
  assert {:sourceloc} {:sourceloc_num 86} true;
  $$t[1bv32] := v42;
  assert {:sourceloc} {:sourceloc_num 87} true;
  v43 := $$ref.tmp.i[2bv32];
  assert {:sourceloc} {:sourceloc_num 88} true;
  $$t[2bv32] := v43;
  assert {:sourceloc} {:sourceloc_num 89} true;
  v44 := $$ref.tmp.i[3bv32];
  assert {:sourceloc} {:sourceloc_num 90} true;
  $$t[3bv32] := v44;
  goto $for.inc;
$for.inc:
  assert {:block_sourceloc} {:sourceloc_num 91} true;
  $x.0 := BV32_ADD($x.0, 1bv32);
  goto $for.cond;
$for.end:
  assert {:block_sourceloc} {:sourceloc_num 92} true;
  assert {:sourceloc} {:sourceloc_num 93} true;
  v45 := $$t[0bv32];
  assert {:sourceloc} {:sourceloc_num 94} true;
  $$agg.tmp10[0bv32] := v45;
  assert {:sourceloc} {:sourceloc_num 95} true;
  v46 := $$t[1bv32];
  assert {:sourceloc} {:sourceloc_num 96} true;
  $$agg.tmp10[1bv32] := v46;
  assert {:sourceloc} {:sourceloc_num 97} true;
  v47 := $$t[2bv32];
  assert {:sourceloc} {:sourceloc_num 98} true;
  $$agg.tmp10[2bv32] := v47;
  assert {:sourceloc} {:sourceloc_num 99} true;
  v48 := $$t[3bv32];
  assert {:sourceloc} {:sourceloc_num 100} true;
  $$agg.tmp10[3bv32] := v48;
  assert {:sourceloc} {:sourceloc_num 101} true;
  v49 := $$agg.tmp10[0bv32];
  assert {:sourceloc} {:sourceloc_num 102} true;
  $$agg.tmp1057[0bv32] := v49;
  assert {:sourceloc} {:sourceloc_num 103} true;
  v50 := $$agg.tmp10[1bv32];
  assert {:sourceloc} {:sourceloc_num 104} true;
  $$agg.tmp1057[1bv32] := v50;
  assert {:sourceloc} {:sourceloc_num 105} true;
  v51 := $$agg.tmp10[2bv32];
  assert {:sourceloc} {:sourceloc_num 106} true;
  $$agg.tmp1057[2bv32] := v51;
  assert {:sourceloc} {:sourceloc_num 107} true;
  v52 := $$agg.tmp10[3bv32];
  assert {:sourceloc} {:sourceloc_num 108} true;
  $$agg.tmp1057[3bv32] := v52;
  assert {:sourceloc} {:sourceloc_num 109} true;
  v53 := $$agg.tmp1057[0bv32];
  assert {:sourceloc} {:sourceloc_num 110} true;
  v54 := $$agg.tmp1057[1bv32];
  assert {:sourceloc} {:sourceloc_num 111} true;
  v55 := $$agg.tmp1057[2bv32];
  assert {:sourceloc} {:sourceloc_num 112} true;
  v56 := $$agg.tmp1057[3bv32];
  assert {:sourceloc} {:sourceloc_num 113} true;
  $$retval.i.i.58[0bv32] := FMUL32(v53, v0);
  assert {:sourceloc} {:sourceloc_num 114} true;
  $$retval.i.i.58[1bv32] := FMUL32(v54, v0);
  assert {:sourceloc} {:sourceloc_num 115} true;
  $$retval.i.i.58[2bv32] := FMUL32(v55, v0);
  assert {:sourceloc} {:sourceloc_num 116} true;
  $$retval.i.i.58[3bv32] := FMUL32(v56, v0);
  assert {:sourceloc} {:sourceloc_num 117} true;
  v57 := $$retval.i.i.58[0bv32];
  assert {:sourceloc} {:sourceloc_num 118} true;
  v58 := $$retval.i.i.58[1bv32];
  assert {:sourceloc} {:sourceloc_num 119} true;
  v59 := $$retval.i.i.58[2bv32];
  assert {:sourceloc} {:sourceloc_num 120} true;
  v60 := $$retval.i.i.58[3bv32];
  assert {:sourceloc} {:sourceloc_num 121} true;
  $$retval.i.63[0bv32] := v57;
  assert {:sourceloc} {:sourceloc_num 122} true;
  $$retval.i.63[1bv32] := v58;
  assert {:sourceloc} {:sourceloc_num 123} true;
  $$retval.i.63[2bv32] := v59;
  assert {:sourceloc} {:sourceloc_num 124} true;
  $$retval.i.63[3bv32] := v60;
  assert {:sourceloc} {:sourceloc_num 125} true;
  v61 := $$retval.i.63[0bv32];
  assert {:sourceloc} {:sourceloc_num 126} true;
  v62 := $$retval.i.63[1bv32];
  assert {:sourceloc} {:sourceloc_num 127} true;
  v63 := $$retval.i.63[2bv32];
  assert {:sourceloc} {:sourceloc_num 128} true;
  v64 := $$retval.i.63[3bv32];
  assert {:sourceloc} {:sourceloc_num 129} true;
  $$agg.tmp9[0bv32] := v61;
  assert {:sourceloc} {:sourceloc_num 130} true;
  $$agg.tmp9[1bv32] := v62;
  assert {:sourceloc} {:sourceloc_num 131} true;
  $$agg.tmp9[2bv32] := v63;
  assert {:sourceloc} {:sourceloc_num 132} true;
  $$agg.tmp9[3bv32] := v64;
  assert {:sourceloc} {:sourceloc_num 133} true;
  v65 := $$agg.tmp9[0bv32];
  assert {:sourceloc} {:sourceloc_num 134} true;
  $$agg.tmp973[0bv32] := v65;
  assert {:sourceloc} {:sourceloc_num 135} true;
  v66 := $$agg.tmp9[1bv32];
  assert {:sourceloc} {:sourceloc_num 136} true;
  $$agg.tmp973[1bv32] := v66;
  assert {:sourceloc} {:sourceloc_num 137} true;
  v67 := $$agg.tmp9[2bv32];
  assert {:sourceloc} {:sourceloc_num 138} true;
  $$agg.tmp973[2bv32] := v67;
  assert {:sourceloc} {:sourceloc_num 139} true;
  v68 := $$agg.tmp9[3bv32];
  assert {:sourceloc} {:sourceloc_num 140} true;
  $$agg.tmp973[3bv32] := v68;
  assert {:sourceloc} {:sourceloc_num 141} true;
  v69 := $$agg.tmp973[0bv32];
  call {:sourceloc_num 142}   v70 := $__saturatef(v69);
  assert {:sourceloc} {:sourceloc_num 143} true;
  $$agg.tmp973[0bv32] := v70;
  assert {:sourceloc} {:sourceloc_num 144} true;
  v71 := $$agg.tmp973[1bv32];
  call {:sourceloc_num 145}   v72 := $__saturatef(v71);
  assert {:sourceloc} {:sourceloc_num 146} true;
  $$agg.tmp973[1bv32] := v72;
  assert {:sourceloc} {:sourceloc_num 147} true;
  v73 := $$agg.tmp973[2bv32];
  call {:sourceloc_num 148}   v74 := $__saturatef(v73);
  assert {:sourceloc} {:sourceloc_num 149} true;
  $$agg.tmp973[2bv32] := v74;
  assert {:sourceloc} {:sourceloc_num 150} true;
  v75 := $$agg.tmp973[3bv32];
  call {:sourceloc_num 151}   v76 := $__saturatef(v75);
  assert {:sourceloc} {:sourceloc_num 152} true;
  $$agg.tmp973[3bv32] := v76;
  assert {:sourceloc} {:sourceloc_num 153} true;
  v77 := $$agg.tmp973[3bv32];
  assert {:sourceloc} {:sourceloc_num 154} true;
  v78 := $$agg.tmp973[2bv32];
  assert {:sourceloc} {:sourceloc_num 155} true;
  v79 := $$agg.tmp973[1bv32];
  assert {:sourceloc} {:sourceloc_num 156} true;
  v80 := $$agg.tmp973[0bv32];
  assert {:sourceloc} {:sourceloc_num 157} true;
  $$od[BV32_MUL(v1, $w)] := BV32_OR(BV32_OR(BV32_OR(BV32_SHL(FP32_TO_UI32(FMUL32(v77, 1132396544bv32)), 24bv32), BV32_SHL(FP32_TO_UI32(FMUL32(v78, 1132396544bv32)), 16bv32)), BV32_SHL(FP32_TO_UI32(FMUL32(v79, 1132396544bv32)), 8bv32)), FP32_TO_UI32(FMUL32(v80, 1132396544bv32)));
  $x14.0 := 1bv32;
  goto $for.cond.15;
$for.cond.15:
  assert {:block_sourceloc} {:sourceloc_num 158} true;
  v81 := BV32_SLT($x14.0, $w);
  goto $truebb1, $falsebb1;
$for.body.17:
  assert {:block_sourceloc} {:sourceloc_num 159} true;
  assert {:sourceloc} {:sourceloc_num 160} true;
  v82 := $$rgbaTex[0bv32];
  assert {:sourceloc} {:sourceloc_num 161} true;
  $$agg.tmp19[0bv32] := v82;
  assert {:sourceloc} {:sourceloc_num 162} true;
  v83 := $$rgbaTex[1bv32];
  assert {:sourceloc} {:sourceloc_num 163} true;
  $$agg.tmp19[1bv32] := v83;
  assert {:sourceloc} {:sourceloc_num 164} true;
  v84 := $$rgbaTex[2bv32];
  assert {:sourceloc} {:sourceloc_num 165} true;
  $$agg.tmp19[2bv32] := v84;
  assert {:sourceloc} {:sourceloc_num 166} true;
  v85 := $$rgbaTex[3bv32];
  assert {:sourceloc} {:sourceloc_num 167} true;
  $$agg.tmp19[3bv32] := v85;
  assert {:sourceloc} {:sourceloc_num 168} true;
  v86 := $$rgbaTex[4bv32];
  assert {:sourceloc} {:sourceloc_num 169} true;
  $$agg.tmp19[4bv32] := v86;
  assert {:sourceloc} {:sourceloc_num 170} true;
  v87 := $$rgbaTex[5bv32];
  assert {:sourceloc} {:sourceloc_num 171} true;
  $$agg.tmp19[5bv32] := v87;
  assert {:sourceloc} {:sourceloc_num 172} true;
  v88 := $$rgbaTex[6bv32];
  assert {:sourceloc} {:sourceloc_num 173} true;
  $$agg.tmp19[6bv32] := v88;
  assert {:sourceloc} {:sourceloc_num 174} true;
  v89 := $$rgbaTex[7bv32];
  assert {:sourceloc} {:sourceloc_num 175} true;
  $$agg.tmp19[7bv32] := v89;
  assert {:sourceloc} {:sourceloc_num 176} true;
  v90 := $$rgbaTex[8bv32];
  assert {:sourceloc} {:sourceloc_num 177} true;
  $$agg.tmp19[8bv32] := v90;
  assert {:sourceloc} {:sourceloc_num 178} true;
  v91 := $$rgbaTex[9bv32];
  assert {:sourceloc} {:sourceloc_num 179} true;
  $$agg.tmp19[9bv32] := v91;
  assert {:sourceloc} {:sourceloc_num 180} true;
  v92 := $$rgbaTex[10bv32];
  assert {:sourceloc} {:sourceloc_num 181} true;
  $$agg.tmp19[10bv32] := v92;
  assert {:sourceloc} {:sourceloc_num 182} true;
  v93 := $$rgbaTex[11bv32];
  assert {:sourceloc} {:sourceloc_num 183} true;
  $$agg.tmp19[11bv32] := v93;
  call {:sourceloc_num 184}   v94 := $_Z5tex2D7textureI6uchar4Li2EL19cudaTextureReadMode1EEff(MKPTR($arrayId$$agg.tmp19, 0bv32), SI32_TO_FP32(BV32_ADD($x14.0, $r)), UI32_TO_FP32(v1));
  assert {:sourceloc} {:sourceloc_num 185} true;
  $$agg.tmp18[0bv32] := v94[32:0];
  assert {:sourceloc} {:sourceloc_num 186} true;
  $$agg.tmp18[1bv32] := v94[64:32];
  assert {:sourceloc} {:sourceloc_num 187} true;
  $$agg.tmp18[2bv32] := v94[96:64];
  assert {:sourceloc} {:sourceloc_num 188} true;
  $$agg.tmp18[3bv32] := v94[128:96];
  assert {:sourceloc} {:sourceloc_num 189} true;
  v95 := $$agg.tmp18[0bv32];
  assert {:sourceloc} {:sourceloc_num 190} true;
  $$agg.tmp18104[0bv32] := v95;
  assert {:sourceloc} {:sourceloc_num 191} true;
  v96 := $$agg.tmp18[1bv32];
  assert {:sourceloc} {:sourceloc_num 192} true;
  $$agg.tmp18104[1bv32] := v96;
  assert {:sourceloc} {:sourceloc_num 193} true;
  v97 := $$agg.tmp18[2bv32];
  assert {:sourceloc} {:sourceloc_num 194} true;
  $$agg.tmp18104[2bv32] := v97;
  assert {:sourceloc} {:sourceloc_num 195} true;
  v98 := $$agg.tmp18[3bv32];
  assert {:sourceloc} {:sourceloc_num 196} true;
  $$agg.tmp18104[3bv32] := v98;
  assert {:sourceloc} {:sourceloc_num 197} true;
  v99 := $$t[0bv32];
  assert {:sourceloc} {:sourceloc_num 198} true;
  v100 := $$agg.tmp18104[0bv32];
  assert {:sourceloc} {:sourceloc_num 199} true;
  v101 := $$t[1bv32];
  assert {:sourceloc} {:sourceloc_num 200} true;
  v102 := $$agg.tmp18104[1bv32];
  assert {:sourceloc} {:sourceloc_num 201} true;
  v103 := $$t[2bv32];
  assert {:sourceloc} {:sourceloc_num 202} true;
  v104 := $$agg.tmp18104[2bv32];
  assert {:sourceloc} {:sourceloc_num 203} true;
  v105 := $$t[3bv32];
  assert {:sourceloc} {:sourceloc_num 204} true;
  v106 := $$agg.tmp18104[3bv32];
  assert {:sourceloc} {:sourceloc_num 205} true;
  $$retval.i.i.105[0bv32] := FADD32(v99, v100);
  assert {:sourceloc} {:sourceloc_num 206} true;
  $$retval.i.i.105[1bv32] := FADD32(v101, v102);
  assert {:sourceloc} {:sourceloc_num 207} true;
  $$retval.i.i.105[2bv32] := FADD32(v103, v104);
  assert {:sourceloc} {:sourceloc_num 208} true;
  $$retval.i.i.105[3bv32] := FADD32(v105, v106);
  assert {:sourceloc} {:sourceloc_num 209} true;
  v107 := $$retval.i.i.105[0bv32];
  assert {:sourceloc} {:sourceloc_num 210} true;
  v108 := $$retval.i.i.105[1bv32];
  assert {:sourceloc} {:sourceloc_num 211} true;
  v109 := $$retval.i.i.105[2bv32];
  assert {:sourceloc} {:sourceloc_num 212} true;
  v110 := $$retval.i.i.105[3bv32];
  assert {:sourceloc} {:sourceloc_num 213} true;
  $$ref.tmp.i.111[0bv32] := v107;
  assert {:sourceloc} {:sourceloc_num 214} true;
  $$ref.tmp.i.111[1bv32] := v108;
  assert {:sourceloc} {:sourceloc_num 215} true;
  $$ref.tmp.i.111[2bv32] := v109;
  assert {:sourceloc} {:sourceloc_num 216} true;
  $$ref.tmp.i.111[3bv32] := v110;
  assert {:sourceloc} {:sourceloc_num 217} true;
  v111 := $$ref.tmp.i.111[0bv32];
  assert {:sourceloc} {:sourceloc_num 218} true;
  $$t[0bv32] := v111;
  assert {:sourceloc} {:sourceloc_num 219} true;
  v112 := $$ref.tmp.i.111[1bv32];
  assert {:sourceloc} {:sourceloc_num 220} true;
  $$t[1bv32] := v112;
  assert {:sourceloc} {:sourceloc_num 221} true;
  v113 := $$ref.tmp.i.111[2bv32];
  assert {:sourceloc} {:sourceloc_num 222} true;
  $$t[2bv32] := v113;
  assert {:sourceloc} {:sourceloc_num 223} true;
  v114 := $$ref.tmp.i.111[3bv32];
  assert {:sourceloc} {:sourceloc_num 224} true;
  $$t[3bv32] := v114;
  assert {:sourceloc} {:sourceloc_num 225} true;
  v115 := $$rgbaTex[0bv32];
  assert {:sourceloc} {:sourceloc_num 226} true;
  $$agg.tmp25[0bv32] := v115;
  assert {:sourceloc} {:sourceloc_num 227} true;
  v116 := $$rgbaTex[1bv32];
  assert {:sourceloc} {:sourceloc_num 228} true;
  $$agg.tmp25[1bv32] := v116;
  assert {:sourceloc} {:sourceloc_num 229} true;
  v117 := $$rgbaTex[2bv32];
  assert {:sourceloc} {:sourceloc_num 230} true;
  $$agg.tmp25[2bv32] := v117;
  assert {:sourceloc} {:sourceloc_num 231} true;
  v118 := $$rgbaTex[3bv32];
  assert {:sourceloc} {:sourceloc_num 232} true;
  $$agg.tmp25[3bv32] := v118;
  assert {:sourceloc} {:sourceloc_num 233} true;
  v119 := $$rgbaTex[4bv32];
  assert {:sourceloc} {:sourceloc_num 234} true;
  $$agg.tmp25[4bv32] := v119;
  assert {:sourceloc} {:sourceloc_num 235} true;
  v120 := $$rgbaTex[5bv32];
  assert {:sourceloc} {:sourceloc_num 236} true;
  $$agg.tmp25[5bv32] := v120;
  assert {:sourceloc} {:sourceloc_num 237} true;
  v121 := $$rgbaTex[6bv32];
  assert {:sourceloc} {:sourceloc_num 238} true;
  $$agg.tmp25[6bv32] := v121;
  assert {:sourceloc} {:sourceloc_num 239} true;
  v122 := $$rgbaTex[7bv32];
  assert {:sourceloc} {:sourceloc_num 240} true;
  $$agg.tmp25[7bv32] := v122;
  assert {:sourceloc} {:sourceloc_num 241} true;
  v123 := $$rgbaTex[8bv32];
  assert {:sourceloc} {:sourceloc_num 242} true;
  $$agg.tmp25[8bv32] := v123;
  assert {:sourceloc} {:sourceloc_num 243} true;
  v124 := $$rgbaTex[9bv32];
  assert {:sourceloc} {:sourceloc_num 244} true;
  $$agg.tmp25[9bv32] := v124;
  assert {:sourceloc} {:sourceloc_num 245} true;
  v125 := $$rgbaTex[10bv32];
  assert {:sourceloc} {:sourceloc_num 246} true;
  $$agg.tmp25[10bv32] := v125;
  assert {:sourceloc} {:sourceloc_num 247} true;
  v126 := $$rgbaTex[11bv32];
  assert {:sourceloc} {:sourceloc_num 248} true;
  $$agg.tmp25[11bv32] := v126;
  call {:sourceloc_num 249}   v127 := $_Z5tex2D7textureI6uchar4Li2EL19cudaTextureReadMode1EEff(MKPTR($arrayId$$agg.tmp25, 0bv32), SI32_TO_FP32(BV32_SUB(BV32_SUB($x14.0, $r), 1bv32)), UI32_TO_FP32(v1));
  assert {:sourceloc} {:sourceloc_num 250} true;
  $$agg.tmp24[0bv32] := v127[32:0];
  assert {:sourceloc} {:sourceloc_num 251} true;
  $$agg.tmp24[1bv32] := v127[64:32];
  assert {:sourceloc} {:sourceloc_num 252} true;
  $$agg.tmp24[2bv32] := v127[96:64];
  assert {:sourceloc} {:sourceloc_num 253} true;
  $$agg.tmp24[3bv32] := v127[128:96];
  assert {:sourceloc} {:sourceloc_num 254} true;
  v128 := $$agg.tmp24[0bv32];
  assert {:sourceloc} {:sourceloc_num 255} true;
  $$agg.tmp24128[0bv32] := v128;
  assert {:sourceloc} {:sourceloc_num 256} true;
  v129 := $$agg.tmp24[1bv32];
  assert {:sourceloc} {:sourceloc_num 257} true;
  $$agg.tmp24128[1bv32] := v129;
  assert {:sourceloc} {:sourceloc_num 258} true;
  v130 := $$agg.tmp24[2bv32];
  assert {:sourceloc} {:sourceloc_num 259} true;
  $$agg.tmp24128[2bv32] := v130;
  assert {:sourceloc} {:sourceloc_num 260} true;
  v131 := $$agg.tmp24[3bv32];
  assert {:sourceloc} {:sourceloc_num 261} true;
  $$agg.tmp24128[3bv32] := v131;
  assert {:sourceloc} {:sourceloc_num 262} true;
  v132 := $$t[0bv32];
  assert {:sourceloc} {:sourceloc_num 263} true;
  v133 := $$agg.tmp24128[0bv32];
  assert {:sourceloc} {:sourceloc_num 264} true;
  v134 := $$t[1bv32];
  assert {:sourceloc} {:sourceloc_num 265} true;
  v135 := $$agg.tmp24128[1bv32];
  assert {:sourceloc} {:sourceloc_num 266} true;
  v136 := $$t[2bv32];
  assert {:sourceloc} {:sourceloc_num 267} true;
  v137 := $$agg.tmp24128[2bv32];
  assert {:sourceloc} {:sourceloc_num 268} true;
  v138 := $$t[3bv32];
  assert {:sourceloc} {:sourceloc_num 269} true;
  v139 := $$agg.tmp24128[3bv32];
  assert {:sourceloc} {:sourceloc_num 270} true;
  $$retval.i.i.129[0bv32] := FSUB32(v132, v133);
  assert {:sourceloc} {:sourceloc_num 271} true;
  $$retval.i.i.129[1bv32] := FSUB32(v134, v135);
  assert {:sourceloc} {:sourceloc_num 272} true;
  $$retval.i.i.129[2bv32] := FSUB32(v136, v137);
  assert {:sourceloc} {:sourceloc_num 273} true;
  $$retval.i.i.129[3bv32] := FSUB32(v138, v139);
  assert {:sourceloc} {:sourceloc_num 274} true;
  v140 := $$retval.i.i.129[0bv32];
  assert {:sourceloc} {:sourceloc_num 275} true;
  v141 := $$retval.i.i.129[1bv32];
  assert {:sourceloc} {:sourceloc_num 276} true;
  v142 := $$retval.i.i.129[2bv32];
  assert {:sourceloc} {:sourceloc_num 277} true;
  v143 := $$retval.i.i.129[3bv32];
  assert {:sourceloc} {:sourceloc_num 278} true;
  $$ref.tmp.i.135[0bv32] := v140;
  assert {:sourceloc} {:sourceloc_num 279} true;
  $$ref.tmp.i.135[1bv32] := v141;
  assert {:sourceloc} {:sourceloc_num 280} true;
  $$ref.tmp.i.135[2bv32] := v142;
  assert {:sourceloc} {:sourceloc_num 281} true;
  $$ref.tmp.i.135[3bv32] := v143;
  assert {:sourceloc} {:sourceloc_num 282} true;
  v144 := $$ref.tmp.i.135[0bv32];
  assert {:sourceloc} {:sourceloc_num 283} true;
  $$t[0bv32] := v144;
  assert {:sourceloc} {:sourceloc_num 284} true;
  v145 := $$ref.tmp.i.135[1bv32];
  assert {:sourceloc} {:sourceloc_num 285} true;
  $$t[1bv32] := v145;
  assert {:sourceloc} {:sourceloc_num 286} true;
  v146 := $$ref.tmp.i.135[2bv32];
  assert {:sourceloc} {:sourceloc_num 287} true;
  $$t[2bv32] := v146;
  assert {:sourceloc} {:sourceloc_num 288} true;
  v147 := $$ref.tmp.i.135[3bv32];
  assert {:sourceloc} {:sourceloc_num 289} true;
  $$t[3bv32] := v147;
  assert {:sourceloc} {:sourceloc_num 290} true;
  v148 := $$t[0bv32];
  assert {:sourceloc} {:sourceloc_num 291} true;
  $$agg.tmp32[0bv32] := v148;
  assert {:sourceloc} {:sourceloc_num 292} true;
  v149 := $$t[1bv32];
  assert {:sourceloc} {:sourceloc_num 293} true;
  $$agg.tmp32[1bv32] := v149;
  assert {:sourceloc} {:sourceloc_num 294} true;
  v150 := $$t[2bv32];
  assert {:sourceloc} {:sourceloc_num 295} true;
  $$agg.tmp32[2bv32] := v150;
  assert {:sourceloc} {:sourceloc_num 296} true;
  v151 := $$t[3bv32];
  assert {:sourceloc} {:sourceloc_num 297} true;
  $$agg.tmp32[3bv32] := v151;
  assert {:sourceloc} {:sourceloc_num 298} true;
  v152 := $$agg.tmp32[0bv32];
  assert {:sourceloc} {:sourceloc_num 299} true;
  $$agg.tmp32148[0bv32] := v152;
  assert {:sourceloc} {:sourceloc_num 300} true;
  v153 := $$agg.tmp32[1bv32];
  assert {:sourceloc} {:sourceloc_num 301} true;
  $$agg.tmp32148[1bv32] := v153;
  assert {:sourceloc} {:sourceloc_num 302} true;
  v154 := $$agg.tmp32[2bv32];
  assert {:sourceloc} {:sourceloc_num 303} true;
  $$agg.tmp32148[2bv32] := v154;
  assert {:sourceloc} {:sourceloc_num 304} true;
  v155 := $$agg.tmp32[3bv32];
  assert {:sourceloc} {:sourceloc_num 305} true;
  $$agg.tmp32148[3bv32] := v155;
  assert {:sourceloc} {:sourceloc_num 306} true;
  v156 := $$agg.tmp32148[0bv32];
  assert {:sourceloc} {:sourceloc_num 307} true;
  v157 := $$agg.tmp32148[1bv32];
  assert {:sourceloc} {:sourceloc_num 308} true;
  v158 := $$agg.tmp32148[2bv32];
  assert {:sourceloc} {:sourceloc_num 309} true;
  v159 := $$agg.tmp32148[3bv32];
  assert {:sourceloc} {:sourceloc_num 310} true;
  $$retval.i.i.149[0bv32] := FMUL32(v156, v0);
  assert {:sourceloc} {:sourceloc_num 311} true;
  $$retval.i.i.149[1bv32] := FMUL32(v157, v0);
  assert {:sourceloc} {:sourceloc_num 312} true;
  $$retval.i.i.149[2bv32] := FMUL32(v158, v0);
  assert {:sourceloc} {:sourceloc_num 313} true;
  $$retval.i.i.149[3bv32] := FMUL32(v159, v0);
  assert {:sourceloc} {:sourceloc_num 314} true;
  v160 := $$retval.i.i.149[0bv32];
  assert {:sourceloc} {:sourceloc_num 315} true;
  v161 := $$retval.i.i.149[1bv32];
  assert {:sourceloc} {:sourceloc_num 316} true;
  v162 := $$retval.i.i.149[2bv32];
  assert {:sourceloc} {:sourceloc_num 317} true;
  v163 := $$retval.i.i.149[3bv32];
  assert {:sourceloc} {:sourceloc_num 318} true;
  $$retval.i.154[0bv32] := v160;
  assert {:sourceloc} {:sourceloc_num 319} true;
  $$retval.i.154[1bv32] := v161;
  assert {:sourceloc} {:sourceloc_num 320} true;
  $$retval.i.154[2bv32] := v162;
  assert {:sourceloc} {:sourceloc_num 321} true;
  $$retval.i.154[3bv32] := v163;
  assert {:sourceloc} {:sourceloc_num 322} true;
  v164 := $$retval.i.154[0bv32];
  assert {:sourceloc} {:sourceloc_num 323} true;
  v165 := $$retval.i.154[1bv32];
  assert {:sourceloc} {:sourceloc_num 324} true;
  v166 := $$retval.i.154[2bv32];
  assert {:sourceloc} {:sourceloc_num 325} true;
  v167 := $$retval.i.154[3bv32];
  assert {:sourceloc} {:sourceloc_num 326} true;
  $$agg.tmp31[0bv32] := v164;
  assert {:sourceloc} {:sourceloc_num 327} true;
  $$agg.tmp31[1bv32] := v165;
  assert {:sourceloc} {:sourceloc_num 328} true;
  $$agg.tmp31[2bv32] := v166;
  assert {:sourceloc} {:sourceloc_num 329} true;
  $$agg.tmp31[3bv32] := v167;
  assert {:sourceloc} {:sourceloc_num 330} true;
  v168 := $$agg.tmp31[0bv32];
  assert {:sourceloc} {:sourceloc_num 331} true;
  $$agg.tmp3141[0bv32] := v168;
  assert {:sourceloc} {:sourceloc_num 332} true;
  v169 := $$agg.tmp31[1bv32];
  assert {:sourceloc} {:sourceloc_num 333} true;
  $$agg.tmp3141[1bv32] := v169;
  assert {:sourceloc} {:sourceloc_num 334} true;
  v170 := $$agg.tmp31[2bv32];
  assert {:sourceloc} {:sourceloc_num 335} true;
  $$agg.tmp3141[2bv32] := v170;
  assert {:sourceloc} {:sourceloc_num 336} true;
  v171 := $$agg.tmp31[3bv32];
  assert {:sourceloc} {:sourceloc_num 337} true;
  $$agg.tmp3141[3bv32] := v171;
  assert {:sourceloc} {:sourceloc_num 338} true;
  v172 := $$agg.tmp3141[0bv32];
  call {:sourceloc_num 339}   v173 := $__saturatef(v172);
  assert {:sourceloc} {:sourceloc_num 340} true;
  $$agg.tmp3141[0bv32] := v173;
  assert {:sourceloc} {:sourceloc_num 341} true;
  v174 := $$agg.tmp3141[1bv32];
  call {:sourceloc_num 342}   v175 := $__saturatef(v174);
  assert {:sourceloc} {:sourceloc_num 343} true;
  $$agg.tmp3141[1bv32] := v175;
  assert {:sourceloc} {:sourceloc_num 344} true;
  v176 := $$agg.tmp3141[2bv32];
  call {:sourceloc_num 345}   v177 := $__saturatef(v176);
  assert {:sourceloc} {:sourceloc_num 346} true;
  $$agg.tmp3141[2bv32] := v177;
  assert {:sourceloc} {:sourceloc_num 347} true;
  v178 := $$agg.tmp3141[3bv32];
  call {:sourceloc_num 348}   v179 := $__saturatef(v178);
  assert {:sourceloc} {:sourceloc_num 349} true;
  $$agg.tmp3141[3bv32] := v179;
  assert {:sourceloc} {:sourceloc_num 350} true;
  v180 := $$agg.tmp3141[3bv32];
  assert {:sourceloc} {:sourceloc_num 351} true;
  v181 := $$agg.tmp3141[2bv32];
  assert {:sourceloc} {:sourceloc_num 352} true;
  v182 := $$agg.tmp3141[1bv32];
  assert {:sourceloc} {:sourceloc_num 353} true;
  v183 := $$agg.tmp3141[0bv32];
  assert {:sourceloc} {:sourceloc_num 354} true;
  $$od[BV32_ADD(BV32_MUL(v1, $w), $x14.0)] := BV32_OR(BV32_OR(BV32_OR(BV32_SHL(FP32_TO_UI32(FMUL32(v180, 1132396544bv32)), 24bv32), BV32_SHL(FP32_TO_UI32(FMUL32(v181, 1132396544bv32)), 16bv32)), BV32_SHL(FP32_TO_UI32(FMUL32(v182, 1132396544bv32)), 8bv32)), FP32_TO_UI32(FMUL32(v183, 1132396544bv32)));
  goto $for.inc.38;
$for.inc.38:
  assert {:block_sourceloc} {:sourceloc_num 355} true;
  $x14.0 := BV32_ADD($x14.0, 1bv32);
  goto $for.cond.15;
$for.end.40:
  assert {:block_sourceloc} {:sourceloc_num 356} true;
  goto $if.end;
$if.end:
  assert {:block_sourceloc} {:sourceloc_num 357} true;
  return;
$truebb:
  assume {:partition} v2;
  assert {:block_sourceloc} {:sourceloc_num 358} true;
  goto $if.then;
$falsebb:
  assume {:partition} !v2;
  assert {:block_sourceloc} {:sourceloc_num 359} true;
  goto $if.end;
$truebb0:
  assume {:partition} v11;
  assert {:block_sourceloc} {:sourceloc_num 360} true;
  goto $for.body;
$falsebb0:
  assume {:partition} !v11;
  assert {:block_sourceloc} {:sourceloc_num 361} true;
  goto $for.end;
$truebb1:
  assume {:partition} v81;
  assert {:block_sourceloc} {:sourceloc_num 362} true;
  goto $for.body.17;
$falsebb1:
  assume {:partition} !v81;
  assert {:block_sourceloc} {:sourceloc_num 363} true;
  goto $for.end.40;
}
procedure {:source_name "_Z5tex2D7textureI6uchar4Li2EL19cudaTextureReadMode1EEff"} $_Z5tex2D7textureI6uchar4Li2EL19cudaTextureReadMode1EEff($0:ptr, $1:bv32, $2:bv32) returns ($ret:bv128);
procedure {:source_name "__saturatef"} $__saturatef($0:bv32) returns ($ret:bv32);
axiom (if group_size_y == 1bv32 then 1bv1 else 0bv1) != 0bv1;
axiom (if group_size_z == 1bv32 then 1bv1 else 0bv1) != 0bv1;
axiom (if num_groups_y == 1bv32 then 1bv1 else 0bv1) != 0bv1;
axiom (if num_groups_z == 1bv32 then 1bv1 else 0bv1) != 0bv1;
axiom (if group_size_x == 64bv32 then 1bv1 else 0bv1) != 0bv1;
axiom (if num_groups_x == 16bv32 then 1bv1 else 0bv1) != 0bv1;
