type _SIZE_T_TYPE = bv32;

procedure _ATOMIC_OP8(x : [bv32]bv8, y : bv32) returns (z : bv8, A : [bv32]bv8);
var {:source_name "SrcDst"} {:global} $$SrcDst : [bv32]bv8;
axiom {:array_info "$$SrcDst"} {:global} {:elem_width 8} {:source_name "SrcDst"} {:source_elem_width 16} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 16} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$SrcDst : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 16} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$SrcDst : bool;
var {:race_checking} {:global} {:elem_width 8} {:source_elem_width 16} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$SrcDst : bool;

var {:source_name "sh0.i"} $$sh0.i : [bv32]bv8;
axiom {:array_info "$$sh0.i"} {:elem_width 8} {:source_name "sh0.i"} {:source_elem_width 32} {:source_dimensions "1"} true;

var {:source_name "sh1.i"} $$sh1.i : [bv32]bv8;
axiom {:array_info "$$sh1.i"} {:elem_width 8} {:source_name "sh1.i"} {:source_elem_width 32} {:source_dimensions "1"} true;

var {:source_name "sh2.i"} $$sh2.i : [bv32]bv8;
axiom {:array_info "$$sh2.i"} {:elem_width 8} {:source_name "sh2.i"} {:source_elem_width 32} {:source_dimensions "1"} true;

var {:source_name "sh3.i"} $$sh3.i : [bv32]bv8;
axiom {:array_info "$$sh3.i"} {:elem_width 8} {:source_name "sh3.i"} {:source_elem_width 32} {:source_dimensions "1"} true;

var {:source_name "block"} {:group_shared} $$_ZZ19CUDAkernelShortIDCTPsiE5block : [bv32]bv8;
axiom {:array_info "$$_ZZ19CUDAkernelShortIDCTPsiE5block"} {:group_shared} {:elem_width 8} {:source_name "block"} {:source_elem_width 16} {:source_dimensions "1088"} true;
var {:race_checking} {:group_shared} {:elem_width 8} {:source_elem_width 16} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ19CUDAkernelShortIDCTPsiE5block : bool;
var {:race_checking} {:group_shared} {:elem_width 8} {:source_elem_width 16} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ19CUDAkernelShortIDCTPsiE5block : bool;
var {:race_checking} {:group_shared} {:elem_width 8} {:source_elem_width 16} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ19CUDAkernelShortIDCTPsiE5block : bool;

const _WATCHED_OFFSET : bv32;
const {:group_id_x} group_id_x : bv32;
const {:group_id_y} group_id_y : bv32;
const {:group_size_x} group_size_x : bv32;
const {:group_size_y} group_size_y : bv32;
const {:group_size_z} group_size_z : bv32;
const {:local_id_x} local_id_x : bv32;
const {:local_id_y} local_id_y : bv32;
const {:local_id_z} local_id_z : bv32;
const {:num_groups_x} num_groups_x : bv32;
const {:num_groups_y} num_groups_y : bv32;
const {:num_groups_z} num_groups_z : bv32;
function {:bvbuiltin "bvadd"} BV32_ADD(bv32, bv32) : bv32;
function {:bvbuiltin "bvand"} BV32_AND(bv32, bv32) : bv32;
function {:bvbuiltin "bvashr"} BV32_ASHR(bv32, bv32) : bv32;
function {:bvbuiltin "bvmul"} BV32_MUL(bv32, bv32) : bv32;
function {:bvbuiltin "bvor"} BV32_OR(bv32, bv32) : bv32;
function {:bvbuiltin "bvsdiv"} BV32_SDIV(bv32, bv32) : bv32;
function {:bvbuiltin "bvshl"} BV32_SHL(bv32, bv32) : bv32;
function {:bvbuiltin "bvslt"} BV32_SLT(bv32, bv32) : bool;
function {:bvbuiltin "bvsub"} BV32_SUB(bv32, bv32) : bv32;
function {:bvbuiltin "bvudiv"} BV32_UDIV(bv32, bv32) : bv32;
function {:bvbuiltin "bvult"} BV32_ULT(bv32, bv32) : bool;
function {:bvbuiltin "bvurem"} BV32_UREM(bv32, bv32) : bv32;
function {:bvbuiltin "sign_extend 16"} BV16_SEXT32(bv16) : bv32;
procedure {:source_name "CUDAkernelShortIDCT"} {:kernel} $_Z19CUDAkernelShortIDCTPsi($ImgStride:bv32)
requires {:sourceloc_num 0} (if $ImgStride == 512bv32 then 1bv1 else 0bv1) != 0bv1;
{
  var $i.0:bv32;
  var $i80.0:bv32;
  var v14:bv8;
  var v20:bv8;
  var v22:bv8;
  var v16:bv8;
  var v17:bv8;
  var v23:bv8;
  var v13:bv8;
  var v28:bv8;
  var v12:bv8;
  var v25:bv8;
  var v19:bv8;
  var v26:bv8;
  var v11:bv8;
  var v29:bv8;
  var v59:bv8;
  var v60:bv8;
  var v61:bv8;
  var v58:bv8;
  var v6:bv8;
  var v4:bv8;
  var v7:bv8;
  var v5:bv8;
  var v8:bv8;
  var v9:bv8;
  var v36:bv32;
  var v32:bv32;
  var v27:bv32;
  var v35:bv32;
  var v37:bv32;
  var v38:bv32;
  var v33:bv32;
  var v24:bv32;
  var v34:bv32;
  var v30:bv32;
  var v31:bv32;
  var v3:bool;
  var v18:bv32;
  var v10:bv32;
  var v15:bv32;
  var v21:bv32;
  var v71:bv8;
  var v72:bv8;
  var v69:bv8;
  var v70:bv8;
  var v73:bv8;
  var v64:bv8;
  var v63:bv8;
  var v65:bv8;
  var v62:bv8;
  var v66:bv8;
  var v67:bv8;
  var v68:bv8;
  var v2:bool;
  var v1:bv32;
  var v0:bv32;
  var v76:bv32;
  var v99:bv32;
  var v100:bv32;
  var v81:bv32;
  var v90:bv32;
  var v96:bv32;
  var v97:bv32;
  var v101:bv32;
  var v102:bv32;
  var v93:bv32;
  var v87:bv32;
  var v98:bv32;
  var v84:bv32;
  var v108:bv32;
  var v112:bv32;
  var v110:bv32;
  var v103:bv32;
  var v104:bv32;
  var v113:bv32;
  var v105:bv32;
  var v115:bv32;
  var v116:bv16;
  var v109:bv32;
  var v111:bv32;
  var v107:bv32;
  var v114:bv32;
  var v106:bv32;
  var v138:bv8;
  var v137:bv8;
  var v139:bv8;
  var v142:bv8;
  var v144:bv8;
  var v145:bv8;
  var v143:bv8;
  var v88:bv8;
  var v74:bv8;
  var v75:bv8;
  var v80:bv8;
  var v85:bv8;
  var v82:bv8;
  var v83:bv8;
  var v86:bv8;
  var v77:bv8;
  var v78:bv8;
  var v79:bv8;
  var v91:bv8;
  var v95:bv8;
  var v92:bv8;
  var v89:bv8;
  var v94:bv8;
  var v126:bv8;
  var v127:bv8;
  var v128:bv8;
  var v131:bv8;
  var v132:bv8;
  var v125:bv8;
  var v130:bv8;
  var v124:bv8;
  var v129:bv8;
  var v133:bv8;
  var v135:bv8;
  var v134:bv8;
  var v136:bv8;
  var v120:bv16;
  var v117:bv16;
  var v118:bv16;
  var v119:bv16;
  var v121:bv16;
  var v123:bv16;
  var v122:bv16;
  var v140:bool;
  var v141:bool;
  var v41:bv32;
  var v43:bv32;
  var v39:bv32;
  var v44:bv32;
  var v45:bv32;
  var v40:bv32;
  var v42:bv32;
  var v48:bv32;
  var v50:bv16;
  var v46:bv32;
  var v47:bv32;
  var v49:bv32;
  var v52:bv16;
  var v53:bv16;
  var v54:bv16;
  var v51:bv16;
  var v57:bv16;
  var v55:bv16;
  var v56:bv16;
$entry:
  assert {:block_sourceloc} {:sourceloc_num 1} true;
  v0 := BV32_ADD(BV32_MUL(local_id_y, 8bv32), local_id_x);
  v1 := BV32_MUL(local_id_z, 8bv32);
  v2 := BV32_SLT(v0, 16bv32);
  goto $truebb, $falsebb;
$if.then:
  assert {:block_sourceloc} {:sourceloc_num 2} true;
  $i.0 := 0bv32;
  goto $for.cond;
$for.cond:
  assert {:block_sourceloc} {:sourceloc_num 3} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 4} (if (_WRITE_HAS_OCCURRED_$$_ZZ19CUDAkernelShortIDCTPsiE5block ==> BV32_UREM(BV32_UDIV(BV32_SUB(_WATCHED_OFFSET, BV32_MUL(BV32_ADD(BV32_MUL(v1, 34bv32), BV32_MUL(v0, 2bv32)), 2bv32)), 4bv32), 17bv32) == 0bv32) then 1bv1 else 0bv1) != 0bv1;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 5} (if (_WRITE_HAS_OCCURRED_$$_ZZ19CUDAkernelShortIDCTPsiE5block ==> BV32_ULT(BV32_UDIV(BV32_UDIV(BV32_SUB(_WATCHED_OFFSET, BV32_MUL(BV32_ADD(BV32_MUL(v1, 34bv32), BV32_MUL(v0, 2bv32)), 2bv32)), 4bv32), 17bv32), 8bv32)) then 1bv1 else 0bv1) != 0bv1;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 6} (if (_READ_HAS_OCCURRED_$$SrcDst ==> BV32_UREM(BV32_UDIV(BV32_SUB(_WATCHED_OFFSET, BV32_MUL(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(group_id_y, 32bv32), v1), $ImgStride), BV32_ADD(BV32_MUL(group_id_x, 32bv32), BV32_MUL(v0, 2bv32))), 2bv32)), 4bv32), BV32_SDIV($ImgStride, 2bv32)) == 0bv32) then 1bv1 else 0bv1) != 0bv1;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 7} (if (_READ_HAS_OCCURRED_$$SrcDst ==> BV32_ULT(BV32_UDIV(BV32_UDIV(BV32_SUB(_WATCHED_OFFSET, BV32_MUL(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(group_id_y, 32bv32), v1), $ImgStride), BV32_ADD(BV32_MUL(group_id_x, 32bv32), BV32_MUL(v0, 2bv32))), 2bv32)), 4bv32), BV32_SDIV($ImgStride, 2bv32)), 8bv32)) then 1bv1 else 0bv1) != 0bv1;
  v3 := BV32_SLT($i.0, 8bv32);
  goto $truebb0, $falsebb0;
$for.body:
  assert {:block_sourceloc} {:sourceloc_num 8} true;
  assert {:sourceloc} {:sourceloc_num 9} true;
  v4 := $$SrcDst[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(group_id_y, 32bv32), v1), $ImgStride), BV32_ADD(BV32_MUL(group_id_x, 32bv32), BV32_MUL(v0, 2bv32))), 2bv32), BV32_MUL(BV32_MUL($i.0, BV32_SDIV($ImgStride, 2bv32)), 4bv32))];
  assert {:sourceloc} {:sourceloc_num 10} true;
  v5 := $$SrcDst[BV32_ADD(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(group_id_y, 32bv32), v1), $ImgStride), BV32_ADD(BV32_MUL(group_id_x, 32bv32), BV32_MUL(v0, 2bv32))), 2bv32), BV32_MUL(BV32_MUL($i.0, BV32_SDIV($ImgStride, 2bv32)), 4bv32)), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 11} true;
  v6 := $$SrcDst[BV32_ADD(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(group_id_y, 32bv32), v1), $ImgStride), BV32_ADD(BV32_MUL(group_id_x, 32bv32), BV32_MUL(v0, 2bv32))), 2bv32), BV32_MUL(BV32_MUL($i.0, BV32_SDIV($ImgStride, 2bv32)), 4bv32)), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 12} true;
  v7 := $$SrcDst[BV32_ADD(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(group_id_y, 32bv32), v1), $ImgStride), BV32_ADD(BV32_MUL(group_id_x, 32bv32), BV32_MUL(v0, 2bv32))), 2bv32), BV32_MUL(BV32_MUL($i.0, BV32_SDIV($ImgStride, 2bv32)), 4bv32)), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 13} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v1, 34bv32), BV32_MUL(v0, 2bv32)), 2bv32), BV32_MUL(BV32_MUL($i.0, 17bv32), 4bv32))] := v4;
  assert {:sourceloc} {:sourceloc_num 14} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v1, 34bv32), BV32_MUL(v0, 2bv32)), 2bv32), BV32_MUL(BV32_MUL($i.0, 17bv32), 4bv32)), 1bv32)] := v5;
  assert {:sourceloc} {:sourceloc_num 15} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v1, 34bv32), BV32_MUL(v0, 2bv32)), 2bv32), BV32_MUL(BV32_MUL($i.0, 17bv32), 4bv32)), 2bv32)] := v6;
  assert {:sourceloc} {:sourceloc_num 16} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v1, 34bv32), BV32_MUL(v0, 2bv32)), 2bv32), BV32_MUL(BV32_MUL($i.0, 17bv32), 4bv32)), 3bv32)] := v7;
  goto $for.inc;
$for.inc:
  assert {:block_sourceloc} {:sourceloc_num 17} true;
  $i.0 := BV32_ADD($i.0, 1bv32);
  goto $for.cond;
$for.end:
  assert {:block_sourceloc} {:sourceloc_num 18} true;
  goto $if.end;
$if.end:
  assert {:block_sourceloc} {:sourceloc_num 19} true;
  call {:sourceloc_num 20} $bugle_barrier(1bv1, 1bv1);
  assert {:sourceloc} {:sourceloc_num 21} true;
  v8 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_MUL(BV32_MUL(v1, 34bv32), 2bv32), BV32_MUL(BV32_OR(BV32_AND(v0, 4294967264bv32), BV32_AND(BV32_OR(BV32_SHL(v0, 1bv32), BV32_AND(BV32_ASHR(v0, 4bv32), 1bv32)), 31bv32)), 2bv32))];
  assert {:sourceloc} {:sourceloc_num 22} true;
  v9 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v1, 34bv32), 2bv32), BV32_MUL(BV32_OR(BV32_AND(v0, 4294967264bv32), BV32_AND(BV32_OR(BV32_SHL(v0, 1bv32), BV32_AND(BV32_ASHR(v0, 4bv32), 1bv32)), 31bv32)), 2bv32)), 1bv32)];
  v10 := BV16_SEXT32(v9 ++ v8);
  assert {:sourceloc} {:sourceloc_num 23} true;
  v11 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v1, 34bv32), 2bv32), BV32_MUL(BV32_OR(BV32_AND(v0, 4294967264bv32), BV32_AND(BV32_OR(BV32_SHL(v0, 1bv32), BV32_AND(BV32_ASHR(v0, 4bv32), 1bv32)), 31bv32)), 2bv32)), 68bv32)];
  assert {:sourceloc} {:sourceloc_num 24} true;
  v12 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v1, 34bv32), 2bv32), BV32_MUL(BV32_OR(BV32_AND(v0, 4294967264bv32), BV32_AND(BV32_OR(BV32_SHL(v0, 1bv32), BV32_AND(BV32_ASHR(v0, 4bv32), 1bv32)), 31bv32)), 2bv32)), 69bv32)];
  assert {:sourceloc} {:sourceloc_num 25} true;
  v13 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v1, 34bv32), 2bv32), BV32_MUL(BV32_OR(BV32_AND(v0, 4294967264bv32), BV32_AND(BV32_OR(BV32_SHL(v0, 1bv32), BV32_AND(BV32_ASHR(v0, 4bv32), 1bv32)), 31bv32)), 2bv32)), 136bv32)];
  assert {:sourceloc} {:sourceloc_num 26} true;
  v14 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v1, 34bv32), 2bv32), BV32_MUL(BV32_OR(BV32_AND(v0, 4294967264bv32), BV32_AND(BV32_OR(BV32_SHL(v0, 1bv32), BV32_AND(BV32_ASHR(v0, 4bv32), 1bv32)), 31bv32)), 2bv32)), 137bv32)];
  v15 := BV16_SEXT32(v14 ++ v13);
  assert {:sourceloc} {:sourceloc_num 27} true;
  v16 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v1, 34bv32), 2bv32), BV32_MUL(BV32_OR(BV32_AND(v0, 4294967264bv32), BV32_AND(BV32_OR(BV32_SHL(v0, 1bv32), BV32_AND(BV32_ASHR(v0, 4bv32), 1bv32)), 31bv32)), 2bv32)), 204bv32)];
  assert {:sourceloc} {:sourceloc_num 28} true;
  v17 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v1, 34bv32), 2bv32), BV32_MUL(BV32_OR(BV32_AND(v0, 4294967264bv32), BV32_AND(BV32_OR(BV32_SHL(v0, 1bv32), BV32_AND(BV32_ASHR(v0, 4bv32), 1bv32)), 31bv32)), 2bv32)), 205bv32)];
  v18 := BV16_SEXT32(v17 ++ v16);
  assert {:sourceloc} {:sourceloc_num 29} true;
  v19 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v1, 34bv32), 2bv32), BV32_MUL(BV32_OR(BV32_AND(v0, 4294967264bv32), BV32_AND(BV32_OR(BV32_SHL(v0, 1bv32), BV32_AND(BV32_ASHR(v0, 4bv32), 1bv32)), 31bv32)), 2bv32)), 272bv32)];
  assert {:sourceloc} {:sourceloc_num 30} true;
  v20 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v1, 34bv32), 2bv32), BV32_MUL(BV32_OR(BV32_AND(v0, 4294967264bv32), BV32_AND(BV32_OR(BV32_SHL(v0, 1bv32), BV32_AND(BV32_ASHR(v0, 4bv32), 1bv32)), 31bv32)), 2bv32)), 273bv32)];
  v21 := BV16_SEXT32(v20 ++ v19);
  assert {:sourceloc} {:sourceloc_num 31} true;
  v22 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v1, 34bv32), 2bv32), BV32_MUL(BV32_OR(BV32_AND(v0, 4294967264bv32), BV32_AND(BV32_OR(BV32_SHL(v0, 1bv32), BV32_AND(BV32_ASHR(v0, 4bv32), 1bv32)), 31bv32)), 2bv32)), 340bv32)];
  assert {:sourceloc} {:sourceloc_num 32} true;
  v23 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v1, 34bv32), 2bv32), BV32_MUL(BV32_OR(BV32_AND(v0, 4294967264bv32), BV32_AND(BV32_OR(BV32_SHL(v0, 1bv32), BV32_AND(BV32_ASHR(v0, 4bv32), 1bv32)), 31bv32)), 2bv32)), 341bv32)];
  v24 := BV16_SEXT32(v23 ++ v22);
  assert {:sourceloc} {:sourceloc_num 33} true;
  v25 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v1, 34bv32), 2bv32), BV32_MUL(BV32_OR(BV32_AND(v0, 4294967264bv32), BV32_AND(BV32_OR(BV32_SHL(v0, 1bv32), BV32_AND(BV32_ASHR(v0, 4bv32), 1bv32)), 31bv32)), 2bv32)), 408bv32)];
  assert {:sourceloc} {:sourceloc_num 34} true;
  v26 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v1, 34bv32), 2bv32), BV32_MUL(BV32_OR(BV32_AND(v0, 4294967264bv32), BV32_AND(BV32_OR(BV32_SHL(v0, 1bv32), BV32_AND(BV32_ASHR(v0, 4bv32), 1bv32)), 31bv32)), 2bv32)), 409bv32)];
  v27 := BV16_SEXT32(v26 ++ v25);
  assert {:sourceloc} {:sourceloc_num 35} true;
  v28 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v1, 34bv32), 2bv32), BV32_MUL(BV32_OR(BV32_AND(v0, 4294967264bv32), BV32_AND(BV32_OR(BV32_SHL(v0, 1bv32), BV32_AND(BV32_ASHR(v0, 4bv32), 1bv32)), 31bv32)), 2bv32)), 476bv32)];
  assert {:sourceloc} {:sourceloc_num 36} true;
  v29 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v1, 34bv32), 2bv32), BV32_MUL(BV32_OR(BV32_AND(v0, 4294967264bv32), BV32_AND(BV32_OR(BV32_SHL(v0, 1bv32), BV32_AND(BV32_ASHR(v0, 4bv32), 1bv32)), 31bv32)), 2bv32)), 477bv32)];
  v30 := BV32_MUL(BV32_ADD(v10, v21), 23170bv32);
  v31 := BV32_MUL(BV32_SUB(v10, v21), 23170bv32);
  v32 := BV32_SUB(BV32_MUL(v15, 12540bv32), BV32_MUL(v27, 30274bv32));
  v33 := BV32_ADD(BV32_MUL(v27, 12540bv32), BV32_MUL(v15, 30274bv32));
  v34 := BV32_ADD(v30, v33);
  v35 := BV32_ADD(v31, v32);
  v36 := BV32_SUB(v31, v32);
  v37 := BV32_SUB(v30, v33);
  v38 := BV32_ASHR(BV32_ADD(BV32_MUL(BV32_ADD(v18, v24), 23170bv32), 4096bv32), 13bv32);
  v39 := BV32_ASHR(BV32_ADD(BV32_MUL(BV32_SUB(v18, v24), 23170bv32), 4096bv32), 13bv32);
  v40 := BV32_SHL(BV16_SEXT32(v12 ++ v11), 2bv32);
  v41 := BV32_SHL(BV16_SEXT32(v29 ++ v28), 2bv32);
  v42 := BV32_ADD(v40, v38);
  v43 := BV32_ADD(v41, v39);
  v44 := BV32_SUB(v40, v38);
  v45 := BV32_SUB(v41, v39);
  v46 := BV32_ADD(BV32_MUL(v42, 8035bv32), BV32_MUL(v43, 1598bv32));
  v47 := BV32_SUB(BV32_MUL(v42, 1598bv32), BV32_MUL(v43, 8035bv32));
  v48 := BV32_ADD(BV32_MUL(v44, 4551bv32), BV32_MUL(v45, 6811bv32));
  v49 := BV32_SUB(BV32_MUL(v44, 6811bv32), BV32_MUL(v45, 4551bv32));
  v50 := BV32_ASHR(BV32_ADD(BV32_ADD(v34, v46), 32768bv32), 16bv32)[16:0];
  assert {:sourceloc} {:sourceloc_num 37} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_MUL(BV32_MUL(v1, 34bv32), 2bv32), BV32_MUL(BV32_OR(BV32_AND(v0, 4294967264bv32), BV32_AND(BV32_OR(BV32_SHL(v0, 1bv32), BV32_AND(BV32_ASHR(v0, 4bv32), 1bv32)), 31bv32)), 2bv32))] := v50[8:0];
  assert {:sourceloc} {:sourceloc_num 38} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v1, 34bv32), 2bv32), BV32_MUL(BV32_OR(BV32_AND(v0, 4294967264bv32), BV32_AND(BV32_OR(BV32_SHL(v0, 1bv32), BV32_AND(BV32_ASHR(v0, 4bv32), 1bv32)), 31bv32)), 2bv32)), 1bv32)] := v50[16:8];
  v51 := BV32_ASHR(BV32_ADD(BV32_ADD(v35, v49), 32768bv32), 16bv32)[16:0];
  assert {:sourceloc} {:sourceloc_num 39} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v1, 34bv32), 2bv32), BV32_MUL(BV32_OR(BV32_AND(v0, 4294967264bv32), BV32_AND(BV32_OR(BV32_SHL(v0, 1bv32), BV32_AND(BV32_ASHR(v0, 4bv32), 1bv32)), 31bv32)), 2bv32)), 68bv32)] := v51[8:0];
  assert {:sourceloc} {:sourceloc_num 40} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v1, 34bv32), 2bv32), BV32_MUL(BV32_OR(BV32_AND(v0, 4294967264bv32), BV32_AND(BV32_OR(BV32_SHL(v0, 1bv32), BV32_AND(BV32_ASHR(v0, 4bv32), 1bv32)), 31bv32)), 2bv32)), 69bv32)] := v51[16:8];
  v52 := BV32_ASHR(BV32_ADD(BV32_ADD(v36, v48), 32768bv32), 16bv32)[16:0];
  assert {:sourceloc} {:sourceloc_num 41} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v1, 34bv32), 2bv32), BV32_MUL(BV32_OR(BV32_AND(v0, 4294967264bv32), BV32_AND(BV32_OR(BV32_SHL(v0, 1bv32), BV32_AND(BV32_ASHR(v0, 4bv32), 1bv32)), 31bv32)), 2bv32)), 136bv32)] := v52[8:0];
  assert {:sourceloc} {:sourceloc_num 42} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v1, 34bv32), 2bv32), BV32_MUL(BV32_OR(BV32_AND(v0, 4294967264bv32), BV32_AND(BV32_OR(BV32_SHL(v0, 1bv32), BV32_AND(BV32_ASHR(v0, 4bv32), 1bv32)), 31bv32)), 2bv32)), 137bv32)] := v52[16:8];
  v53 := BV32_ASHR(BV32_ADD(BV32_ADD(v37, v47), 32768bv32), 16bv32)[16:0];
  assert {:sourceloc} {:sourceloc_num 43} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v1, 34bv32), 2bv32), BV32_MUL(BV32_OR(BV32_AND(v0, 4294967264bv32), BV32_AND(BV32_OR(BV32_SHL(v0, 1bv32), BV32_AND(BV32_ASHR(v0, 4bv32), 1bv32)), 31bv32)), 2bv32)), 204bv32)] := v53[8:0];
  assert {:sourceloc} {:sourceloc_num 44} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v1, 34bv32), 2bv32), BV32_MUL(BV32_OR(BV32_AND(v0, 4294967264bv32), BV32_AND(BV32_OR(BV32_SHL(v0, 1bv32), BV32_AND(BV32_ASHR(v0, 4bv32), 1bv32)), 31bv32)), 2bv32)), 205bv32)] := v53[16:8];
  v54 := BV32_ASHR(BV32_ADD(BV32_SUB(v37, v47), 32768bv32), 16bv32)[16:0];
  assert {:sourceloc} {:sourceloc_num 45} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v1, 34bv32), 2bv32), BV32_MUL(BV32_OR(BV32_AND(v0, 4294967264bv32), BV32_AND(BV32_OR(BV32_SHL(v0, 1bv32), BV32_AND(BV32_ASHR(v0, 4bv32), 1bv32)), 31bv32)), 2bv32)), 272bv32)] := v54[8:0];
  assert {:sourceloc} {:sourceloc_num 46} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v1, 34bv32), 2bv32), BV32_MUL(BV32_OR(BV32_AND(v0, 4294967264bv32), BV32_AND(BV32_OR(BV32_SHL(v0, 1bv32), BV32_AND(BV32_ASHR(v0, 4bv32), 1bv32)), 31bv32)), 2bv32)), 273bv32)] := v54[16:8];
  v55 := BV32_ASHR(BV32_ADD(BV32_SUB(v36, v48), 32768bv32), 16bv32)[16:0];
  assert {:sourceloc} {:sourceloc_num 47} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v1, 34bv32), 2bv32), BV32_MUL(BV32_OR(BV32_AND(v0, 4294967264bv32), BV32_AND(BV32_OR(BV32_SHL(v0, 1bv32), BV32_AND(BV32_ASHR(v0, 4bv32), 1bv32)), 31bv32)), 2bv32)), 340bv32)] := v55[8:0];
  assert {:sourceloc} {:sourceloc_num 48} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v1, 34bv32), 2bv32), BV32_MUL(BV32_OR(BV32_AND(v0, 4294967264bv32), BV32_AND(BV32_OR(BV32_SHL(v0, 1bv32), BV32_AND(BV32_ASHR(v0, 4bv32), 1bv32)), 31bv32)), 2bv32)), 341bv32)] := v55[16:8];
  v56 := BV32_ASHR(BV32_ADD(BV32_SUB(v35, v49), 32768bv32), 16bv32)[16:0];
  assert {:sourceloc} {:sourceloc_num 49} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v1, 34bv32), 2bv32), BV32_MUL(BV32_OR(BV32_AND(v0, 4294967264bv32), BV32_AND(BV32_OR(BV32_SHL(v0, 1bv32), BV32_AND(BV32_ASHR(v0, 4bv32), 1bv32)), 31bv32)), 2bv32)), 408bv32)] := v56[8:0];
  assert {:sourceloc} {:sourceloc_num 50} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v1, 34bv32), 2bv32), BV32_MUL(BV32_OR(BV32_AND(v0, 4294967264bv32), BV32_AND(BV32_OR(BV32_SHL(v0, 1bv32), BV32_AND(BV32_ASHR(v0, 4bv32), 1bv32)), 31bv32)), 2bv32)), 409bv32)] := v56[16:8];
  v57 := BV32_ASHR(BV32_ADD(BV32_SUB(v34, v46), 32768bv32), 16bv32)[16:0];
  assert {:sourceloc} {:sourceloc_num 51} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v1, 34bv32), 2bv32), BV32_MUL(BV32_OR(BV32_AND(v0, 4294967264bv32), BV32_AND(BV32_OR(BV32_SHL(v0, 1bv32), BV32_AND(BV32_ASHR(v0, 4bv32), 1bv32)), 31bv32)), 2bv32)), 476bv32)] := v57[8:0];
  assert {:sourceloc} {:sourceloc_num 52} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v1, 34bv32), 2bv32), BV32_MUL(BV32_OR(BV32_AND(v0, 4294967264bv32), BV32_AND(BV32_OR(BV32_SHL(v0, 1bv32), BV32_AND(BV32_ASHR(v0, 4bv32), 1bv32)), 31bv32)), 2bv32)), 477bv32)] := v57[16:8];
  call {:sourceloc_num 53} $bugle_barrier(1bv1, 1bv1);
  assert {:sourceloc} {:sourceloc_num 54} true;
  v58 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_MUL(BV32_MUL(v0, 34bv32), 2bv32), BV32_MUL(v1, 2bv32))];
  assert {:sourceloc} {:sourceloc_num 55} true;
  v59 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v0, 34bv32), 2bv32), BV32_MUL(v1, 2bv32)), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 56} true;
  v60 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v0, 34bv32), 2bv32), BV32_MUL(v1, 2bv32)), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 57} true;
  v61 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v0, 34bv32), 2bv32), BV32_MUL(v1, 2bv32)), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 58} true;
  $$sh0.i[0bv32] := v58;
  assert {:sourceloc} {:sourceloc_num 59} true;
  $$sh0.i[1bv32] := v59;
  assert {:sourceloc} {:sourceloc_num 60} true;
  $$sh0.i[2bv32] := v60;
  assert {:sourceloc} {:sourceloc_num 61} true;
  $$sh0.i[3bv32] := v61;
  assert {:sourceloc} {:sourceloc_num 62} true;
  v62 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v0, 34bv32), 2bv32), BV32_MUL(v1, 2bv32)), 4bv32)];
  assert {:sourceloc} {:sourceloc_num 63} true;
  v63 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v0, 34bv32), 2bv32), BV32_MUL(v1, 2bv32)), 5bv32)];
  assert {:sourceloc} {:sourceloc_num 64} true;
  v64 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v0, 34bv32), 2bv32), BV32_MUL(v1, 2bv32)), 6bv32)];
  assert {:sourceloc} {:sourceloc_num 65} true;
  v65 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v0, 34bv32), 2bv32), BV32_MUL(v1, 2bv32)), 7bv32)];
  assert {:sourceloc} {:sourceloc_num 66} true;
  $$sh1.i[0bv32] := v62;
  assert {:sourceloc} {:sourceloc_num 67} true;
  $$sh1.i[1bv32] := v63;
  assert {:sourceloc} {:sourceloc_num 68} true;
  $$sh1.i[2bv32] := v64;
  assert {:sourceloc} {:sourceloc_num 69} true;
  $$sh1.i[3bv32] := v65;
  assert {:sourceloc} {:sourceloc_num 70} true;
  v66 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v0, 34bv32), 2bv32), BV32_MUL(v1, 2bv32)), 8bv32)];
  assert {:sourceloc} {:sourceloc_num 71} true;
  v67 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v0, 34bv32), 2bv32), BV32_MUL(v1, 2bv32)), 9bv32)];
  assert {:sourceloc} {:sourceloc_num 72} true;
  v68 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v0, 34bv32), 2bv32), BV32_MUL(v1, 2bv32)), 10bv32)];
  assert {:sourceloc} {:sourceloc_num 73} true;
  v69 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v0, 34bv32), 2bv32), BV32_MUL(v1, 2bv32)), 11bv32)];
  assert {:sourceloc} {:sourceloc_num 74} true;
  $$sh2.i[0bv32] := v66;
  assert {:sourceloc} {:sourceloc_num 75} true;
  $$sh2.i[1bv32] := v67;
  assert {:sourceloc} {:sourceloc_num 76} true;
  $$sh2.i[2bv32] := v68;
  assert {:sourceloc} {:sourceloc_num 77} true;
  $$sh2.i[3bv32] := v69;
  assert {:sourceloc} {:sourceloc_num 78} true;
  v70 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v0, 34bv32), 2bv32), BV32_MUL(v1, 2bv32)), 12bv32)];
  assert {:sourceloc} {:sourceloc_num 79} true;
  v71 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v0, 34bv32), 2bv32), BV32_MUL(v1, 2bv32)), 13bv32)];
  assert {:sourceloc} {:sourceloc_num 80} true;
  v72 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v0, 34bv32), 2bv32), BV32_MUL(v1, 2bv32)), 14bv32)];
  assert {:sourceloc} {:sourceloc_num 81} true;
  v73 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v0, 34bv32), 2bv32), BV32_MUL(v1, 2bv32)), 15bv32)];
  assert {:sourceloc} {:sourceloc_num 82} true;
  $$sh3.i[0bv32] := v70;
  assert {:sourceloc} {:sourceloc_num 83} true;
  $$sh3.i[1bv32] := v71;
  assert {:sourceloc} {:sourceloc_num 84} true;
  $$sh3.i[2bv32] := v72;
  assert {:sourceloc} {:sourceloc_num 85} true;
  $$sh3.i[3bv32] := v73;
  assert {:sourceloc} {:sourceloc_num 86} true;
  v74 := $$sh0.i[0bv32];
  assert {:sourceloc} {:sourceloc_num 87} true;
  v75 := $$sh0.i[1bv32];
  v76 := BV16_SEXT32(v75 ++ v74);
  assert {:sourceloc} {:sourceloc_num 88} true;
  v77 := $$sh0.i[2bv32];
  assert {:sourceloc} {:sourceloc_num 89} true;
  v78 := $$sh0.i[3bv32];
  assert {:sourceloc} {:sourceloc_num 90} true;
  v79 := $$sh1.i[0bv32];
  assert {:sourceloc} {:sourceloc_num 91} true;
  v80 := $$sh1.i[1bv32];
  v81 := BV16_SEXT32(v80 ++ v79);
  assert {:sourceloc} {:sourceloc_num 92} true;
  v82 := $$sh1.i[2bv32];
  assert {:sourceloc} {:sourceloc_num 93} true;
  v83 := $$sh1.i[3bv32];
  v84 := BV16_SEXT32(v83 ++ v82);
  assert {:sourceloc} {:sourceloc_num 94} true;
  v85 := $$sh2.i[0bv32];
  assert {:sourceloc} {:sourceloc_num 95} true;
  v86 := $$sh2.i[1bv32];
  v87 := BV16_SEXT32(v86 ++ v85);
  assert {:sourceloc} {:sourceloc_num 96} true;
  v88 := $$sh2.i[2bv32];
  assert {:sourceloc} {:sourceloc_num 97} true;
  v89 := $$sh2.i[3bv32];
  v90 := BV16_SEXT32(v89 ++ v88);
  assert {:sourceloc} {:sourceloc_num 98} true;
  v91 := $$sh3.i[0bv32];
  assert {:sourceloc} {:sourceloc_num 99} true;
  v92 := $$sh3.i[1bv32];
  v93 := BV16_SEXT32(v92 ++ v91);
  assert {:sourceloc} {:sourceloc_num 100} true;
  v94 := $$sh3.i[2bv32];
  assert {:sourceloc} {:sourceloc_num 101} true;
  v95 := $$sh3.i[3bv32];
  v96 := BV32_MUL(BV32_ADD(v76, v87), 23170bv32);
  v97 := BV32_MUL(BV32_SUB(v76, v87), 23170bv32);
  v98 := BV32_SUB(BV32_MUL(v81, 12540bv32), BV32_MUL(v93, 30274bv32));
  v99 := BV32_ADD(BV32_MUL(v93, 12540bv32), BV32_MUL(v81, 30274bv32));
  v100 := BV32_ADD(v96, v99);
  v101 := BV32_ADD(v97, v98);
  v102 := BV32_SUB(v97, v98);
  v103 := BV32_SUB(v96, v99);
  v104 := BV32_ASHR(BV32_ADD(BV32_MUL(BV32_ADD(v84, v90), 23170bv32), 4096bv32), 13bv32);
  v105 := BV32_ASHR(BV32_ADD(BV32_MUL(BV32_SUB(v84, v90), 23170bv32), 4096bv32), 13bv32);
  v106 := BV32_SHL(BV16_SEXT32(v78 ++ v77), 2bv32);
  v107 := BV32_SHL(BV16_SEXT32(v95 ++ v94), 2bv32);
  v108 := BV32_ADD(v106, v104);
  v109 := BV32_ADD(v107, v105);
  v110 := BV32_SUB(v106, v104);
  v111 := BV32_SUB(v107, v105);
  v112 := BV32_ADD(BV32_MUL(v108, 8035bv32), BV32_MUL(v109, 1598bv32));
  v113 := BV32_SUB(BV32_MUL(v108, 1598bv32), BV32_MUL(v109, 8035bv32));
  v114 := BV32_ADD(BV32_MUL(v110, 4551bv32), BV32_MUL(v111, 6811bv32));
  v115 := BV32_SUB(BV32_MUL(v110, 6811bv32), BV32_MUL(v111, 4551bv32));
  v116 := BV32_ASHR(BV32_ADD(BV32_ADD(v100, v112), 32768bv32), 16bv32)[16:0];
  assert {:sourceloc} {:sourceloc_num 102} true;
  $$sh0.i[0bv32] := v116[8:0];
  assert {:sourceloc} {:sourceloc_num 103} true;
  $$sh0.i[1bv32] := v116[16:8];
  v117 := BV32_ASHR(BV32_ADD(BV32_ADD(v101, v115), 32768bv32), 16bv32)[16:0];
  assert {:sourceloc} {:sourceloc_num 104} true;
  $$sh0.i[2bv32] := v117[8:0];
  assert {:sourceloc} {:sourceloc_num 105} true;
  $$sh0.i[3bv32] := v117[16:8];
  v118 := BV32_ASHR(BV32_ADD(BV32_ADD(v102, v114), 32768bv32), 16bv32)[16:0];
  assert {:sourceloc} {:sourceloc_num 106} true;
  $$sh1.i[0bv32] := v118[8:0];
  assert {:sourceloc} {:sourceloc_num 107} true;
  $$sh1.i[1bv32] := v118[16:8];
  v119 := BV32_ASHR(BV32_ADD(BV32_ADD(v103, v113), 32768bv32), 16bv32)[16:0];
  assert {:sourceloc} {:sourceloc_num 108} true;
  $$sh1.i[2bv32] := v119[8:0];
  assert {:sourceloc} {:sourceloc_num 109} true;
  $$sh1.i[3bv32] := v119[16:8];
  v120 := BV32_ASHR(BV32_ADD(BV32_SUB(v103, v113), 32768bv32), 16bv32)[16:0];
  assert {:sourceloc} {:sourceloc_num 110} true;
  $$sh2.i[0bv32] := v120[8:0];
  assert {:sourceloc} {:sourceloc_num 111} true;
  $$sh2.i[1bv32] := v120[16:8];
  v121 := BV32_ASHR(BV32_ADD(BV32_SUB(v102, v114), 32768bv32), 16bv32)[16:0];
  assert {:sourceloc} {:sourceloc_num 112} true;
  $$sh2.i[2bv32] := v121[8:0];
  assert {:sourceloc} {:sourceloc_num 113} true;
  $$sh2.i[3bv32] := v121[16:8];
  v122 := BV32_ASHR(BV32_ADD(BV32_SUB(v101, v115), 32768bv32), 16bv32)[16:0];
  assert {:sourceloc} {:sourceloc_num 114} true;
  $$sh3.i[0bv32] := v122[8:0];
  assert {:sourceloc} {:sourceloc_num 115} true;
  $$sh3.i[1bv32] := v122[16:8];
  v123 := BV32_ASHR(BV32_ADD(BV32_SUB(v100, v112), 32768bv32), 16bv32)[16:0];
  assert {:sourceloc} {:sourceloc_num 116} true;
  $$sh3.i[2bv32] := v123[8:0];
  assert {:sourceloc} {:sourceloc_num 117} true;
  $$sh3.i[3bv32] := v123[16:8];
  assert {:sourceloc} {:sourceloc_num 118} true;
  v124 := $$sh0.i[0bv32];
  assert {:sourceloc} {:sourceloc_num 119} true;
  v125 := $$sh0.i[1bv32];
  assert {:sourceloc} {:sourceloc_num 120} true;
  v126 := $$sh0.i[2bv32];
  assert {:sourceloc} {:sourceloc_num 121} true;
  v127 := $$sh0.i[3bv32];
  assert {:sourceloc} {:sourceloc_num 122} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_MUL(BV32_MUL(v0, 34bv32), 2bv32), BV32_MUL(v1, 2bv32))] := v124;
  assert {:sourceloc} {:sourceloc_num 123} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v0, 34bv32), 2bv32), BV32_MUL(v1, 2bv32)), 1bv32)] := v125;
  assert {:sourceloc} {:sourceloc_num 124} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v0, 34bv32), 2bv32), BV32_MUL(v1, 2bv32)), 2bv32)] := v126;
  assert {:sourceloc} {:sourceloc_num 125} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v0, 34bv32), 2bv32), BV32_MUL(v1, 2bv32)), 3bv32)] := v127;
  assert {:sourceloc} {:sourceloc_num 126} true;
  v128 := $$sh1.i[0bv32];
  assert {:sourceloc} {:sourceloc_num 127} true;
  v129 := $$sh1.i[1bv32];
  assert {:sourceloc} {:sourceloc_num 128} true;
  v130 := $$sh1.i[2bv32];
  assert {:sourceloc} {:sourceloc_num 129} true;
  v131 := $$sh1.i[3bv32];
  assert {:sourceloc} {:sourceloc_num 130} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v0, 34bv32), 2bv32), BV32_MUL(v1, 2bv32)), 4bv32)] := v128;
  assert {:sourceloc} {:sourceloc_num 131} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v0, 34bv32), 2bv32), BV32_MUL(v1, 2bv32)), 5bv32)] := v129;
  assert {:sourceloc} {:sourceloc_num 132} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v0, 34bv32), 2bv32), BV32_MUL(v1, 2bv32)), 6bv32)] := v130;
  assert {:sourceloc} {:sourceloc_num 133} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v0, 34bv32), 2bv32), BV32_MUL(v1, 2bv32)), 7bv32)] := v131;
  assert {:sourceloc} {:sourceloc_num 134} true;
  v132 := $$sh2.i[0bv32];
  assert {:sourceloc} {:sourceloc_num 135} true;
  v133 := $$sh2.i[1bv32];
  assert {:sourceloc} {:sourceloc_num 136} true;
  v134 := $$sh2.i[2bv32];
  assert {:sourceloc} {:sourceloc_num 137} true;
  v135 := $$sh2.i[3bv32];
  assert {:sourceloc} {:sourceloc_num 138} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v0, 34bv32), 2bv32), BV32_MUL(v1, 2bv32)), 8bv32)] := v132;
  assert {:sourceloc} {:sourceloc_num 139} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v0, 34bv32), 2bv32), BV32_MUL(v1, 2bv32)), 9bv32)] := v133;
  assert {:sourceloc} {:sourceloc_num 140} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v0, 34bv32), 2bv32), BV32_MUL(v1, 2bv32)), 10bv32)] := v134;
  assert {:sourceloc} {:sourceloc_num 141} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v0, 34bv32), 2bv32), BV32_MUL(v1, 2bv32)), 11bv32)] := v135;
  assert {:sourceloc} {:sourceloc_num 142} true;
  v136 := $$sh3.i[0bv32];
  assert {:sourceloc} {:sourceloc_num 143} true;
  v137 := $$sh3.i[1bv32];
  assert {:sourceloc} {:sourceloc_num 144} true;
  v138 := $$sh3.i[2bv32];
  assert {:sourceloc} {:sourceloc_num 145} true;
  v139 := $$sh3.i[3bv32];
  assert {:sourceloc} {:sourceloc_num 146} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v0, 34bv32), 2bv32), BV32_MUL(v1, 2bv32)), 12bv32)] := v136;
  assert {:sourceloc} {:sourceloc_num 147} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v0, 34bv32), 2bv32), BV32_MUL(v1, 2bv32)), 13bv32)] := v137;
  assert {:sourceloc} {:sourceloc_num 148} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v0, 34bv32), 2bv32), BV32_MUL(v1, 2bv32)), 14bv32)] := v138;
  assert {:sourceloc} {:sourceloc_num 149} true;
  $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_MUL(v0, 34bv32), 2bv32), BV32_MUL(v1, 2bv32)), 15bv32)] := v139;
  call {:sourceloc_num 150} $bugle_barrier(1bv1, 1bv1);
  v140 := BV32_SLT(v0, 16bv32);
  goto $truebb1, $falsebb1;
$if.then.79:
  assert {:block_sourceloc} {:sourceloc_num 151} true;
  $i80.0 := 0bv32;
  goto $for.cond.81;
$for.cond.81:
  assert {:block_sourceloc} {:sourceloc_num 152} true;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 153} (if (_WRITE_HAS_OCCURRED_$$SrcDst ==> BV32_UREM(BV32_UDIV(BV32_SUB(_WATCHED_OFFSET, BV32_MUL(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(group_id_y, 32bv32), v1), $ImgStride), BV32_ADD(BV32_MUL(group_id_x, 32bv32), BV32_MUL(v0, 2bv32))), 2bv32)), 4bv32), BV32_SDIV($ImgStride, 2bv32)) == 0bv32) then 1bv1 else 0bv1) != 0bv1;
  assert {:do_not_predicate} {:originated_from_invariant} {:sourceloc_num 154} (if (_WRITE_HAS_OCCURRED_$$SrcDst ==> BV32_ULT(BV32_UDIV(BV32_UDIV(BV32_SUB(_WATCHED_OFFSET, BV32_MUL(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(group_id_y, 32bv32), v1), $ImgStride), BV32_ADD(BV32_MUL(group_id_x, 32bv32), BV32_MUL(v0, 2bv32))), 2bv32)), 4bv32), BV32_SDIV($ImgStride, 2bv32)), 8bv32)) then 1bv1 else 0bv1) != 0bv1;
  v141 := BV32_SLT($i80.0, 8bv32);
  goto $truebb2, $falsebb2;
$for.body.115:
  assert {:block_sourceloc} {:sourceloc_num 155} true;
  assert {:sourceloc} {:sourceloc_num 156} true;
  v142 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v1, 34bv32), BV32_MUL(v0, 2bv32)), 2bv32), BV32_MUL(BV32_MUL($i80.0, 17bv32), 4bv32))];
  assert {:sourceloc} {:sourceloc_num 157} true;
  v143 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v1, 34bv32), BV32_MUL(v0, 2bv32)), 2bv32), BV32_MUL(BV32_MUL($i80.0, 17bv32), 4bv32)), 1bv32)];
  assert {:sourceloc} {:sourceloc_num 158} true;
  v144 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v1, 34bv32), BV32_MUL(v0, 2bv32)), 2bv32), BV32_MUL(BV32_MUL($i80.0, 17bv32), 4bv32)), 2bv32)];
  assert {:sourceloc} {:sourceloc_num 159} true;
  v145 := $$_ZZ19CUDAkernelShortIDCTPsiE5block[BV32_ADD(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(v1, 34bv32), BV32_MUL(v0, 2bv32)), 2bv32), BV32_MUL(BV32_MUL($i80.0, 17bv32), 4bv32)), 3bv32)];
  assert {:sourceloc} {:sourceloc_num 160} true;
  $$SrcDst[BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(group_id_y, 32bv32), v1), $ImgStride), BV32_ADD(BV32_MUL(group_id_x, 32bv32), BV32_MUL(v0, 2bv32))), 2bv32), BV32_MUL(BV32_MUL($i80.0, BV32_SDIV($ImgStride, 2bv32)), 4bv32))] := v142;
  assert {:sourceloc} {:sourceloc_num 161} true;
  $$SrcDst[BV32_ADD(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(group_id_y, 32bv32), v1), $ImgStride), BV32_ADD(BV32_MUL(group_id_x, 32bv32), BV32_MUL(v0, 2bv32))), 2bv32), BV32_MUL(BV32_MUL($i80.0, BV32_SDIV($ImgStride, 2bv32)), 4bv32)), 1bv32)] := v143;
  assert {:sourceloc} {:sourceloc_num 162} true;
  $$SrcDst[BV32_ADD(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(group_id_y, 32bv32), v1), $ImgStride), BV32_ADD(BV32_MUL(group_id_x, 32bv32), BV32_MUL(v0, 2bv32))), 2bv32), BV32_MUL(BV32_MUL($i80.0, BV32_SDIV($ImgStride, 2bv32)), 4bv32)), 2bv32)] := v144;
  assert {:sourceloc} {:sourceloc_num 163} true;
  $$SrcDst[BV32_ADD(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(BV32_ADD(BV32_MUL(group_id_y, 32bv32), v1), $ImgStride), BV32_ADD(BV32_MUL(group_id_x, 32bv32), BV32_MUL(v0, 2bv32))), 2bv32), BV32_MUL(BV32_MUL($i80.0, BV32_SDIV($ImgStride, 2bv32)), 4bv32)), 3bv32)] := v145;
  goto $for.inc.121;
$for.inc.121:
  assert {:block_sourceloc} {:sourceloc_num 164} true;
  $i80.0 := BV32_ADD($i80.0, 1bv32);
  goto $for.cond.81;
$for.end.123:
  assert {:block_sourceloc} {:sourceloc_num 165} true;
  goto $if.end.124;
$if.end.124:
  assert {:block_sourceloc} {:sourceloc_num 166} true;
  return;
$truebb:
  assume {:partition} v2;
  assert {:block_sourceloc} {:sourceloc_num 167} true;
  goto $if.then;
$falsebb:
  assume {:partition} !v2;
  assert {:block_sourceloc} {:sourceloc_num 168} true;
  goto $if.end;
$truebb0:
  assume {:partition} v3;
  assert {:block_sourceloc} {:sourceloc_num 169} true;
  goto $for.body;
$falsebb0:
  assume {:partition} !v3;
  assert {:block_sourceloc} {:sourceloc_num 170} true;
  goto $for.end;
$truebb1:
  assume {:partition} v140;
  assert {:block_sourceloc} {:sourceloc_num 171} true;
  goto $if.then.79;
$falsebb1:
  assume {:partition} !v140;
  assert {:block_sourceloc} {:sourceloc_num 172} true;
  goto $if.end.124;
$truebb2:
  assume {:partition} v141;
  assert {:block_sourceloc} {:sourceloc_num 173} true;
  goto $for.body.115;
$falsebb2:
  assume {:partition} !v141;
  assert {:block_sourceloc} {:sourceloc_num 174} true;
  goto $for.end.123;
}
procedure {:source_name "bugle_barrier"} {:barrier} $bugle_barrier($0:bv1, $1:bv1);
axiom (if group_size_x == 8bv32 then 1bv1 else 0bv1) != 0bv1;
axiom (if group_size_y == 4bv32 then 1bv1 else 0bv1) != 0bv1;
axiom (if group_size_z == 4bv32 then 1bv1 else 0bv1) != 0bv1;
axiom (if num_groups_x == 16bv32 then 1bv1 else 0bv1) != 0bv1;
axiom (if num_groups_y == 16bv32 then 1bv1 else 0bv1) != 0bv1;
axiom (if num_groups_z == 1bv32 then 1bv1 else 0bv1) != 0bv1;
