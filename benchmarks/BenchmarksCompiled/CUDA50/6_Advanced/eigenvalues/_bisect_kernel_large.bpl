type _SIZE_T_TYPE = bv32;

procedure _ATOMIC_OP32(x: [bv32]bv32, y: bv32) returns (z$1: bv32, A$1: [bv32]bv32, z$2: bv32, A$2: [bv32]bv32);



procedure _ATOMIC_OP16(x: [bv32]bv16, y: bv32) returns (z$1: bv16, A$1: [bv32]bv16, z$2: bv16, A$2: [bv32]bv16);



axiom {:array_info "$$g_d"} {:global} {:elem_width 32} {:source_name "g_d"} {:source_elem_width 32} {:source_dimensions "*"} true;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$g_d: bool;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$g_d: bool;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$g_d: bool;

axiom {:array_info "$$g_s"} {:global} {:elem_width 32} {:source_name "g_s"} {:source_elem_width 32} {:source_dimensions "*"} true;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$g_s: bool;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$g_s: bool;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$g_s: bool;

var {:source_name "g_num_one"} {:global} $$g_num_one: [bv32]bv32;

axiom {:array_info "$$g_num_one"} {:global} {:elem_width 32} {:source_name "g_num_one"} {:source_elem_width 32} {:source_dimensions "*"} true;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$g_num_one: bool;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$g_num_one: bool;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$g_num_one: bool;

var {:source_name "g_num_blocks_mult"} {:global} $$g_num_blocks_mult: [bv32]bv32;

axiom {:array_info "$$g_num_blocks_mult"} {:global} {:elem_width 32} {:source_name "g_num_blocks_mult"} {:source_elem_width 32} {:source_dimensions "*"} true;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$g_num_blocks_mult: bool;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$g_num_blocks_mult: bool;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult: bool;

var {:source_name "g_left_one"} {:global} $$g_left_one: [bv32]bv32;

axiom {:array_info "$$g_left_one"} {:global} {:elem_width 32} {:source_name "g_left_one"} {:source_elem_width 32} {:source_dimensions "*"} true;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$g_left_one: bool;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$g_left_one: bool;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$g_left_one: bool;

var {:source_name "g_right_one"} {:global} $$g_right_one: [bv32]bv32;

axiom {:array_info "$$g_right_one"} {:global} {:elem_width 32} {:source_name "g_right_one"} {:source_elem_width 32} {:source_dimensions "*"} true;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$g_right_one: bool;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$g_right_one: bool;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$g_right_one: bool;

var {:source_name "g_pos_one"} {:global} $$g_pos_one: [bv32]bv32;

axiom {:array_info "$$g_pos_one"} {:global} {:elem_width 32} {:source_name "g_pos_one"} {:source_elem_width 32} {:source_dimensions "*"} true;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$g_pos_one: bool;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$g_pos_one: bool;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$g_pos_one: bool;

var {:source_name "g_left_mult"} {:global} $$g_left_mult: [bv32]bv32;

axiom {:array_info "$$g_left_mult"} {:global} {:elem_width 32} {:source_name "g_left_mult"} {:source_elem_width 32} {:source_dimensions "*"} true;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$g_left_mult: bool;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$g_left_mult: bool;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$g_left_mult: bool;

var {:source_name "g_right_mult"} {:global} $$g_right_mult: [bv32]bv32;

axiom {:array_info "$$g_right_mult"} {:global} {:elem_width 32} {:source_name "g_right_mult"} {:source_elem_width 32} {:source_dimensions "*"} true;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$g_right_mult: bool;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$g_right_mult: bool;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$g_right_mult: bool;

var {:source_name "g_left_count_mult"} {:global} $$g_left_count_mult: [bv32]bv32;

axiom {:array_info "$$g_left_count_mult"} {:global} {:elem_width 32} {:source_name "g_left_count_mult"} {:source_elem_width 32} {:source_dimensions "*"} true;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$g_left_count_mult: bool;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$g_left_count_mult: bool;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$g_left_count_mult: bool;

var {:source_name "g_right_count_mult"} {:global} $$g_right_count_mult: [bv32]bv32;

axiom {:array_info "$$g_right_count_mult"} {:global} {:elem_width 32} {:source_name "g_right_count_mult"} {:source_elem_width 32} {:source_dimensions "*"} true;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$g_right_count_mult: bool;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$g_right_count_mult: bool;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$g_right_count_mult: bool;

var {:source_name "g_blocks_mult"} {:global} $$g_blocks_mult: [bv32]bv32;

axiom {:array_info "$$g_blocks_mult"} {:global} {:elem_width 32} {:source_name "g_blocks_mult"} {:source_elem_width 32} {:source_dimensions "*"} true;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$g_blocks_mult: bool;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$g_blocks_mult: bool;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$g_blocks_mult: bool;

var {:source_name "g_blocks_mult_sum"} {:global} $$g_blocks_mult_sum: [bv32]bv32;

axiom {:array_info "$$g_blocks_mult_sum"} {:global} {:elem_width 32} {:source_name "g_blocks_mult_sum"} {:source_elem_width 32} {:source_dimensions "*"} true;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$g_blocks_mult_sum: bool;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$g_blocks_mult_sum: bool;

var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum: bool;

var {:source_name "s_compaction_list"} {:group_shared} $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list: [bv1][bv32]bv16;

axiom {:array_info "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} {:group_shared} {:elem_width 16} {:source_name "s_compaction_list"} {:source_elem_width 16} {:source_dimensions "513"} true;

var {:race_checking} {:group_shared} {:elem_width 16} {:source_elem_width 16} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list: bool;

var {:race_checking} {:group_shared} {:elem_width 16} {:source_elem_width 16} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list: bool;

var {:race_checking} {:group_shared} {:elem_width 16} {:source_elem_width 16} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list: bool;

var {:source_name "s_left"} {:group_shared} $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left: [bv1][bv32]bv32;

axiom {:array_info "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left"} {:group_shared} {:elem_width 32} {:source_name "s_left"} {:source_elem_width 32} {:source_dimensions "513"} true;

var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left: bool;

var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left: bool;

var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left: bool;

var {:source_name "s_right"} {:group_shared} $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right: [bv1][bv32]bv32;

axiom {:array_info "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right"} {:group_shared} {:elem_width 32} {:source_name "s_right"} {:source_elem_width 32} {:source_dimensions "513"} true;

var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right: bool;

var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right: bool;

var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right: bool;

var {:source_name "s_left_count"} {:group_shared} $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count: [bv1][bv32]bv16;

axiom {:array_info "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count"} {:group_shared} {:elem_width 16} {:source_name "s_left_count"} {:source_elem_width 16} {:source_dimensions "513"} true;

var {:race_checking} {:group_shared} {:elem_width 16} {:source_elem_width 16} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count: bool;

var {:race_checking} {:group_shared} {:elem_width 16} {:source_elem_width 16} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count: bool;

var {:race_checking} {:group_shared} {:elem_width 16} {:source_elem_width 16} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count: bool;

var {:source_name "s_right_count"} {:group_shared} $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count: [bv1][bv32]bv16;

axiom {:array_info "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count"} {:group_shared} {:elem_width 16} {:source_name "s_right_count"} {:source_elem_width 16} {:source_dimensions "513"} true;

var {:race_checking} {:group_shared} {:elem_width 16} {:source_elem_width 16} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count: bool;

var {:race_checking} {:group_shared} {:elem_width 16} {:source_elem_width 16} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count: bool;

var {:race_checking} {:group_shared} {:elem_width 16} {:source_elem_width 16} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count: bool;

var {:source_name "compact_second_chunk"} {:group_shared} $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk: [bv1][bv32]bv32;

axiom {:array_info "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk"} {:group_shared} {:elem_width 32} {:source_name "compact_second_chunk"} {:source_elem_width 32} {:source_dimensions "1"} true;

var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk: bool;

var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk: bool;

var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk: bool;

var {:source_name "num_threads_active"} {:group_shared} $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active: [bv1][bv32]bv32;

axiom {:array_info "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active"} {:group_shared} {:elem_width 32} {:source_name "num_threads_active"} {:source_elem_width 32} {:source_dimensions "1"} true;

var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active: bool;

var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active: bool;

var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active: bool;

var {:source_name "num_threads_compaction"} {:group_shared} $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction: [bv1][bv32]bv32;

axiom {:array_info "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction"} {:group_shared} {:elem_width 32} {:source_name "num_threads_compaction"} {:source_elem_width 32} {:source_dimensions "1"} true;

var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction: bool;

var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction: bool;

var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction: bool;

var {:source_name "all_threads_converged"} {:group_shared} $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged: [bv1][bv32]bv32;

axiom {:array_info "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged"} {:group_shared} {:elem_width 32} {:source_name "all_threads_converged"} {:source_elem_width 32} {:source_dimensions "1"} true;

var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged: bool;

var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged: bool;

var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged: bool;

var {:source_name "s_cl_helper"} {:group_shared} $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper: [bv1][bv32]bv16;

axiom {:array_info "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper"} {:group_shared} {:elem_width 16} {:source_name "s_cl_helper"} {:source_elem_width 16} {:source_dimensions "513"} true;

var {:race_checking} {:group_shared} {:elem_width 16} {:source_elem_width 16} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper: bool;

var {:race_checking} {:group_shared} {:elem_width 16} {:source_elem_width 16} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper: bool;

var {:race_checking} {:group_shared} {:elem_width 16} {:source_elem_width 16} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper: bool;

var {:source_name "num_blocks_mult"} {:group_shared} $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult: [bv1][bv32]bv32;

axiom {:array_info "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult"} {:group_shared} {:elem_width 32} {:source_name "num_blocks_mult"} {:source_elem_width 32} {:source_dimensions "1"} true;

var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult: bool;

var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult: bool;

var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult: bool;

var {:source_name "offset_mult_lambda"} {:group_shared} $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda: [bv1][bv32]bv32;

axiom {:array_info "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda"} {:group_shared} {:elem_width 32} {:source_name "offset_mult_lambda"} {:source_elem_width 32} {:source_dimensions "1"} true;

var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda: bool;

var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda: bool;

var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda: bool;

var {:source_name "num_mult"} {:group_shared} $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult: [bv1][bv32]bv32;

axiom {:array_info "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult"} {:group_shared} {:elem_width 32} {:source_name "num_mult"} {:source_elem_width 32} {:source_dimensions "1"} true;

var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult: bool;

var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult: bool;

var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult: bool;

const _WATCHED_OFFSET: bv32;

const {:group_size_x} group_size_x: bv32;

const {:group_size_y} group_size_y: bv32;

const {:group_size_z} group_size_z: bv32;

const {:local_id_x} local_id_x$1: bv32;

const {:local_id_x} local_id_x$2: bv32;

const {:num_groups_x} num_groups_x: bv32;

const {:num_groups_y} num_groups_y: bv32;

const {:num_groups_z} num_groups_z: bv32;

function FADD32(bv32, bv32) : bv32;

function FDIV32(bv32, bv32) : bv32;

function FEQ64(bv64, bv64) : bool;

function FLT32(bv32, bv32) : bool;

function FLT64(bv64, bv64) : bool;

function FMUL32(bv32, bv32) : bv32;

function FP32_CONV64(bv32) : bv64;

function FSUB32(bv32, bv32) : bv32;

function FUNO32(bv32, bv32) : bool;

function SI32_TO_FP32(bv32) : bv32;

function {:bvbuiltin "bvadd"} BV32_ADD(bv32, bv32) : bv32;

function {:bvbuiltin "bvand"} BV32_AND(bv32, bv32) : bv32;

function {:bvbuiltin "bvashr"} BV32_ASHR(bv32, bv32) : bv32;

function {:bvbuiltin "bvlshr"} BV32_LSHR(bv32, bv32) : bv32;

function {:bvbuiltin "bvmul"} BV32_MUL(bv32, bv32) : bv32;

function {:bvbuiltin "bvsgt"} BV32_SGT(bv32, bv32) : bool;

function {:bvbuiltin "bvshl"} BV32_SHL(bv32, bv32) : bv32;

function {:bvbuiltin "bvsub"} BV32_SUB(bv32, bv32) : bv32;

function {:bvbuiltin "bvugt"} BV32_UGT(bv32, bv32) : bool;

function {:bvbuiltin "bvule"} BV32_ULE(bv32, bv32) : bool;

function {:bvbuiltin "bvult"} BV32_ULT(bv32, bv32) : bool;

function {:bvbuiltin "bvxor"} BV1_XOR(bv1, bv1) : bv1;

function {:bvbuiltin "zero_extend 15"} BV1_ZEXT16(bv1) : bv16;

function {:bvbuiltin "zero_extend 16"} BV16_ZEXT32(bv16) : bv32;

function {:bvbuiltin "zero_extend 31"} BV1_ZEXT32(bv1) : bv32;

procedure {:source_name "bisectKernelLarge"} {:kernel} $_Z17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_($n: bv32, $lg: bv32, $ug: bv32, $lg_eig_count: bv32, $ug_eig_count: bv32, $epsilon: bv32);
  requires !_READ_HAS_OCCURRED_$$g_d && !_WRITE_HAS_OCCURRED_$$g_d && !_ATOMIC_HAS_OCCURRED_$$g_d;
  requires !_READ_HAS_OCCURRED_$$g_s && !_WRITE_HAS_OCCURRED_$$g_s && !_ATOMIC_HAS_OCCURRED_$$g_s;
  requires !_READ_HAS_OCCURRED_$$g_num_one && !_WRITE_HAS_OCCURRED_$$g_num_one && !_ATOMIC_HAS_OCCURRED_$$g_num_one;
  requires !_READ_HAS_OCCURRED_$$g_num_blocks_mult && !_WRITE_HAS_OCCURRED_$$g_num_blocks_mult && !_ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult;
  requires !_READ_HAS_OCCURRED_$$g_left_one && !_WRITE_HAS_OCCURRED_$$g_left_one && !_ATOMIC_HAS_OCCURRED_$$g_left_one;
  requires !_READ_HAS_OCCURRED_$$g_right_one && !_WRITE_HAS_OCCURRED_$$g_right_one && !_ATOMIC_HAS_OCCURRED_$$g_right_one;
  requires !_READ_HAS_OCCURRED_$$g_pos_one && !_WRITE_HAS_OCCURRED_$$g_pos_one && !_ATOMIC_HAS_OCCURRED_$$g_pos_one;
  requires !_READ_HAS_OCCURRED_$$g_left_mult && !_WRITE_HAS_OCCURRED_$$g_left_mult && !_ATOMIC_HAS_OCCURRED_$$g_left_mult;
  requires !_READ_HAS_OCCURRED_$$g_right_mult && !_WRITE_HAS_OCCURRED_$$g_right_mult && !_ATOMIC_HAS_OCCURRED_$$g_right_mult;
  requires !_READ_HAS_OCCURRED_$$g_left_count_mult && !_WRITE_HAS_OCCURRED_$$g_left_count_mult && !_ATOMIC_HAS_OCCURRED_$$g_left_count_mult;
  requires !_READ_HAS_OCCURRED_$$g_right_count_mult && !_WRITE_HAS_OCCURRED_$$g_right_count_mult && !_ATOMIC_HAS_OCCURRED_$$g_right_count_mult;
  requires !_READ_HAS_OCCURRED_$$g_blocks_mult && !_WRITE_HAS_OCCURRED_$$g_blocks_mult && !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult;
  requires !_READ_HAS_OCCURRED_$$g_blocks_mult_sum && !_WRITE_HAS_OCCURRED_$$g_blocks_mult_sum && !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum;
  requires !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list && !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list && !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
  requires !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left && !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left && !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
  requires !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right && !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right && !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
  requires !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count && !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count && !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
  requires !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count && !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count && !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
  requires !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk && !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk && !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
  requires !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active && !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active && !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
  requires !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction && !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction && !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
  requires !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged && !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged && !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
  requires !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper && !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper && !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
  requires !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult && !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult && !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
  requires !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda && !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda && !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
  requires !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult && !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult && !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
  requires BV32_SGT(group_size_x, 0bv32);
  requires BV32_SGT(num_groups_x, 0bv32);
  requires BV32_SGE(group_id_x$1, 0bv32);
  requires BV32_SGE(group_id_x$2, 0bv32);
  requires BV32_SLT(group_id_x$1, num_groups_x);
  requires BV32_SLT(group_id_x$2, num_groups_x);
  requires BV32_SGE(local_id_x$1, 0bv32);
  requires BV32_SGE(local_id_x$2, 0bv32);
  requires BV32_SLT(local_id_x$1, group_size_x);
  requires BV32_SLT(local_id_x$2, group_size_x);
  requires BV32_SGT(group_size_y, 0bv32);
  requires BV32_SGT(num_groups_y, 0bv32);
  requires BV32_SGE(group_id_y$1, 0bv32);
  requires BV32_SGE(group_id_y$2, 0bv32);
  requires BV32_SLT(group_id_y$1, num_groups_y);
  requires BV32_SLT(group_id_y$2, num_groups_y);
  requires BV32_SGE(local_id_y$1, 0bv32);
  requires BV32_SGE(local_id_y$2, 0bv32);
  requires BV32_SLT(local_id_y$1, group_size_y);
  requires BV32_SLT(local_id_y$2, group_size_y);
  requires BV32_SGT(group_size_z, 0bv32);
  requires BV32_SGT(num_groups_z, 0bv32);
  requires BV32_SGE(group_id_z$1, 0bv32);
  requires BV32_SGE(group_id_z$2, 0bv32);
  requires BV32_SLT(group_id_z$1, num_groups_z);
  requires BV32_SLT(group_id_z$2, num_groups_z);
  requires BV32_SGE(local_id_z$1, 0bv32);
  requires BV32_SGE(local_id_z$2, 0bv32);
  requires BV32_SLT(local_id_z$1, group_size_z);
  requires BV32_SLT(local_id_z$2, group_size_z);
  requires group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> local_id_x$1 != local_id_x$2 || local_id_y$1 != local_id_y$2 || local_id_z$1 != local_id_z$2;
  modifies $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, $$g_num_one, $$g_num_blocks_mult, $$g_left_one, $$g_right_one, $$g_pos_one, $$g_left_mult, $$g_right_mult, $$g_left_count_mult, $$g_right_count_mult, $$g_blocks_mult, $$g_blocks_mult_sum, _TRACKING, _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, _TRACKING, _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, _TRACKING, _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, _TRACKING, _TRACKING, _TRACKING, _TRACKING, _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, _TRACKING, _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, _TRACKING, _TRACKING, _TRACKING, _TRACKING, _TRACKING, _TRACKING, _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, _TRACKING, _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, _TRACKING, _TRACKING, _TRACKING, _TRACKING, _TRACKING, _TRACKING, _TRACKING, _TRACKING, _TRACKING, _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, _WRITE_HAS_OCCURRED_$$g_num_one, _WRITE_READ_BENIGN_FLAG_$$g_num_one, _WRITE_READ_BENIGN_FLAG_$$g_num_one, _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, _WRITE_HAS_OCCURRED_$$g_num_blocks_mult, _WRITE_READ_BENIGN_FLAG_$$g_num_blocks_mult, _WRITE_READ_BENIGN_FLAG_$$g_num_blocks_mult, _TRACKING, _TRACKING, _TRACKING, _TRACKING, _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, _TRACKING, _WRITE_HAS_OCCURRED_$$g_left_one, _WRITE_READ_BENIGN_FLAG_$$g_left_one, _WRITE_READ_BENIGN_FLAG_$$g_left_one, _WRITE_HAS_OCCURRED_$$g_right_one, _WRITE_READ_BENIGN_FLAG_$$g_right_one, _WRITE_READ_BENIGN_FLAG_$$g_right_one, _WRITE_HAS_OCCURRED_$$g_pos_one, _WRITE_READ_BENIGN_FLAG_$$g_pos_one, _WRITE_READ_BENIGN_FLAG_$$g_pos_one, _WRITE_HAS_OCCURRED_$$g_left_mult, _WRITE_READ_BENIGN_FLAG_$$g_left_mult, _WRITE_READ_BENIGN_FLAG_$$g_left_mult, _WRITE_HAS_OCCURRED_$$g_right_mult, _WRITE_READ_BENIGN_FLAG_$$g_right_mult, _WRITE_READ_BENIGN_FLAG_$$g_right_mult, _WRITE_HAS_OCCURRED_$$g_left_count_mult, _WRITE_READ_BENIGN_FLAG_$$g_left_count_mult, _WRITE_READ_BENIGN_FLAG_$$g_left_count_mult, _WRITE_HAS_OCCURRED_$$g_right_count_mult, _WRITE_READ_BENIGN_FLAG_$$g_right_count_mult, _WRITE_READ_BENIGN_FLAG_$$g_right_count_mult, _WRITE_HAS_OCCURRED_$$g_blocks_mult, _WRITE_READ_BENIGN_FLAG_$$g_blocks_mult, _WRITE_READ_BENIGN_FLAG_$$g_blocks_mult, _WRITE_HAS_OCCURRED_$$g_blocks_mult_sum, _WRITE_READ_BENIGN_FLAG_$$g_blocks_mult_sum, _WRITE_READ_BENIGN_FLAG_$$g_blocks_mult_sum;



implementation {:source_name "bisectKernelLarge"} {:kernel} $_Z17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_($n: bv32, $lg: bv32, $ug: bv32, $lg_eig_count: bv32, $ug_eig_count: bv32, $epsilon: bv32)
{
  var $is_active_second.0$1: bv32;
  var $is_active_second.0$2: bv32;
  var $mid.0$1: bv32;
  var $mid.0$2: bv32;
  var $right_count.0$1: bv32;
  var $right_count.0$2: bv32;
  var $left_count.0$1: bv32;
  var $left_count.0$2: bv32;
  var $right.0$1: bv32;
  var $right.0$2: bv32;
  var $left.0$1: bv32;
  var $left.0$2: bv32;
  var $mid.2$1: bv32;
  var $mid.2$2: bv32;
  var $right_count.1$1: bv32;
  var $right_count.1$2: bv32;
  var $left_count.1$1: bv32;
  var $left_count.1$2: bv32;
  var $right.1$1: bv32;
  var $right.1$2: bv32;
  var $left.1$1: bv32;
  var $left.1$2: bv32;
  var $mid.i.i.0$1: bv32;
  var $mid.i.i.0$2: bv32;
  var $mid.1$1: bv32;
  var $mid.1$2: bv32;
  var $delta.i.0$1: bv32;
  var $delta.i.0$2: bv32;
  var $count.i.0$1: bv32;
  var $count.i.0$2: bv32;
  var $rem.i.0$1: bv32;
  var $rem.i.0$2: bv32;
  var $i.i.0$1: bv32;
  var $i.i.0$2: bv32;
  var $delta.i.2$1: bv32;
  var $delta.i.2$2: bv32;
  var $count.i.2$1: bv32;
  var $count.i.2$2: bv32;
  var $delta.i.1$1: bv32;
  var $delta.i.1$2: bv32;
  var $count.i.1$1: bv32;
  var $count.i.1$2: bv32;
  var $k.i.0$1: bv32;
  var $k.i.0$2: bv32;
  var $0$1: bv32;
  var $0$2: bv32;
  var $is_active_second.3$1: bv32;
  var $is_active_second.3$2: bv32;
  var $1$1: bv32;
  var $1$2: bv32;
  var $2$1: bv64;
  var $2$2: bv64;
  var $mid.i.i.i.0$1: bv32;
  var $mid.i.i.i.0$2: bv32;
  var $is_active_second.1$1: bv32;
  var $is_active_second.1$2: bv32;
  var $3$1: bv32;
  var $3$2: bv32;
  var $4$1: bv64;
  var $4$2: bv64;
  var $mid.i.i1.i.0$1: bv32;
  var $mid.i.i1.i.0$2: bv32;
  var $5$1: bv32;
  var $5$2: bv32;
  var $6$1: bv64;
  var $6$2: bv64;
  var $mid.i.i7.i.0$1: bv32;
  var $mid.i.i7.i.0$2: bv32;
  var $is_active_second.2$1: bv32;
  var $is_active_second.2$2: bv32;
  var $offset.i.0$1: bv32;
  var $offset.i.0$2: bv32;
  var $d.i.0$1: bv32;
  var $d.i.0$2: bv32;
  var $offset.i.1$1: bv32;
  var $offset.i.1$2: bv32;
  var $d1.i.0$1: bv32;
  var $d1.i.0$2: bv32;
  var $.0$1: bv32;
  var $.0$2: bv32;
  var $right_count_2.0$1: bv32;
  var $right_count_2.0$2: bv32;
  var $left_count_2.0$1: bv32;
  var $left_count_2.0$2: bv32;
  var $7$1: bv32;
  var $7$2: bv32;
  var $8$1: bv32;
  var $8$2: bv32;
  var $is_one_lambda_2.0$1: bv32;
  var $is_one_lambda_2.0$2: bv32;
  var $offset.i3.0$1: bv32;
  var $offset.i3.0$2: bv32;
  var $d.i4.0$1: bv32;
  var $d.i4.0$2: bv32;
  var $offset.i3.1$1: bv32;
  var $offset.i3.1$2: bv32;
  var $d1.i7.0$1: bv32;
  var $d1.i7.0$2: bv32;
  var $offset.i10.0$1: bv32;
  var $offset.i10.0$2: bv32;
  var $d.i11.0$1: bv32;
  var $d.i11.0$2: bv32;
  var $offset.i10.1$1: bv32;
  var $offset.i10.1$2: bv32;
  var $d1.i14.0$1: bv32;
  var $d1.i14.0$2: bv32;
  var $c_block_iend.0$1: bv32;
  var $c_block_iend.0$2: bv32;
  var $c_sum_block.0$1: bv32;
  var $c_sum_block.0$2: bv32;
  var $c_block_iend_2.0$1: bv32;
  var $c_block_iend_2.0$2: bv32;
  var $c_sum_block_2.0$1: bv32;
  var $c_sum_block_2.0$2: bv32;
  var $offset.i17.0$1: bv32;
  var $offset.i17.0$2: bv32;
  var $d.i18.0$1: bv32;
  var $d.i18.0$2: bv32;
  var $offset.i17.1$1: bv32;
  var $offset.i17.1$2: bv32;
  var $d1.i21.0$1: bv32;
  var $d1.i21.0$2: bv32;
  var $left_2.0$1: bv32;
  var $left_2.0$2: bv32;
  var $right_2.0$1: bv32;
  var $right_2.0$2: bv32;
  var $9$1: bv32;
  var $9$2: bv32;
  var $ptr_blocking_w.i.0$1: bv32;
  var $ptr_blocking_w.i.0$2: bv32;
  var $ptr_w_2.i.0$1: bv32;
  var $ptr_w_2.i.0$2: bv32;
  var $ptr_blocking_w_2.i.1$1: bv32;
  var $ptr_blocking_w_2.i.1$2: bv32;
  var $10$1: bv32;
  var $10$2: bv32;
  var $ptr_blocking_w_2.i.0$1: bv32;
  var $ptr_blocking_w_2.i.0$2: bv32;
  var v0$1: bool;
  var v0$2: bool;
  var v1$1: bv32;
  var v1$2: bv32;
  var v2$1: bool;
  var v2$2: bool;
  var v3$1: bv32;
  var v3$2: bv32;
  var v4$1: bv32;
  var v4$2: bv32;
  var v5$1: bv16;
  var v5$2: bv16;
  var v6$1: bv32;
  var v6$2: bv32;
  var v7$1: bv16;
  var v7$2: bv16;
  var v8$1: bv32;
  var v8$2: bv32;
  var v9$1: bool;
  var v9$2: bool;
  var v10$1: bv32;
  var v10$2: bv32;
  var v11$1: bv32;
  var v11$2: bv32;
  var v12$1: bool;
  var v12$2: bool;
  var v13$1: bool;
  var v13$2: bool;
  var v14$1: bv32;
  var v14$2: bv32;
  var v15$1: bool;
  var v15$2: bool;
  var v16$1: bv32;
  var v16$2: bv32;
  var v17$1: bool;
  var v17$2: bool;
  var v18$1: bool;
  var v18$2: bool;
  var v19$1: bv32;
  var v19$2: bv32;
  var v20$1: bv32;
  var v20$2: bv32;
  var v21$1: bool;
  var v21$2: bool;
  var v22$1: bool;
  var v22$2: bool;
  var v23$1: bool;
  var v23$2: bool;
  var v24$1: bv32;
  var v24$2: bv32;
  var v25$1: bv32;
  var v25$2: bv32;
  var v26$1: bv32;
  var v26$2: bv32;
  var v27$1: bv32;
  var v27$2: bv32;
  var v28$1: bv32;
  var v28$2: bv32;
  var v29$1: bool;
  var v29$2: bool;
  var v30$1: bool;
  var v30$2: bool;
  var v31$1: bv32;
  var v31$2: bv32;
  var v32$1: bv16;
  var v32$2: bv16;
  var v33$1: bv16;
  var v33$2: bv16;
  var v34$1: bv16;
  var v34$2: bv16;
  var v35$1: bool;
  var v35$2: bool;
  var v36$1: bool;
  var v36$2: bool;
  var v37$1: bv32;
  var v37$2: bv32;
  var v38$1: bv32;
  var v38$2: bv32;
  var v39$1: bv32;
  var v39$2: bv32;
  var v40$1: bool;
  var v40$2: bool;
  var v41$1: bv32;
  var v41$2: bv32;
  var v42$1: bv32;
  var v42$2: bv32;
  var v43$1: bv32;
  var v43$2: bv32;
  var v44$1: bv64;
  var v44$2: bv64;
  var v45$1: bool;
  var v45$2: bool;
  var v46$1: bool;
  var v46$2: bool;
  var v47$1: bv32;
  var v47$2: bv32;
  var v48$1: bv32;
  var v48$2: bv32;
  var v49$1: bool;
  var v49$2: bool;
  var v50$1: bool;
  var v50$2: bool;
  var v51$1: bv32;
  var v51$2: bv32;
  var v52$1: bv32;
  var v52$2: bv32;
  var v53$1: bv32;
  var v53$2: bv32;
  var v54$1: bool;
  var v54$2: bool;
  var v55$1: bv32;
  var v55$2: bv32;
  var v56$1: bv32;
  var v56$2: bv32;
  var v57$1: bv32;
  var v57$2: bv32;
  var v58$1: bv64;
  var v58$2: bv64;
  var v59$1: bool;
  var v59$2: bool;
  var v60$1: bool;
  var v60$2: bool;
  var v61$1: bv32;
  var v61$2: bv32;
  var v62$1: bv32;
  var v62$2: bv32;
  var v63$1: bool;
  var v63$2: bool;
  var v64$1: bv32;
  var v64$2: bv32;
  var v65$1: bv32;
  var v65$2: bv32;
  var v66$1: bv32;
  var v66$2: bv32;
  var v67$1: bool;
  var v67$2: bool;
  var v68$1: bv32;
  var v68$2: bv32;
  var v69$1: bv32;
  var v69$2: bv32;
  var v70$1: bv32;
  var v70$2: bv32;
  var v71$1: bv64;
  var v71$2: bv64;
  var v72$1: bool;
  var v72$2: bool;
  var v73$1: bool;
  var v73$2: bool;
  var v74$1: bv32;
  var v74$2: bv32;
  var v75$1: bv32;
  var v75$2: bv32;
  var v76$1: bool;
  var v76$2: bool;
  var v77$1: bv32;
  var v77$2: bv32;
  var v78$1: bool;
  var v78$2: bool;
  var v79$1: bv32;
  var v79$2: bv32;
  var v80$1: bool;
  var v80$2: bool;
  var v81$1: bool;
  var v81$2: bool;
  var v82$1: bv32;
  var v82$2: bv32;
  var v83$1: bv16;
  var v83$2: bv16;
  var v84$1: bv16;
  var v84$2: bv16;
  var v85$1: bool;
  var v85$2: bool;
  var v86$1: bv32;
  var v86$2: bv32;
  var v87$1: bool;
  var v87$2: bool;
  var v88$1: bv32;
  var v88$2: bv32;
  var v89$1: bv32;
  var v89$2: bv32;
  var v90$1: bv16;
  var v90$2: bv16;
  var v91$1: bv16;
  var v91$2: bv16;
  var v92$1: bv32;
  var v92$2: bv32;
  var v93$1: bool;
  var v93$2: bool;
  var v94$1: bool;
  var v94$2: bool;
  var v95$1: bv16;
  var v95$2: bv16;
  var v96$1: bv32;
  var v96$2: bv32;
  var v97$1: bool;
  var v97$2: bool;
  var v98$1: bv32;
  var v98$2: bv32;
  var v99$1: bv16;
  var v99$2: bv16;
  var v100$1: bv32;
  var v100$2: bv32;
  var v101$1: bv32;
  var v101$2: bv32;
  var v102$1: bool;
  var v102$2: bool;
  var v103$1: bv64;
  var v103$2: bv64;
  var v104$1: bv32;
  var v104$2: bv32;
  var v105$1: bv64;
  var v105$2: bv64;
  var v106$1: bv32;
  var v106$2: bv32;
  var v107$1: bool;
  var v107$2: bool;
  var v108$1: bv32;
  var v108$2: bv32;
  var v109$1: bv16;
  var v109$2: bv16;
  var v110$1: bv16;
  var v110$2: bv16;
  var v111$1: bv32;
  var v111$2: bv32;
  var v112$1: bool;
  var v112$2: bool;
  var v258$1: bv32;
  var v258$2: bv32;
  var v257$1: bv32;
  var v257$2: bv32;
  var v113$1: bv16;
  var v113$2: bv16;
  var v114$1: bv16;
  var v114$2: bv16;
  var v115$1: bool;
  var v115$2: bool;
  var v116$1: bv32;
  var v116$2: bv32;
  var v117$1: bv32;
  var v117$2: bv32;
  var v118$1: bool;
  var v118$2: bool;
  var v119$1: bv32;
  var v119$2: bv32;
  var v120$1: bool;
  var v120$2: bool;
  var v121$1: bv32;
  var v121$2: bv32;
  var v122$1: bv32;
  var v122$2: bv32;
  var v123$1: bool;
  var v123$2: bool;
  var v124$1: bool;
  var v124$2: bool;
  var v125$1: bv32;
  var v125$2: bv32;
  var v126$1: bv32;
  var v126$2: bv32;
  var v127$1: bool;
  var v127$2: bool;
  var v128$1: bool;
  var v128$2: bool;
  var v129$1: bv32;
  var v129$2: bv32;
  var v130$1: bv32;
  var v130$2: bv32;
  var v131$1: bv16;
  var v131$2: bv16;
  var v132$1: bv16;
  var v132$2: bv16;
  var v133$1: bv16;
  var v133$2: bv16;
  var v134$1: bv16;
  var v134$2: bv16;
  var v135$1: bv16;
  var v135$2: bv16;
  var v136$1: bool;
  var v136$2: bool;
  var v137$1: bv16;
  var v137$2: bv16;
  var v138$1: bool;
  var v138$2: bool;
  var v139$1: bv16;
  var v139$2: bv16;
  var v140$1: bool;
  var v140$2: bool;
  var v141$1: bv16;
  var v141$2: bv16;
  var v142$1: bool;
  var v142$2: bool;
  var v143$1: bv16;
  var v143$2: bv16;
  var v144$1: bv16;
  var v144$2: bv16;
  var v145$1: bv32;
  var v145$2: bv32;
  var v146$1: bool;
  var v146$2: bool;
  var v147$1: bool;
  var v147$2: bool;
  var v148$1: bv32;
  var v148$2: bv32;
  var v149$1: bool;
  var v149$2: bool;
  var v150$1: bv32;
  var v150$2: bv32;
  var v151$1: bv32;
  var v151$2: bv32;
  var v152$1: bv16;
  var v152$2: bv16;
  var v153$1: bv16;
  var v153$2: bv16;
  var v154$1: bv16;
  var v154$2: bv16;
  var v155$1: bv16;
  var v155$2: bv16;
  var v156$1: bv32;
  var v156$2: bv32;
  var v157$1: bv32;
  var v157$2: bv32;
  var v158$1: bool;
  var v158$2: bool;
  var v159$1: bool;
  var v159$2: bool;
  var v160$1: bv32;
  var v160$2: bv32;
  var v161$1: bv16;
  var v161$2: bv16;
  var v162$1: bv16;
  var v162$2: bv16;
  var v163$1: bool;
  var v163$2: bool;
  var v164$1: bv32;
  var v164$2: bv32;
  var v165$1: bool;
  var v165$2: bool;
  var v166$1: bv32;
  var v166$2: bv32;
  var v167$1: bv32;
  var v167$2: bv32;
  var v168$1: bv16;
  var v168$2: bv16;
  var v169$1: bv16;
  var v169$2: bv16;
  var v170$1: bool;
  var v170$2: bool;
  var v171$1: bv16;
  var v171$2: bv16;
  var v172$1: bv16;
  var v172$2: bv16;
  var v173$1: bv16;
  var v173$2: bv16;
  var v174$1: bool;
  var v174$2: bool;
  var v175$1: bv16;
  var v175$2: bv16;
  var v176$1: bv16;
  var v176$2: bv16;
  var v177$1: bv16;
  var v177$2: bv16;
  var v178$1: bool;
  var v178$2: bool;
  var v179$1: bv16;
  var v179$2: bv16;
  var v180$1: bv16;
  var v180$2: bv16;
  var v181$1: bv32;
  var v181$2: bv32;
  var v182$1: bv16;
  var v182$2: bv16;
  var v183$1: bool;
  var v183$2: bool;
  var v184$1: bv16;
  var v184$2: bv16;
  var v185$1: bool;
  var v185$2: bool;
  var v186$1: bool;
  var v186$2: bool;
  var v187$1: bv32;
  var v187$2: bv32;
  var v188$1: bv16;
  var v188$2: bv16;
  var v189$1: bv16;
  var v189$2: bv16;
  var v190$1: bool;
  var v190$2: bool;
  var v191$1: bv32;
  var v191$2: bv32;
  var v192$1: bool;
  var v192$2: bool;
  var v193$1: bv32;
  var v193$2: bv32;
  var v194$1: bv32;
  var v194$2: bv32;
  var v195$1: bv16;
  var v195$2: bv16;
  var v196$1: bv16;
  var v196$2: bv16;
  var v197$1: bool;
  var v197$2: bool;
  var v198$1: bv32;
  var v198$2: bv32;
  var v199$1: bv16;
  var v199$2: bv16;
  var v200$1: bv32;
  var v200$2: bv32;
  var v201$1: bv16;
  var v201$2: bv16;
  var v202$1: bv32;
  var v202$2: bv32;
  var v203$1: bv16;
  var v203$2: bv16;
  var v204$1: bv32;
  var v204$2: bv32;
  var v205$1: bv32;
  var v205$2: bv32;
  var v206$1: bv32;
  var v206$2: bv32;
  var v207$1: bv32;
  var v207$2: bv32;
  var v208$1: bv32;
  var v208$2: bv32;
  var v209$1: bool;
  var v209$2: bool;
  var v260$1: bv32;
  var v260$2: bv32;
  var v259$1: bv32;
  var v259$2: bv32;
  var v210$1: bv32;
  var v210$2: bv32;
  var v211$1: bv32;
  var v211$2: bv32;
  var v212$1: bool;
  var v212$2: bool;
  var v213$1: bv16;
  var v213$2: bv16;
  var v214$1: bv16;
  var v214$2: bv16;
  var v215$1: bv32;
  var v215$2: bv32;
  var v216$1: bool;
  var v216$2: bool;
  var v217$1: bv16;
  var v217$2: bv16;
  var v218$1: bool;
  var v218$2: bool;
  var v219$1: bool;
  var v219$2: bool;
  var v220$1: bv16;
  var v220$2: bv16;
  var v221$1: bv16;
  var v221$2: bv16;
  var v222$1: bv32;
  var v222$2: bv32;
  var v223$1: bool;
  var v223$2: bool;
  var v224$1: bv16;
  var v224$2: bv16;
  var v225$1: bool;
  var v225$2: bool;
  var v226$1: bool;
  var v226$2: bool;
  var v227$1: bool;
  var v227$2: bool;
  var v228$1: bool;
  var v228$2: bool;
  var v229$1: bv32;
  var v229$2: bv32;
  var v230$1: bv32;
  var v230$2: bv32;
  var v231$1: bv32;
  var v231$2: bv32;
  var v232$1: bv32;
  var v232$2: bv32;
  var v233$1: bv32;
  var v233$2: bv32;
  var v234$1: bool;
  var v234$2: bool;
  var v235$1: bv32;
  var v235$2: bv32;
  var v236$1: bv32;
  var v236$2: bv32;
  var v237$1: bv16;
  var v237$2: bv16;
  var v238$1: bv32;
  var v238$2: bv32;
  var v239$1: bv32;
  var v239$2: bv32;
  var v240$1: bv16;
  var v240$2: bv16;
  var v241$1: bv16;
  var v241$2: bv16;
  var v242$1: bool;
  var v242$2: bool;
  var v243$1: bool;
  var v243$2: bool;
  var v244$1: bv32;
  var v244$2: bv32;
  var v245$1: bv32;
  var v245$2: bv32;
  var v246$1: bv16;
  var v246$2: bv16;
  var v247$1: bv32;
  var v247$2: bv32;
  var v248$1: bv32;
  var v248$2: bv32;
  var v249$1: bv16;
  var v249$2: bv16;
  var v250$1: bv16;
  var v250$2: bv16;
  var v251$1: bool;
  var v251$2: bool;
  var v252$1: bv16;
  var v252$2: bv16;
  var v253$1: bv16;
  var v253$2: bv16;
  var v254$1: bool;
  var v254$2: bool;
  var v255$1: bv16;
  var v255$2: bv16;
  var v256$1: bv16;
  var v256$2: bv16;
  var p0$1: bool;
  var p0$2: bool;
  var p1$1: bool;
  var p1$2: bool;
  var p2$1: bool;
  var p2$2: bool;
  var p3$1: bool;
  var p3$2: bool;
  var p4$1: bool;
  var p4$2: bool;
  var p5$1: bool;
  var p5$2: bool;
  var p6$1: bool;
  var p6$2: bool;
  var p7$1: bool;
  var p7$2: bool;
  var p8$1: bool;
  var p8$2: bool;
  var p9$1: bool;
  var p9$2: bool;
  var p10$1: bool;
  var p10$2: bool;
  var p11$1: bool;
  var p11$2: bool;
  var p12$1: bool;
  var p12$2: bool;
  var p13$1: bool;
  var p13$2: bool;
  var p14$1: bool;
  var p14$2: bool;
  var p15$1: bool;
  var p15$2: bool;
  var p16$1: bool;
  var p16$2: bool;
  var p17$1: bool;
  var p17$2: bool;
  var p18$1: bool;
  var p18$2: bool;
  var p19$1: bool;
  var p19$2: bool;
  var p20$1: bool;
  var p20$2: bool;
  var p21$1: bool;
  var p21$2: bool;
  var p22$1: bool;
  var p22$2: bool;
  var p23$1: bool;
  var p23$2: bool;
  var p24$1: bool;
  var p24$2: bool;
  var p25$1: bool;
  var p25$2: bool;
  var p26$1: bool;
  var p26$2: bool;
  var p27$1: bool;
  var p27$2: bool;
  var p28$1: bool;
  var p28$2: bool;
  var p29$1: bool;
  var p29$2: bool;
  var p30$1: bool;
  var p30$2: bool;
  var p31$1: bool;
  var p31$2: bool;
  var p32$1: bool;
  var p32$2: bool;
  var p33$1: bool;
  var p33$2: bool;
  var p34$1: bool;
  var p34$2: bool;
  var p35$1: bool;
  var p35$2: bool;
  var p36$1: bool;
  var p36$2: bool;
  var p37$1: bool;
  var p37$2: bool;
  var p38$1: bool;
  var p38$2: bool;
  var p39$1: bool;
  var p39$2: bool;
  var p40$1: bool;
  var p40$2: bool;
  var p41$1: bool;
  var p41$2: bool;
  var p42$1: bool;
  var p42$2: bool;
  var p43$1: bool;
  var p43$2: bool;
  var p44$1: bool;
  var p44$2: bool;
  var p45$1: bool;
  var p45$2: bool;
  var p46$1: bool;
  var p46$2: bool;
  var p47$1: bool;
  var p47$2: bool;
  var p48$1: bool;
  var p48$2: bool;
  var p49$1: bool;
  var p49$2: bool;
  var p50$1: bool;
  var p50$2: bool;
  var p51$1: bool;
  var p51$2: bool;
  var p52$1: bool;
  var p52$2: bool;
  var p53$1: bool;
  var p53$2: bool;
  var p54$1: bool;
  var p54$2: bool;
  var p55$1: bool;
  var p55$2: bool;
  var p56$1: bool;
  var p56$2: bool;
  var p57$1: bool;
  var p57$2: bool;
  var p58$1: bool;
  var p58$2: bool;
  var p59$1: bool;
  var p59$2: bool;
  var p60$1: bool;
  var p60$2: bool;
  var p61$1: bool;
  var p61$2: bool;
  var p62$1: bool;
  var p62$2: bool;
  var p63$1: bool;
  var p63$2: bool;
  var p64$1: bool;
  var p64$2: bool;
  var p65$1: bool;
  var p65$2: bool;
  var p66$1: bool;
  var p66$2: bool;
  var p67$1: bool;
  var p67$2: bool;
  var p68$1: bool;
  var p68$2: bool;
  var p69$1: bool;
  var p69$2: bool;
  var p70$1: bool;
  var p70$2: bool;
  var p71$1: bool;
  var p71$2: bool;
  var p72$1: bool;
  var p72$2: bool;
  var p73$1: bool;
  var p73$2: bool;
  var p74$1: bool;
  var p74$2: bool;
  var p75$1: bool;
  var p75$2: bool;
  var p76$1: bool;
  var p76$2: bool;
  var p77$1: bool;
  var p77$2: bool;
  var p78$1: bool;
  var p78$2: bool;
  var p79$1: bool;
  var p79$2: bool;
  var p80$1: bool;
  var p80$2: bool;
  var p81$1: bool;
  var p81$2: bool;
  var p82$1: bool;
  var p82$2: bool;
  var p83$1: bool;
  var p83$2: bool;
  var p84$1: bool;
  var p84$2: bool;
  var p85$1: bool;
  var p85$2: bool;
  var p86$1: bool;
  var p86$2: bool;
  var p87$1: bool;
  var p87$2: bool;
  var p88$1: bool;
  var p88$2: bool;
  var p89$1: bool;
  var p89$2: bool;
  var p90$1: bool;
  var p90$2: bool;
  var p91$1: bool;
  var p91$2: bool;
  var p92$1: bool;
  var p92$2: bool;
  var p93$1: bool;
  var p93$2: bool;
  var p94$1: bool;
  var p94$2: bool;
  var p95$1: bool;
  var p95$2: bool;
  var p96$1: bool;
  var p96$2: bool;
  var p97$1: bool;
  var p97$2: bool;
  var p98$1: bool;
  var p98$2: bool;
  var p99$1: bool;
  var p99$2: bool;
  var p100$1: bool;
  var p100$2: bool;
  var p101$1: bool;
  var p101$2: bool;
  var p102$1: bool;
  var p102$2: bool;
  var p103$1: bool;
  var p103$2: bool;
  var p104$1: bool;
  var p104$2: bool;
  var p105$1: bool;
  var p105$2: bool;
  var p106$1: bool;
  var p106$2: bool;
  var p107$1: bool;
  var p107$2: bool;
  var p108$1: bool;
  var p108$2: bool;
  var p109$1: bool;
  var p109$2: bool;
  var p110$1: bool;
  var p110$2: bool;
  var p111$1: bool;
  var p111$2: bool;
  var p112$1: bool;
  var p112$2: bool;
  var p113$1: bool;
  var p113$2: bool;
  var p114$1: bool;
  var p114$2: bool;
  var p115$1: bool;
  var p115$2: bool;
  var p116$1: bool;
  var p116$2: bool;
  var p117$1: bool;
  var p117$2: bool;
  var p118$1: bool;
  var p118$2: bool;
  var p119$1: bool;
  var p119$2: bool;
  var p120$1: bool;
  var p120$2: bool;
  var p121$1: bool;
  var p121$2: bool;
  var p122$1: bool;
  var p122$2: bool;
  var p123$1: bool;
  var p123$2: bool;
  var p124$1: bool;
  var p124$2: bool;
  var p125$1: bool;
  var p125$2: bool;
  var p126$1: bool;
  var p126$2: bool;
  var p127$1: bool;
  var p127$2: bool;
  var p128$1: bool;
  var p128$2: bool;
  var p129$1: bool;
  var p129$2: bool;
  var p130$1: bool;
  var p130$2: bool;
  var p131$1: bool;
  var p131$2: bool;
  var p132$1: bool;
  var p132$2: bool;
  var p133$1: bool;
  var p133$2: bool;
  var p134$1: bool;
  var p134$2: bool;
  var p135$1: bool;
  var p135$2: bool;
  var p136$1: bool;
  var p136$2: bool;
  var p137$1: bool;
  var p137$2: bool;
  var p138$1: bool;
  var p138$2: bool;
  var p139$1: bool;
  var p139$2: bool;
  var p140$1: bool;
  var p140$2: bool;
  var p141$1: bool;
  var p141$2: bool;
  var p142$1: bool;
  var p142$2: bool;
  var p143$1: bool;
  var p143$2: bool;
  var p144$1: bool;
  var p144$2: bool;
  var p145$1: bool;
  var p145$2: bool;
  var p146$1: bool;
  var p146$2: bool;
  var p147$1: bool;
  var p147$2: bool;
  var p148$1: bool;
  var p148$2: bool;
  var p149$1: bool;
  var p149$2: bool;
  var p150$1: bool;
  var p150$2: bool;
  var p151$1: bool;
  var p151$2: bool;
  var p152$1: bool;
  var p152$2: bool;
  var p153$1: bool;
  var p153$2: bool;
  var p154$1: bool;
  var p154$2: bool;
  var p155$1: bool;
  var p155$2: bool;
  var p156$1: bool;
  var p156$2: bool;
  var p157$1: bool;
  var p157$2: bool;
  var p158$1: bool;
  var p158$2: bool;
  var p159$1: bool;
  var p159$2: bool;
  var p160$1: bool;
  var p160$2: bool;
  var p161$1: bool;
  var p161$2: bool;
  var p162$1: bool;
  var p162$2: bool;
  var p163$1: bool;
  var p163$2: bool;
  var p164$1: bool;
  var p164$2: bool;
  var p165$1: bool;
  var p165$2: bool;
  var _HAVOC_bv32$1: bv32;
  var _HAVOC_bv32$2: bv32;
  var _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left$ghost$__partitioned_block_$14_0: bool;
  var _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left$ghost$__partitioned_block_$14_0: bool;
  var _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right$ghost$__partitioned_block_$14_0: bool;
  var _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right$ghost$__partitioned_block_$14_0: bool;
  var _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left$ghost$$19: bool;
  var _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right$ghost$$19: bool;
  var _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list$ghost$__partitioned_block_$68_0: bool;
  var _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list$ghost$__partitioned_block_$68_0: bool;
  var _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list$ghost$__partitioned_block_$73_0: bool;
  var _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list$ghost$__partitioned_block_$73_0: bool;


  __partitioned_block_$0_0:
    call {:sourceloc} {:sourceloc_num 1} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(true, local_id_x$1, 0bv16, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(true, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_0"} {:captureState "check_state_0"} {:sourceloc} {:sourceloc_num 1} true;
    call {:check_id "check_state_0"} {:sourceloc} {:sourceloc_num 1} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(true, local_id_x$2, 0bv16);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][local_id_x$1] := 0bv16;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] := 0bv16;
    call {:sourceloc} {:sourceloc_num 2} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(true, local_id_x$1, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(true, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_1"} {:captureState "check_state_1"} {:sourceloc} {:sourceloc_num 2} true;
    call {:check_id "check_state_1"} {:sourceloc} {:sourceloc_num 2} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(true, local_id_x$2, 0bv32);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][local_id_x$1] := 0bv32;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] := 0bv32;
    call {:sourceloc} {:sourceloc_num 3} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(true, local_id_x$1, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(true, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_2"} {:captureState "check_state_2"} {:sourceloc} {:sourceloc_num 3} true;
    call {:check_id "check_state_2"} {:sourceloc} {:sourceloc_num 3} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(true, local_id_x$2, 0bv32);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][local_id_x$1] := 0bv32;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] := 0bv32;
    call {:sourceloc} {:sourceloc_num 4} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(true, local_id_x$1, 0bv16, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(true, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_3"} {:captureState "check_state_3"} {:sourceloc} {:sourceloc_num 4} true;
    call {:check_id "check_state_3"} {:sourceloc} {:sourceloc_num 4} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(true, local_id_x$2, 0bv16);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][local_id_x$1] := 0bv16;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] := 0bv16;
    call {:sourceloc} {:sourceloc_num 5} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(true, local_id_x$1, 0bv16, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(true, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_4"} {:captureState "check_state_4"} {:sourceloc} {:sourceloc_num 5} true;
    call {:check_id "check_state_4"} {:sourceloc} {:sourceloc_num 5} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(true, local_id_x$2, 0bv16);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][local_id_x$1] := 0bv16;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] := 0bv16;
    goto __partitioned_block_$0_1;

  __partitioned_block_$0_1:
    call {:sourceloc_num 6} $bugle_barrier_duplicated_0(1bv1, 1bv1);
    v0$1 := 0bv32 == local_id_x$1;
    v0$2 := 0bv32 == local_id_x$2;
    p0$1 := false;
    p0$2 := false;
    p1$1 := false;
    p1$2 := false;
    p2$1 := false;
    p2$2 := false;
    p90$1 := false;
    p90$2 := false;
    p106$1 := false;
    p106$2 := false;
    p110$1 := false;
    p110$2 := false;
    p114$1 := false;
    p114$2 := false;
    p126$1 := false;
    p126$2 := false;
    p130$1 := false;
    p130$2 := false;
    p0$1 := (if v0$1 then v0$1 else p0$1);
    p0$2 := (if v0$2 then v0$2 else p0$2);
    call {:sourceloc} {:sourceloc_num 8} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p0$1, 0bv32, $lg, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][0bv32]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p0$2, 0bv32);
    assume {:do_not_predicate} {:check_id "check_state_223"} {:captureState "check_state_223"} {:sourceloc} {:sourceloc_num 8} true;
    call {:check_id "check_state_223"} {:sourceloc} {:sourceloc_num 8} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p0$2, 0bv32, $lg);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][0bv32] := (if p0$1 then $lg else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][0bv32]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] := (if p0$2 then $lg else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    call {:sourceloc} {:sourceloc_num 9} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p0$1, 0bv32, $ug, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][0bv32]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p0$2, 0bv32);
    assume {:do_not_predicate} {:check_id "check_state_224"} {:captureState "check_state_224"} {:sourceloc} {:sourceloc_num 9} true;
    call {:check_id "check_state_224"} {:sourceloc} {:sourceloc_num 9} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p0$2, 0bv32, $ug);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][0bv32] := (if p0$1 then $ug else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][0bv32]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] := (if p0$2 then $ug else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    call {:sourceloc} {:sourceloc_num 10} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p0$1, 0bv32, $lg_eig_count[16:0], $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][0bv32]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p0$2, 0bv32);
    assume {:do_not_predicate} {:check_id "check_state_225"} {:captureState "check_state_225"} {:sourceloc} {:sourceloc_num 10} true;
    call {:check_id "check_state_225"} {:sourceloc} {:sourceloc_num 10} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p0$2, 0bv32, $lg_eig_count[16:0]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][0bv32] := (if p0$1 then $lg_eig_count[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][0bv32]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] := (if p0$2 then $lg_eig_count[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    call {:sourceloc} {:sourceloc_num 11} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p0$1, 0bv32, $ug_eig_count[16:0], $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][0bv32]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p0$2, 0bv32);
    assume {:do_not_predicate} {:check_id "check_state_226"} {:captureState "check_state_226"} {:sourceloc} {:sourceloc_num 11} true;
    call {:check_id "check_state_226"} {:sourceloc} {:sourceloc_num 11} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p0$2, 0bv32, $ug_eig_count[16:0]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][0bv32] := (if p0$1 then $ug_eig_count[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][0bv32]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] := (if p0$2 then $ug_eig_count[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    call {:sourceloc} {:sourceloc_num 12} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk(p0$1, 0bv32, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk[1bv1][0bv32]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk(p0$2, 0bv32);
    assume {:do_not_predicate} {:check_id "check_state_227"} {:captureState "check_state_227"} {:sourceloc} {:sourceloc_num 12} true;
    call {:check_id "check_state_227"} {:sourceloc} {:sourceloc_num 12} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk(p0$2, 0bv32, 0bv32);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk[1bv1][0bv32] := (if p0$1 then 0bv32 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk[1bv1][0bv32]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] := (if p0$2 then 0bv32 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    call {:sourceloc} {:sourceloc_num 13} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active(p0$1, 0bv32, 1bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[1bv1][0bv32]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active(p0$2, 0bv32);
    assume {:do_not_predicate} {:check_id "check_state_228"} {:captureState "check_state_228"} {:sourceloc} {:sourceloc_num 13} true;
    call {:check_id "check_state_228"} {:sourceloc} {:sourceloc_num 13} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active(p0$2, 0bv32, 1bv32);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[1bv1][0bv32] := (if p0$1 then 1bv32 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[1bv1][0bv32]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] := (if p0$2 then 1bv32 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    call {:sourceloc} {:sourceloc_num 14} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction(p0$1, 0bv32, 1bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction[1bv1][0bv32]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction(p0$2, 0bv32);
    assume {:do_not_predicate} {:check_id "check_state_229"} {:captureState "check_state_229"} {:sourceloc} {:sourceloc_num 14} true;
    call {:check_id "check_state_229"} {:sourceloc} {:sourceloc_num 14} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction(p0$2, 0bv32, 1bv32);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction[1bv1][0bv32] := (if p0$1 then 1bv32 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction[1bv1][0bv32]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] := (if p0$2 then 1bv32 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    call {:sourceloc} {:sourceloc_num 15} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged(p0$1, 0bv32, 1bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged[1bv1][0bv32]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged(p0$2, 0bv32);
    assume {:do_not_predicate} {:check_id "check_state_230"} {:captureState "check_state_230"} {:sourceloc} {:sourceloc_num 15} true;
    call {:check_id "check_state_230"} {:sourceloc} {:sourceloc_num 15} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged(p0$2, 0bv32, 1bv32);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged[1bv1][0bv32] := (if p0$1 then 1bv32 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged[1bv1][0bv32]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] := (if p0$2 then 1bv32 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    goto __partitioned_block_$0_2;

  __partitioned_block_$0_2:
    call {:sourceloc_num 17} $bugle_barrier_duplicated_1(1bv1, 1bv1);
    $is_active_second.0$1, $mid.0$1, $right_count.0$1, $left_count.0$1, $right.0$1, $left.0$1 := 0bv32, 0bv32, 0bv32, 0bv32, 0bv32, 0bv32;
    $is_active_second.0$2, $mid.0$2, $right_count.0$2, $left_count.0$2, $right.0$2, $left.0$2 := 0bv32, 0bv32, 0bv32, 0bv32, 0bv32, 0bv32;
    p2$1 := true;
    p2$2 := true;
    assume {:captureState "loop_entry_state_6_0"} true;
    goto __partitioned_block_$3_0;

  __partitioned_block_$3_0:
    assume {:captureState "loop_head_state_6"} true;
    assert {:tag "accessedOffsetsSatisfyPredicates"} _b283 ==> _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> _WATCHED_OFFSET == 0bv32;
    assert {:tag "accessedOffsetsSatisfyPredicates"} _b282 ==> _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> _WATCHED_OFFSET == 0bv32;
    assert {:tag "nowrite"} _b281 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assert {:tag "noread"} _b280 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assert {:tag "accessedOffsetsSatisfyPredicates"} _b279 ==> _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> _WATCHED_OFFSET == 0bv32;
    assert {:tag "accessedOffsetsSatisfyPredicates"} _b278 ==> _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> _WATCHED_OFFSET == 0bv32;
    assert {:tag "nowrite"} _b277 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assert {:tag "noread"} _b276 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assert {:tag "accessedOffsetsSatisfyPredicates"} _b275 ==> _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> _WATCHED_OFFSET == 0bv32;
    assert {:tag "accessedOffsetsSatisfyPredicates"} _b274 ==> _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> _WATCHED_OFFSET == 0bv32;
    assert {:tag "nowrite"} _b273 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assert {:tag "noread"} _b272 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assert {:tag "accessedOffsetsSatisfyPredicates"} _b271 ==> _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> _WATCHED_OFFSET == 0bv32;
    assert {:tag "accessedOffsetsSatisfyPredicates"} _b270 ==> _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> _WATCHED_OFFSET == 0bv32;
    assert {:tag "nowrite"} _b269 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assert {:tag "noread"} _b268 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assert {:tag "accessedOffsetsSatisfyPredicates"} _b267 ==> _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> _WATCHED_OFFSET == local_id_x$1 || _WATCHED_OFFSET == local_id_x$1 || _WATCHED_OFFSET == local_id_x$1 || _WATCHED_OFFSET == local_id_x$1;
    assert {:tag "accessedOffsetsSatisfyPredicates"} _b266 ==> _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> _WATCHED_OFFSET == local_id_x$1;
    assert {:tag "nowrite"} _b265 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assert {:tag "noread"} _b264 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assert {:tag "accessedOffsetsSatisfyPredicates"} _b263 ==> _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> _WATCHED_OFFSET == local_id_x$1 || _WATCHED_OFFSET == local_id_x$1 || _WATCHED_OFFSET == local_id_x$1 || _WATCHED_OFFSET == local_id_x$1;
    assert {:tag "accessedOffsetsSatisfyPredicates"} _b262 ==> _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> _WATCHED_OFFSET == local_id_x$1;
    assert {:tag "nowrite"} _b261 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assert {:tag "noread"} _b260 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assert {:tag "accessedOffsetsSatisfyPredicates"} _b259 ==> _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> _WATCHED_OFFSET == local_id_x$1 || _WATCHED_OFFSET == local_id_x$1 || _WATCHED_OFFSET == local_id_x$1 || _WATCHED_OFFSET == local_id_x$1 || _WATCHED_OFFSET == local_id_x$1 || _WATCHED_OFFSET == local_id_x$1 || _WATCHED_OFFSET == local_id_x$1 || _WATCHED_OFFSET == local_id_x$1;
    assert {:tag "accessedOffsetsSatisfyPredicates"} _b258 ==> _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> _WATCHED_OFFSET == local_id_x$1;
    assert {:tag "nowrite"} _b257 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assert {:tag "noread"} _b256 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assert {:tag "accessedOffsetsSatisfyPredicates"} _b255 ==> _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> _WATCHED_OFFSET == local_id_x$1 || _WATCHED_OFFSET == local_id_x$1 || _WATCHED_OFFSET == local_id_x$1 || _WATCHED_OFFSET == local_id_x$1 || _WATCHED_OFFSET == local_id_x$1 || _WATCHED_OFFSET == local_id_x$1 || _WATCHED_OFFSET == local_id_x$1 || _WATCHED_OFFSET == local_id_x$1;
    assert {:tag "accessedOffsetsSatisfyPredicates"} _b254 ==> _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> _WATCHED_OFFSET == local_id_x$1;
    assert {:tag "nowrite"} _b253 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assert {:tag "noread"} _b252 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assert {:tag "accessedOffsetsSatisfyPredicates"} _b251 ==> _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> _WATCHED_OFFSET == BV32_ADD(1bv32, local_id_x$1) || _WATCHED_OFFSET == BV32_ADD(1bv32, local_id_x$1);
    assert {:tag "accessedOffsetsSatisfyPredicates"} _b250 ==> _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> _WATCHED_OFFSET == local_id_x$1;
    assert {:tag "nowrite"} _b249 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assert {:tag "noread"} _b248 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assert {:tag "predicatedEquality"} _b247 ==> p2$1 && p2$2 ==> v107$1 == v107$2;
    assert {:tag "predicatedEquality"} _b246 ==> p2$1 && p2$2 ==> v106$1 == v106$2;
    assert {:tag "predicatedEquality"} _b245 ==> p2$1 && p2$2 ==> v103$1 == v103$2;
    assert {:tag "predicatedEquality"} _b244 ==> p2$1 && p2$2 ==> v102$1 == v102$2;
    assert {:tag "predicatedEquality"} _b243 ==> p2$1 && p2$2 ==> v101$1 == v101$2;
    assert {:tag "predicatedEquality"} _b242 ==> p2$1 && p2$2 ==> v100$1 == v100$2;
    assert {:tag "predicatedEquality"} _b241 ==> p2$1 && p2$2 ==> v99$1 == v99$2;
    assert {:tag "predicatedEquality"} _b240 ==> p2$1 && p2$2 ==> v98$1 == v98$2;
    assert {:tag "predicatedEquality"} _b239 ==> p2$1 && p2$2 ==> v97$1 == v97$2;
    assert {:tag "predicatedEquality"} _b238 ==> p2$1 && p2$2 ==> v96$1 == v96$2;
    assert {:tag "predicatedEquality"} _b237 ==> p2$1 && p2$2 ==> v95$1 == v95$2;
    assert {:tag "predicatedEquality"} _b236 ==> p2$1 && p2$2 ==> v94$1 == v94$2;
    assert {:tag "predicatedEquality"} _b235 ==> p2$1 && p2$2 ==> v93$1 == v93$2;
    assert {:tag "predicatedEquality"} _b234 ==> p2$1 && p2$2 ==> v92$1 == v92$2;
    assert {:tag "predicatedEquality"} _b233 ==> p2$1 && p2$2 ==> v91$1 == v91$2;
    assert {:tag "predicatedEquality"} _b232 ==> p2$1 && p2$2 ==> v90$1 == v90$2;
    assert {:tag "predicatedEquality"} _b231 ==> p2$1 && p2$2 ==> v89$1 == v89$2;
    assert {:tag "predicatedEquality"} _b230 ==> p2$1 && p2$2 ==> v88$1 == v88$2;
    assert {:tag "predicatedEquality"} _b229 ==> p2$1 && p2$2 ==> v87$1 == v87$2;
    assert {:tag "predicatedEquality"} _b228 ==> p2$1 && p2$2 ==> v86$1 == v86$2;
    assert {:tag "predicatedEquality"} _b227 ==> p2$1 && p2$2 ==> v85$1 == v85$2;
    assert {:tag "predicatedEquality"} _b226 ==> p2$1 && p2$2 ==> v84$1 == v84$2;
    assert {:tag "predicatedEquality"} _b225 ==> p2$1 && p2$2 ==> v83$1 == v83$2;
    assert {:tag "predicatedEquality"} _b224 ==> p2$1 && p2$2 ==> v82$1 == v82$2;
    assert {:tag "predicatedEquality"} _b223 ==> p2$1 && p2$2 ==> v81$1 == v81$2;
    assert {:tag "predicatedEquality"} _b222 ==> p2$1 && p2$2 ==> v80$1 == v80$2;
    assert {:tag "predicatedEquality"} _b221 ==> p2$1 && p2$2 ==> v79$1 == v79$2;
    assert {:tag "predicatedEquality"} _b220 ==> p2$1 && p2$2 ==> v78$1 == v78$2;
    assert {:tag "predicatedEquality"} _b219 ==> p2$1 && p2$2 ==> v77$1 == v77$2;
    assert {:tag "predicatedEquality"} _b218 ==> p2$1 && p2$2 ==> v76$1 == v76$2;
    assert {:tag "predicatedEquality"} _b217 ==> p2$1 && p2$2 ==> v73$1 == v73$2;
    assert {:tag "predicatedEquality"} _b216 ==> p2$1 && p2$2 ==> v72$1 == v72$2;
    assert {:tag "predicatedEquality"} _b215 ==> p2$1 && p2$2 ==> v71$1 == v71$2;
    assert {:tag "predicatedEquality"} _b214 ==> p2$1 && p2$2 ==> v70$1 == v70$2;
    assert {:tag "predicatedEquality"} _b213 ==> p2$1 && p2$2 ==> v67$1 == v67$2;
    assert {:tag "predicatedEquality"} _b212 ==> p2$1 && p2$2 ==> v63$1 == v63$2;
    assert {:tag "predicatedEquality"} _b211 ==> p2$1 && p2$2 ==> v60$1 == v60$2;
    assert {:tag "predicatedEquality"} _b210 ==> p2$1 && p2$2 ==> v59$1 == v59$2;
    assert {:tag "predicatedEquality"} _b209 ==> p2$1 && p2$2 ==> v58$1 == v58$2;
    assert {:tag "predicatedEquality"} _b208 ==> p2$1 && p2$2 ==> v57$1 == v57$2;
    assert {:tag "predicatedEquality"} _b207 ==> p2$1 && p2$2 ==> v54$1 == v54$2;
    assert {:tag "predicatedEquality"} _b206 ==> p2$1 && p2$2 ==> v50$1 == v50$2;
    assert {:tag "predicatedEquality"} _b205 ==> p2$1 && p2$2 ==> v49$1 == v49$2;
    assert {:tag "predicatedEquality"} _b204 ==> p2$1 && p2$2 ==> v46$1 == v46$2;
    assert {:tag "predicatedEquality"} _b203 ==> p2$1 && p2$2 ==> v45$1 == v45$2;
    assert {:tag "predicatedEquality"} _b202 ==> p2$1 && p2$2 ==> v44$1 == v44$2;
    assert {:tag "predicatedEquality"} _b201 ==> p2$1 && p2$2 ==> v43$1 == v43$2;
    assert {:tag "predicatedEquality"} _b200 ==> p2$1 && p2$2 ==> v40$1 == v40$2;
    assert {:tag "predicatedEquality"} _b199 ==> p2$1 && p2$2 ==> v36$1 == v36$2;
    assert {:tag "predicatedEquality"} _b198 ==> p2$1 && p2$2 ==> v35$1 == v35$2;
    assert {:tag "predicatedEquality"} _b197 ==> p2$1 && p2$2 ==> v34$1 == v34$2;
    assert {:tag "predicatedEquality"} _b196 ==> p2$1 && p2$2 ==> v33$1 == v33$2;
    assert {:tag "predicatedEquality"} _b195 ==> p2$1 && p2$2 ==> v32$1 == v32$2;
    assert {:tag "predicatedEquality"} _b194 ==> p2$1 && p2$2 ==> v31$1 == v31$2;
    assert {:tag "predicatedEquality"} _b193 ==> p2$1 && p2$2 ==> v30$1 == v30$2;
    assert {:tag "predicatedEquality"} _b192 ==> p2$1 && p2$2 ==> v29$1 == v29$2;
    assert {:tag "predicatedEquality"} _b191 ==> p2$1 && p2$2 ==> v28$1 == v28$2;
    assert {:tag "predicatedEquality"} _b190 ==> p2$1 && p2$2 ==> v27$1 == v27$2;
    assert {:tag "predicatedEquality"} _b189 ==> p2$1 && p2$2 ==> v26$1 == v26$2;
    assert {:tag "predicatedEquality"} _b188 ==> p2$1 && p2$2 ==> v25$1 == v25$2;
    assert {:tag "predicatedEquality"} _b187 ==> p2$1 && p2$2 ==> v24$1 == v24$2;
    assert {:tag "predicatedEquality"} _b186 ==> p2$1 && p2$2 ==> v23$1 == v23$2;
    assert {:tag "predicatedEquality"} _b185 ==> p2$1 && p2$2 ==> v22$1 == v22$2;
    assert {:tag "predicatedEquality"} _b184 ==> p2$1 && p2$2 ==> v21$1 == v21$2;
    assert {:tag "predicatedEquality"} _b183 ==> p2$1 && p2$2 ==> v20$1 == v20$2;
    assert {:tag "predicatedEquality"} _b182 ==> p2$1 && p2$2 ==> v19$1 == v19$2;
    assert {:tag "predicatedEquality"} _b181 ==> p2$1 && p2$2 ==> v18$1 == v18$2;
    assert {:tag "predicatedEquality"} _b180 ==> p2$1 && p2$2 ==> v17$1 == v17$2;
    assert {:tag "predicatedEquality"} _b179 ==> p2$1 && p2$2 ==> v16$1 == v16$2;
    assert {:tag "predicatedEquality"} _b178 ==> p2$1 && p2$2 ==> v15$1 == v15$2;
    assert {:tag "predicatedEquality"} _b177 ==> p2$1 && p2$2 ==> v14$1 == v14$2;
    assert {:tag "predicatedEquality"} _b176 ==> p2$1 && p2$2 ==> v13$1 == v13$2;
    assert {:tag "predicatedEquality"} _b175 ==> p2$1 && p2$2 ==> v12$1 == v12$2;
    assert {:tag "predicatedEquality"} _b174 ==> p2$1 && p2$2 ==> v9$1 == v9$2;
    assert {:tag "predicatedEquality"} _b173 ==> p2$1 && p2$2 ==> v8$1 == v8$2;
    assert {:tag "predicatedEquality"} _b172 ==> p2$1 && p2$2 ==> v7$1 == v7$2;
    assert {:tag "predicatedEquality"} _b171 ==> p2$1 && p2$2 ==> v6$1 == v6$2;
    assert {:tag "predicatedEquality"} _b170 ==> p2$1 && p2$2 ==> v5$1 == v5$2;
    assert {:tag "predicatedEquality"} _b169 ==> p2$1 && p2$2 ==> v4$1 == v4$2;
    assert {:tag "predicatedEquality"} _b168 ==> p2$1 && p2$2 ==> v3$1 == v3$2;
    assert {:tag "predicatedEquality"} _b167 ==> p2$1 && p2$2 ==> v2$1 == v2$2;
    assert {:tag "predicatedEquality"} _b166 ==> p2$1 && p2$2 ==> v1$1 == v1$2;
    assert {:tag "predicatedEquality"} _b165 ==> p2$1 && p2$2 ==> $.0$1 == $.0$2;
    assert {:tag "predicatedEquality"} _b164 ==> p2$1 && p2$2 ==> $d1.i.0$1 == $d1.i.0$2;
    assert {:tag "predicatedEquality"} _b163 ==> p2$1 && p2$2 ==> $offset.i.1$1 == $offset.i.1$2;
    assert {:tag "predicatedEquality"} _b162 ==> p2$1 && p2$2 ==> $d.i.0$1 == $d.i.0$2;
    assert {:tag "predicatedEquality"} _b161 ==> p2$1 && p2$2 ==> $offset.i.0$1 == $offset.i.0$2;
    assert {:tag "predicatedEquality"} _b160 ==> p2$1 && p2$2 ==> $is_active_second.2$1 == $is_active_second.2$2;
    assert {:tag "predicatedEquality"} _b159 ==> p2$1 && p2$2 ==> $mid.i.i7.i.0$1 == $mid.i.i7.i.0$2;
    assert {:tag "predicatedEquality"} _b158 ==> p2$1 && p2$2 ==> $6$1 == $6$2;
    assert {:tag "predicatedEquality"} _b157 ==> p2$1 && p2$2 ==> $5$1 == $5$2;
    assert {:tag "predicatedEquality"} _b156 ==> p2$1 && p2$2 ==> $mid.i.i1.i.0$1 == $mid.i.i1.i.0$2;
    assert {:tag "predicatedEquality"} _b155 ==> p2$1 && p2$2 ==> $4$1 == $4$2;
    assert {:tag "predicatedEquality"} _b154 ==> p2$1 && p2$2 ==> $3$1 == $3$2;
    assert {:tag "predicatedEquality"} _b153 ==> p2$1 && p2$2 ==> $is_active_second.1$1 == $is_active_second.1$2;
    assert {:tag "predicatedEquality"} _b152 ==> p2$1 && p2$2 ==> $mid.i.i.i.0$1 == $mid.i.i.i.0$2;
    assert {:tag "predicatedEquality"} _b151 ==> p2$1 && p2$2 ==> $2$1 == $2$2;
    assert {:tag "predicatedEquality"} _b150 ==> p2$1 && p2$2 ==> $1$1 == $1$2;
    assert {:tag "predicatedEquality"} _b149 ==> p2$1 && p2$2 ==> $is_active_second.3$1 == $is_active_second.3$2;
    assert {:tag "predicatedEquality"} _b148 ==> p2$1 && p2$2 ==> $0$1 == $0$2;
    assert {:tag "predicatedEquality"} _b147 ==> p2$1 && p2$2 ==> $k.i.0$1 == $k.i.0$2;
    assert {:tag "predicatedEquality"} _b146 ==> p2$1 && p2$2 ==> $count.i.1$1 == $count.i.1$2;
    assert {:tag "predicatedEquality"} _b145 ==> p2$1 && p2$2 ==> $delta.i.1$1 == $delta.i.1$2;
    assert {:tag "predicatedEquality"} _b144 ==> p2$1 && p2$2 ==> $count.i.2$1 == $count.i.2$2;
    assert {:tag "predicatedEquality"} _b143 ==> p2$1 && p2$2 ==> $delta.i.2$1 == $delta.i.2$2;
    assert {:tag "predicatedEquality"} _b142 ==> p2$1 && p2$2 ==> $i.i.0$1 == $i.i.0$2;
    assert {:tag "predicatedEquality"} _b141 ==> p2$1 && p2$2 ==> $rem.i.0$1 == $rem.i.0$2;
    assert {:tag "predicatedEquality"} _b140 ==> p2$1 && p2$2 ==> $count.i.0$1 == $count.i.0$2;
    assert {:tag "predicatedEquality"} _b139 ==> p2$1 && p2$2 ==> $delta.i.0$1 == $delta.i.0$2;
    assert {:tag "predicatedEquality"} _b138 ==> p2$1 && p2$2 ==> $mid.1$1 == $mid.1$2;
    assert {:tag "predicatedEquality"} _b137 ==> p2$1 && p2$2 ==> $mid.i.i.0$1 == $mid.i.i.0$2;
    assert {:tag "predicatedEquality"} _b136 ==> p2$1 && p2$2 ==> $left.1$1 == $left.1$2;
    assert {:tag "predicatedEquality"} _b135 ==> p2$1 && p2$2 ==> $right.1$1 == $right.1$2;
    assert {:tag "predicatedEquality"} _b134 ==> p2$1 && p2$2 ==> $left_count.1$1 == $left_count.1$2;
    assert {:tag "predicatedEquality"} _b133 ==> p2$1 && p2$2 ==> $right_count.1$1 == $right_count.1$2;
    assert {:tag "predicatedEquality"} _b132 ==> p2$1 && p2$2 ==> $mid.2$1 == $mid.2$2;
    assert {:tag "predicatedEquality"} _b131 ==> p2$1 && p2$2 ==> $left.0$1 == $left.0$2;
    assert {:tag "predicatedEquality"} _b130 ==> p2$1 && p2$2 ==> $right.0$1 == $right.0$2;
    assert {:tag "predicatedEquality"} _b129 ==> p2$1 && p2$2 ==> $left_count.0$1 == $left_count.0$2;
    assert {:tag "predicatedEquality"} _b128 ==> p2$1 && p2$2 ==> $right_count.0$1 == $right_count.0$2;
    assert {:tag "predicatedEquality"} _b127 ==> p2$1 && p2$2 ==> $mid.0$1 == $mid.0$2;
    assert {:tag "predicatedEquality"} _b126 ==> p2$1 && p2$2 ==> $is_active_second.0$1 == $is_active_second.0$2;
    assert {:tag "loopPredicateEquality"} _b125 ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> p2$1 == p2$2;
    assert {:tag "loopPredicateEquality"} _b124 ==> p2$1 == p2$2;
    assert {:tag "pow2NotZero"} _b123 ==> v86$2 != 0bv32;
    assert {:tag "pow2"} _b122 ==> v86$2 == 0bv32 || BV32_AND(v86$2, BV32_SUB(v86$2, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b121 ==> v86$1 != 0bv32;
    assert {:tag "pow2"} _b120 ==> v86$1 == 0bv32 || BV32_AND(v86$1, BV32_SUB(v86$1, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b119 ==> v79$2 != 0bv32;
    assert {:tag "pow2"} _b118 ==> v79$2 == 0bv32 || BV32_AND(v79$2, BV32_SUB(v79$2, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b117 ==> v79$1 != 0bv32;
    assert {:tag "pow2"} _b116 ==> v79$1 == 0bv32 || BV32_AND(v79$1, BV32_SUB(v79$1, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b115 ==> $d1.i.0$2 != 0bv32;
    assert {:tag "pow2"} _b114 ==> $d1.i.0$2 == 0bv32 || BV32_AND($d1.i.0$2, BV32_SUB($d1.i.0$2, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b113 ==> $d1.i.0$1 != 0bv32;
    assert {:tag "pow2"} _b112 ==> $d1.i.0$1 == 0bv32 || BV32_AND($d1.i.0$1, BV32_SUB($d1.i.0$1, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b111 ==> $offset.i.1$2 != 0bv32;
    assert {:tag "pow2"} _b110 ==> $offset.i.1$2 == 0bv32 || BV32_AND($offset.i.1$2, BV32_SUB($offset.i.1$2, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b109 ==> $offset.i.1$1 != 0bv32;
    assert {:tag "pow2"} _b108 ==> $offset.i.1$1 == 0bv32 || BV32_AND($offset.i.1$1, BV32_SUB($offset.i.1$1, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b107 ==> $d.i.0$2 != 0bv32;
    assert {:tag "pow2"} _b106 ==> $d.i.0$2 == 0bv32 || BV32_AND($d.i.0$2, BV32_SUB($d.i.0$2, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b105 ==> $d.i.0$1 != 0bv32;
    assert {:tag "pow2"} _b104 ==> $d.i.0$1 == 0bv32 || BV32_AND($d.i.0$1, BV32_SUB($d.i.0$1, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b103 ==> $offset.i.0$2 != 0bv32;
    assert {:tag "pow2"} _b102 ==> $offset.i.0$2 == 0bv32 || BV32_AND($offset.i.0$2, BV32_SUB($offset.i.0$2, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b101 ==> $offset.i.0$1 != 0bv32;
    assert {:tag "pow2"} _b100 ==> $offset.i.0$1 == 0bv32 || BV32_AND($offset.i.0$1, BV32_SUB($offset.i.0$1, 1bv32)) == 0bv32;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:do_not_predicate} {:tag "conditionsImplyingEnabledness"} {:thread 1} _b0 ==> 1bv32 != v14$1 ==> p2$1;
    assert {:do_not_predicate} {:tag "conditionsImplyingEnabledness"} {:thread 2} _b0 ==> 1bv32 != v14$2 ==> p2$2;
    assert {:block_sourceloc} {:sourceloc_num 18} p2$1 ==> true;
    call {:sourceloc} {:sourceloc_num 19} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active(p2$1, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[1bv1][0bv32]);
    assume {:do_not_predicate} {:check_id "check_state_5"} {:captureState "check_state_5"} {:sourceloc} {:sourceloc_num 19} true;
    call {:check_id "check_state_5"} {:sourceloc} {:sourceloc_num 19} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active(p2$2, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active"} true;
    v1$1 := (if p2$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[1bv1][0bv32] else v1$1);
    v1$2 := (if p2$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] else v1$2);
    v2$1 := (if p2$1 then BV32_ULT(local_id_x$1, v1$1) else v2$1);
    v2$2 := (if p2$2 then BV32_ULT(local_id_x$2, v1$2) else v2$2);
    p3$1 := false;
    p3$2 := false;
    p4$1 := false;
    p4$2 := false;
    p5$1 := false;
    p5$2 := false;
    p6$1 := false;
    p6$2 := false;
    p7$1 := false;
    p7$2 := false;
    p8$1 := false;
    p8$2 := false;
    p9$1 := false;
    p9$2 := false;
    p10$1 := false;
    p10$2 := false;
    p11$1 := false;
    p11$2 := false;
    p12$1 := false;
    p12$2 := false;
    p59$1 := false;
    p59$2 := false;
    p63$1 := false;
    p63$2 := false;
    p77$1 := false;
    p77$2 := false;
    p78$1 := false;
    p78$2 := false;
    p79$1 := false;
    p79$2 := false;
    p80$1 := false;
    p80$2 := false;
    p81$1 := false;
    p81$2 := false;
    p82$1 := false;
    p82$2 := false;
    p83$1 := false;
    p83$2 := false;
    p84$1 := false;
    p84$2 := false;
    p85$1 := false;
    p85$2 := false;
    p86$1 := false;
    p86$2 := false;
    p87$1 := false;
    p87$2 := false;
    p88$1 := false;
    p88$2 := false;
    p89$1 := false;
    p89$2 := false;
    p4$1 := (if p2$1 && v2$1 then v2$1 else p4$1);
    p4$2 := (if p2$2 && v2$2 then v2$2 else p4$2);
    p3$1 := (if p2$1 && !v2$1 then !v2$1 else p3$1);
    p3$2 := (if p2$2 && !v2$2 then !v2$2 else p3$2);
    $mid.2$1, $right_count.1$1, $left_count.1$1, $right.1$1, $left.1$1 := (if p3$1 then $mid.0$1 else $mid.2$1), (if p3$1 then $right_count.0$1 else $right_count.1$1), (if p3$1 then $left_count.0$1 else $left_count.1$1), (if p3$1 then $right.0$1 else $right.1$1), (if p3$1 then $left.0$1 else $left.1$1);
    $mid.2$2, $right_count.1$2, $left_count.1$2, $right.1$2, $left.1$2 := (if p3$2 then $mid.0$2 else $mid.2$2), (if p3$2 then $right_count.0$2 else $right_count.1$2), (if p3$2 then $left_count.0$2 else $left_count.1$2), (if p3$2 then $right.0$2 else $right.1$2), (if p3$2 then $left.0$2 else $left.1$2);
    call {:sourceloc} {:sourceloc_num 21} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p4$1, local_id_x$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][local_id_x$1]);
    assume {:do_not_predicate} {:check_id "check_state_217"} {:captureState "check_state_217"} {:sourceloc} {:sourceloc_num 21} true;
    call {:check_id "check_state_217"} {:sourceloc} {:sourceloc_num 21} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p4$2, local_id_x$2, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left"} true;
    v3$1 := (if p4$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][local_id_x$1] else v3$1);
    v3$2 := (if p4$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] else v3$2);
    call {:sourceloc} {:sourceloc_num 22} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p4$1, local_id_x$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][local_id_x$1]);
    assume {:do_not_predicate} {:check_id "check_state_218"} {:captureState "check_state_218"} {:sourceloc} {:sourceloc_num 22} true;
    call {:check_id "check_state_218"} {:sourceloc} {:sourceloc_num 22} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p4$2, local_id_x$2, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right"} true;
    v4$1 := (if p4$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][local_id_x$1] else v4$1);
    v4$2 := (if p4$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] else v4$2);
    call {:sourceloc} {:sourceloc_num 23} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p4$1, local_id_x$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][local_id_x$1]);
    assume {:do_not_predicate} {:check_id "check_state_219"} {:captureState "check_state_219"} {:sourceloc} {:sourceloc_num 23} true;
    call {:check_id "check_state_219"} {:sourceloc} {:sourceloc_num 23} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p4$2, local_id_x$2, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count"} true;
    v5$1 := (if p4$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][local_id_x$1] else v5$1);
    v5$2 := (if p4$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] else v5$2);
    v6$1 := (if p4$1 then BV16_ZEXT32(v5$1) else v6$1);
    v6$2 := (if p4$2 then BV16_ZEXT32(v5$2) else v6$2);
    call {:sourceloc} {:sourceloc_num 24} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p4$1, local_id_x$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][local_id_x$1]);
    assume {:do_not_predicate} {:check_id "check_state_220"} {:captureState "check_state_220"} {:sourceloc} {:sourceloc_num 24} true;
    call {:check_id "check_state_220"} {:sourceloc} {:sourceloc_num 24} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p4$2, local_id_x$2, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count"} true;
    v7$1 := (if p4$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][local_id_x$1] else v7$1);
    v7$2 := (if p4$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] else v7$2);
    v8$1 := (if p4$1 then BV16_ZEXT32(v7$1) else v8$1);
    v8$2 := (if p4$2 then BV16_ZEXT32(v7$2) else v8$2);
    v9$1 := (if p4$1 then FLT32(v4$1, v3$1) || FLT32(v3$1, v4$1) || FUNO32(v3$1, v4$1) else v9$1);
    v9$2 := (if p4$2 then FLT32(v4$2, v3$2) || FLT32(v3$2, v4$2) || FUNO32(v3$2, v4$2) else v9$2);
    p5$1 := (if p4$1 && v9$1 then v9$1 else p5$1);
    p5$2 := (if p4$2 && v9$2 then v9$2 else p5$2);
    p8$1 := (if p4$1 && !v9$1 then !v9$1 else p8$1);
    p8$2 := (if p4$2 && !v9$2 then !v9$2 else p8$2);
    call {:sourceloc_num 26} v10$1, v10$2 := $_Z6sign_ff(p5$1, v3$1, p5$2, v3$2);
    assume {:captureState "call_return_state_0"} {:procedureName "$_Z6sign_ff"} true;
    call {:sourceloc_num 27} v11$1, v11$2 := $_Z6sign_ff(p5$1, v4$1, p5$2, v4$2);
    assume {:captureState "call_return_state_0"} {:procedureName "$_Z6sign_ff"} true;
    v12$1 := (if p5$1 then v10$1 == v11$1 else v12$1);
    v12$2 := (if p5$2 then v10$2 == v11$2 else v12$2);
    p7$1 := (if p5$1 && v12$1 then v12$1 else p7$1);
    p7$2 := (if p5$2 && v12$2 then v12$2 else p7$2);
    p6$1 := (if p5$1 && !v12$1 then !v12$1 else p6$1);
    p6$2 := (if p5$2 && !v12$2 then !v12$2 else p6$2);
    $mid.i.i.0$1 := (if p6$1 then FMUL32(FADD32(v3$1, v4$1), 1056964608bv32) else $mid.i.i.0$1);
    $mid.i.i.0$2 := (if p6$2 then FMUL32(FADD32(v3$2, v4$2), 1056964608bv32) else $mid.i.i.0$2);
    $mid.i.i.0$1 := (if p7$1 then FADD32(v3$1, FMUL32(FSUB32(v4$1, v3$1), 1056964608bv32)) else $mid.i.i.0$1);
    $mid.i.i.0$2 := (if p7$2 then FADD32(v3$2, FMUL32(FSUB32(v4$2, v3$2), 1056964608bv32)) else $mid.i.i.0$2);
    call {:sourceloc} {:sourceloc_num 31} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged(p5$1, 0bv32, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged[1bv1][0bv32]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged(p5$2, 0bv32);
    assume {:do_not_predicate} {:check_id "check_state_222"} {:captureState "check_state_222"} {:sourceloc} {:sourceloc_num 31} true;
    call {:check_id "check_state_222"} {:sourceloc} {:sourceloc_num 31} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged(p5$2, 0bv32, 0bv32);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged[1bv1][0bv32] := (if p5$1 then 0bv32 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged[1bv1][0bv32]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] := (if p5$2 then 0bv32 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    $mid.1$1 := (if p5$1 then $mid.i.i.0$1 else $mid.1$1);
    $mid.1$2 := (if p5$2 then $mid.i.i.0$2 else $mid.1$2);
    v13$1 := (if p8$1 then BV32_UGT(BV32_SUB(v8$1, v6$1), 1bv32) else v13$1);
    v13$2 := (if p8$2 then BV32_UGT(BV32_SUB(v8$2, v6$2), 1bv32) else v13$2);
    p10$1 := (if p8$1 && v13$1 then v13$1 else p10$1);
    p10$2 := (if p8$2 && v13$2 then v13$2 else p10$2);
    call {:sourceloc} {:sourceloc_num 34} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged(p10$1, 0bv32, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged[1bv1][0bv32]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged(p10$2, 0bv32);
    assume {:do_not_predicate} {:check_id "check_state_221"} {:captureState "check_state_221"} {:sourceloc} {:sourceloc_num 34} true;
    call {:check_id "check_state_221"} {:sourceloc} {:sourceloc_num 34} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged(p10$2, 0bv32, 0bv32);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged[1bv1][0bv32] := (if p10$1 then 0bv32 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged[1bv1][0bv32]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] := (if p10$2 then 0bv32 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    $mid.1$1 := (if p8$1 then $mid.0$1 else $mid.1$1);
    $mid.1$2 := (if p8$2 then $mid.0$2 else $mid.1$2);
    $mid.2$1, $right_count.1$1, $left_count.1$1, $right.1$1, $left.1$1 := (if p4$1 then $mid.1$1 else $mid.2$1), (if p4$1 then v8$1 else $right_count.1$1), (if p4$1 then v6$1 else $left_count.1$1), (if p4$1 then v4$1 else $right.1$1), (if p4$1 then v3$1 else $left.1$1);
    $mid.2$2, $right_count.1$2, $left_count.1$2, $right.1$2, $left.1$2 := (if p4$2 then $mid.1$2 else $mid.2$2), (if p4$2 then v8$2 else $right_count.1$2), (if p4$2 then v6$2 else $left_count.1$2), (if p4$2 then v4$2 else $right.1$2), (if p4$2 then v3$2 else $left.1$2);
    goto __partitioned_block_$3_1;

  __partitioned_block_$3_1:
    call {:sourceloc_num 38} $bugle_barrier_duplicated_2(1bv1, 1bv1, p2$1, p2$2);
    call {:sourceloc} {:sourceloc_num 39} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged(p2$1, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged[1bv1][0bv32]);
    assume {:do_not_predicate} {:check_id "check_state_6"} {:captureState "check_state_6"} {:sourceloc} {:sourceloc_num 39} true;
    call {:check_id "check_state_6"} {:sourceloc} {:sourceloc_num 39} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged(p2$2, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged"} true;
    v14$1 := (if p2$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged[1bv1][0bv32] else v14$1);
    v14$2 := (if p2$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] else v14$2);
    v15$1 := (if p2$1 then 1bv32 == v14$1 else v15$1);
    v15$2 := (if p2$2 then 1bv32 == v14$2 else v15$2);
    p2$1 := (if p2$1 && v15$1 then !v15$1 else p2$1);
    p2$2 := (if p2$2 && v15$2 then !v15$2 else p2$2);
    p11$1 := (if p2$1 && !v15$1 then !v15$1 else p11$1);
    p11$2 := (if p2$2 && !v15$2 then !v15$2 else p11$2);
    call {:sourceloc} {:sourceloc_num 42} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active(p11$1, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[1bv1][0bv32]);
    assume {:do_not_predicate} {:check_id "check_state_7"} {:captureState "check_state_7"} {:sourceloc} {:sourceloc_num 42} true;
    call {:check_id "check_state_7"} {:sourceloc} {:sourceloc_num 42} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active(p11$2, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active"} true;
    v16$1 := (if p11$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[1bv1][0bv32] else v16$1);
    v16$2 := (if p11$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] else v16$2);
    $delta.i.0$1, $count.i.0$1, $rem.i.0$1, $i.i.0$1 := (if p11$1 then 1065353216bv32 else $delta.i.0$1), (if p11$1 then 0bv32 else $count.i.0$1), (if p11$1 then $n else $rem.i.0$1), (if p11$1 then 0bv32 else $i.i.0$1);
    $delta.i.0$2, $count.i.0$2, $rem.i.0$2, $i.i.0$2 := (if p11$2 then 1065353216bv32 else $delta.i.0$2), (if p11$2 then 0bv32 else $count.i.0$2), (if p11$2 then $n else $rem.i.0$2), (if p11$2 then 0bv32 else $i.i.0$2);
    p12$1 := (if p11$1 then true else p12$1);
    p12$2 := (if p11$2 then true else p12$2);
    _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left$ghost$__partitioned_block_$14_0 := _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left$ghost$__partitioned_block_$14_0 := _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right$ghost$__partitioned_block_$14_0 := _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right$ghost$__partitioned_block_$14_0 := _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume {:captureState "loop_entry_state_9_0"} true;
    goto __partitioned_block_$14_0;

  __partitioned_block_$14_0:
    assume {:captureState "loop_head_state_9"} true;
    assert {:tag "disabledMaintainsInstrumentation"} _b316 ==> !p11$1 ==> _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right$ghost$__partitioned_block_$14_0 == _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assert {:tag "disabledMaintainsInstrumentation"} _b315 ==> !p11$1 ==> _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right$ghost$__partitioned_block_$14_0 == _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assert {:tag "accessedOffsetsSatisfyPredicates"} _b314 ==> _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> _WATCHED_OFFSET == local_id_x$1;
    assert {:tag "nowrite"} _b313 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assert {:tag "noread"} _b312 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assert {:tag "disabledMaintainsInstrumentation"} _b311 ==> !p11$1 ==> _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left$ghost$__partitioned_block_$14_0 == _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assert {:tag "disabledMaintainsInstrumentation"} _b310 ==> !p11$1 ==> _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left$ghost$__partitioned_block_$14_0 == _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assert {:tag "accessedOffsetsSatisfyPredicates"} _b309 ==> _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> _WATCHED_OFFSET == local_id_x$1;
    assert {:tag "nowrite"} _b308 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assert {:tag "noread"} _b307 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assert {:tag "predicatedEquality"} _b306 ==> p12$1 && p12$2 ==> v27$1 == v27$2;
    assert {:tag "predicatedEquality"} _b305 ==> p12$1 && p12$2 ==> v26$1 == v26$2;
    assert {:tag "predicatedEquality"} _b304 ==> p12$1 && p12$2 ==> v25$1 == v25$2;
    assert {:tag "predicatedEquality"} _b303 ==> p12$1 && p12$2 ==> v24$1 == v24$2;
    assert {:tag "predicatedEquality"} _b302 ==> p12$1 && p12$2 ==> v23$1 == v23$2;
    assert {:tag "predicatedEquality"} _b301 ==> p12$1 && p12$2 ==> v22$1 == v22$2;
    assert {:tag "predicatedEquality"} _b300 ==> p12$1 && p12$2 ==> v21$1 == v21$2;
    assert {:tag "predicatedEquality"} _b299 ==> p12$1 && p12$2 ==> v20$1 == v20$2;
    assert {:tag "predicatedEquality"} _b298 ==> p12$1 && p12$2 ==> v19$1 == v19$2;
    assert {:tag "predicatedEquality"} _b297 ==> p12$1 && p12$2 ==> v18$1 == v18$2;
    assert {:tag "predicatedEquality"} _b296 ==> p12$1 && p12$2 ==> v17$1 == v17$2;
    assert {:tag "predicatedEquality"} _b295 ==> p12$1 && p12$2 ==> $0$1 == $0$2;
    assert {:tag "predicatedEquality"} _b294 ==> p12$1 && p12$2 ==> $k.i.0$1 == $k.i.0$2;
    assert {:tag "predicatedEquality"} _b293 ==> p12$1 && p12$2 ==> $count.i.1$1 == $count.i.1$2;
    assert {:tag "predicatedEquality"} _b292 ==> p12$1 && p12$2 ==> $delta.i.1$1 == $delta.i.1$2;
    assert {:tag "predicatedEquality"} _b291 ==> p12$1 && p12$2 ==> $count.i.2$1 == $count.i.2$2;
    assert {:tag "predicatedEquality"} _b290 ==> p12$1 && p12$2 ==> $delta.i.2$1 == $delta.i.2$2;
    assert {:tag "predicatedEquality"} _b289 ==> p12$1 && p12$2 ==> $i.i.0$1 == $i.i.0$2;
    assert {:tag "predicatedEquality"} _b288 ==> p12$1 && p12$2 ==> $rem.i.0$1 == $rem.i.0$2;
    assert {:tag "predicatedEquality"} _b287 ==> p12$1 && p12$2 ==> $count.i.0$1 == $count.i.0$2;
    assert {:tag "predicatedEquality"} _b286 ==> p12$1 && p12$2 ==> $delta.i.0$1 == $delta.i.0$2;
    assert {:tag "loopPredicateEquality"} _b285 ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> p12$1 == p12$2;
    assert {:tag "loopPredicateEquality"} _b284 ==> p12$1 == p12$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assume {:predicate "p12"} {:dominator_predicate "p11"} true;
    assert p12$1 ==> p2$1;
    assert p12$2 ==> p2$2;
    assert {:do_not_predicate} {:tag "accessOnlyIfEnabledInEnclosingScopes"} {:thread 1} _b17 ==> _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> 1bv32 != v14$1;
    assert {:do_not_predicate} {:tag "accessOnlyIfEnabledInEnclosingScopes"} {:thread 1} _b16 ==> _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> 1bv32 != v14$1;
    assert {:do_not_predicate} {:tag "accessOnlyIfEnabledInEnclosingScopes"} {:thread 1} _b15 ==> _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> 1bv32 != v14$1;
    assert {:do_not_predicate} {:tag "accessOnlyIfEnabledInEnclosingScopes"} {:thread 1} _b14 ==> _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> 1bv32 != v14$1;
    assert {:do_not_predicate} {:tag "conditionsImplyingEnabledness"} {:thread 1} _b13 ==> 1bv32 != v14$1 && BV32_ULT($i.i.0$1, $n) ==> p12$1;
    assert {:do_not_predicate} {:tag "conditionsImplyingEnabledness"} {:thread 2} _b13 ==> 1bv32 != v14$2 && BV32_ULT($i.i.0$2, $n) ==> p12$2;
    assert {:tag "conditionsImpliedByEnabledness"} {:thread 1} p12$1 ==> _b12 ==> p12$1 ==> 1bv32 != v14$1;
    assert {:tag "conditionsImpliedByEnabledness"} {:thread 2} p12$2 ==> _b12 ==> p12$2 ==> 1bv32 != v14$2;
    assert {:tag "loopBound"} {:thread 1} p12$1 ==> _b11 ==> BV32_UGE($rem.i.0$1, $n);
    assert {:tag "loopBound"} {:thread 2} p12$2 ==> _b11 ==> BV32_UGE($rem.i.0$2, $n);
    assert {:tag "loopBound"} {:thread 1} p12$1 ==> _b10 ==> BV32_ULE($rem.i.0$1, $n);
    assert {:tag "loopBound"} {:thread 2} p12$2 ==> _b10 ==> BV32_ULE($rem.i.0$2, $n);
    assert {:tag "loopBound"} {:thread 1} p12$1 ==> _b9 ==> BV32_SGE($rem.i.0$1, $n);
    assert {:tag "loopBound"} {:thread 2} p12$2 ==> _b9 ==> BV32_SGE($rem.i.0$2, $n);
    assert {:tag "loopBound"} {:thread 1} p12$1 ==> _b8 ==> BV32_SLE($rem.i.0$1, $n);
    assert {:tag "loopBound"} {:thread 2} p12$2 ==> _b8 ==> BV32_SLE($rem.i.0$2, $n);
    assert {:tag "loopBound"} {:thread 1} p12$1 ==> _b7 ==> BV32_UGE($i.i.0$1, 0bv32);
    assert {:tag "loopBound"} {:thread 2} p12$2 ==> _b7 ==> BV32_UGE($i.i.0$2, 0bv32);
    assert {:tag "loopBound"} {:thread 1} p12$1 ==> _b6 ==> BV32_ULE($i.i.0$1, 0bv32);
    assert {:tag "loopBound"} {:thread 2} p12$2 ==> _b6 ==> BV32_ULE($i.i.0$2, 0bv32);
    assert {:tag "loopBound"} {:thread 1} p12$1 ==> _b5 ==> BV32_SGE($i.i.0$1, 0bv32);
    assert {:tag "loopBound"} {:thread 2} p12$2 ==> _b5 ==> BV32_SGE($i.i.0$2, 0bv32);
    assert {:tag "loopBound"} {:thread 1} p12$1 ==> _b4 ==> BV32_SLE($i.i.0$1, 0bv32);
    assert {:tag "loopBound"} {:thread 2} p12$2 ==> _b4 ==> BV32_SLE($i.i.0$2, 0bv32);
    assert {:tag "guardMinusInitialIsUniform"} {:thread 1} p12$1 ==> _b3 ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> BV32_SUB($i.i.0$1, 0bv32) == BV32_SUB($i.i.0$2, 0bv32);
    assert {:tag "guardMinusInitialIsUniform"} {:thread 2} p12$2 ==> _b3 ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> BV32_SUB($i.i.0$2, 0bv32) == BV32_SUB($i.i.0$1, 0bv32);
    assert {:tag "guardMinusInitialIsUniform"} {:thread 1} p12$1 ==> _b2 ==> BV32_SUB($i.i.0$1, 0bv32) == BV32_SUB($i.i.0$2, 0bv32);
    assert {:tag "guardMinusInitialIsUniform"} {:thread 2} p12$2 ==> _b2 ==> BV32_SUB($i.i.0$2, 0bv32) == BV32_SUB($i.i.0$1, 0bv32);
    assert {:tag "loopCounterIsStrided"} {:thread 1} p12$1 ==> _b1 ==> BV32_AND(BV32_SUB(group_size_x, 1bv32), $i.i.0$1) == BV32_AND(BV32_SUB(group_size_x, 1bv32), 0bv32);
    assert {:tag "loopCounterIsStrided"} {:thread 2} p12$2 ==> _b1 ==> BV32_AND(BV32_SUB(group_size_x, 1bv32), $i.i.0$2) == BV32_AND(BV32_SUB(group_size_x, 1bv32), 0bv32);
    assert {:block_sourceloc} {:sourceloc_num 43} p12$1 ==> true;
    v17$1 := (if p12$1 then BV32_ULT($i.i.0$1, $n) else v17$1);
    v17$2 := (if p12$2 then BV32_ULT($i.i.0$2, $n) else v17$2);
    p13$1 := false;
    p13$2 := false;
    p14$1 := false;
    p14$2 := false;
    p15$1 := false;
    p15$2 := false;
    p16$1 := false;
    p16$2 := false;
    p17$1 := false;
    p17$2 := false;
    p18$1 := false;
    p18$2 := false;
    p22$1 := false;
    p22$2 := false;
    p23$1 := false;
    p23$2 := false;
    p24$1 := false;
    p24$2 := false;
    p25$1 := false;
    p25$2 := false;
    p26$1 := false;
    p26$2 := false;
    p27$1 := false;
    p27$2 := false;
    p28$1 := false;
    p28$2 := false;
    p29$1 := false;
    p29$2 := false;
    p30$1 := false;
    p30$2 := false;
    p31$1 := false;
    p31$2 := false;
    p32$1 := false;
    p32$2 := false;
    p33$1 := false;
    p33$2 := false;
    p34$1 := false;
    p34$2 := false;
    p35$1 := false;
    p35$2 := false;
    p36$1 := false;
    p36$2 := false;
    p37$1 := false;
    p37$2 := false;
    p38$1 := false;
    p38$2 := false;
    p39$1 := false;
    p39$2 := false;
    p40$1 := false;
    p40$2 := false;
    p41$1 := false;
    p41$2 := false;
    p42$1 := false;
    p42$2 := false;
    p43$1 := false;
    p43$2 := false;
    p44$1 := false;
    p44$2 := false;
    p45$1 := false;
    p45$2 := false;
    p46$1 := false;
    p46$2 := false;
    p47$1 := false;
    p47$2 := false;
    p48$1 := false;
    p48$2 := false;
    p49$1 := false;
    p49$2 := false;
    p50$1 := false;
    p50$2 := false;
    p51$1 := false;
    p51$2 := false;
    p52$1 := false;
    p52$2 := false;
    p53$1 := false;
    p53$2 := false;
    p54$1 := false;
    p54$2 := false;
    p55$1 := false;
    p55$2 := false;
    p56$1 := false;
    p56$2 := false;
    p57$1 := false;
    p57$2 := false;
    p58$1 := false;
    p58$2 := false;
    p71$1 := false;
    p71$2 := false;
    p72$1 := false;
    p72$2 := false;
    p73$1 := false;
    p73$2 := false;
    p74$1 := false;
    p74$2 := false;
    p75$1 := false;
    p75$2 := false;
    p76$1 := false;
    p76$2 := false;
    p13$1 := (if p12$1 && v17$1 then v17$1 else p13$1);
    p13$2 := (if p12$2 && v17$2 then v17$2 else p13$2);
    p12$1 := (if p12$1 && !v17$1 then v17$1 else p12$1);
    p12$2 := (if p12$2 && !v17$2 then v17$2 else p12$2);
    goto __partitioned_block_$14_1;

  __partitioned_block_$14_1:
    call {:sourceloc_num 45} $bugle_barrier_duplicated_27(1bv1, 1bv1, p13$1, p13$2);
    v18$1 := (if p13$1 then BV32_ULT(BV32_ADD($i.i.0$1, local_id_x$1), $n) else v18$1);
    v18$2 := (if p13$2 then BV32_ULT(BV32_ADD($i.i.0$2, local_id_x$2), $n) else v18$2);
    p15$1 := (if p13$1 && v18$1 then v18$1 else p15$1);
    p15$2 := (if p13$2 && v18$2 then v18$2 else p15$2);
    havoc _HAVOC_bv32$1, _HAVOC_bv32$2;
    v19$1 := (if p15$1 then _HAVOC_bv32$1 else v19$1);
    v19$2 := (if p15$2 then _HAVOC_bv32$2 else v19$2);
    call {:sourceloc} {:sourceloc_num 48} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p15$1, local_id_x$1, v19$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p15$2, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_215"} {:captureState "check_state_215"} {:sourceloc} {:sourceloc_num 48} true;
    call {:check_id "check_state_215"} {:sourceloc} {:sourceloc_num 48} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p15$2, local_id_x$2, v19$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][local_id_x$1] := (if p15$1 then v19$1 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][local_id_x$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] := (if p15$2 then v19$2 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2]);
    havoc _HAVOC_bv32$1, _HAVOC_bv32$2;
    v20$1 := (if p15$1 then _HAVOC_bv32$1 else v20$1);
    v20$2 := (if p15$2 then _HAVOC_bv32$2 else v20$2);
    call {:sourceloc} {:sourceloc_num 50} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p15$1, local_id_x$1, v20$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p15$2, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_216"} {:captureState "check_state_216"} {:sourceloc} {:sourceloc_num 50} true;
    call {:check_id "check_state_216"} {:sourceloc} {:sourceloc_num 50} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p15$2, local_id_x$2, v20$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][local_id_x$1] := (if p15$1 then v20$1 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][local_id_x$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] := (if p15$2 then v20$2 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2]);
    goto __partitioned_block_$14_2;

  __partitioned_block_$14_2:
    call {:sourceloc_num 52} $bugle_barrier_duplicated_28(1bv1, 1bv1, p13$1, p13$2);
    v21$1 := (if p13$1 then BV32_ULT(local_id_x$1, v16$1) else v21$1);
    v21$2 := (if p13$2 then BV32_ULT(local_id_x$2, v16$2) else v21$2);
    p17$1 := (if p13$1 && v21$1 then v21$1 else p17$1);
    p17$2 := (if p13$2 && v21$2 then v21$2 else p17$2);
    p16$1 := (if p13$1 && !v21$1 then !v21$1 else p16$1);
    p16$2 := (if p13$2 && !v21$2 then !v21$2 else p16$2);
    $delta.i.2$1, $count.i.2$1 := (if p16$1 then $delta.i.0$1 else $delta.i.2$1), (if p16$1 then $count.i.0$1 else $count.i.2$1);
    $delta.i.2$2, $count.i.2$2 := (if p16$2 then $delta.i.0$2 else $delta.i.2$2), (if p16$2 then $count.i.0$2 else $count.i.2$2);
    $delta.i.1$1, $count.i.1$1, $k.i.0$1 := (if p17$1 then $delta.i.0$1 else $delta.i.1$1), (if p17$1 then $count.i.0$1 else $count.i.1$1), (if p17$1 then 0bv32 else $k.i.0$1);
    $delta.i.1$2, $count.i.1$2, $k.i.0$2 := (if p17$2 then $delta.i.0$2 else $delta.i.1$2), (if p17$2 then $count.i.0$2 else $count.i.1$2), (if p17$2 then 0bv32 else $k.i.0$2);
    p18$1 := (if p17$1 then true else p18$1);
    p18$2 := (if p17$2 then true else p18$2);
    _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left$ghost$$19 := _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right$ghost$$19 := _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume {:captureState "loop_entry_state_10_0"} true;
    goto $19;

  $19:
    assume {:captureState "loop_head_state_10"} true;
    assert {:tag "disabledMaintainsInstrumentation"} _b318 ==> !p17$1 ==> _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right$ghost$$19 == _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assert {:tag "disabledMaintainsInstrumentation"} _b317 ==> !p17$1 ==> _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left$ghost$$19 == _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assume {:predicate "p18"} {:dominator_predicate "p17"} true;
    assert p18$1 ==> p12$1;
    assert p18$2 ==> p12$2;
    assert p12$1 ==> p2$1;
    assert p12$2 ==> p2$2;
    assert {:do_not_predicate} {:tag "accessOnlyIfEnabledInEnclosingScopes"} {:thread 1} _b99 ==> _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> BV32_ULT(local_id_x$1, v16$1);
    assert {:do_not_predicate} {:tag "accessOnlyIfEnabledInEnclosingScopes"} {:thread 1} _b98 ==> _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> BV32_ULT($i.i.0$1, $n);
    assert {:do_not_predicate} {:tag "accessOnlyIfEnabledInEnclosingScopes"} {:thread 1} _b97 ==> _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> 1bv32 != v14$1;
    assert {:do_not_predicate} {:tag "accessOnlyIfEnabledInEnclosingScopes"} {:thread 1} _b96 ==> _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> BV32_ULT(local_id_x$1, v16$1);
    assert {:do_not_predicate} {:tag "accessOnlyIfEnabledInEnclosingScopes"} {:thread 1} _b95 ==> _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> BV32_ULT($i.i.0$1, $n);
    assert {:do_not_predicate} {:tag "accessOnlyIfEnabledInEnclosingScopes"} {:thread 1} _b94 ==> _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> 1bv32 != v14$1;
    assert {:do_not_predicate} {:tag "conditionsImplyingEnabledness"} {:thread 1} _b93 ==> 1bv32 != v14$1 && BV32_ULT($i.i.0$1, $n) && BV32_ULT(local_id_x$1, v16$1) && BV32_ULT($k.i.0$1, $0$1) ==> p18$1;
    assert {:do_not_predicate} {:tag "conditionsImplyingEnabledness"} {:thread 2} _b93 ==> 1bv32 != v14$2 && BV32_ULT($i.i.0$2, $n) && BV32_ULT(local_id_x$2, v16$2) && BV32_ULT($k.i.0$2, $0$2) ==> p18$2;
    assert {:tag "conditionsImpliedByEnabledness"} {:thread 1} p18$1 ==> _b92 ==> p18$1 ==> 1bv32 != v14$1 && BV32_ULT($i.i.0$1, $n) && BV32_ULT(local_id_x$1, v16$1);
    assert {:tag "conditionsImpliedByEnabledness"} {:thread 2} p18$2 ==> _b92 ==> p18$2 ==> 1bv32 != v14$2 && BV32_ULT($i.i.0$2, $n) && BV32_ULT(local_id_x$2, v16$2);
    assert {:tag "loopBound"} {:thread 1} p18$1 ==> _b91 ==> BV32_UGE($k.i.0$1, 0bv32);
    assert {:tag "loopBound"} {:thread 2} p18$2 ==> _b91 ==> BV32_UGE($k.i.0$2, 0bv32);
    assert {:tag "loopBound"} {:thread 1} p18$1 ==> _b90 ==> BV32_ULE($k.i.0$1, 0bv32);
    assert {:tag "loopBound"} {:thread 2} p18$2 ==> _b90 ==> BV32_ULE($k.i.0$2, 0bv32);
    assert {:tag "loopBound"} {:thread 1} p18$1 ==> _b89 ==> BV32_SGE($k.i.0$1, 0bv32);
    assert {:tag "loopBound"} {:thread 2} p18$2 ==> _b89 ==> BV32_SGE($k.i.0$2, 0bv32);
    assert {:tag "loopBound"} {:thread 1} p18$1 ==> _b88 ==> BV32_SLE($k.i.0$1, 0bv32);
    assert {:tag "loopBound"} {:thread 2} p18$2 ==> _b88 ==> BV32_SLE($k.i.0$2, 0bv32);
    assert {:block_sourceloc} {:sourceloc_num 54} p18$1 ==> true;
    v22$1 := (if p18$1 then BV32_ULT($rem.i.0$1, group_size_x) else v22$1);
    v22$2 := (if p18$2 then BV32_ULT($rem.i.0$2, group_size_x) else v22$2);
    p19$1 := false;
    p19$2 := false;
    p20$1 := false;
    p20$2 := false;
    p21$1 := false;
    p21$2 := false;
    p20$1 := (if p18$1 && v22$1 then v22$1 else p20$1);
    p20$2 := (if p18$2 && v22$2 then v22$2 else p20$2);
    p19$1 := (if p18$1 && !v22$1 then !v22$1 else p19$1);
    p19$2 := (if p18$2 && !v22$2 then !v22$2 else p19$2);
    $0$1 := (if p19$1 then group_size_x else $0$1);
    $0$2 := (if p19$2 then group_size_x else $0$2);
    $0$1 := (if p20$1 then $rem.i.0$1 else $0$1);
    $0$2 := (if p20$2 then $rem.i.0$2 else $0$2);
    v23$1 := (if p18$1 then BV32_ULT($k.i.0$1, $0$1) else v23$1);
    v23$2 := (if p18$2 then BV32_ULT($k.i.0$2, $0$2) else v23$2);
    p21$1 := (if p18$1 && v23$1 then v23$1 else p21$1);
    p21$2 := (if p18$2 && v23$2 then v23$2 else p21$2);
    p18$1 := (if p18$1 && !v23$1 then v23$1 else p18$1);
    p18$2 := (if p18$2 && !v23$2 then v23$2 else p18$2);
    call {:sourceloc} {:sourceloc_num 59} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p21$1, $k.i.0$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][$k.i.0$1]);
    assume {:do_not_predicate} {:check_id "check_state_212"} {:captureState "check_state_212"} {:sourceloc} {:sourceloc_num 59} true;
    call {:check_id "check_state_212"} {:sourceloc} {:sourceloc_num 59} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p21$2, $k.i.0$2, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][$k.i.0$2]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left"} true;
    v24$1 := (if p21$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][$k.i.0$1] else v24$1);
    v24$2 := (if p21$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][$k.i.0$2] else v24$2);
    call {:sourceloc} {:sourceloc_num 60} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p21$1, $k.i.0$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][$k.i.0$1]);
    assume {:do_not_predicate} {:check_id "check_state_213"} {:captureState "check_state_213"} {:sourceloc} {:sourceloc_num 60} true;
    call {:check_id "check_state_213"} {:sourceloc} {:sourceloc_num 60} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p21$2, $k.i.0$2, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][$k.i.0$2]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right"} true;
    v25$1 := (if p21$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][$k.i.0$1] else v25$1);
    v25$2 := (if p21$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][$k.i.0$2] else v25$2);
    call {:sourceloc} {:sourceloc_num 61} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p21$1, $k.i.0$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][$k.i.0$1]);
    assume {:do_not_predicate} {:check_id "check_state_214"} {:captureState "check_state_214"} {:sourceloc} {:sourceloc_num 61} true;
    call {:check_id "check_state_214"} {:sourceloc} {:sourceloc_num 61} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p21$2, $k.i.0$2, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][$k.i.0$2]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right"} true;
    v26$1 := (if p21$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][$k.i.0$1] else v26$1);
    v26$2 := (if p21$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][$k.i.0$2] else v26$2);
    v27$1 := (if p21$1 then FSUB32(FSUB32(v24$1, $mid.2$1), FDIV32(FMUL32(v25$1, v26$1), $delta.i.1$1)) else v27$1);
    v27$2 := (if p21$2 then FSUB32(FSUB32(v24$2, $mid.2$2), FDIV32(FMUL32(v25$2, v26$2), $delta.i.1$2)) else v27$2);
    $delta.i.1$1, $count.i.1$1, $k.i.0$1 := (if p21$1 then v27$1 else $delta.i.1$1), (if p21$1 then BV32_ADD($count.i.1$1, (if FLT32(v27$1, 0bv32) then 1bv32 else 0bv32)) else $count.i.1$1), (if p21$1 then BV32_ADD($k.i.0$1, 1bv32) else $k.i.0$1);
    $delta.i.1$2, $count.i.1$2, $k.i.0$2 := (if p21$2 then v27$2 else $delta.i.1$2), (if p21$2 then BV32_ADD($count.i.1$2, (if FLT32(v27$2, 0bv32) then 1bv32 else 0bv32)) else $count.i.1$2), (if p21$2 then BV32_ADD($k.i.0$2, 1bv32) else $k.i.0$2);
    p18$1 := (if p21$1 then true else p18$1);
    p18$2 := (if p21$2 then true else p18$2);
    goto $19.backedge, $19.tail;

  $19.tail:
    assume !p18$1 && !p18$2;
    $delta.i.2$1, $count.i.2$1 := (if p17$1 then $delta.i.1$1 else $delta.i.2$1), (if p17$1 then $count.i.1$1 else $count.i.2$1);
    $delta.i.2$2, $count.i.2$2 := (if p17$2 then $delta.i.1$2 else $delta.i.2$2), (if p17$2 then $count.i.1$2 else $count.i.2$2);
    $delta.i.0$1, $count.i.0$1, $rem.i.0$1, $i.i.0$1 := (if p13$1 then $delta.i.2$1 else $delta.i.0$1), (if p13$1 then $count.i.2$1 else $count.i.0$1), (if p13$1 then BV32_SUB($rem.i.0$1, group_size_x) else $rem.i.0$1), (if p13$1 then BV32_ADD($i.i.0$1, group_size_x) else $i.i.0$1);
    $delta.i.0$2, $count.i.0$2, $rem.i.0$2, $i.i.0$2 := (if p13$2 then $delta.i.2$2 else $delta.i.0$2), (if p13$2 then $count.i.2$2 else $count.i.0$2), (if p13$2 then BV32_SUB($rem.i.0$2, group_size_x) else $rem.i.0$2), (if p13$2 then BV32_ADD($i.i.0$2, group_size_x) else $i.i.0$2);
    p12$1 := (if p13$1 then true else p12$1);
    p12$2 := (if p13$2 then true else p12$2);
    goto $14.backedge, __partitioned_block_$14.tail_0;

  __partitioned_block_$14.tail_0:
    assume !p12$1 && !p12$2;
    goto __partitioned_block_$14.tail_1;

  __partitioned_block_$14.tail_1:
    call {:sourceloc_num 65} $bugle_barrier_duplicated_3(1bv1, 1bv1, p11$1, p11$2);
    call {:sourceloc} {:sourceloc_num 66} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active(p11$1, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[1bv1][0bv32]);
    assume {:do_not_predicate} {:check_id "check_state_8"} {:captureState "check_state_8"} {:sourceloc} {:sourceloc_num 66} true;
    call {:check_id "check_state_8"} {:sourceloc} {:sourceloc_num 66} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active(p11$2, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active"} true;
    v28$1 := (if p11$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[1bv1][0bv32] else v28$1);
    v28$2 := (if p11$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] else v28$2);
    v29$1 := (if p11$1 then BV32_ULT(local_id_x$1, v28$1) else v29$1);
    v29$2 := (if p11$2 then BV32_ULT(local_id_x$2, v28$2) else v29$2);
    p23$1 := (if p11$1 && v29$1 then v29$1 else p23$1);
    p23$2 := (if p11$2 && v29$2 then v29$2 else p23$2);
    p22$1 := (if p11$1 && !v29$1 then !v29$1 else p22$1);
    p22$2 := (if p11$2 && !v29$2 then !v29$2 else p22$2);
    $is_active_second.3$1 := (if p22$1 then $is_active_second.0$1 else $is_active_second.3$1);
    $is_active_second.3$2 := (if p22$2 then $is_active_second.0$2 else $is_active_second.3$2);
    v30$1 := (if p23$1 then FLT32($right.1$1, $left.1$1) || FLT32($left.1$1, $right.1$1) || FUNO32($left.1$1, $right.1$1) else v30$1);
    v30$2 := (if p23$2 then FLT32($right.1$2, $left.1$2) || FLT32($left.1$2, $right.1$2) || FUNO32($left.1$2, $right.1$2) else v30$2);
    p25$1 := (if p23$1 && v30$1 then v30$1 else p25$1);
    p25$2 := (if p23$2 && v30$2 then v30$2 else p25$2);
    p24$1 := (if p23$1 && !v30$1 then !v30$1 else p24$1);
    p24$2 := (if p23$2 && !v30$2 then !v30$2 else p24$2);
    call {:sourceloc} {:sourceloc_num 156} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p24$1, local_id_x$1, $left.1$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p24$2, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_186"} {:captureState "check_state_186"} {:sourceloc} {:sourceloc_num 156} true;
    call {:check_id "check_state_186"} {:sourceloc} {:sourceloc_num 156} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p24$2, local_id_x$2, $left.1$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][local_id_x$1] := (if p24$1 then $left.1$1 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][local_id_x$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] := (if p24$2 then $left.1$2 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2]);
    call {:sourceloc} {:sourceloc_num 157} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p24$1, local_id_x$1, $left.1$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p24$2, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_187"} {:captureState "check_state_187"} {:sourceloc} {:sourceloc_num 157} true;
    call {:check_id "check_state_187"} {:sourceloc} {:sourceloc_num 157} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p24$2, local_id_x$2, $left.1$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][local_id_x$1] := (if p24$1 then $left.1$1 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][local_id_x$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] := (if p24$2 then $left.1$2 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2]);
    call {:sourceloc} {:sourceloc_num 158} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p24$1, local_id_x$1, $left_count.1$1[16:0], $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p24$2, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_188"} {:captureState "check_state_188"} {:sourceloc} {:sourceloc_num 158} true;
    call {:check_id "check_state_188"} {:sourceloc} {:sourceloc_num 158} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p24$2, local_id_x$2, $left_count.1$2[16:0]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][local_id_x$1] := (if p24$1 then $left_count.1$1[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][local_id_x$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] := (if p24$2 then $left_count.1$2[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2]);
    call {:sourceloc} {:sourceloc_num 159} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p24$1, local_id_x$1, $right_count.1$1[16:0], $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p24$2, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_189"} {:captureState "check_state_189"} {:sourceloc} {:sourceloc_num 159} true;
    call {:check_id "check_state_189"} {:sourceloc} {:sourceloc_num 159} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p24$2, local_id_x$2, $right_count.1$2[16:0]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][local_id_x$1] := (if p24$1 then $right_count.1$1[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][local_id_x$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] := (if p24$2 then $right_count.1$2[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2]);
    $is_active_second.2$1 := (if p24$1 then 0bv32 else $is_active_second.2$1);
    $is_active_second.2$2 := (if p24$2 then 0bv32 else $is_active_second.2$2);
    call {:sourceloc} {:sourceloc_num 69} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active(p25$1, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[1bv1][0bv32]);
    assume {:do_not_predicate} {:check_id "check_state_190"} {:captureState "check_state_190"} {:sourceloc} {:sourceloc_num 69} true;
    call {:check_id "check_state_190"} {:sourceloc} {:sourceloc_num 69} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active(p25$2, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active"} true;
    v31$1 := (if p25$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[1bv1][0bv32] else v31$1);
    v31$2 := (if p25$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] else v31$2);
    v32$1 := (if p25$1 then $left_count.1$1[16:0] else v32$1);
    v32$2 := (if p25$2 then $left_count.1$2[16:0] else v32$2);
    v33$1 := (if p25$1 then $count.i.0$1[16:0] else v33$1);
    v33$2 := (if p25$2 then $count.i.0$2[16:0] else v33$2);
    v34$1 := (if p25$1 then $right_count.1$1[16:0] else v34$1);
    v34$2 := (if p25$2 then $right_count.1$2[16:0] else v34$2);
    v35$1 := (if p25$1 then BV16_ZEXT32(v32$1) != BV16_ZEXT32(v33$1) else v35$1);
    v35$2 := (if p25$2 then BV16_ZEXT32(v32$2) != BV16_ZEXT32(v33$2) else v35$2);
    p26$1 := (if p25$1 && v35$1 then v35$1 else p26$1);
    p26$2 := (if p25$2 && v35$2 then v35$2 else p26$2);
    p38$1 := (if p25$1 && !v35$1 then !v35$1 else p38$1);
    p38$2 := (if p25$2 && !v35$2 then !v35$2 else p38$2);
    v36$1 := (if p26$1 then BV16_ZEXT32(v33$1) != BV16_ZEXT32(v34$1) else v36$1);
    v36$2 := (if p26$2 then BV16_ZEXT32(v33$2) != BV16_ZEXT32(v34$2) else v36$2);
    p27$1 := (if p26$1 && v36$1 then v36$1 else p27$1);
    p27$2 := (if p26$2 && v36$2 then v36$2 else p27$2);
    p38$1 := (if p26$1 && !v36$1 then !v36$1 else p38$1);
    p38$2 := (if p26$2 && !v36$2 then !v36$2 else p38$2);
    call {:sourceloc} {:sourceloc_num 72} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p27$1, local_id_x$1, v32$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p27$2, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_204"} {:captureState "check_state_204"} {:sourceloc} {:sourceloc_num 72} true;
    call {:check_id "check_state_204"} {:sourceloc} {:sourceloc_num 72} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p27$2, local_id_x$2, v32$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][local_id_x$1] := (if p27$1 then v32$1 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][local_id_x$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] := (if p27$2 then v32$2 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2]);
    call {:sourceloc} {:sourceloc_num 73} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p27$1, local_id_x$1, v33$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p27$2, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_205"} {:captureState "check_state_205"} {:sourceloc} {:sourceloc_num 73} true;
    call {:check_id "check_state_205"} {:sourceloc} {:sourceloc_num 73} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p27$2, local_id_x$2, v33$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][local_id_x$1] := (if p27$1 then v33$1 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][local_id_x$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] := (if p27$2 then v33$2 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2]);
    call {:sourceloc_num 74} v37$1, v37$2 := $abs(p27$1, FSUB32($mid.2$1, $left.1$1), p27$2, FSUB32($mid.2$2, $left.1$2));
    assume {:captureState "call_return_state_0"} {:procedureName "$abs"} true;
    call {:sourceloc_num 75} v38$1, v38$2 := $abs(p27$1, $left.1$1, p27$2, $left.1$2);
    assume {:captureState "call_return_state_0"} {:procedureName "$abs"} true;
    call {:sourceloc_num 76} v39$1, v39$2 := $abs(p27$1, $mid.2$1, p27$2, $mid.2$2);
    assume {:captureState "call_return_state_0"} {:procedureName "$abs"} true;
    v40$1 := (if p27$1 then FLT32(v38$1, v39$1) else v40$1);
    v40$2 := (if p27$2 then FLT32(v38$2, v39$2) else v40$2);
    p29$1 := (if p27$1 && v40$1 then v40$1 else p29$1);
    p29$2 := (if p27$2 && v40$2 then v40$2 else p29$2);
    p28$1 := (if p27$1 && !v40$1 then !v40$1 else p28$1);
    p28$2 := (if p27$2 && !v40$2 then !v40$2 else p28$2);
    call {:sourceloc_num 80} v42$1, v42$2 := $abs(p28$1, $left.1$1, p28$2, $left.1$2);
    assume {:captureState "call_return_state_0"} {:procedureName "$abs"} true;
    $1$1 := (if p28$1 then v42$1 else $1$1);
    $1$2 := (if p28$2 then v42$2 else $1$2);
    call {:sourceloc_num 78} v41$1, v41$2 := $abs(p29$1, $mid.2$1, p29$2, $mid.2$2);
    assume {:captureState "call_return_state_0"} {:procedureName "$abs"} true;
    $1$1 := (if p29$1 then v41$1 else $1$1);
    $1$2 := (if p29$2 then v41$2 else $1$2);
    v43$1 := (if p27$1 then FMUL32($1$1, $epsilon) else v43$1);
    v43$2 := (if p27$2 then FMUL32($1$2, $epsilon) else v43$2);
    v44$1 := (if p27$1 then FP32_CONV64(v37$1) else v44$1);
    v44$2 := (if p27$2 then FP32_CONV64(v37$2) else v44$2);
    v45$1 := (if p27$1 then FLT64(4063729574967324274bv64, FP32_CONV64(v43$1)) else v45$1);
    v45$2 := (if p27$2 then FLT64(4063729574967324274bv64, FP32_CONV64(v43$2)) else v45$2);
    p31$1 := (if p27$1 && v45$1 then v45$1 else p31$1);
    p31$2 := (if p27$2 && v45$2 then v45$2 else p31$2);
    p30$1 := (if p27$1 && !v45$1 then !v45$1 else p30$1);
    p30$2 := (if p27$2 && !v45$2 then !v45$2 else p30$2);
    $2$1 := (if p30$1 then 4063729574967324274bv64 else $2$1);
    $2$2 := (if p30$2 then 4063729574967324274bv64 else $2$2);
    $2$1 := (if p31$1 then FP32_CONV64(v43$1) else $2$1);
    $2$2 := (if p31$2 then FP32_CONV64(v43$2) else $2$2);
    v46$1 := (if p27$1 then FEQ64(v44$1, $2$1) || FLT64(v44$1, $2$1) else v46$1);
    v46$2 := (if p27$2 then FEQ64(v44$2, $2$2) || FLT64(v44$2, $2$2) else v46$2);
    p33$1 := (if p27$1 && v46$1 then v46$1 else p33$1);
    p33$2 := (if p27$2 && v46$2 then v46$2 else p33$2);
    p32$1 := (if p27$1 && !v46$1 then !v46$1 else p32$1);
    p32$2 := (if p27$2 && !v46$2 then !v46$2 else p32$2);
    call {:sourceloc} {:sourceloc_num 94} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p32$1, local_id_x$1, $left.1$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p32$2, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_206"} {:captureState "check_state_206"} {:sourceloc} {:sourceloc_num 94} true;
    call {:check_id "check_state_206"} {:sourceloc} {:sourceloc_num 94} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p32$2, local_id_x$2, $left.1$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][local_id_x$1] := (if p32$1 then $left.1$1 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][local_id_x$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] := (if p32$2 then $left.1$2 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2]);
    call {:sourceloc} {:sourceloc_num 95} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p32$1, local_id_x$1, $mid.2$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p32$2, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_207"} {:captureState "check_state_207"} {:sourceloc} {:sourceloc_num 95} true;
    call {:check_id "check_state_207"} {:sourceloc} {:sourceloc_num 95} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p32$2, local_id_x$2, $mid.2$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][local_id_x$1] := (if p32$1 then $mid.2$1 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][local_id_x$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] := (if p32$2 then $mid.2$2 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2]);
    call {:sourceloc_num 86} v47$1, v47$2 := $_Z6sign_ff(p33$1, $left.1$1, p33$2, $left.1$2);
    assume {:captureState "call_return_state_0"} {:procedureName "$_Z6sign_ff"} true;
    call {:sourceloc_num 87} v48$1, v48$2 := $_Z6sign_ff(p33$1, $mid.2$1, p33$2, $mid.2$2);
    assume {:captureState "call_return_state_0"} {:procedureName "$_Z6sign_ff"} true;
    v49$1 := (if p33$1 then v47$1 == v48$1 else v49$1);
    v49$2 := (if p33$2 then v47$2 == v48$2 else v49$2);
    p35$1 := (if p33$1 && v49$1 then v49$1 else p35$1);
    p35$2 := (if p33$2 && v49$2 then v49$2 else p35$2);
    p34$1 := (if p33$1 && !v49$1 then !v49$1 else p34$1);
    p34$2 := (if p33$2 && !v49$2 then !v49$2 else p34$2);
    $mid.i.i.i.0$1 := (if p34$1 then FMUL32(FADD32($left.1$1, $mid.2$1), 1056964608bv32) else $mid.i.i.i.0$1);
    $mid.i.i.i.0$2 := (if p34$2 then FMUL32(FADD32($left.1$2, $mid.2$2), 1056964608bv32) else $mid.i.i.i.0$2);
    $mid.i.i.i.0$1 := (if p35$1 then FADD32($left.1$1, FMUL32(FSUB32($mid.2$1, $left.1$1), 1056964608bv32)) else $mid.i.i.i.0$1);
    $mid.i.i.i.0$2 := (if p35$2 then FADD32($left.1$2, FMUL32(FSUB32($mid.2$2, $left.1$2), 1056964608bv32)) else $mid.i.i.i.0$2);
    call {:sourceloc} {:sourceloc_num 91} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p33$1, local_id_x$1, $mid.i.i.i.0$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p33$2, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_210"} {:captureState "check_state_210"} {:sourceloc} {:sourceloc_num 91} true;
    call {:check_id "check_state_210"} {:sourceloc} {:sourceloc_num 91} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p33$2, local_id_x$2, $mid.i.i.i.0$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][local_id_x$1] := (if p33$1 then $mid.i.i.i.0$1 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][local_id_x$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] := (if p33$2 then $mid.i.i.i.0$2 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2]);
    call {:sourceloc} {:sourceloc_num 92} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p33$1, local_id_x$1, $mid.i.i.i.0$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p33$2, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_211"} {:captureState "check_state_211"} {:sourceloc} {:sourceloc_num 92} true;
    call {:check_id "check_state_211"} {:sourceloc} {:sourceloc_num 92} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p33$2, local_id_x$2, $mid.i.i.i.0$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][local_id_x$1] := (if p33$1 then $mid.i.i.i.0$1 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][local_id_x$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] := (if p33$2 then $mid.i.i.i.0$2 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2]);
    call {:sourceloc} {:sourceloc_num 97} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p27$1, BV32_ADD(1bv32, local_id_x$1), 1bv16, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, local_id_x$1)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p27$2, BV32_ADD(1bv32, local_id_x$2));
    assume {:do_not_predicate} {:check_id "check_state_208"} {:captureState "check_state_208"} {:sourceloc} {:sourceloc_num 97} true;
    call {:check_id "check_state_208"} {:sourceloc} {:sourceloc_num 97} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p27$2, BV32_ADD(1bv32, local_id_x$2), 1bv16);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, local_id_x$1)] := (if p27$1 then 1bv16 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, local_id_x$1)]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, local_id_x$2)] := (if p27$2 then 1bv16 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, local_id_x$2)]);
    call {:sourceloc} {:sourceloc_num 98} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk(p27$1, 0bv32, 1bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk[1bv1][0bv32]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk(p27$2, 0bv32);
    assume {:do_not_predicate} {:check_id "check_state_209"} {:captureState "check_state_209"} {:sourceloc} {:sourceloc_num 98} true;
    call {:check_id "check_state_209"} {:sourceloc} {:sourceloc_num 98} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk(p27$2, 0bv32, 1bv32);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk[1bv1][0bv32] := (if p27$1 then 1bv32 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk[1bv1][0bv32]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] := (if p27$2 then 1bv32 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    $is_active_second.1$1 := (if p27$1 then 1bv32 else $is_active_second.1$1);
    $is_active_second.1$2 := (if p27$2 then 1bv32 else $is_active_second.1$2);
    p38$1 := (if p36$1 then true else p38$1);
    p38$2 := (if p36$2 then true else p38$2);
    p38$1 := (if p37$1 then true else p38$1);
    p38$2 := (if p37$2 then true else p38$2);
    call {:sourceloc} {:sourceloc_num 100} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p38$1, BV32_ADD(1bv32, local_id_x$1), 0bv16, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, local_id_x$1)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p38$2, BV32_ADD(1bv32, local_id_x$2));
    assume {:do_not_predicate} {:check_id "check_state_191"} {:captureState "check_state_191"} {:sourceloc} {:sourceloc_num 100} true;
    call {:check_id "check_state_191"} {:sourceloc} {:sourceloc_num 100} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p38$2, BV32_ADD(1bv32, local_id_x$2), 0bv16);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, local_id_x$1)] := (if p38$1 then 0bv16 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, local_id_x$1)]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, local_id_x$2)] := (if p38$2 then 0bv16 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, local_id_x$2)]);
    v50$1 := (if p38$1 then BV16_ZEXT32(v32$1) != BV16_ZEXT32(v33$1) else v50$1);
    v50$2 := (if p38$2 then BV16_ZEXT32(v32$2) != BV16_ZEXT32(v33$2) else v50$2);
    p39$1 := (if p38$1 && v50$1 then v50$1 else p39$1);
    p39$2 := (if p38$2 && v50$2 then v50$2 else p39$2);
    p48$1 := (if p38$1 && !v50$1 then !v50$1 else p48$1);
    p48$2 := (if p38$2 && !v50$2 then !v50$2 else p48$2);
    call {:sourceloc} {:sourceloc_num 102} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p39$1, local_id_x$1, v32$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p39$2, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_198"} {:captureState "check_state_198"} {:sourceloc} {:sourceloc_num 102} true;
    call {:check_id "check_state_198"} {:sourceloc} {:sourceloc_num 102} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p39$2, local_id_x$2, v32$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][local_id_x$1] := (if p39$1 then v32$1 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][local_id_x$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] := (if p39$2 then v32$2 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2]);
    call {:sourceloc} {:sourceloc_num 103} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p39$1, local_id_x$1, v33$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p39$2, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_199"} {:captureState "check_state_199"} {:sourceloc} {:sourceloc_num 103} true;
    call {:check_id "check_state_199"} {:sourceloc} {:sourceloc_num 103} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p39$2, local_id_x$2, v33$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][local_id_x$1] := (if p39$1 then v33$1 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][local_id_x$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] := (if p39$2 then v33$2 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2]);
    call {:sourceloc_num 104} v51$1, v51$2 := $abs(p39$1, FSUB32($mid.2$1, $left.1$1), p39$2, FSUB32($mid.2$2, $left.1$2));
    assume {:captureState "call_return_state_0"} {:procedureName "$abs"} true;
    call {:sourceloc_num 105} v52$1, v52$2 := $abs(p39$1, $left.1$1, p39$2, $left.1$2);
    assume {:captureState "call_return_state_0"} {:procedureName "$abs"} true;
    call {:sourceloc_num 106} v53$1, v53$2 := $abs(p39$1, $mid.2$1, p39$2, $mid.2$2);
    assume {:captureState "call_return_state_0"} {:procedureName "$abs"} true;
    v54$1 := (if p39$1 then FLT32(v52$1, v53$1) else v54$1);
    v54$2 := (if p39$2 then FLT32(v52$2, v53$2) else v54$2);
    p41$1 := (if p39$1 && v54$1 then v54$1 else p41$1);
    p41$2 := (if p39$2 && v54$2 then v54$2 else p41$2);
    p40$1 := (if p39$1 && !v54$1 then !v54$1 else p40$1);
    p40$2 := (if p39$2 && !v54$2 then !v54$2 else p40$2);
    call {:sourceloc_num 110} v56$1, v56$2 := $abs(p40$1, $left.1$1, p40$2, $left.1$2);
    assume {:captureState "call_return_state_0"} {:procedureName "$abs"} true;
    $3$1 := (if p40$1 then v56$1 else $3$1);
    $3$2 := (if p40$2 then v56$2 else $3$2);
    call {:sourceloc_num 108} v55$1, v55$2 := $abs(p41$1, $mid.2$1, p41$2, $mid.2$2);
    assume {:captureState "call_return_state_0"} {:procedureName "$abs"} true;
    $3$1 := (if p41$1 then v55$1 else $3$1);
    $3$2 := (if p41$2 then v55$2 else $3$2);
    v57$1 := (if p39$1 then FMUL32($3$1, $epsilon) else v57$1);
    v57$2 := (if p39$2 then FMUL32($3$2, $epsilon) else v57$2);
    v58$1 := (if p39$1 then FP32_CONV64(v51$1) else v58$1);
    v58$2 := (if p39$2 then FP32_CONV64(v51$2) else v58$2);
    v59$1 := (if p39$1 then FLT64(4063729574967324274bv64, FP32_CONV64(v57$1)) else v59$1);
    v59$2 := (if p39$2 then FLT64(4063729574967324274bv64, FP32_CONV64(v57$2)) else v59$2);
    p43$1 := (if p39$1 && v59$1 then v59$1 else p43$1);
    p43$2 := (if p39$2 && v59$2 then v59$2 else p43$2);
    p42$1 := (if p39$1 && !v59$1 then !v59$1 else p42$1);
    p42$2 := (if p39$2 && !v59$2 then !v59$2 else p42$2);
    $4$1 := (if p42$1 then 4063729574967324274bv64 else $4$1);
    $4$2 := (if p42$2 then 4063729574967324274bv64 else $4$2);
    $4$1 := (if p43$1 then FP32_CONV64(v57$1) else $4$1);
    $4$2 := (if p43$2 then FP32_CONV64(v57$2) else $4$2);
    v60$1 := (if p39$1 then FEQ64(v58$1, $4$1) || FLT64(v58$1, $4$1) else v60$1);
    v60$2 := (if p39$2 then FEQ64(v58$2, $4$2) || FLT64(v58$2, $4$2) else v60$2);
    p45$1 := (if p39$1 && v60$1 then v60$1 else p45$1);
    p45$2 := (if p39$2 && v60$2 then v60$2 else p45$2);
    p44$1 := (if p39$1 && !v60$1 then !v60$1 else p44$1);
    p44$2 := (if p39$2 && !v60$2 then !v60$2 else p44$2);
    call {:sourceloc} {:sourceloc_num 124} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p44$1, local_id_x$1, $left.1$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p44$2, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_200"} {:captureState "check_state_200"} {:sourceloc} {:sourceloc_num 124} true;
    call {:check_id "check_state_200"} {:sourceloc} {:sourceloc_num 124} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p44$2, local_id_x$2, $left.1$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][local_id_x$1] := (if p44$1 then $left.1$1 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][local_id_x$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] := (if p44$2 then $left.1$2 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2]);
    call {:sourceloc} {:sourceloc_num 125} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p44$1, local_id_x$1, $mid.2$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p44$2, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_201"} {:captureState "check_state_201"} {:sourceloc} {:sourceloc_num 125} true;
    call {:check_id "check_state_201"} {:sourceloc} {:sourceloc_num 125} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p44$2, local_id_x$2, $mid.2$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][local_id_x$1] := (if p44$1 then $mid.2$1 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][local_id_x$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] := (if p44$2 then $mid.2$2 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2]);
    call {:sourceloc_num 116} v61$1, v61$2 := $_Z6sign_ff(p45$1, $left.1$1, p45$2, $left.1$2);
    assume {:captureState "call_return_state_0"} {:procedureName "$_Z6sign_ff"} true;
    call {:sourceloc_num 117} v62$1, v62$2 := $_Z6sign_ff(p45$1, $mid.2$1, p45$2, $mid.2$2);
    assume {:captureState "call_return_state_0"} {:procedureName "$_Z6sign_ff"} true;
    v63$1 := (if p45$1 then v61$1 == v62$1 else v63$1);
    v63$2 := (if p45$2 then v61$2 == v62$2 else v63$2);
    p47$1 := (if p45$1 && v63$1 then v63$1 else p47$1);
    p47$2 := (if p45$2 && v63$2 then v63$2 else p47$2);
    p46$1 := (if p45$1 && !v63$1 then !v63$1 else p46$1);
    p46$2 := (if p45$2 && !v63$2 then !v63$2 else p46$2);
    $mid.i.i1.i.0$1 := (if p46$1 then FMUL32(FADD32($left.1$1, $mid.2$1), 1056964608bv32) else $mid.i.i1.i.0$1);
    $mid.i.i1.i.0$2 := (if p46$2 then FMUL32(FADD32($left.1$2, $mid.2$2), 1056964608bv32) else $mid.i.i1.i.0$2);
    $mid.i.i1.i.0$1 := (if p47$1 then FADD32($left.1$1, FMUL32(FSUB32($mid.2$1, $left.1$1), 1056964608bv32)) else $mid.i.i1.i.0$1);
    $mid.i.i1.i.0$2 := (if p47$2 then FADD32($left.1$2, FMUL32(FSUB32($mid.2$2, $left.1$2), 1056964608bv32)) else $mid.i.i1.i.0$2);
    call {:sourceloc} {:sourceloc_num 121} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p45$1, local_id_x$1, $mid.i.i1.i.0$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p45$2, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_202"} {:captureState "check_state_202"} {:sourceloc} {:sourceloc_num 121} true;
    call {:check_id "check_state_202"} {:sourceloc} {:sourceloc_num 121} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p45$2, local_id_x$2, $mid.i.i1.i.0$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][local_id_x$1] := (if p45$1 then $mid.i.i1.i.0$1 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][local_id_x$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] := (if p45$2 then $mid.i.i1.i.0$2 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2]);
    call {:sourceloc} {:sourceloc_num 122} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p45$1, local_id_x$1, $mid.i.i1.i.0$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p45$2, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_203"} {:captureState "check_state_203"} {:sourceloc} {:sourceloc_num 122} true;
    call {:check_id "check_state_203"} {:sourceloc} {:sourceloc_num 122} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p45$2, local_id_x$2, $mid.i.i1.i.0$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][local_id_x$1] := (if p45$1 then $mid.i.i1.i.0$1 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][local_id_x$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] := (if p45$2 then $mid.i.i1.i.0$2 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2]);
    call {:sourceloc} {:sourceloc_num 128} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p48$1, local_id_x$1, v33$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p48$2, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_192"} {:captureState "check_state_192"} {:sourceloc} {:sourceloc_num 128} true;
    call {:check_id "check_state_192"} {:sourceloc} {:sourceloc_num 128} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p48$2, local_id_x$2, v33$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][local_id_x$1] := (if p48$1 then v33$1 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][local_id_x$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] := (if p48$2 then v33$2 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2]);
    call {:sourceloc} {:sourceloc_num 129} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p48$1, local_id_x$1, v34$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p48$2, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_193"} {:captureState "check_state_193"} {:sourceloc} {:sourceloc_num 129} true;
    call {:check_id "check_state_193"} {:sourceloc} {:sourceloc_num 129} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p48$2, local_id_x$2, v34$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][local_id_x$1] := (if p48$1 then v34$1 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][local_id_x$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] := (if p48$2 then v34$2 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2]);
    call {:sourceloc_num 130} v64$1, v64$2 := $abs(p48$1, FSUB32($right.1$1, $mid.2$1), p48$2, FSUB32($right.1$2, $mid.2$2));
    assume {:captureState "call_return_state_0"} {:procedureName "$abs"} true;
    call {:sourceloc_num 131} v65$1, v65$2 := $abs(p48$1, $mid.2$1, p48$2, $mid.2$2);
    assume {:captureState "call_return_state_0"} {:procedureName "$abs"} true;
    call {:sourceloc_num 132} v66$1, v66$2 := $abs(p48$1, $right.1$1, p48$2, $right.1$2);
    assume {:captureState "call_return_state_0"} {:procedureName "$abs"} true;
    v67$1 := (if p48$1 then FLT32(v65$1, v66$1) else v67$1);
    v67$2 := (if p48$2 then FLT32(v65$2, v66$2) else v67$2);
    p50$1 := (if p48$1 && v67$1 then v67$1 else p50$1);
    p50$2 := (if p48$2 && v67$2 then v67$2 else p50$2);
    p49$1 := (if p48$1 && !v67$1 then !v67$1 else p49$1);
    p49$2 := (if p48$2 && !v67$2 then !v67$2 else p49$2);
    call {:sourceloc_num 136} v69$1, v69$2 := $abs(p49$1, $mid.2$1, p49$2, $mid.2$2);
    assume {:captureState "call_return_state_0"} {:procedureName "$abs"} true;
    $5$1 := (if p49$1 then v69$1 else $5$1);
    $5$2 := (if p49$2 then v69$2 else $5$2);
    call {:sourceloc_num 134} v68$1, v68$2 := $abs(p50$1, $right.1$1, p50$2, $right.1$2);
    assume {:captureState "call_return_state_0"} {:procedureName "$abs"} true;
    $5$1 := (if p50$1 then v68$1 else $5$1);
    $5$2 := (if p50$2 then v68$2 else $5$2);
    v70$1 := (if p48$1 then FMUL32($5$1, $epsilon) else v70$1);
    v70$2 := (if p48$2 then FMUL32($5$2, $epsilon) else v70$2);
    v71$1 := (if p48$1 then FP32_CONV64(v64$1) else v71$1);
    v71$2 := (if p48$2 then FP32_CONV64(v64$2) else v71$2);
    v72$1 := (if p48$1 then FLT64(4063729574967324274bv64, FP32_CONV64(v70$1)) else v72$1);
    v72$2 := (if p48$2 then FLT64(4063729574967324274bv64, FP32_CONV64(v70$2)) else v72$2);
    p52$1 := (if p48$1 && v72$1 then v72$1 else p52$1);
    p52$2 := (if p48$2 && v72$2 then v72$2 else p52$2);
    p51$1 := (if p48$1 && !v72$1 then !v72$1 else p51$1);
    p51$2 := (if p48$2 && !v72$2 then !v72$2 else p51$2);
    $6$1 := (if p51$1 then 4063729574967324274bv64 else $6$1);
    $6$2 := (if p51$2 then 4063729574967324274bv64 else $6$2);
    $6$1 := (if p52$1 then FP32_CONV64(v70$1) else $6$1);
    $6$2 := (if p52$2 then FP32_CONV64(v70$2) else $6$2);
    v73$1 := (if p48$1 then FEQ64(v71$1, $6$1) || FLT64(v71$1, $6$1) else v73$1);
    v73$2 := (if p48$2 then FEQ64(v71$2, $6$2) || FLT64(v71$2, $6$2) else v73$2);
    p54$1 := (if p48$1 && v73$1 then v73$1 else p54$1);
    p54$2 := (if p48$2 && v73$2 then v73$2 else p54$2);
    p53$1 := (if p48$1 && !v73$1 then !v73$1 else p53$1);
    p53$2 := (if p48$2 && !v73$2 then !v73$2 else p53$2);
    call {:sourceloc} {:sourceloc_num 150} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p53$1, local_id_x$1, $mid.2$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p53$2, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_194"} {:captureState "check_state_194"} {:sourceloc} {:sourceloc_num 150} true;
    call {:check_id "check_state_194"} {:sourceloc} {:sourceloc_num 150} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p53$2, local_id_x$2, $mid.2$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][local_id_x$1] := (if p53$1 then $mid.2$1 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][local_id_x$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] := (if p53$2 then $mid.2$2 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2]);
    call {:sourceloc} {:sourceloc_num 151} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p53$1, local_id_x$1, $right.1$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p53$2, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_195"} {:captureState "check_state_195"} {:sourceloc} {:sourceloc_num 151} true;
    call {:check_id "check_state_195"} {:sourceloc} {:sourceloc_num 151} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p53$2, local_id_x$2, $right.1$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][local_id_x$1] := (if p53$1 then $right.1$1 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][local_id_x$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] := (if p53$2 then $right.1$2 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2]);
    call {:sourceloc_num 142} v74$1, v74$2 := $_Z6sign_ff(p54$1, $mid.2$1, p54$2, $mid.2$2);
    assume {:captureState "call_return_state_0"} {:procedureName "$_Z6sign_ff"} true;
    call {:sourceloc_num 143} v75$1, v75$2 := $_Z6sign_ff(p54$1, $right.1$1, p54$2, $right.1$2);
    assume {:captureState "call_return_state_0"} {:procedureName "$_Z6sign_ff"} true;
    v76$1 := (if p54$1 then v74$1 == v75$1 else v76$1);
    v76$2 := (if p54$2 then v74$2 == v75$2 else v76$2);
    p56$1 := (if p54$1 && v76$1 then v76$1 else p56$1);
    p56$2 := (if p54$2 && v76$2 then v76$2 else p56$2);
    p55$1 := (if p54$1 && !v76$1 then !v76$1 else p55$1);
    p55$2 := (if p54$2 && !v76$2 then !v76$2 else p55$2);
    $mid.i.i7.i.0$1 := (if p55$1 then FMUL32(FADD32($mid.2$1, $right.1$1), 1056964608bv32) else $mid.i.i7.i.0$1);
    $mid.i.i7.i.0$2 := (if p55$2 then FMUL32(FADD32($mid.2$2, $right.1$2), 1056964608bv32) else $mid.i.i7.i.0$2);
    $mid.i.i7.i.0$1 := (if p56$1 then FADD32($mid.2$1, FMUL32(FSUB32($right.1$1, $mid.2$1), 1056964608bv32)) else $mid.i.i7.i.0$1);
    $mid.i.i7.i.0$2 := (if p56$2 then FADD32($mid.2$2, FMUL32(FSUB32($right.1$2, $mid.2$2), 1056964608bv32)) else $mid.i.i7.i.0$2);
    call {:sourceloc} {:sourceloc_num 147} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p54$1, local_id_x$1, $mid.i.i7.i.0$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p54$2, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_196"} {:captureState "check_state_196"} {:sourceloc} {:sourceloc_num 147} true;
    call {:check_id "check_state_196"} {:sourceloc} {:sourceloc_num 147} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p54$2, local_id_x$2, $mid.i.i7.i.0$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][local_id_x$1] := (if p54$1 then $mid.i.i7.i.0$1 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][local_id_x$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] := (if p54$2 then $mid.i.i7.i.0$2 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2]);
    call {:sourceloc} {:sourceloc_num 148} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p54$1, local_id_x$1, $mid.i.i7.i.0$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p54$2, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_197"} {:captureState "check_state_197"} {:sourceloc} {:sourceloc_num 148} true;
    call {:check_id "check_state_197"} {:sourceloc} {:sourceloc_num 148} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p54$2, local_id_x$2, $mid.i.i7.i.0$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][local_id_x$1] := (if p54$1 then $mid.i.i7.i.0$1 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][local_id_x$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] := (if p54$2 then $mid.i.i7.i.0$2 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2]);
    $is_active_second.1$1 := (if p38$1 then 0bv32 else $is_active_second.1$1);
    $is_active_second.1$2 := (if p38$2 then 0bv32 else $is_active_second.1$2);
    $is_active_second.2$1 := (if p25$1 then $is_active_second.1$1 else $is_active_second.2$1);
    $is_active_second.2$2 := (if p25$2 then $is_active_second.1$2 else $is_active_second.2$2);
    $is_active_second.3$1 := (if p23$1 then $is_active_second.2$1 else $is_active_second.3$1);
    $is_active_second.3$2 := (if p23$2 then $is_active_second.2$2 else $is_active_second.3$2);
    goto __partitioned_block_$14.tail_2;

  __partitioned_block_$14.tail_2:
    call {:sourceloc_num 162} $bugle_barrier_duplicated_4(1bv1, 1bv1, p11$1, p11$2);
    call {:sourceloc} {:sourceloc_num 163} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk(p11$1, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk[1bv1][0bv32]);
    assume {:do_not_predicate} {:check_id "check_state_9"} {:captureState "check_state_9"} {:sourceloc} {:sourceloc_num 163} true;
    call {:check_id "check_state_9"} {:sourceloc} {:sourceloc_num 163} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk(p11$2, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk"} true;
    v77$1 := (if p11$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk[1bv1][0bv32] else v77$1);
    v77$2 := (if p11$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] else v77$2);
    v78$1 := (if p11$1 then BV32_UGT(v77$1, 0bv32) else v78$1);
    v78$2 := (if p11$2 then BV32_UGT(v77$2, 0bv32) else v78$2);
    p58$1 := (if p11$1 && v78$1 then v78$1 else p58$1);
    p58$2 := (if p11$2 && v78$2 then v78$2 else p58$2);
    call {:sourceloc} {:sourceloc_num 165} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction(p58$1, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction[1bv1][0bv32]);
    assume {:do_not_predicate} {:check_id "check_state_173"} {:captureState "check_state_173"} {:sourceloc} {:sourceloc_num 165} true;
    call {:check_id "check_state_173"} {:sourceloc} {:sourceloc_num 165} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction(p58$2, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction"} true;
    v79$1 := (if p58$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction[1bv1][0bv32] else v79$1);
    v79$2 := (if p58$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] else v79$2);
    $offset.i.0$1, $d.i.0$1 := (if p58$1 then 1bv32 else $offset.i.0$1), (if p58$1 then BV32_LSHR(v79$1, 1bv32) else $d.i.0$1);
    $offset.i.0$2, $d.i.0$2 := (if p58$2 then 1bv32 else $offset.i.0$2), (if p58$2 then BV32_LSHR(v79$2, 1bv32) else $d.i.0$2);
    p59$1 := (if p58$1 then true else p59$1);
    p59$2 := (if p58$2 then true else p59$2);
    _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list$ghost$__partitioned_block_$68_0 := _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list$ghost$__partitioned_block_$68_0 := _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume {:captureState "loop_entry_state_8_0"} true;
    goto __partitioned_block_$68_0;

  __partitioned_block_$68_0:
    assume {:captureState "loop_head_state_8"} true;
    assert {:tag "disabledMaintainsInstrumentation"} _b340 ==> !p58$1 ==> _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list$ghost$__partitioned_block_$68_0 == _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assert {:tag "disabledMaintainsInstrumentation"} _b339 ==> !p58$1 ==> _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list$ghost$__partitioned_block_$68_0 == _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assert {:tag "accessBreak"} _b338 ==> _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> local_id_x$1 == BV32_DIV(BV32_DIV(_WATCHED_OFFSET, $offset.i.0$1), 2bv32);
    assert {:tag "nowrite"} _b337 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assert {:tag "noread"} _b336 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assert {:tag "predicatedEquality"} _b335 ==> p59$1 && p59$2 ==> v84$1 == v84$2;
    assert {:tag "predicatedEquality"} _b334 ==> p59$1 && p59$2 ==> v83$1 == v83$2;
    assert {:tag "predicatedEquality"} _b333 ==> p59$1 && p59$2 ==> v82$1 == v82$2;
    assert {:tag "predicatedEquality"} _b332 ==> p59$1 && p59$2 ==> v81$1 == v81$2;
    assert {:tag "predicatedEquality"} _b331 ==> p59$1 && p59$2 ==> v80$1 == v80$2;
    assert {:tag "predicatedEquality"} _b330 ==> p59$1 && p59$2 ==> $d.i.0$1 == $d.i.0$2;
    assert {:tag "predicatedEquality"} _b329 ==> p59$1 && p59$2 ==> $offset.i.0$1 == $offset.i.0$2;
    assert {:tag "loopPredicateEquality"} _b328 ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> p59$1 == p59$2;
    assert {:tag "loopPredicateEquality"} _b327 ==> p59$1 == p59$2;
    assert {:tag "pow2NotZero"} _b326 ==> $d.i.0$2 != 0bv32;
    assert {:tag "pow2"} _b325 ==> $d.i.0$2 == 0bv32 || BV32_AND($d.i.0$2, BV32_SUB($d.i.0$2, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b324 ==> $d.i.0$1 != 0bv32;
    assert {:tag "pow2"} _b323 ==> $d.i.0$1 == 0bv32 || BV32_AND($d.i.0$1, BV32_SUB($d.i.0$1, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b322 ==> $offset.i.0$2 != 0bv32;
    assert {:tag "pow2"} _b321 ==> $offset.i.0$2 == 0bv32 || BV32_AND($offset.i.0$2, BV32_SUB($offset.i.0$2, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b320 ==> $offset.i.0$1 != 0bv32;
    assert {:tag "pow2"} _b319 ==> $offset.i.0$1 == 0bv32 || BV32_AND($offset.i.0$1, BV32_SUB($offset.i.0$1, 1bv32)) == 0bv32;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assume {:predicate "p59"} {:dominator_predicate "p58"} true;
    assert p59$1 ==> p2$1;
    assert p59$2 ==> p2$2;
    assert {:do_not_predicate} {:tag "accessOnlyIfEnabledInEnclosingScopes"} {:thread 1} _b75 ==> _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> BV32_UGT(v77$1, 0bv32);
    assert {:do_not_predicate} {:tag "accessOnlyIfEnabledInEnclosingScopes"} {:thread 1} _b74 ==> _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> 1bv32 != v14$1;
    assert {:do_not_predicate} {:tag "accessOnlyIfEnabledInEnclosingScopes"} {:thread 1} _b73 ==> _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> BV32_UGT(v77$1, 0bv32);
    assert {:do_not_predicate} {:tag "accessOnlyIfEnabledInEnclosingScopes"} {:thread 1} _b72 ==> _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> 1bv32 != v14$1;
    assert {:do_not_predicate} {:tag "conditionsImplyingEnabledness"} {:thread 1} _b71 ==> 1bv32 != v14$1 && BV32_UGT(v77$1, 0bv32) && BV32_SGT($d.i.0$1, 0bv32) ==> p59$1;
    assert {:do_not_predicate} {:tag "conditionsImplyingEnabledness"} {:thread 2} _b71 ==> 1bv32 != v14$2 && BV32_UGT(v77$2, 0bv32) && BV32_SGT($d.i.0$2, 0bv32) ==> p59$2;
    assert {:tag "conditionsImpliedByEnabledness"} {:thread 1} p59$1 ==> _b70 ==> p59$1 ==> 1bv32 != v14$1 && BV32_UGT(v77$1, 0bv32);
    assert {:tag "conditionsImpliedByEnabledness"} {:thread 2} p59$2 ==> _b70 ==> p59$2 ==> 1bv32 != v14$2 && BV32_UGT(v77$2, 0bv32);
    assert {:tag "loopBound"} {:thread 1} p59$1 ==> _b69 ==> BV32_UGE($d.i.0$1, BV32_LSHR(v79$1, 1bv32));
    assert {:tag "loopBound"} {:thread 2} p59$2 ==> _b69 ==> BV32_UGE($d.i.0$2, BV32_LSHR(v79$2, 1bv32));
    assert {:tag "loopBound"} {:thread 1} p59$1 ==> _b68 ==> BV32_ULE($d.i.0$1, BV32_LSHR(v79$1, 1bv32));
    assert {:tag "loopBound"} {:thread 2} p59$2 ==> _b68 ==> BV32_ULE($d.i.0$2, BV32_LSHR(v79$2, 1bv32));
    assert {:tag "loopBound"} {:thread 1} p59$1 ==> _b67 ==> BV32_SGE($d.i.0$1, BV32_LSHR(v79$1, 1bv32));
    assert {:tag "loopBound"} {:thread 2} p59$2 ==> _b67 ==> BV32_SGE($d.i.0$2, BV32_LSHR(v79$2, 1bv32));
    assert {:tag "loopBound"} {:thread 1} p59$1 ==> _b66 ==> BV32_SLE($d.i.0$1, BV32_LSHR(v79$1, 1bv32));
    assert {:tag "loopBound"} {:thread 2} p59$2 ==> _b66 ==> BV32_SLE($d.i.0$2, BV32_LSHR(v79$2, 1bv32));
    assert {:tag "guardMinusInitialIsUniform"} {:thread 1} p59$1 ==> _b65 ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> BV32_SUB($d.i.0$1, BV32_LSHR(v79$1, 1bv32)) == BV32_SUB($d.i.0$2, BV32_LSHR(v79$2, 1bv32));
    assert {:tag "guardMinusInitialIsUniform"} {:thread 2} p59$2 ==> _b65 ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> BV32_SUB($d.i.0$2, BV32_LSHR(v79$2, 1bv32)) == BV32_SUB($d.i.0$1, BV32_LSHR(v79$1, 1bv32));
    assert {:tag "guardMinusInitialIsUniform"} {:thread 1} p59$1 ==> _b64 ==> BV32_SUB($d.i.0$1, BV32_LSHR(v79$1, 1bv32)) == BV32_SUB($d.i.0$2, BV32_LSHR(v79$2, 1bv32));
    assert {:tag "guardMinusInitialIsUniform"} {:thread 2} p59$2 ==> _b64 ==> BV32_SUB($d.i.0$2, BV32_LSHR(v79$2, 1bv32)) == BV32_SUB($d.i.0$1, BV32_LSHR(v79$1, 1bv32));
    assert {:tag "guardNonNeg"} {:thread 1} p59$1 ==> _b63 ==> BV32_SLE(0bv32, $d.i.0$1);
    assert {:tag "guardNonNeg"} {:thread 2} p59$2 ==> _b63 ==> BV32_SLE(0bv32, $d.i.0$2);
    assert {:block_sourceloc} {:sourceloc_num 166} p59$1 ==> true;
    v80$1 := (if p59$1 then BV32_SGT($d.i.0$1, 0bv32) else v80$1);
    v80$2 := (if p59$2 then BV32_SGT($d.i.0$2, 0bv32) else v80$2);
    p60$1 := false;
    p60$2 := false;
    p61$1 := false;
    p61$2 := false;
    p62$1 := false;
    p62$2 := false;
    p60$1 := (if p59$1 && v80$1 then v80$1 else p60$1);
    p60$2 := (if p59$2 && v80$2 then v80$2 else p60$2);
    p59$1 := (if p59$1 && !v80$1 then v80$1 else p59$1);
    p59$2 := (if p59$2 && !v80$2 then v80$2 else p59$2);
    goto __partitioned_block_$68_1;

  __partitioned_block_$68_1:
    call {:sourceloc_num 168} $bugle_barrier_duplicated_26(1bv1, 1bv1, p60$1, p60$2);
    v81$1 := (if p60$1 then BV32_ULT(local_id_x$1, $d.i.0$1) else v81$1);
    v81$2 := (if p60$2 then BV32_ULT(local_id_x$2, $d.i.0$2) else v81$2);
    p62$1 := (if p60$1 && v81$1 then v81$1 else p62$1);
    p62$2 := (if p60$2 && v81$2 then v81$2 else p62$2);
    v82$1 := (if p62$1 then BV32_SUB(BV32_MUL($offset.i.0$1, BV32_ADD(BV32_MUL(2bv32, local_id_x$1), 2bv32)), 1bv32) else v82$1);
    v82$2 := (if p62$2 then BV32_SUB(BV32_MUL($offset.i.0$2, BV32_ADD(BV32_MUL(2bv32, local_id_x$2), 2bv32)), 1bv32) else v82$2);
    call {:sourceloc} {:sourceloc_num 170} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p62$1, BV32_ADD(1bv32, v82$1), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v82$1)]);
    assume {:do_not_predicate} {:check_id "check_state_183"} {:captureState "check_state_183"} {:sourceloc} {:sourceloc_num 170} true;
    call {:check_id "check_state_183"} {:sourceloc} {:sourceloc_num 170} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p62$2, BV32_ADD(1bv32, v82$2), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v82$2)]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    v83$1 := (if p62$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v82$1)] else v83$1);
    v83$2 := (if p62$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v82$2)] else v83$2);
    call {:sourceloc} {:sourceloc_num 171} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p62$1, BV32_ADD(1bv32, BV32_SUB(BV32_MUL($offset.i.0$1, BV32_ADD(BV32_MUL(2bv32, local_id_x$1), 1bv32)), 1bv32)), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, BV32_SUB(BV32_MUL($offset.i.0$1, BV32_ADD(BV32_MUL(2bv32, local_id_x$1), 1bv32)), 1bv32))]);
    assume {:do_not_predicate} {:check_id "check_state_184"} {:captureState "check_state_184"} {:sourceloc} {:sourceloc_num 171} true;
    call {:check_id "check_state_184"} {:sourceloc} {:sourceloc_num 171} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p62$2, BV32_ADD(1bv32, BV32_SUB(BV32_MUL($offset.i.0$2, BV32_ADD(BV32_MUL(2bv32, local_id_x$2), 1bv32)), 1bv32)), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, BV32_SUB(BV32_MUL($offset.i.0$2, BV32_ADD(BV32_MUL(2bv32, local_id_x$2), 1bv32)), 1bv32))]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    v84$1 := (if p62$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, BV32_SUB(BV32_MUL($offset.i.0$1, BV32_ADD(BV32_MUL(2bv32, local_id_x$1), 1bv32)), 1bv32))] else v84$1);
    v84$2 := (if p62$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, BV32_SUB(BV32_MUL($offset.i.0$2, BV32_ADD(BV32_MUL(2bv32, local_id_x$2), 1bv32)), 1bv32))] else v84$2);
    call {:sourceloc} {:sourceloc_num 172} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p62$1, BV32_ADD(1bv32, v82$1), BV32_ADD(BV16_ZEXT32(v83$1), BV16_ZEXT32(v84$1))[16:0], $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v82$1)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p62$2, BV32_ADD(1bv32, v82$2));
    assume {:do_not_predicate} {:check_id "check_state_185"} {:captureState "check_state_185"} {:sourceloc} {:sourceloc_num 172} true;
    call {:check_id "check_state_185"} {:sourceloc} {:sourceloc_num 172} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p62$2, BV32_ADD(1bv32, v82$2), BV32_ADD(BV16_ZEXT32(v83$2), BV16_ZEXT32(v84$2))[16:0]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v82$1)] := (if p62$1 then BV32_ADD(BV16_ZEXT32(v83$1), BV16_ZEXT32(v84$1))[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v82$1)]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v82$2)] := (if p62$2 then BV32_ADD(BV16_ZEXT32(v83$2), BV16_ZEXT32(v84$2))[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v82$2)]);
    $offset.i.0$1, $d.i.0$1 := (if p60$1 then BV32_SHL($offset.i.0$1, 1bv32) else $offset.i.0$1), (if p60$1 then BV32_ASHR($d.i.0$1, 1bv32) else $d.i.0$1);
    $offset.i.0$2, $d.i.0$2 := (if p60$2 then BV32_SHL($offset.i.0$2, 1bv32) else $offset.i.0$2), (if p60$2 then BV32_ASHR($d.i.0$2, 1bv32) else $d.i.0$2);
    p59$1 := (if p60$1 then true else p59$1);
    p59$2 := (if p60$2 then true else p59$2);
    goto $68.backedge, $68.tail;

  $68.tail:
    assume !p59$1 && !p59$2;
    $offset.i.1$1, $d1.i.0$1 := (if p58$1 then $offset.i.0$1 else $offset.i.1$1), (if p58$1 then 2bv32 else $d1.i.0$1);
    $offset.i.1$2, $d1.i.0$2 := (if p58$2 then $offset.i.0$2 else $offset.i.1$2), (if p58$2 then 2bv32 else $d1.i.0$2);
    p63$1 := (if p58$1 then true else p63$1);
    p63$2 := (if p58$2 then true else p63$2);
    _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list$ghost$__partitioned_block_$73_0 := _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list$ghost$__partitioned_block_$73_0 := _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume {:captureState "loop_entry_state_7_0"} true;
    goto __partitioned_block_$73_0;

  __partitioned_block_$73_0:
    assume {:captureState "loop_head_state_7"} true;
    assert {:tag "disabledMaintainsInstrumentation"} _b367 ==> !p58$1 ==> _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list$ghost$__partitioned_block_$73_0 == _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assert {:tag "disabledMaintainsInstrumentation"} _b366 ==> !p58$1 ==> _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list$ghost$__partitioned_block_$73_0 == _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assert {:tag "nowrite"} _b365 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assert {:tag "noread"} _b364 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assert {:tag "predicatedEquality"} _b363 ==> p63$1 && p63$2 ==> v91$1 == v91$2;
    assert {:tag "predicatedEquality"} _b362 ==> p63$1 && p63$2 ==> v90$1 == v90$2;
    assert {:tag "predicatedEquality"} _b361 ==> p63$1 && p63$2 ==> v89$1 == v89$2;
    assert {:tag "predicatedEquality"} _b360 ==> p63$1 && p63$2 ==> v88$1 == v88$2;
    assert {:tag "predicatedEquality"} _b359 ==> p63$1 && p63$2 ==> v87$1 == v87$2;
    assert {:tag "predicatedEquality"} _b358 ==> p63$1 && p63$2 ==> v86$1 == v86$2;
    assert {:tag "predicatedEquality"} _b357 ==> p63$1 && p63$2 ==> v85$1 == v85$2;
    assert {:tag "predicatedEquality"} _b356 ==> p63$1 && p63$2 ==> $d1.i.0$1 == $d1.i.0$2;
    assert {:tag "predicatedEquality"} _b355 ==> p63$1 && p63$2 ==> $offset.i.1$1 == $offset.i.1$2;
    assert {:tag "loopPredicateEquality"} _b354 ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> p63$1 == p63$2;
    assert {:tag "loopPredicateEquality"} _b353 ==> p63$1 == p63$2;
    assert {:tag "pow2NotZero"} _b352 ==> v86$2 != 0bv32;
    assert {:tag "pow2"} _b351 ==> v86$2 == 0bv32 || BV32_AND(v86$2, BV32_SUB(v86$2, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b350 ==> v86$1 != 0bv32;
    assert {:tag "pow2"} _b349 ==> v86$1 == 0bv32 || BV32_AND(v86$1, BV32_SUB(v86$1, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b348 ==> $d1.i.0$2 != 0bv32;
    assert {:tag "pow2"} _b347 ==> $d1.i.0$2 == 0bv32 || BV32_AND($d1.i.0$2, BV32_SUB($d1.i.0$2, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b346 ==> $d1.i.0$1 != 0bv32;
    assert {:tag "pow2"} _b345 ==> $d1.i.0$1 == 0bv32 || BV32_AND($d1.i.0$1, BV32_SUB($d1.i.0$1, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b344 ==> $offset.i.1$2 != 0bv32;
    assert {:tag "pow2"} _b343 ==> $offset.i.1$2 == 0bv32 || BV32_AND($offset.i.1$2, BV32_SUB($offset.i.1$2, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b342 ==> $offset.i.1$1 != 0bv32;
    assert {:tag "pow2"} _b341 ==> $offset.i.1$1 == 0bv32 || BV32_AND($offset.i.1$1, BV32_SUB($offset.i.1$1, 1bv32)) == 0bv32;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assume {:predicate "p63"} {:dominator_predicate "p58"} true;
    assert p63$1 ==> p2$1;
    assert p63$2 ==> p2$2;
    assert {:do_not_predicate} {:tag "accessOnlyIfEnabledInEnclosingScopes"} {:thread 1} _b87 ==> _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> BV32_UGT(v77$1, 0bv32);
    assert {:do_not_predicate} {:tag "accessOnlyIfEnabledInEnclosingScopes"} {:thread 1} _b86 ==> _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> 1bv32 != v14$1;
    assert {:do_not_predicate} {:tag "accessOnlyIfEnabledInEnclosingScopes"} {:thread 1} _b85 ==> _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> BV32_UGT(v77$1, 0bv32);
    assert {:do_not_predicate} {:tag "accessOnlyIfEnabledInEnclosingScopes"} {:thread 1} _b84 ==> _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> 1bv32 != v14$1;
    assert {:do_not_predicate} {:tag "conditionsImplyingEnabledness"} {:thread 1} _b83 ==> 1bv32 != v14$1 && BV32_UGT(v77$1, 0bv32) && BV32_ULT($d1.i.0$1, v79$1) ==> p63$1;
    assert {:do_not_predicate} {:tag "conditionsImplyingEnabledness"} {:thread 2} _b83 ==> 1bv32 != v14$2 && BV32_UGT(v77$2, 0bv32) && BV32_ULT($d1.i.0$2, v79$2) ==> p63$2;
    assert {:tag "conditionsImpliedByEnabledness"} {:thread 1} p63$1 ==> _b82 ==> p63$1 ==> 1bv32 != v14$1 && BV32_UGT(v77$1, 0bv32);
    assert {:tag "conditionsImpliedByEnabledness"} {:thread 2} p63$2 ==> _b82 ==> p63$2 ==> 1bv32 != v14$2 && BV32_UGT(v77$2, 0bv32);
    assert {:tag "loopBound"} {:thread 1} p63$1 ==> _b81 ==> BV32_UGE($d1.i.0$1, 2bv32);
    assert {:tag "loopBound"} {:thread 2} p63$2 ==> _b81 ==> BV32_UGE($d1.i.0$2, 2bv32);
    assert {:tag "loopBound"} {:thread 1} p63$1 ==> _b80 ==> BV32_ULE($d1.i.0$1, 2bv32);
    assert {:tag "loopBound"} {:thread 2} p63$2 ==> _b80 ==> BV32_ULE($d1.i.0$2, 2bv32);
    assert {:tag "loopBound"} {:thread 1} p63$1 ==> _b79 ==> BV32_SGE($d1.i.0$1, 2bv32);
    assert {:tag "loopBound"} {:thread 2} p63$2 ==> _b79 ==> BV32_SGE($d1.i.0$2, 2bv32);
    assert {:tag "loopBound"} {:thread 1} p63$1 ==> _b78 ==> BV32_SLE($d1.i.0$1, 2bv32);
    assert {:tag "loopBound"} {:thread 2} p63$2 ==> _b78 ==> BV32_SLE($d1.i.0$2, 2bv32);
    assert {:tag "guardMinusInitialIsUniform"} {:thread 1} p63$1 ==> _b77 ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> BV32_SUB($d1.i.0$1, 2bv32) == BV32_SUB($d1.i.0$2, 2bv32);
    assert {:tag "guardMinusInitialIsUniform"} {:thread 2} p63$2 ==> _b77 ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> BV32_SUB($d1.i.0$2, 2bv32) == BV32_SUB($d1.i.0$1, 2bv32);
    assert {:tag "guardMinusInitialIsUniform"} {:thread 1} p63$1 ==> _b76 ==> BV32_SUB($d1.i.0$1, 2bv32) == BV32_SUB($d1.i.0$2, 2bv32);
    assert {:tag "guardMinusInitialIsUniform"} {:thread 2} p63$2 ==> _b76 ==> BV32_SUB($d1.i.0$2, 2bv32) == BV32_SUB($d1.i.0$1, 2bv32);
    assert {:block_sourceloc} {:sourceloc_num 175} p63$1 ==> true;
    v85$1 := (if p63$1 then BV32_ULT($d1.i.0$1, v79$1) else v85$1);
    v85$2 := (if p63$2 then BV32_ULT($d1.i.0$2, v79$2) else v85$2);
    p64$1 := false;
    p64$2 := false;
    p65$1 := false;
    p65$2 := false;
    p66$1 := false;
    p66$2 := false;
    p67$1 := false;
    p67$2 := false;
    p68$1 := false;
    p68$2 := false;
    p69$1 := false;
    p69$2 := false;
    p70$1 := false;
    p70$2 := false;
    p64$1 := (if p63$1 && v85$1 then v85$1 else p64$1);
    p64$2 := (if p63$2 && v85$2 then v85$2 else p64$2);
    p63$1 := (if p63$1 && !v85$1 then v85$1 else p63$1);
    p63$2 := (if p63$2 && !v85$2 then v85$2 else p63$2);
    v86$1 := (if p64$1 then BV32_LSHR($offset.i.1$1, 1bv32) else v86$1);
    v86$2 := (if p64$2 then BV32_LSHR($offset.i.1$2, 1bv32) else v86$2);
    goto __partitioned_block_$73_1;

  __partitioned_block_$73_1:
    call {:sourceloc_num 177} $bugle_barrier_duplicated_25(1bv1, 1bv1, p64$1, p64$2);
    v87$1 := (if p64$1 then BV32_ULT(local_id_x$1, BV32_SUB($d1.i.0$1, 1bv32)) else v87$1);
    v87$2 := (if p64$2 then BV32_ULT(local_id_x$2, BV32_SUB($d1.i.0$2, 1bv32)) else v87$2);
    p66$1 := (if p64$1 && v87$1 then v87$1 else p66$1);
    p66$2 := (if p64$2 && v87$2 then v87$2 else p66$2);
    v88$1 := (if p66$1 then BV32_SUB(BV32_MUL(v86$1, BV32_ADD(local_id_x$1, 1bv32)), 1bv32) else v88$1);
    v88$2 := (if p66$2 then BV32_SUB(BV32_MUL(v86$2, BV32_ADD(local_id_x$2, 1bv32)), 1bv32) else v88$2);
    v89$1 := (if p66$1 then BV32_ADD(v88$1, BV32_LSHR(v86$1, 1bv32)) else v89$1);
    v89$2 := (if p66$2 then BV32_ADD(v88$2, BV32_LSHR(v86$2, 1bv32)) else v89$2);
    call {:sourceloc} {:sourceloc_num 179} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p66$1, BV32_ADD(1bv32, v89$1), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v89$1)]);
    assume {:do_not_predicate} {:check_id "check_state_180"} {:captureState "check_state_180"} {:sourceloc} {:sourceloc_num 179} true;
    call {:check_id "check_state_180"} {:sourceloc} {:sourceloc_num 179} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p66$2, BV32_ADD(1bv32, v89$2), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v89$2)]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    v90$1 := (if p66$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v89$1)] else v90$1);
    v90$2 := (if p66$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v89$2)] else v90$2);
    call {:sourceloc} {:sourceloc_num 180} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p66$1, BV32_ADD(1bv32, v88$1), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v88$1)]);
    assume {:do_not_predicate} {:check_id "check_state_181"} {:captureState "check_state_181"} {:sourceloc} {:sourceloc_num 180} true;
    call {:check_id "check_state_181"} {:sourceloc} {:sourceloc_num 180} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p66$2, BV32_ADD(1bv32, v88$2), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v88$2)]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    v91$1 := (if p66$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v88$1)] else v91$1);
    v91$2 := (if p66$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v88$2)] else v91$2);
    call {:sourceloc} {:sourceloc_num 181} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p66$1, BV32_ADD(1bv32, v89$1), BV32_ADD(BV16_ZEXT32(v90$1), BV16_ZEXT32(v91$1))[16:0], $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v89$1)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p66$2, BV32_ADD(1bv32, v89$2));
    assume {:do_not_predicate} {:check_id "check_state_182"} {:captureState "check_state_182"} {:sourceloc} {:sourceloc_num 181} true;
    call {:check_id "check_state_182"} {:sourceloc} {:sourceloc_num 181} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p66$2, BV32_ADD(1bv32, v89$2), BV32_ADD(BV16_ZEXT32(v90$2), BV16_ZEXT32(v91$2))[16:0]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v89$1)] := (if p66$1 then BV32_ADD(BV16_ZEXT32(v90$1), BV16_ZEXT32(v91$1))[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v89$1)]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v89$2)] := (if p66$2 then BV32_ADD(BV16_ZEXT32(v90$2), BV16_ZEXT32(v91$2))[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v89$2)]);
    $offset.i.1$1, $d1.i.0$1 := (if p64$1 then v86$1 else $offset.i.1$1), (if p64$1 then BV32_SHL($d1.i.0$1, 1bv32) else $d1.i.0$1);
    $offset.i.1$2, $d1.i.0$2 := (if p64$2 then v86$2 else $offset.i.1$2), (if p64$2 then BV32_SHL($d1.i.0$2, 1bv32) else $d1.i.0$2);
    p63$1 := (if p64$1 then true else p63$1);
    p63$2 := (if p64$2 then true else p63$2);
    goto $73.backedge, __partitioned_block_$73.tail_0;

  __partitioned_block_$73.tail_0:
    assume !p63$1 && !p63$2;
    goto __partitioned_block_$73.tail_1;

  __partitioned_block_$73.tail_1:
    call {:sourceloc_num 184} $bugle_barrier_duplicated_24(1bv1, 1bv1, p58$1, p58$2);
    call {:sourceloc} {:sourceloc_num 185} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active(p58$1, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[1bv1][0bv32]);
    assume {:do_not_predicate} {:check_id "check_state_174"} {:captureState "check_state_174"} {:sourceloc} {:sourceloc_num 185} true;
    call {:check_id "check_state_174"} {:sourceloc} {:sourceloc_num 185} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active(p58$2, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active"} true;
    v92$1 := (if p58$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[1bv1][0bv32] else v92$1);
    v92$2 := (if p58$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] else v92$2);
    v93$1 := (if p58$1 then BV32_ULT(local_id_x$1, v92$1) else v93$1);
    v93$2 := (if p58$2 then BV32_ULT(local_id_x$2, v92$2) else v93$2);
    p68$1 := (if p58$1 && v93$1 then v93$1 else p68$1);
    p68$2 := (if p58$2 && v93$2 then v93$2 else p68$2);
    v94$1 := (if p68$1 then 1bv32 == $is_active_second.3$1 else v94$1);
    v94$2 := (if p68$2 then 1bv32 == $is_active_second.3$2 else v94$2);
    p70$1 := (if p68$1 && v94$1 then v94$1 else p70$1);
    p70$2 := (if p68$2 && v94$2 then v94$2 else p70$2);
    call {:sourceloc} {:sourceloc_num 188} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p70$1, local_id_x$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][local_id_x$1]);
    assume {:do_not_predicate} {:check_id "check_state_175"} {:captureState "check_state_175"} {:sourceloc} {:sourceloc_num 188} true;
    call {:check_id "check_state_175"} {:sourceloc} {:sourceloc_num 188} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p70$2, local_id_x$2, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    v95$1 := (if p70$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][local_id_x$1] else v95$1);
    v95$2 := (if p70$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] else v95$2);
    v96$1 := (if p70$1 then BV32_ADD(v92$1, BV16_ZEXT32(v95$1)) else v96$1);
    v96$2 := (if p70$2 then BV32_ADD(v92$2, BV16_ZEXT32(v95$2)) else v96$2);
    call {:sourceloc} {:sourceloc_num 189} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p70$1, v96$1, $mid.2$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][v96$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p70$2, v96$2);
    assume {:do_not_predicate} {:check_id "check_state_176"} {:captureState "check_state_176"} {:sourceloc} {:sourceloc_num 189} true;
    call {:check_id "check_state_176"} {:sourceloc} {:sourceloc_num 189} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p70$2, v96$2, $mid.2$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][v96$1] := (if p70$1 then $mid.2$1 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][v96$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v96$2] := (if p70$2 then $mid.2$2 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v96$2]);
    call {:sourceloc} {:sourceloc_num 190} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p70$1, v96$1, $right.1$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][v96$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p70$2, v96$2);
    assume {:do_not_predicate} {:check_id "check_state_177"} {:captureState "check_state_177"} {:sourceloc} {:sourceloc_num 190} true;
    call {:check_id "check_state_177"} {:sourceloc} {:sourceloc_num 190} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p70$2, v96$2, $right.1$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][v96$1] := (if p70$1 then $right.1$1 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][v96$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v96$2] := (if p70$2 then $right.1$2 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v96$2]);
    call {:sourceloc} {:sourceloc_num 191} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p70$1, v96$1, $count.i.0$1[16:0], $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][v96$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p70$2, v96$2);
    assume {:do_not_predicate} {:check_id "check_state_178"} {:captureState "check_state_178"} {:sourceloc} {:sourceloc_num 191} true;
    call {:check_id "check_state_178"} {:sourceloc} {:sourceloc_num 191} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p70$2, v96$2, $count.i.0$2[16:0]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][v96$1] := (if p70$1 then $count.i.0$1[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][v96$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v96$2] := (if p70$2 then $count.i.0$2[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v96$2]);
    call {:sourceloc} {:sourceloc_num 192} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p70$1, v96$1, $right_count.1$1[16:0], $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][v96$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p70$2, v96$2);
    assume {:do_not_predicate} {:check_id "check_state_179"} {:captureState "check_state_179"} {:sourceloc} {:sourceloc_num 192} true;
    call {:check_id "check_state_179"} {:sourceloc} {:sourceloc_num 192} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p70$2, v96$2, $right_count.1$2[16:0]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][v96$1] := (if p70$1 then $right_count.1$1[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][v96$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v96$2] := (if p70$2 then $right_count.1$2[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v96$2]);
    goto __partitioned_block_$73.tail_2;

  __partitioned_block_$73.tail_2:
    call {:sourceloc_num 195} $bugle_barrier_duplicated_5(1bv1, 1bv1, p11$1, p11$2);
    v97$1 := (if p11$1 then 0bv32 == local_id_x$1 else v97$1);
    v97$2 := (if p11$2 then 0bv32 == local_id_x$2 else v97$2);
    p72$1 := (if p11$1 && v97$1 then v97$1 else p72$1);
    p72$2 := (if p11$2 && v97$2 then v97$2 else p72$2);
    call {:sourceloc} {:sourceloc_num 197} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active(p72$1, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[1bv1][0bv32]);
    assume {:do_not_predicate} {:check_id "check_state_165"} {:captureState "check_state_165"} {:sourceloc} {:sourceloc_num 197} true;
    call {:check_id "check_state_165"} {:sourceloc} {:sourceloc_num 197} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active(p72$2, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active"} true;
    v98$1 := (if p72$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[1bv1][0bv32] else v98$1);
    v98$2 := (if p72$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] else v98$2);
    call {:sourceloc} {:sourceloc_num 198} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p72$1, v98$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][v98$1]);
    assume {:do_not_predicate} {:check_id "check_state_166"} {:captureState "check_state_166"} {:sourceloc} {:sourceloc_num 198} true;
    call {:check_id "check_state_166"} {:sourceloc} {:sourceloc_num 198} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p72$2, v98$2, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v98$2]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    v99$1 := (if p72$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][v98$1] else v99$1);
    v99$2 := (if p72$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v98$2] else v99$2);
    call {:sourceloc} {:sourceloc_num 199} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active(p72$1, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[1bv1][0bv32]);
    assume {:do_not_predicate} {:check_id "check_state_167"} {:captureState "check_state_167"} {:sourceloc} {:sourceloc_num 199} true;
    call {:check_id "check_state_167"} {:sourceloc} {:sourceloc_num 199} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active(p72$2, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active"} true;
    v100$1 := (if p72$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[1bv1][0bv32] else v100$1);
    v100$2 := (if p72$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] else v100$2);
    call {:sourceloc} {:sourceloc_num 200} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active(p72$1, 0bv32, BV32_ADD(v100$1, BV16_ZEXT32(v99$1)), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[1bv1][0bv32]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active(p72$2, 0bv32);
    assume {:do_not_predicate} {:check_id "check_state_168"} {:captureState "check_state_168"} {:sourceloc} {:sourceloc_num 200} true;
    call {:check_id "check_state_168"} {:sourceloc} {:sourceloc_num 200} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active(p72$2, 0bv32, BV32_ADD(v100$2, BV16_ZEXT32(v99$2)));
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[1bv1][0bv32] := (if p72$1 then BV32_ADD(v100$1, BV16_ZEXT32(v99$1)) else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[1bv1][0bv32]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] := (if p72$2 then BV32_ADD(v100$2, BV16_ZEXT32(v99$2)) else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    call {:sourceloc} {:sourceloc_num 201} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active(p72$1, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[1bv1][0bv32]);
    assume {:do_not_predicate} {:check_id "check_state_169"} {:captureState "check_state_169"} {:sourceloc} {:sourceloc_num 201} true;
    call {:check_id "check_state_169"} {:sourceloc} {:sourceloc_num 201} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active(p72$2, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active"} true;
    v101$1 := (if p72$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[1bv1][0bv32] else v101$1);
    v101$2 := (if p72$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] else v101$2);
    v102$1 := (if p72$1 then 0bv32 == BV32_AND(v101$1, BV32_SUB(v101$1, 1bv32)) else v102$1);
    v102$2 := (if p72$2 then 0bv32 == BV32_AND(v101$2, BV32_SUB(v101$2, 1bv32)) else v102$2);
    p74$1 := (if p72$1 && v102$1 then v102$1 else p74$1);
    p74$2 := (if p72$2 && v102$2 then v102$2 else p74$2);
    p73$1 := (if p72$1 && !v102$1 then !v102$1 else p73$1);
    p73$2 := (if p72$2 && !v102$2 then !v102$2 else p73$2);
    v103$1 := (if p73$1 then FP32_CONV64(SI32_TO_FP32(v101$1)) else v103$1);
    v103$2 := (if p73$2 then FP32_CONV64(SI32_TO_FP32(v101$2)) else v103$2);
    call {:sourceloc_num 204} v104$1, v104$2 := $__bugle_frexp_exp(p73$1, v103$1, p73$2, v103$2);
    assume {:captureState "call_return_state_0"} {:procedureName "$__bugle_frexp_exp"} true;
    call {:sourceloc_num 205} v105$1, v105$2 := $__bugle_frexp_frac(p73$1, v103$1, p73$2, v103$2);
    assume {:captureState "call_return_state_0"} {:procedureName "$__bugle_frexp_frac"} true;
    $.0$1 := (if p73$1 then BV32_SHL(1bv32, v104$1) else $.0$1);
    $.0$2 := (if p73$2 then BV32_SHL(1bv32, v104$2) else $.0$2);
    $.0$1 := (if p74$1 then v101$1 else $.0$1);
    $.0$2 := (if p74$2 then v101$2 else $.0$2);
    call {:sourceloc} {:sourceloc_num 207} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction(p72$1, 0bv32, $.0$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction[1bv1][0bv32]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction(p72$2, 0bv32);
    assume {:do_not_predicate} {:check_id "check_state_170"} {:captureState "check_state_170"} {:sourceloc} {:sourceloc_num 207} true;
    call {:check_id "check_state_170"} {:sourceloc} {:sourceloc_num 207} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction(p72$2, 0bv32, $.0$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction[1bv1][0bv32] := (if p72$1 then $.0$1 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction[1bv1][0bv32]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] := (if p72$2 then $.0$2 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    call {:sourceloc} {:sourceloc_num 208} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk(p72$1, 0bv32, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk[1bv1][0bv32]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk(p72$2, 0bv32);
    assume {:do_not_predicate} {:check_id "check_state_171"} {:captureState "check_state_171"} {:sourceloc} {:sourceloc_num 208} true;
    call {:check_id "check_state_171"} {:sourceloc} {:sourceloc_num 208} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk(p72$2, 0bv32, 0bv32);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk[1bv1][0bv32] := (if p72$1 then 0bv32 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk[1bv1][0bv32]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] := (if p72$2 then 0bv32 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    call {:sourceloc} {:sourceloc_num 209} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged(p72$1, 0bv32, 1bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged[1bv1][0bv32]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged(p72$2, 0bv32);
    assume {:do_not_predicate} {:check_id "check_state_172"} {:captureState "check_state_172"} {:sourceloc} {:sourceloc_num 209} true;
    call {:check_id "check_state_172"} {:sourceloc} {:sourceloc_num 209} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged(p72$2, 0bv32, 1bv32);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged[1bv1][0bv32] := (if p72$1 then 1bv32 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged[1bv1][0bv32]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] := (if p72$2 then 1bv32 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    goto __partitioned_block_$73.tail_3;

  __partitioned_block_$73.tail_3:
    call {:sourceloc_num 211} $bugle_barrier_duplicated_6(1bv1, 1bv1, p11$1, p11$2);
    call {:sourceloc} {:sourceloc_num 212} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction(p11$1, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction[1bv1][0bv32]);
    assume {:do_not_predicate} {:check_id "check_state_10"} {:captureState "check_state_10"} {:sourceloc} {:sourceloc_num 212} true;
    call {:check_id "check_state_10"} {:sourceloc} {:sourceloc_num 212} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction(p11$2, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction"} true;
    v106$1 := (if p11$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction[1bv1][0bv32] else v106$1);
    v106$2 := (if p11$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] else v106$2);
    v107$1 := (if p11$1 then BV32_UGT(v106$1, group_size_x) else v107$1);
    v107$2 := (if p11$2 then BV32_UGT(v106$2, group_size_x) else v107$2);
    p2$1 := (if p11$1 && v107$1 then !v107$1 else p2$1);
    p2$2 := (if p11$2 && v107$2 then !v107$2 else p2$2);
    p75$1 := (if p11$1 && !v107$1 then !v107$1 else p75$1);
    p75$2 := (if p11$2 && !v107$2 then !v107$2 else p75$2);
    $is_active_second.0$1, $mid.0$1, $right_count.0$1, $left_count.0$1, $right.0$1, $left.0$1 := (if p75$1 then $is_active_second.3$1 else $is_active_second.0$1), (if p75$1 then $mid.2$1 else $mid.0$1), (if p75$1 then $right_count.1$1 else $right_count.0$1), (if p75$1 then $left_count.1$1 else $left_count.0$1), (if p75$1 then $right.1$1 else $right.0$1), (if p75$1 then $left.1$1 else $left.0$1);
    $is_active_second.0$2, $mid.0$2, $right_count.0$2, $left_count.0$2, $right.0$2, $left.0$2 := (if p75$2 then $is_active_second.3$2 else $is_active_second.0$2), (if p75$2 then $mid.2$2 else $mid.0$2), (if p75$2 then $right_count.1$2 else $right_count.0$2), (if p75$2 then $left_count.1$2 else $left_count.0$2), (if p75$2 then $right.1$2 else $right.0$2), (if p75$2 then $left.1$2 else $left.0$2);
    p2$1 := (if p75$1 then true else p2$1);
    p2$2 := (if p75$2 then true else p2$2);
    goto $3.backedge, __partitioned_block_$3.tail_0;

  __partitioned_block_$3.tail_0:
    assume !p2$1 && !p2$2;
    goto __partitioned_block_$3.tail_1;

  __partitioned_block_$3.tail_1:
    call {:sourceloc_num 216} $bugle_barrier_duplicated_7(1bv1, 1bv1);
    v108$1 := BV32_ADD(local_id_x$1, group_size_x);
    v108$2 := BV32_ADD(local_id_x$2, group_size_x);
    call {:sourceloc} {:sourceloc_num 217} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(true, local_id_x$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][local_id_x$1]);
    assume {:do_not_predicate} {:check_id "check_state_11"} {:captureState "check_state_11"} {:sourceloc} {:sourceloc_num 217} true;
    call {:check_id "check_state_11"} {:sourceloc} {:sourceloc_num 217} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(true, local_id_x$2, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count"} true;
    v109$1 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][local_id_x$1];
    v109$2 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2];
    call {:sourceloc} {:sourceloc_num 218} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(true, local_id_x$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][local_id_x$1]);
    assume {:do_not_predicate} {:check_id "check_state_12"} {:captureState "check_state_12"} {:sourceloc} {:sourceloc_num 218} true;
    call {:check_id "check_state_12"} {:sourceloc} {:sourceloc_num 218} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(true, local_id_x$2, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count"} true;
    v110$1 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][local_id_x$1];
    v110$2 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2];
    assume {:do_not_predicate} {:check_id "check_state_13"} {:captureState "check_state_13"} {:sourceloc} {:sourceloc_num 219} true;
    v111$1 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[1bv1][0bv32];
    v111$2 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32];
    v112$1 := BV32_ULT(v108$1, v111$1);
    v112$2 := BV32_ULT(v108$2, v111$2);
    p78$1 := (if v112$1 then v112$1 else p78$1);
    p78$2 := (if v112$2 then v112$2 else p78$2);
    p79$1 := (if !v112$1 then !v112$1 else p79$1);
    p79$2 := (if !v112$2 then !v112$2 else p79$2);
    call {:sourceloc} {:sourceloc_num 221} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p78$1, v108$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][v108$1]);
    assume {:do_not_predicate} {:check_id "check_state_163"} {:captureState "check_state_163"} {:sourceloc} {:sourceloc_num 221} true;
    call {:check_id "check_state_163"} {:sourceloc} {:sourceloc_num 221} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p78$2, v108$2, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v108$2]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count"} true;
    v113$1 := (if p78$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][v108$1] else v113$1);
    v113$2 := (if p78$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v108$2] else v113$2);
    call {:sourceloc} {:sourceloc_num 222} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p78$1, v108$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][v108$1]);
    assume {:do_not_predicate} {:check_id "check_state_164"} {:captureState "check_state_164"} {:sourceloc} {:sourceloc_num 222} true;
    call {:check_id "check_state_164"} {:sourceloc} {:sourceloc_num 222} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p78$2, v108$2, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v108$2]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count"} true;
    v114$1 := (if p78$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][v108$1] else v114$1);
    v114$2 := (if p78$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v108$2] else v114$2);
    $right_count_2.0$1, $left_count_2.0$1 := (if p78$1 then BV16_ZEXT32(v114$1) else $right_count_2.0$1), (if p78$1 then BV16_ZEXT32(v113$1) else $left_count_2.0$1);
    $right_count_2.0$2, $left_count_2.0$2 := (if p78$2 then BV16_ZEXT32(v114$2) else $right_count_2.0$2), (if p78$2 then BV16_ZEXT32(v113$2) else $left_count_2.0$2);
    havoc _HAVOC_bv32$1, _HAVOC_bv32$2;
    v257$1 := (if p79$1 then _HAVOC_bv32$1 else v257$1);
    v257$2 := (if p79$2 then _HAVOC_bv32$2 else v257$2);
    havoc _HAVOC_bv32$1, _HAVOC_bv32$2;
    v258$1 := (if p79$1 then _HAVOC_bv32$1 else v258$1);
    v258$2 := (if p79$2 then _HAVOC_bv32$2 else v258$2);
    $right_count_2.0$1, $left_count_2.0$1 := (if p79$1 then v257$1 else $right_count_2.0$1), (if p79$1 then v258$1 else $left_count_2.0$1);
    $right_count_2.0$2, $left_count_2.0$2 := (if p79$2 then v257$2 else $right_count_2.0$2), (if p79$2 then v258$2 else $left_count_2.0$2);
    v115$1 := 0bv32 == local_id_x$1;
    v115$2 := 0bv32 == local_id_x$2;
    p80$1 := (if v115$1 then v115$1 else p80$1);
    p80$2 := (if v115$2 then v115$2 else p80$2);
    call {:sourceloc} {:sourceloc_num 225} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p80$1, 0bv32, 0bv16, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][0bv32]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p80$2, 0bv32);
    assume {:do_not_predicate} {:check_id "check_state_161"} {:captureState "check_state_161"} {:sourceloc} {:sourceloc_num 225} true;
    call {:check_id "check_state_161"} {:sourceloc} {:sourceloc_num 225} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p80$2, 0bv32, 0bv16);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][0bv32] := (if p80$1 then 0bv16 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][0bv32]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] := (if p80$2 then 0bv16 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    call {:sourceloc} {:sourceloc_num 226} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p80$1, 0bv32, 0bv16, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][0bv32]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p80$2, 0bv32);
    assume {:do_not_predicate} {:check_id "check_state_162"} {:captureState "check_state_162"} {:sourceloc} {:sourceloc_num 226} true;
    call {:check_id "check_state_162"} {:sourceloc} {:sourceloc_num 226} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p80$2, 0bv32, 0bv16);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][0bv32] := (if p80$1 then 0bv16 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][0bv32]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] := (if p80$2 then 0bv16 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    goto __partitioned_block_$3.tail_2;

  __partitioned_block_$3.tail_2:
    call {:sourceloc_num 228} $bugle_barrier_duplicated_8(1bv1, 1bv1);
    v116$1 := BV32_SUB(BV16_ZEXT32(v110$1), BV16_ZEXT32(v109$1));
    v116$2 := BV32_SUB(BV16_ZEXT32(v110$2), BV16_ZEXT32(v109$2));
    v117$1 := BV1_ZEXT32((if 1bv32 == v116$1 then 1bv1 else 0bv1));
    v117$2 := BV1_ZEXT32((if 1bv32 == v116$2 then 1bv1 else 0bv1));
    call {:sourceloc} {:sourceloc_num 229} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(true, BV32_ADD(1bv32, local_id_x$1), v117$1[16:0], $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][BV32_ADD(1bv32, local_id_x$1)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(true, BV32_ADD(1bv32, local_id_x$2));
    assume {:do_not_predicate} {:check_id "check_state_14"} {:captureState "check_state_14"} {:sourceloc} {:sourceloc_num 229} true;
    call {:check_id "check_state_14"} {:sourceloc} {:sourceloc_num 229} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(true, BV32_ADD(1bv32, local_id_x$2), v117$2[16:0]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][BV32_ADD(1bv32, local_id_x$1)] := v117$1[16:0];
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, local_id_x$2)] := v117$2[16:0];
    call {:sourceloc} {:sourceloc_num 230} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(true, BV32_ADD(1bv32, local_id_x$1), BV1_ZEXT16(BV1_XOR((if v117$1 != 0bv32 then 1bv1 else 0bv1), 1bv1)), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][BV32_ADD(1bv32, local_id_x$1)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(true, BV32_ADD(1bv32, local_id_x$2));
    assume {:do_not_predicate} {:check_id "check_state_15"} {:captureState "check_state_15"} {:sourceloc} {:sourceloc_num 230} true;
    call {:check_id "check_state_15"} {:sourceloc} {:sourceloc_num 230} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(true, BV32_ADD(1bv32, local_id_x$2), BV1_ZEXT16(BV1_XOR((if v117$2 != 0bv32 then 1bv1 else 0bv1), 1bv1)));
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][BV32_ADD(1bv32, local_id_x$1)] := BV1_ZEXT16(BV1_XOR((if v117$1 != 0bv32 then 1bv1 else 0bv1), 1bv1));
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, local_id_x$2)] := BV1_ZEXT16(BV1_XOR((if v117$2 != 0bv32 then 1bv1 else 0bv1), 1bv1));
    v118$1 := 1bv32 == v117$1;
    v118$2 := 1bv32 == v117$2;
    p82$1 := (if v118$1 then v118$1 else p82$1);
    p82$2 := (if v118$2 then v118$2 else p82$2);
    p83$1 := (if !v118$1 then !v118$1 else p83$1);
    p83$2 := (if !v118$2 then !v118$2 else p83$2);
    $7$1 := (if p82$1 then 0bv32 else $7$1);
    $7$2 := (if p82$2 then 0bv32 else $7$2);
    $7$1 := (if p83$1 then v116$1 else $7$1);
    $7$2 := (if p83$2 then v116$2 else $7$2);
    call {:sourceloc} {:sourceloc_num 234} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(true, BV32_ADD(1bv32, local_id_x$1), $7$1[16:0], $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, local_id_x$1)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(true, BV32_ADD(1bv32, local_id_x$2));
    assume {:do_not_predicate} {:check_id "check_state_16"} {:captureState "check_state_16"} {:sourceloc} {:sourceloc_num 234} true;
    call {:check_id "check_state_16"} {:sourceloc} {:sourceloc_num 234} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(true, BV32_ADD(1bv32, local_id_x$2), $7$2[16:0]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, local_id_x$1)] := $7$1[16:0];
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, local_id_x$2)] := $7$2[16:0];
    call {:sourceloc} {:sourceloc_num 235} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(true, local_id_x$1, 0bv16, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(true, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_17"} {:captureState "check_state_17"} {:sourceloc} {:sourceloc_num 235} true;
    call {:check_id "check_state_17"} {:sourceloc} {:sourceloc_num 235} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(true, local_id_x$2, 0bv16);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][local_id_x$1] := 0bv16;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] := 0bv16;
    assume {:do_not_predicate} {:check_id "check_state_18"} {:captureState "check_state_18"} {:sourceloc} {:sourceloc_num 236} true;
    v119$1 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[1bv1][0bv32];
    v119$2 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32];
    v120$1 := BV32_ULT(v108$1, v119$1);
    v120$2 := BV32_ULT(v108$2, v119$2);
    p84$1 := (if v120$1 then v120$1 else p84$1);
    p84$2 := (if v120$2 then v120$2 else p84$2);
    p87$1 := (if !v120$1 then !v120$1 else p87$1);
    p87$2 := (if !v120$2 then !v120$2 else p87$2);
    v121$1 := (if p84$1 then BV32_SUB($right_count_2.0$1, $left_count_2.0$1) else v121$1);
    v121$2 := (if p84$2 then BV32_SUB($right_count_2.0$2, $left_count_2.0$2) else v121$2);
    v122$1 := (if p84$1 then BV1_ZEXT32((if 1bv32 == v121$1 then 1bv1 else 0bv1)) else v122$1);
    v122$2 := (if p84$2 then BV1_ZEXT32((if 1bv32 == v121$2 then 1bv1 else 0bv1)) else v122$2);
    call {:sourceloc} {:sourceloc_num 238} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p84$1, BV32_ADD(1bv32, v108$1), v122$1[16:0], $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][BV32_ADD(1bv32, v108$1)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p84$2, BV32_ADD(1bv32, v108$2));
    assume {:do_not_predicate} {:check_id "check_state_157"} {:captureState "check_state_157"} {:sourceloc} {:sourceloc_num 238} true;
    call {:check_id "check_state_157"} {:sourceloc} {:sourceloc_num 238} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p84$2, BV32_ADD(1bv32, v108$2), v122$2[16:0]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][BV32_ADD(1bv32, v108$1)] := (if p84$1 then v122$1[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][BV32_ADD(1bv32, v108$1)]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v108$2)] := (if p84$2 then v122$2[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v108$2)]);
    call {:sourceloc} {:sourceloc_num 239} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p84$1, BV32_ADD(1bv32, v108$1), BV1_ZEXT16(BV1_XOR((if v122$1 != 0bv32 then 1bv1 else 0bv1), 1bv1)), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][BV32_ADD(1bv32, v108$1)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p84$2, BV32_ADD(1bv32, v108$2));
    assume {:do_not_predicate} {:check_id "check_state_158"} {:captureState "check_state_158"} {:sourceloc} {:sourceloc_num 239} true;
    call {:check_id "check_state_158"} {:sourceloc} {:sourceloc_num 239} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p84$2, BV32_ADD(1bv32, v108$2), BV1_ZEXT16(BV1_XOR((if v122$2 != 0bv32 then 1bv1 else 0bv1), 1bv1)));
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][BV32_ADD(1bv32, v108$1)] := (if p84$1 then BV1_ZEXT16(BV1_XOR((if v122$1 != 0bv32 then 1bv1 else 0bv1), 1bv1)) else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][BV32_ADD(1bv32, v108$1)]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v108$2)] := (if p84$2 then BV1_ZEXT16(BV1_XOR((if v122$2 != 0bv32 then 1bv1 else 0bv1), 1bv1)) else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v108$2)]);
    v123$1 := (if p84$1 then 1bv32 == v122$1 else v123$1);
    v123$2 := (if p84$2 then 1bv32 == v122$2 else v123$2);
    p85$1 := (if p84$1 && v123$1 then v123$1 else p85$1);
    p85$2 := (if p84$2 && v123$2 then v123$2 else p85$2);
    p86$1 := (if p84$1 && !v123$1 then !v123$1 else p86$1);
    p86$2 := (if p84$2 && !v123$2 then !v123$2 else p86$2);
    $8$1 := (if p85$1 then 0bv32 else $8$1);
    $8$2 := (if p85$2 then 0bv32 else $8$2);
    $8$1 := (if p86$1 then v121$1 else $8$1);
    $8$2 := (if p86$2 then v121$2 else $8$2);
    call {:sourceloc} {:sourceloc_num 243} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p84$1, BV32_ADD(1bv32, v108$1), $8$1[16:0], $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v108$1)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p84$2, BV32_ADD(1bv32, v108$2));
    assume {:do_not_predicate} {:check_id "check_state_159"} {:captureState "check_state_159"} {:sourceloc} {:sourceloc_num 243} true;
    call {:check_id "check_state_159"} {:sourceloc} {:sourceloc_num 243} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p84$2, BV32_ADD(1bv32, v108$2), $8$2[16:0]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v108$1)] := (if p84$1 then $8$1[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v108$1)]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v108$2)] := (if p84$2 then $8$2[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v108$2)]);
    call {:sourceloc} {:sourceloc_num 244} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p84$1, v108$1, 0bv16, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][v108$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p84$2, v108$2);
    assume {:do_not_predicate} {:check_id "check_state_160"} {:captureState "check_state_160"} {:sourceloc} {:sourceloc_num 244} true;
    call {:check_id "check_state_160"} {:sourceloc} {:sourceloc_num 244} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p84$2, v108$2, 0bv16);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][v108$1] := (if p84$1 then 0bv16 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][v108$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v108$2] := (if p84$2 then 0bv16 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v108$2]);
    $is_one_lambda_2.0$1 := (if p84$1 then v122$1 else $is_one_lambda_2.0$1);
    $is_one_lambda_2.0$2 := (if p84$2 then v122$2 else $is_one_lambda_2.0$2);
    v124$1 := (if p87$1 then BV32_ULT(v108$1, 513bv32) else v124$1);
    v124$2 := (if p87$2 then BV32_ULT(v108$2, 513bv32) else v124$2);
    p88$1 := (if p87$1 && v124$1 then v124$1 else p88$1);
    p88$2 := (if p87$2 && v124$2 then v124$2 else p88$2);
    call {:sourceloc} {:sourceloc_num 247} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p88$1, BV32_ADD(1bv32, v108$1), 0bv16, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v108$1)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p88$2, BV32_ADD(1bv32, v108$2));
    assume {:do_not_predicate} {:check_id "check_state_155"} {:captureState "check_state_155"} {:sourceloc} {:sourceloc_num 247} true;
    call {:check_id "check_state_155"} {:sourceloc} {:sourceloc_num 247} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p88$2, BV32_ADD(1bv32, v108$2), 0bv16);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v108$1)] := (if p88$1 then 0bv16 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v108$1)]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v108$2)] := (if p88$2 then 0bv16 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v108$2)]);
    call {:sourceloc} {:sourceloc_num 248} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p88$1, v108$1, 0bv16, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][v108$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p88$2, v108$2);
    assume {:do_not_predicate} {:check_id "check_state_156"} {:captureState "check_state_156"} {:sourceloc} {:sourceloc_num 248} true;
    call {:check_id "check_state_156"} {:sourceloc} {:sourceloc_num 248} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p88$2, v108$2, 0bv16);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][v108$1] := (if p88$1 then 0bv16 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][v108$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v108$2] := (if p88$2 then 0bv16 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v108$2]);
    $is_one_lambda_2.0$1 := (if p87$1 then 0bv32 else $is_one_lambda_2.0$1);
    $is_one_lambda_2.0$2 := (if p87$2 then 0bv32 else $is_one_lambda_2.0$2);
    assume {:do_not_predicate} {:check_id "check_state_19"} {:captureState "check_state_19"} {:sourceloc} {:sourceloc_num 250} true;
    v125$1 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[1bv1][0bv32];
    v125$2 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32];
    assume {:do_not_predicate} {:check_id "check_state_20"} {:captureState "check_state_20"} {:sourceloc} {:sourceloc_num 251} true;
    v126$1 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction[1bv1][0bv32];
    v126$2 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32];
    $offset.i3.0$1, $d.i4.0$1 := 1bv32, BV32_LSHR(v126$1, 1bv32);
    $offset.i3.0$2, $d.i4.0$2 := 1bv32, BV32_LSHR(v126$2, 1bv32);
    p90$1 := true;
    p90$2 := true;
    assume {:captureState "loop_entry_state_5_0"} true;
    goto __partitioned_block_$102_0;

  __partitioned_block_$102_0:
    assume {:captureState "loop_head_state_5"} true;
    assert {:tag "nowrite"} _b409 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assert {:tag "noread"} _b408 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assert {:tag "accessBreak"} _b407 ==> _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> local_id_x$1 == BV32_DIV(BV32_DIV(_WATCHED_OFFSET, $offset.i3.0$1), 2bv32);
    assert {:tag "nowrite"} _b406 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assert {:tag "noread"} _b405 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assert {:tag "accessBreak"} _b404 ==> _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> local_id_x$1 == BV32_DIV(BV32_DIV(_WATCHED_OFFSET, $offset.i3.0$1), 2bv32);
    assert {:tag "nowrite"} _b403 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assert {:tag "noread"} _b402 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assert {:tag "nowrite"} _b401 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assert {:tag "noread"} _b400 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assert {:tag "predicatedEquality"} _b399 ==> p90$1 && p90$2 ==> v146$1 == v146$2;
    assert {:tag "predicatedEquality"} _b398 ==> p90$1 && p90$2 ==> v145$1 == v145$2;
    assert {:tag "predicatedEquality"} _b397 ==> p90$1 && p90$2 ==> v144$1 == v144$2;
    assert {:tag "predicatedEquality"} _b396 ==> p90$1 && p90$2 ==> v143$1 == v143$2;
    assert {:tag "predicatedEquality"} _b395 ==> p90$1 && p90$2 ==> v142$1 == v142$2;
    assert {:tag "predicatedEquality"} _b394 ==> p90$1 && p90$2 ==> v141$1 == v141$2;
    assert {:tag "predicatedEquality"} _b393 ==> p90$1 && p90$2 ==> v140$1 == v140$2;
    assert {:tag "predicatedEquality"} _b392 ==> p90$1 && p90$2 ==> v139$1 == v139$2;
    assert {:tag "predicatedEquality"} _b391 ==> p90$1 && p90$2 ==> v138$1 == v138$2;
    assert {:tag "predicatedEquality"} _b390 ==> p90$1 && p90$2 ==> v137$1 == v137$2;
    assert {:tag "predicatedEquality"} _b389 ==> p90$1 && p90$2 ==> v136$1 == v136$2;
    assert {:tag "predicatedEquality"} _b388 ==> p90$1 && p90$2 ==> v135$1 == v135$2;
    assert {:tag "predicatedEquality"} _b387 ==> p90$1 && p90$2 ==> v134$1 == v134$2;
    assert {:tag "predicatedEquality"} _b386 ==> p90$1 && p90$2 ==> v133$1 == v133$2;
    assert {:tag "predicatedEquality"} _b385 ==> p90$1 && p90$2 ==> v132$1 == v132$2;
    assert {:tag "predicatedEquality"} _b384 ==> p90$1 && p90$2 ==> v131$1 == v131$2;
    assert {:tag "predicatedEquality"} _b383 ==> p90$1 && p90$2 ==> v130$1 == v130$2;
    assert {:tag "predicatedEquality"} _b382 ==> p90$1 && p90$2 ==> v129$1 == v129$2;
    assert {:tag "predicatedEquality"} _b381 ==> p90$1 && p90$2 ==> v128$1 == v128$2;
    assert {:tag "predicatedEquality"} _b380 ==> p90$1 && p90$2 ==> v127$1 == v127$2;
    assert {:tag "predicatedEquality"} _b379 ==> p90$1 && p90$2 ==> $d.i4.0$1 == $d.i4.0$2;
    assert {:tag "predicatedEquality"} _b378 ==> p90$1 && p90$2 ==> $offset.i3.0$1 == $offset.i3.0$2;
    assert {:tag "loopPredicateEquality"} _b377 ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> p90$1 == p90$2;
    assert {:tag "loopPredicateEquality"} _b376 ==> p90$1 == p90$2;
    assert {:tag "pow2NotZero"} _b375 ==> $d.i4.0$2 != 0bv32;
    assert {:tag "pow2"} _b374 ==> $d.i4.0$2 == 0bv32 || BV32_AND($d.i4.0$2, BV32_SUB($d.i4.0$2, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b373 ==> $d.i4.0$1 != 0bv32;
    assert {:tag "pow2"} _b372 ==> $d.i4.0$1 == 0bv32 || BV32_AND($d.i4.0$1, BV32_SUB($d.i4.0$1, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b371 ==> $offset.i3.0$2 != 0bv32;
    assert {:tag "pow2"} _b370 ==> $offset.i3.0$2 == 0bv32 || BV32_AND($offset.i3.0$2, BV32_SUB($offset.i3.0$2, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b369 ==> $offset.i3.0$1 != 0bv32;
    assert {:tag "pow2"} _b368 ==> $offset.i3.0$1 == 0bv32 || BV32_AND($offset.i3.0$1, BV32_SUB($offset.i3.0$1, 1bv32)) == 0bv32;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:do_not_predicate} {:tag "conditionsImplyingEnabledness"} {:thread 1} _b25 ==> BV32_SGT($d.i4.0$1, 0bv32) ==> p90$1;
    assert {:do_not_predicate} {:tag "conditionsImplyingEnabledness"} {:thread 2} _b25 ==> BV32_SGT($d.i4.0$2, 0bv32) ==> p90$2;
    assert {:tag "loopBound"} {:thread 1} p90$1 ==> _b24 ==> BV32_UGE($d.i4.0$1, BV32_LSHR(v126$1, 1bv32));
    assert {:tag "loopBound"} {:thread 2} p90$2 ==> _b24 ==> BV32_UGE($d.i4.0$2, BV32_LSHR(v126$2, 1bv32));
    assert {:tag "loopBound"} {:thread 1} p90$1 ==> _b23 ==> BV32_ULE($d.i4.0$1, BV32_LSHR(v126$1, 1bv32));
    assert {:tag "loopBound"} {:thread 2} p90$2 ==> _b23 ==> BV32_ULE($d.i4.0$2, BV32_LSHR(v126$2, 1bv32));
    assert {:tag "loopBound"} {:thread 1} p90$1 ==> _b22 ==> BV32_SGE($d.i4.0$1, BV32_LSHR(v126$1, 1bv32));
    assert {:tag "loopBound"} {:thread 2} p90$2 ==> _b22 ==> BV32_SGE($d.i4.0$2, BV32_LSHR(v126$2, 1bv32));
    assert {:tag "loopBound"} {:thread 1} p90$1 ==> _b21 ==> BV32_SLE($d.i4.0$1, BV32_LSHR(v126$1, 1bv32));
    assert {:tag "loopBound"} {:thread 2} p90$2 ==> _b21 ==> BV32_SLE($d.i4.0$2, BV32_LSHR(v126$2, 1bv32));
    assert {:tag "guardMinusInitialIsUniform"} {:thread 1} p90$1 ==> _b20 ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> BV32_SUB($d.i4.0$1, BV32_LSHR(v126$1, 1bv32)) == BV32_SUB($d.i4.0$2, BV32_LSHR(v126$2, 1bv32));
    assert {:tag "guardMinusInitialIsUniform"} {:thread 2} p90$2 ==> _b20 ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> BV32_SUB($d.i4.0$2, BV32_LSHR(v126$2, 1bv32)) == BV32_SUB($d.i4.0$1, BV32_LSHR(v126$1, 1bv32));
    assert {:tag "guardMinusInitialIsUniform"} {:thread 1} p90$1 ==> _b19 ==> BV32_SUB($d.i4.0$1, BV32_LSHR(v126$1, 1bv32)) == BV32_SUB($d.i4.0$2, BV32_LSHR(v126$2, 1bv32));
    assert {:tag "guardMinusInitialIsUniform"} {:thread 2} p90$2 ==> _b19 ==> BV32_SUB($d.i4.0$2, BV32_LSHR(v126$2, 1bv32)) == BV32_SUB($d.i4.0$1, BV32_LSHR(v126$1, 1bv32));
    assert {:tag "guardNonNeg"} {:thread 1} p90$1 ==> _b18 ==> BV32_SLE(0bv32, $d.i4.0$1);
    assert {:tag "guardNonNeg"} {:thread 2} p90$2 ==> _b18 ==> BV32_SLE(0bv32, $d.i4.0$2);
    assert {:block_sourceloc} {:sourceloc_num 252} p90$1 ==> true;
    v127$1 := (if p90$1 then BV32_SGT($d.i4.0$1, 0bv32) else v127$1);
    v127$2 := (if p90$2 then BV32_SGT($d.i4.0$2, 0bv32) else v127$2);
    p91$1 := false;
    p91$2 := false;
    p92$1 := false;
    p92$2 := false;
    p93$1 := false;
    p93$2 := false;
    p94$1 := false;
    p94$2 := false;
    p95$1 := false;
    p95$2 := false;
    p96$1 := false;
    p96$2 := false;
    p97$1 := false;
    p97$2 := false;
    p98$1 := false;
    p98$2 := false;
    p99$1 := false;
    p99$2 := false;
    p100$1 := false;
    p100$2 := false;
    p101$1 := false;
    p101$2 := false;
    p102$1 := false;
    p102$2 := false;
    p103$1 := false;
    p103$2 := false;
    p104$1 := false;
    p104$2 := false;
    p105$1 := false;
    p105$2 := false;
    p91$1 := (if p90$1 && v127$1 then v127$1 else p91$1);
    p91$2 := (if p90$2 && v127$2 then v127$2 else p91$2);
    p90$1 := (if p90$1 && !v127$1 then v127$1 else p90$1);
    p90$2 := (if p90$2 && !v127$2 then v127$2 else p90$2);
    goto __partitioned_block_$102_1;

  __partitioned_block_$102_1:
    call {:sourceloc_num 254} $bugle_barrier_duplicated_23(1bv1, 1bv1, p91$1, p91$2);
    v128$1 := (if p91$1 then BV32_ULT(local_id_x$1, $d.i4.0$1) else v128$1);
    v128$2 := (if p91$2 then BV32_ULT(local_id_x$2, $d.i4.0$2) else v128$2);
    p93$1 := (if p91$1 && v128$1 then v128$1 else p93$1);
    p93$2 := (if p91$2 && v128$2 then v128$2 else p93$2);
    v129$1 := (if p93$1 then BV32_MUL($offset.i3.0$1, BV32_ADD(BV32_MUL(2bv32, local_id_x$1), 1bv32)) else v129$1);
    v129$2 := (if p93$2 then BV32_MUL($offset.i3.0$2, BV32_ADD(BV32_MUL(2bv32, local_id_x$2), 1bv32)) else v129$2);
    v130$1 := (if p93$1 then BV32_SUB(BV32_MUL($offset.i3.0$1, BV32_ADD(BV32_MUL(2bv32, local_id_x$1), 2bv32)), 1bv32) else v130$1);
    v130$2 := (if p93$2 then BV32_SUB(BV32_MUL($offset.i3.0$2, BV32_ADD(BV32_MUL(2bv32, local_id_x$2), 2bv32)), 1bv32) else v130$2);
    call {:sourceloc} {:sourceloc_num 256} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p93$1, BV32_ADD(1bv32, v130$1), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][BV32_ADD(1bv32, v130$1)]);
    assume {:do_not_predicate} {:check_id "check_state_137"} {:captureState "check_state_137"} {:sourceloc} {:sourceloc_num 256} true;
    call {:check_id "check_state_137"} {:sourceloc} {:sourceloc_num 256} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p93$2, BV32_ADD(1bv32, v130$2), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v130$2)]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count"} true;
    v131$1 := (if p93$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][BV32_ADD(1bv32, v130$1)] else v131$1);
    v131$2 := (if p93$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v130$2)] else v131$2);
    call {:sourceloc} {:sourceloc_num 257} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p93$1, BV32_ADD(1bv32, BV32_SUB(v129$1, 1bv32)), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][BV32_ADD(1bv32, BV32_SUB(v129$1, 1bv32))]);
    assume {:do_not_predicate} {:check_id "check_state_138"} {:captureState "check_state_138"} {:sourceloc} {:sourceloc_num 257} true;
    call {:check_id "check_state_138"} {:sourceloc} {:sourceloc_num 257} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p93$2, BV32_ADD(1bv32, BV32_SUB(v129$2, 1bv32)), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, BV32_SUB(v129$2, 1bv32))]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count"} true;
    v132$1 := (if p93$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][BV32_ADD(1bv32, BV32_SUB(v129$1, 1bv32))] else v132$1);
    v132$2 := (if p93$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, BV32_SUB(v129$2, 1bv32))] else v132$2);
    call {:sourceloc} {:sourceloc_num 258} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p93$1, BV32_ADD(1bv32, v130$1), BV32_ADD(BV16_ZEXT32(v131$1), BV16_ZEXT32(v132$1))[16:0], $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][BV32_ADD(1bv32, v130$1)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p93$2, BV32_ADD(1bv32, v130$2));
    assume {:do_not_predicate} {:check_id "check_state_139"} {:captureState "check_state_139"} {:sourceloc} {:sourceloc_num 258} true;
    call {:check_id "check_state_139"} {:sourceloc} {:sourceloc_num 258} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p93$2, BV32_ADD(1bv32, v130$2), BV32_ADD(BV16_ZEXT32(v131$2), BV16_ZEXT32(v132$2))[16:0]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][BV32_ADD(1bv32, v130$1)] := (if p93$1 then BV32_ADD(BV16_ZEXT32(v131$1), BV16_ZEXT32(v132$1))[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][BV32_ADD(1bv32, v130$1)]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v130$2)] := (if p93$2 then BV32_ADD(BV16_ZEXT32(v131$2), BV16_ZEXT32(v132$2))[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v130$2)]);
    call {:sourceloc} {:sourceloc_num 259} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p93$1, BV32_ADD(1bv32, v130$1), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][BV32_ADD(1bv32, v130$1)]);
    assume {:do_not_predicate} {:check_id "check_state_140"} {:captureState "check_state_140"} {:sourceloc} {:sourceloc_num 259} true;
    call {:check_id "check_state_140"} {:sourceloc} {:sourceloc_num 259} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p93$2, BV32_ADD(1bv32, v130$2), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v130$2)]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count"} true;
    v133$1 := (if p93$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][BV32_ADD(1bv32, v130$1)] else v133$1);
    v133$2 := (if p93$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v130$2)] else v133$2);
    call {:sourceloc} {:sourceloc_num 260} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p93$1, BV32_ADD(1bv32, BV32_SUB(v129$1, 1bv32)), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][BV32_ADD(1bv32, BV32_SUB(v129$1, 1bv32))]);
    assume {:do_not_predicate} {:check_id "check_state_141"} {:captureState "check_state_141"} {:sourceloc} {:sourceloc_num 260} true;
    call {:check_id "check_state_141"} {:sourceloc} {:sourceloc_num 260} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p93$2, BV32_ADD(1bv32, BV32_SUB(v129$2, 1bv32)), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, BV32_SUB(v129$2, 1bv32))]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count"} true;
    v134$1 := (if p93$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][BV32_ADD(1bv32, BV32_SUB(v129$1, 1bv32))] else v134$1);
    v134$2 := (if p93$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, BV32_SUB(v129$2, 1bv32))] else v134$2);
    call {:sourceloc} {:sourceloc_num 261} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p93$1, BV32_ADD(1bv32, v130$1), BV32_ADD(BV16_ZEXT32(v133$1), BV16_ZEXT32(v134$1))[16:0], $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][BV32_ADD(1bv32, v130$1)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p93$2, BV32_ADD(1bv32, v130$2));
    assume {:do_not_predicate} {:check_id "check_state_142"} {:captureState "check_state_142"} {:sourceloc} {:sourceloc_num 261} true;
    call {:check_id "check_state_142"} {:sourceloc} {:sourceloc_num 261} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p93$2, BV32_ADD(1bv32, v130$2), BV32_ADD(BV16_ZEXT32(v133$2), BV16_ZEXT32(v134$2))[16:0]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][BV32_ADD(1bv32, v130$1)] := (if p93$1 then BV32_ADD(BV16_ZEXT32(v133$1), BV16_ZEXT32(v134$1))[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][BV32_ADD(1bv32, v130$1)]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v130$2)] := (if p93$2 then BV32_ADD(BV16_ZEXT32(v133$2), BV16_ZEXT32(v134$2))[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v130$2)]);
    call {:sourceloc} {:sourceloc_num 262} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p93$1, BV32_SUB(v129$1, 1bv32), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][BV32_SUB(v129$1, 1bv32)]);
    assume {:do_not_predicate} {:check_id "check_state_143"} {:captureState "check_state_143"} {:sourceloc} {:sourceloc_num 262} true;
    call {:check_id "check_state_143"} {:sourceloc} {:sourceloc_num 262} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p93$2, BV32_SUB(v129$2, 1bv32), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_SUB(v129$2, 1bv32)]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper"} true;
    v135$1 := (if p93$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][BV32_SUB(v129$1, 1bv32)] else v135$1);
    v135$2 := (if p93$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_SUB(v129$2, 1bv32)] else v135$2);
    v136$1 := (if p93$1 then BV16_ZEXT32(v135$1) != 1bv32 else v136$1);
    v136$2 := (if p93$2 then BV16_ZEXT32(v135$2) != 1bv32 else v136$2);
    p98$1 := (if p93$1 && v136$1 then v136$1 else p98$1);
    p98$2 := (if p93$2 && v136$2 then v136$2 else p98$2);
    p95$1 := (if p93$1 && !v136$1 then !v136$1 else p95$1);
    p95$2 := (if p93$2 && !v136$2 then !v136$2 else p95$2);
    p98$1 := (if p94$1 then true else p98$1);
    p98$2 := (if p94$2 then true else p98$2);
    call {:sourceloc} {:sourceloc_num 264} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p95$1, v130$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][v130$1]);
    assume {:do_not_predicate} {:check_id "check_state_144"} {:captureState "check_state_144"} {:sourceloc} {:sourceloc_num 264} true;
    call {:check_id "check_state_144"} {:sourceloc} {:sourceloc_num 264} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p95$2, v130$2, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v130$2]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper"} true;
    v137$1 := (if p95$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][v130$1] else v137$1);
    v137$2 := (if p95$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v130$2] else v137$2);
    v138$1 := (if p95$1 then BV16_ZEXT32(v137$1) != 1bv32 else v138$1);
    v138$2 := (if p95$2 then BV16_ZEXT32(v137$2) != 1bv32 else v138$2);
    p98$1 := (if p95$1 && v138$1 then v138$1 else p98$1);
    p98$2 := (if p95$2 && v138$2 then v138$2 else p98$2);
    p98$1 := (if p97$1 then true else p98$1);
    p98$2 := (if p97$2 then true else p98$2);
    call {:sourceloc} {:sourceloc_num 266} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p98$1, BV32_SUB(v129$1, 1bv32), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][BV32_SUB(v129$1, 1bv32)]);
    assume {:do_not_predicate} {:check_id "check_state_145"} {:captureState "check_state_145"} {:sourceloc} {:sourceloc_num 266} true;
    call {:check_id "check_state_145"} {:sourceloc} {:sourceloc_num 266} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p98$2, BV32_SUB(v129$2, 1bv32), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_SUB(v129$2, 1bv32)]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper"} true;
    v139$1 := (if p98$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][BV32_SUB(v129$1, 1bv32)] else v139$1);
    v139$2 := (if p98$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_SUB(v129$2, 1bv32)] else v139$2);
    v140$1 := (if p98$1 then BV16_ZEXT32(v139$1) == 1bv32 else v140$1);
    v140$2 := (if p98$2 then BV16_ZEXT32(v139$2) == 1bv32 else v140$2);
    p99$1 := (if p98$1 && v140$1 then v140$1 else p99$1);
    p99$2 := (if p98$2 && v140$2 then v140$2 else p99$2);
    p100$1 := (if p98$1 && !v140$1 then !v140$1 else p100$1);
    p100$2 := (if p98$2 && !v140$2 then !v140$2 else p100$2);
    call {:sourceloc} {:sourceloc_num 268} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p99$1, v130$1, 1bv16, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][v130$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p99$2, v130$2);
    assume {:do_not_predicate} {:check_id "check_state_154"} {:captureState "check_state_154"} {:sourceloc} {:sourceloc_num 268} true;
    call {:check_id "check_state_154"} {:sourceloc} {:sourceloc_num 268} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p99$2, v130$2, 1bv16);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][v130$1] := (if p99$1 then 1bv16 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][v130$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v130$2] := (if p99$2 then 1bv16 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v130$2]);
    call {:sourceloc} {:sourceloc_num 270} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p100$1, v130$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][v130$1]);
    assume {:do_not_predicate} {:check_id "check_state_146"} {:captureState "check_state_146"} {:sourceloc} {:sourceloc_num 270} true;
    call {:check_id "check_state_146"} {:sourceloc} {:sourceloc_num 270} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p100$2, v130$2, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v130$2]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper"} true;
    v141$1 := (if p100$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][v130$1] else v141$1);
    v141$2 := (if p100$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v130$2] else v141$2);
    v142$1 := (if p100$1 then BV16_ZEXT32(v141$1) == 1bv32 else v142$1);
    v142$2 := (if p100$2 then BV16_ZEXT32(v141$2) == 1bv32 else v142$2);
    p101$1 := (if p100$1 && v142$1 then v142$1 else p101$1);
    p101$2 := (if p100$2 && v142$2 then v142$2 else p101$2);
    p102$1 := (if p100$1 && !v142$1 then !v142$1 else p102$1);
    p102$2 := (if p100$2 && !v142$2 then !v142$2 else p102$2);
    call {:sourceloc} {:sourceloc_num 272} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p101$1, BV32_SUB(v129$1, 1bv32), 1bv16, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][BV32_SUB(v129$1, 1bv32)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p101$2, BV32_SUB(v129$2, 1bv32));
    assume {:do_not_predicate} {:check_id "check_state_153"} {:captureState "check_state_153"} {:sourceloc} {:sourceloc_num 272} true;
    call {:check_id "check_state_153"} {:sourceloc} {:sourceloc_num 272} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p101$2, BV32_SUB(v129$2, 1bv32), 1bv16);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][BV32_SUB(v129$1, 1bv32)] := (if p101$1 then 1bv16 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][BV32_SUB(v129$1, 1bv32)]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_SUB(v129$2, 1bv32)] := (if p101$2 then 1bv16 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_SUB(v129$2, 1bv32)]);
    call {:sourceloc} {:sourceloc_num 274} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p102$1, BV32_ADD(1bv32, v130$1), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v130$1)]);
    assume {:do_not_predicate} {:check_id "check_state_147"} {:captureState "check_state_147"} {:sourceloc} {:sourceloc_num 274} true;
    call {:check_id "check_state_147"} {:sourceloc} {:sourceloc_num 274} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p102$2, BV32_ADD(1bv32, v130$2), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v130$2)]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    v143$1 := (if p102$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v130$1)] else v143$1);
    v143$2 := (if p102$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v130$2)] else v143$2);
    call {:sourceloc} {:sourceloc_num 275} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p102$1, BV32_ADD(1bv32, BV32_SUB(v129$1, 1bv32)), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, BV32_SUB(v129$1, 1bv32))]);
    assume {:do_not_predicate} {:check_id "check_state_148"} {:captureState "check_state_148"} {:sourceloc} {:sourceloc_num 275} true;
    call {:check_id "check_state_148"} {:sourceloc} {:sourceloc_num 275} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p102$2, BV32_ADD(1bv32, BV32_SUB(v129$2, 1bv32)), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, BV32_SUB(v129$2, 1bv32))]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    v144$1 := (if p102$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, BV32_SUB(v129$1, 1bv32))] else v144$1);
    v144$2 := (if p102$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, BV32_SUB(v129$2, 1bv32))] else v144$2);
    v145$1 := (if p102$1 then BV32_ADD(BV16_ZEXT32(v143$1), BV16_ZEXT32(v144$1)) else v145$1);
    v145$2 := (if p102$2 then BV32_ADD(BV16_ZEXT32(v143$2), BV16_ZEXT32(v144$2)) else v145$2);
    v146$1 := (if p102$1 then BV32_UGT(v145$1, 256bv32) else v146$1);
    v146$2 := (if p102$2 then BV32_UGT(v145$2, 256bv32) else v146$2);
    p104$1 := (if p102$1 && v146$1 then v146$1 else p104$1);
    p104$2 := (if p102$2 && v146$2 then v146$2 else p104$2);
    p103$1 := (if p102$1 && !v146$1 then !v146$1 else p103$1);
    p103$2 := (if p102$2 && !v146$2 then !v146$2 else p103$2);
    call {:sourceloc} {:sourceloc_num 280} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p103$1, BV32_ADD(1bv32, v130$1), v145$1[16:0], $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v130$1)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p103$2, BV32_ADD(1bv32, v130$2));
    assume {:do_not_predicate} {:check_id "check_state_149"} {:captureState "check_state_149"} {:sourceloc} {:sourceloc_num 280} true;
    call {:check_id "check_state_149"} {:sourceloc} {:sourceloc_num 280} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p103$2, BV32_ADD(1bv32, v130$2), v145$2[16:0]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v130$1)] := (if p103$1 then v145$1[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v130$1)]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v130$2)] := (if p103$2 then v145$2[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v130$2)]);
    call {:sourceloc} {:sourceloc_num 281} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p103$1, BV32_ADD(1bv32, BV32_SUB(v129$1, 1bv32)), 0bv16, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, BV32_SUB(v129$1, 1bv32))]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p103$2, BV32_ADD(1bv32, BV32_SUB(v129$2, 1bv32)));
    assume {:do_not_predicate} {:check_id "check_state_150"} {:captureState "check_state_150"} {:sourceloc} {:sourceloc_num 281} true;
    call {:check_id "check_state_150"} {:sourceloc} {:sourceloc_num 281} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p103$2, BV32_ADD(1bv32, BV32_SUB(v129$2, 1bv32)), 0bv16);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, BV32_SUB(v129$1, 1bv32))] := (if p103$1 then 0bv16 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, BV32_SUB(v129$1, 1bv32))]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, BV32_SUB(v129$2, 1bv32))] := (if p103$2 then 0bv16 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, BV32_SUB(v129$2, 1bv32))]);
    call {:sourceloc} {:sourceloc_num 277} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p104$1, BV32_SUB(v129$1, 1bv32), 1bv16, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][BV32_SUB(v129$1, 1bv32)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p104$2, BV32_SUB(v129$2, 1bv32));
    assume {:do_not_predicate} {:check_id "check_state_151"} {:captureState "check_state_151"} {:sourceloc} {:sourceloc_num 277} true;
    call {:check_id "check_state_151"} {:sourceloc} {:sourceloc_num 277} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p104$2, BV32_SUB(v129$2, 1bv32), 1bv16);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][BV32_SUB(v129$1, 1bv32)] := (if p104$1 then 1bv16 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][BV32_SUB(v129$1, 1bv32)]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_SUB(v129$2, 1bv32)] := (if p104$2 then 1bv16 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_SUB(v129$2, 1bv32)]);
    call {:sourceloc} {:sourceloc_num 278} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p104$1, v130$1, 1bv16, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][v130$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p104$2, v130$2);
    assume {:do_not_predicate} {:check_id "check_state_152"} {:captureState "check_state_152"} {:sourceloc} {:sourceloc_num 278} true;
    call {:check_id "check_state_152"} {:sourceloc} {:sourceloc_num 278} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p104$2, v130$2, 1bv16);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][v130$1] := (if p104$1 then 1bv16 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][v130$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v130$2] := (if p104$2 then 1bv16 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v130$2]);
    $offset.i3.0$1, $d.i4.0$1 := (if p91$1 then BV32_SHL($offset.i3.0$1, 1bv32) else $offset.i3.0$1), (if p91$1 then BV32_ASHR($d.i4.0$1, 1bv32) else $d.i4.0$1);
    $offset.i3.0$2, $d.i4.0$2 := (if p91$2 then BV32_SHL($offset.i3.0$2, 1bv32) else $offset.i3.0$2), (if p91$2 then BV32_ASHR($d.i4.0$2, 1bv32) else $d.i4.0$2);
    p90$1 := (if p91$1 then true else p90$1);
    p90$2 := (if p91$2 then true else p90$2);
    goto $102.backedge, $102.tail;

  $102.tail:
    assume !p90$1 && !p90$2;
    $offset.i3.1$1, $d1.i7.0$1 := $offset.i3.0$1, 2bv32;
    $offset.i3.1$2, $d1.i7.0$2 := $offset.i3.0$2, 2bv32;
    p106$1 := true;
    p106$2 := true;
    assume {:captureState "loop_entry_state_4_0"} true;
    goto __partitioned_block_$119_0;

  __partitioned_block_$119_0:
    assume {:captureState "loop_head_state_4"} true;
    assert {:tag "nowrite"} _b438 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assert {:tag "noread"} _b437 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assert {:tag "nowrite"} _b436 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assert {:tag "noread"} _b435 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assert {:tag "predicatedEquality"} _b434 ==> p106$1 && p106$2 ==> v155$1 == v155$2;
    assert {:tag "predicatedEquality"} _b433 ==> p106$1 && p106$2 ==> v154$1 == v154$2;
    assert {:tag "predicatedEquality"} _b432 ==> p106$1 && p106$2 ==> v153$1 == v153$2;
    assert {:tag "predicatedEquality"} _b431 ==> p106$1 && p106$2 ==> v152$1 == v152$2;
    assert {:tag "predicatedEquality"} _b430 ==> p106$1 && p106$2 ==> v151$1 == v151$2;
    assert {:tag "predicatedEquality"} _b429 ==> p106$1 && p106$2 ==> v150$1 == v150$2;
    assert {:tag "predicatedEquality"} _b428 ==> p106$1 && p106$2 ==> v149$1 == v149$2;
    assert {:tag "predicatedEquality"} _b427 ==> p106$1 && p106$2 ==> v148$1 == v148$2;
    assert {:tag "predicatedEquality"} _b426 ==> p106$1 && p106$2 ==> v147$1 == v147$2;
    assert {:tag "predicatedEquality"} _b425 ==> p106$1 && p106$2 ==> $d1.i7.0$1 == $d1.i7.0$2;
    assert {:tag "predicatedEquality"} _b424 ==> p106$1 && p106$2 ==> $offset.i3.1$1 == $offset.i3.1$2;
    assert {:tag "loopPredicateEquality"} _b423 ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> p106$1 == p106$2;
    assert {:tag "loopPredicateEquality"} _b422 ==> p106$1 == p106$2;
    assert {:tag "pow2NotZero"} _b421 ==> v148$2 != 0bv32;
    assert {:tag "pow2"} _b420 ==> v148$2 == 0bv32 || BV32_AND(v148$2, BV32_SUB(v148$2, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b419 ==> v148$1 != 0bv32;
    assert {:tag "pow2"} _b418 ==> v148$1 == 0bv32 || BV32_AND(v148$1, BV32_SUB(v148$1, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b417 ==> $d1.i7.0$2 != 0bv32;
    assert {:tag "pow2"} _b416 ==> $d1.i7.0$2 == 0bv32 || BV32_AND($d1.i7.0$2, BV32_SUB($d1.i7.0$2, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b415 ==> $d1.i7.0$1 != 0bv32;
    assert {:tag "pow2"} _b414 ==> $d1.i7.0$1 == 0bv32 || BV32_AND($d1.i7.0$1, BV32_SUB($d1.i7.0$1, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b413 ==> $offset.i3.1$2 != 0bv32;
    assert {:tag "pow2"} _b412 ==> $offset.i3.1$2 == 0bv32 || BV32_AND($offset.i3.1$2, BV32_SUB($offset.i3.1$2, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b411 ==> $offset.i3.1$1 != 0bv32;
    assert {:tag "pow2"} _b410 ==> $offset.i3.1$1 == 0bv32 || BV32_AND($offset.i3.1$1, BV32_SUB($offset.i3.1$1, 1bv32)) == 0bv32;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:do_not_predicate} {:tag "conditionsImplyingEnabledness"} {:thread 1} _b32 ==> BV32_ULT($d1.i7.0$1, v126$1) ==> p106$1;
    assert {:do_not_predicate} {:tag "conditionsImplyingEnabledness"} {:thread 2} _b32 ==> BV32_ULT($d1.i7.0$2, v126$2) ==> p106$2;
    assert {:tag "loopBound"} {:thread 1} p106$1 ==> _b31 ==> BV32_UGE($d1.i7.0$1, 2bv32);
    assert {:tag "loopBound"} {:thread 2} p106$2 ==> _b31 ==> BV32_UGE($d1.i7.0$2, 2bv32);
    assert {:tag "loopBound"} {:thread 1} p106$1 ==> _b30 ==> BV32_ULE($d1.i7.0$1, 2bv32);
    assert {:tag "loopBound"} {:thread 2} p106$2 ==> _b30 ==> BV32_ULE($d1.i7.0$2, 2bv32);
    assert {:tag "loopBound"} {:thread 1} p106$1 ==> _b29 ==> BV32_SGE($d1.i7.0$1, 2bv32);
    assert {:tag "loopBound"} {:thread 2} p106$2 ==> _b29 ==> BV32_SGE($d1.i7.0$2, 2bv32);
    assert {:tag "loopBound"} {:thread 1} p106$1 ==> _b28 ==> BV32_SLE($d1.i7.0$1, 2bv32);
    assert {:tag "loopBound"} {:thread 2} p106$2 ==> _b28 ==> BV32_SLE($d1.i7.0$2, 2bv32);
    assert {:tag "guardMinusInitialIsUniform"} {:thread 1} p106$1 ==> _b27 ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> BV32_SUB($d1.i7.0$1, 2bv32) == BV32_SUB($d1.i7.0$2, 2bv32);
    assert {:tag "guardMinusInitialIsUniform"} {:thread 2} p106$2 ==> _b27 ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> BV32_SUB($d1.i7.0$2, 2bv32) == BV32_SUB($d1.i7.0$1, 2bv32);
    assert {:tag "guardMinusInitialIsUniform"} {:thread 1} p106$1 ==> _b26 ==> BV32_SUB($d1.i7.0$1, 2bv32) == BV32_SUB($d1.i7.0$2, 2bv32);
    assert {:tag "guardMinusInitialIsUniform"} {:thread 2} p106$2 ==> _b26 ==> BV32_SUB($d1.i7.0$2, 2bv32) == BV32_SUB($d1.i7.0$1, 2bv32);
    assert {:block_sourceloc} {:sourceloc_num 288} p106$1 ==> true;
    v147$1 := (if p106$1 then BV32_ULT($d1.i7.0$1, v126$1) else v147$1);
    v147$2 := (if p106$2 then BV32_ULT($d1.i7.0$2, v126$2) else v147$2);
    p107$1 := false;
    p107$2 := false;
    p108$1 := false;
    p108$2 := false;
    p109$1 := false;
    p109$2 := false;
    p107$1 := (if p106$1 && v147$1 then v147$1 else p107$1);
    p107$2 := (if p106$2 && v147$2 then v147$2 else p107$2);
    p106$1 := (if p106$1 && !v147$1 then v147$1 else p106$1);
    p106$2 := (if p106$2 && !v147$2 then v147$2 else p106$2);
    v148$1 := (if p107$1 then BV32_LSHR($offset.i3.1$1, 1bv32) else v148$1);
    v148$2 := (if p107$2 then BV32_LSHR($offset.i3.1$2, 1bv32) else v148$2);
    goto __partitioned_block_$119_1;

  __partitioned_block_$119_1:
    call {:sourceloc_num 290} $bugle_barrier_duplicated_22(1bv1, 1bv1, p107$1, p107$2);
    v149$1 := (if p107$1 then BV32_ULT(local_id_x$1, BV32_SUB($d1.i7.0$1, 1bv32)) else v149$1);
    v149$2 := (if p107$2 then BV32_ULT(local_id_x$2, BV32_SUB($d1.i7.0$2, 1bv32)) else v149$2);
    p109$1 := (if p107$1 && v149$1 then v149$1 else p109$1);
    p109$2 := (if p107$2 && v149$2 then v149$2 else p109$2);
    v150$1 := (if p109$1 then BV32_SUB(BV32_MUL(v148$1, BV32_ADD(local_id_x$1, 1bv32)), 1bv32) else v150$1);
    v150$2 := (if p109$2 then BV32_SUB(BV32_MUL(v148$2, BV32_ADD(local_id_x$2, 1bv32)), 1bv32) else v150$2);
    v151$1 := (if p109$1 then BV32_ADD(v150$1, BV32_LSHR(v148$1, 1bv32)) else v151$1);
    v151$2 := (if p109$2 then BV32_ADD(v150$2, BV32_LSHR(v148$2, 1bv32)) else v151$2);
    call {:sourceloc} {:sourceloc_num 292} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p109$1, BV32_ADD(1bv32, v151$1), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][BV32_ADD(1bv32, v151$1)]);
    assume {:do_not_predicate} {:check_id "check_state_131"} {:captureState "check_state_131"} {:sourceloc} {:sourceloc_num 292} true;
    call {:check_id "check_state_131"} {:sourceloc} {:sourceloc_num 292} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p109$2, BV32_ADD(1bv32, v151$2), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v151$2)]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count"} true;
    v152$1 := (if p109$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][BV32_ADD(1bv32, v151$1)] else v152$1);
    v152$2 := (if p109$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v151$2)] else v152$2);
    call {:sourceloc} {:sourceloc_num 293} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p109$1, BV32_ADD(1bv32, v150$1), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][BV32_ADD(1bv32, v150$1)]);
    assume {:do_not_predicate} {:check_id "check_state_132"} {:captureState "check_state_132"} {:sourceloc} {:sourceloc_num 293} true;
    call {:check_id "check_state_132"} {:sourceloc} {:sourceloc_num 293} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p109$2, BV32_ADD(1bv32, v150$2), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v150$2)]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count"} true;
    v153$1 := (if p109$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][BV32_ADD(1bv32, v150$1)] else v153$1);
    v153$2 := (if p109$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v150$2)] else v153$2);
    call {:sourceloc} {:sourceloc_num 294} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p109$1, BV32_ADD(1bv32, v151$1), BV32_ADD(BV16_ZEXT32(v152$1), BV16_ZEXT32(v153$1))[16:0], $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][BV32_ADD(1bv32, v151$1)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p109$2, BV32_ADD(1bv32, v151$2));
    assume {:do_not_predicate} {:check_id "check_state_133"} {:captureState "check_state_133"} {:sourceloc} {:sourceloc_num 294} true;
    call {:check_id "check_state_133"} {:sourceloc} {:sourceloc_num 294} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p109$2, BV32_ADD(1bv32, v151$2), BV32_ADD(BV16_ZEXT32(v152$2), BV16_ZEXT32(v153$2))[16:0]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][BV32_ADD(1bv32, v151$1)] := (if p109$1 then BV32_ADD(BV16_ZEXT32(v152$1), BV16_ZEXT32(v153$1))[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][BV32_ADD(1bv32, v151$1)]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v151$2)] := (if p109$2 then BV32_ADD(BV16_ZEXT32(v152$2), BV16_ZEXT32(v153$2))[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v151$2)]);
    call {:sourceloc} {:sourceloc_num 295} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p109$1, BV32_ADD(1bv32, v151$1), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][BV32_ADD(1bv32, v151$1)]);
    assume {:do_not_predicate} {:check_id "check_state_134"} {:captureState "check_state_134"} {:sourceloc} {:sourceloc_num 295} true;
    call {:check_id "check_state_134"} {:sourceloc} {:sourceloc_num 295} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p109$2, BV32_ADD(1bv32, v151$2), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v151$2)]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count"} true;
    v154$1 := (if p109$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][BV32_ADD(1bv32, v151$1)] else v154$1);
    v154$2 := (if p109$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v151$2)] else v154$2);
    call {:sourceloc} {:sourceloc_num 296} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p109$1, BV32_ADD(1bv32, v150$1), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][BV32_ADD(1bv32, v150$1)]);
    assume {:do_not_predicate} {:check_id "check_state_135"} {:captureState "check_state_135"} {:sourceloc} {:sourceloc_num 296} true;
    call {:check_id "check_state_135"} {:sourceloc} {:sourceloc_num 296} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p109$2, BV32_ADD(1bv32, v150$2), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v150$2)]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count"} true;
    v155$1 := (if p109$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][BV32_ADD(1bv32, v150$1)] else v155$1);
    v155$2 := (if p109$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v150$2)] else v155$2);
    call {:sourceloc} {:sourceloc_num 297} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p109$1, BV32_ADD(1bv32, v151$1), BV32_ADD(BV16_ZEXT32(v154$1), BV16_ZEXT32(v155$1))[16:0], $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][BV32_ADD(1bv32, v151$1)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p109$2, BV32_ADD(1bv32, v151$2));
    assume {:do_not_predicate} {:check_id "check_state_136"} {:captureState "check_state_136"} {:sourceloc} {:sourceloc_num 297} true;
    call {:check_id "check_state_136"} {:sourceloc} {:sourceloc_num 297} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p109$2, BV32_ADD(1bv32, v151$2), BV32_ADD(BV16_ZEXT32(v154$2), BV16_ZEXT32(v155$2))[16:0]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][BV32_ADD(1bv32, v151$1)] := (if p109$1 then BV32_ADD(BV16_ZEXT32(v154$1), BV16_ZEXT32(v155$1))[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][BV32_ADD(1bv32, v151$1)]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v151$2)] := (if p109$2 then BV32_ADD(BV16_ZEXT32(v154$2), BV16_ZEXT32(v155$2))[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v151$2)]);
    $offset.i3.1$1, $d1.i7.0$1 := (if p107$1 then v148$1 else $offset.i3.1$1), (if p107$1 then BV32_SHL($d1.i7.0$1, 1bv32) else $d1.i7.0$1);
    $offset.i3.1$2, $d1.i7.0$2 := (if p107$2 then v148$2 else $offset.i3.1$2), (if p107$2 then BV32_SHL($d1.i7.0$2, 1bv32) else $d1.i7.0$2);
    p106$1 := (if p107$1 then true else p106$1);
    p106$2 := (if p107$2 then true else p106$2);
    goto $119.backedge, $119.tail;

  $119.tail:
    assume !p106$1 && !p106$2;
    assume {:do_not_predicate} {:check_id "check_state_21"} {:captureState "check_state_21"} {:sourceloc} {:sourceloc_num 300} true;
    v156$1 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[1bv1][0bv32];
    v156$2 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32];
    assume {:do_not_predicate} {:check_id "check_state_22"} {:captureState "check_state_22"} {:sourceloc} {:sourceloc_num 301} true;
    v157$1 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction[1bv1][0bv32];
    v157$2 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32];
    $offset.i10.0$1, $d.i11.0$1 := 1bv32, BV32_LSHR(v157$1, 1bv32);
    $offset.i10.0$2, $d.i11.0$2 := 1bv32, BV32_LSHR(v157$2, 1bv32);
    p110$1 := true;
    p110$2 := true;
    assume {:captureState "loop_entry_state_3_0"} true;
    goto __partitioned_block_$123_0;

  __partitioned_block_$123_0:
    assume {:captureState "loop_head_state_3"} true;
    assert {:tag "accessBreak"} _b458 ==> _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> local_id_x$1 == BV32_DIV(BV32_DIV(_WATCHED_OFFSET, $offset.i10.0$1), 2bv32);
    assert {:tag "nowrite"} _b457 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assert {:tag "noread"} _b456 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assert {:tag "predicatedEquality"} _b455 ==> p110$1 && p110$2 ==> v162$1 == v162$2;
    assert {:tag "predicatedEquality"} _b454 ==> p110$1 && p110$2 ==> v161$1 == v161$2;
    assert {:tag "predicatedEquality"} _b453 ==> p110$1 && p110$2 ==> v160$1 == v160$2;
    assert {:tag "predicatedEquality"} _b452 ==> p110$1 && p110$2 ==> v159$1 == v159$2;
    assert {:tag "predicatedEquality"} _b451 ==> p110$1 && p110$2 ==> v158$1 == v158$2;
    assert {:tag "predicatedEquality"} _b450 ==> p110$1 && p110$2 ==> $d.i11.0$1 == $d.i11.0$2;
    assert {:tag "predicatedEquality"} _b449 ==> p110$1 && p110$2 ==> $offset.i10.0$1 == $offset.i10.0$2;
    assert {:tag "loopPredicateEquality"} _b448 ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> p110$1 == p110$2;
    assert {:tag "loopPredicateEquality"} _b447 ==> p110$1 == p110$2;
    assert {:tag "pow2NotZero"} _b446 ==> $d.i11.0$2 != 0bv32;
    assert {:tag "pow2"} _b445 ==> $d.i11.0$2 == 0bv32 || BV32_AND($d.i11.0$2, BV32_SUB($d.i11.0$2, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b444 ==> $d.i11.0$1 != 0bv32;
    assert {:tag "pow2"} _b443 ==> $d.i11.0$1 == 0bv32 || BV32_AND($d.i11.0$1, BV32_SUB($d.i11.0$1, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b442 ==> $offset.i10.0$2 != 0bv32;
    assert {:tag "pow2"} _b441 ==> $offset.i10.0$2 == 0bv32 || BV32_AND($offset.i10.0$2, BV32_SUB($offset.i10.0$2, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b440 ==> $offset.i10.0$1 != 0bv32;
    assert {:tag "pow2"} _b439 ==> $offset.i10.0$1 == 0bv32 || BV32_AND($offset.i10.0$1, BV32_SUB($offset.i10.0$1, 1bv32)) == 0bv32;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:do_not_predicate} {:tag "conditionsImplyingEnabledness"} {:thread 1} _b40 ==> BV32_SGT($d.i11.0$1, 0bv32) ==> p110$1;
    assert {:do_not_predicate} {:tag "conditionsImplyingEnabledness"} {:thread 2} _b40 ==> BV32_SGT($d.i11.0$2, 0bv32) ==> p110$2;
    assert {:tag "loopBound"} {:thread 1} p110$1 ==> _b39 ==> BV32_UGE($d.i11.0$1, BV32_LSHR(v157$1, 1bv32));
    assert {:tag "loopBound"} {:thread 2} p110$2 ==> _b39 ==> BV32_UGE($d.i11.0$2, BV32_LSHR(v157$2, 1bv32));
    assert {:tag "loopBound"} {:thread 1} p110$1 ==> _b38 ==> BV32_ULE($d.i11.0$1, BV32_LSHR(v157$1, 1bv32));
    assert {:tag "loopBound"} {:thread 2} p110$2 ==> _b38 ==> BV32_ULE($d.i11.0$2, BV32_LSHR(v157$2, 1bv32));
    assert {:tag "loopBound"} {:thread 1} p110$1 ==> _b37 ==> BV32_SGE($d.i11.0$1, BV32_LSHR(v157$1, 1bv32));
    assert {:tag "loopBound"} {:thread 2} p110$2 ==> _b37 ==> BV32_SGE($d.i11.0$2, BV32_LSHR(v157$2, 1bv32));
    assert {:tag "loopBound"} {:thread 1} p110$1 ==> _b36 ==> BV32_SLE($d.i11.0$1, BV32_LSHR(v157$1, 1bv32));
    assert {:tag "loopBound"} {:thread 2} p110$2 ==> _b36 ==> BV32_SLE($d.i11.0$2, BV32_LSHR(v157$2, 1bv32));
    assert {:tag "guardMinusInitialIsUniform"} {:thread 1} p110$1 ==> _b35 ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> BV32_SUB($d.i11.0$1, BV32_LSHR(v157$1, 1bv32)) == BV32_SUB($d.i11.0$2, BV32_LSHR(v157$2, 1bv32));
    assert {:tag "guardMinusInitialIsUniform"} {:thread 2} p110$2 ==> _b35 ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> BV32_SUB($d.i11.0$2, BV32_LSHR(v157$2, 1bv32)) == BV32_SUB($d.i11.0$1, BV32_LSHR(v157$1, 1bv32));
    assert {:tag "guardMinusInitialIsUniform"} {:thread 1} p110$1 ==> _b34 ==> BV32_SUB($d.i11.0$1, BV32_LSHR(v157$1, 1bv32)) == BV32_SUB($d.i11.0$2, BV32_LSHR(v157$2, 1bv32));
    assert {:tag "guardMinusInitialIsUniform"} {:thread 2} p110$2 ==> _b34 ==> BV32_SUB($d.i11.0$2, BV32_LSHR(v157$2, 1bv32)) == BV32_SUB($d.i11.0$1, BV32_LSHR(v157$1, 1bv32));
    assert {:tag "guardNonNeg"} {:thread 1} p110$1 ==> _b33 ==> BV32_SLE(0bv32, $d.i11.0$1);
    assert {:tag "guardNonNeg"} {:thread 2} p110$2 ==> _b33 ==> BV32_SLE(0bv32, $d.i11.0$2);
    assert {:block_sourceloc} {:sourceloc_num 302} p110$1 ==> true;
    v158$1 := (if p110$1 then BV32_SGT($d.i11.0$1, 0bv32) else v158$1);
    v158$2 := (if p110$2 then BV32_SGT($d.i11.0$2, 0bv32) else v158$2);
    p111$1 := false;
    p111$2 := false;
    p112$1 := false;
    p112$2 := false;
    p113$1 := false;
    p113$2 := false;
    p111$1 := (if p110$1 && v158$1 then v158$1 else p111$1);
    p111$2 := (if p110$2 && v158$2 then v158$2 else p111$2);
    p110$1 := (if p110$1 && !v158$1 then v158$1 else p110$1);
    p110$2 := (if p110$2 && !v158$2 then v158$2 else p110$2);
    goto __partitioned_block_$123_1;

  __partitioned_block_$123_1:
    call {:sourceloc_num 304} $bugle_barrier_duplicated_21(1bv1, 1bv1, p111$1, p111$2);
    v159$1 := (if p111$1 then BV32_ULT(local_id_x$1, $d.i11.0$1) else v159$1);
    v159$2 := (if p111$2 then BV32_ULT(local_id_x$2, $d.i11.0$2) else v159$2);
    p113$1 := (if p111$1 && v159$1 then v159$1 else p113$1);
    p113$2 := (if p111$2 && v159$2 then v159$2 else p113$2);
    v160$1 := (if p113$1 then BV32_SUB(BV32_MUL($offset.i10.0$1, BV32_ADD(BV32_MUL(2bv32, local_id_x$1), 2bv32)), 1bv32) else v160$1);
    v160$2 := (if p113$2 then BV32_SUB(BV32_MUL($offset.i10.0$2, BV32_ADD(BV32_MUL(2bv32, local_id_x$2), 2bv32)), 1bv32) else v160$2);
    call {:sourceloc} {:sourceloc_num 306} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p113$1, BV32_ADD(1bv32, BV32_SUB(BV32_MUL($offset.i10.0$1, BV32_ADD(BV32_MUL(2bv32, local_id_x$1), 1bv32)), 1bv32)), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, BV32_SUB(BV32_MUL($offset.i10.0$1, BV32_ADD(BV32_MUL(2bv32, local_id_x$1), 1bv32)), 1bv32))]);
    assume {:do_not_predicate} {:check_id "check_state_128"} {:captureState "check_state_128"} {:sourceloc} {:sourceloc_num 306} true;
    call {:check_id "check_state_128"} {:sourceloc} {:sourceloc_num 306} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p113$2, BV32_ADD(1bv32, BV32_SUB(BV32_MUL($offset.i10.0$2, BV32_ADD(BV32_MUL(2bv32, local_id_x$2), 1bv32)), 1bv32)), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, BV32_SUB(BV32_MUL($offset.i10.0$2, BV32_ADD(BV32_MUL(2bv32, local_id_x$2), 1bv32)), 1bv32))]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    v161$1 := (if p113$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, BV32_SUB(BV32_MUL($offset.i10.0$1, BV32_ADD(BV32_MUL(2bv32, local_id_x$1), 1bv32)), 1bv32))] else v161$1);
    v161$2 := (if p113$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, BV32_SUB(BV32_MUL($offset.i10.0$2, BV32_ADD(BV32_MUL(2bv32, local_id_x$2), 1bv32)), 1bv32))] else v161$2);
    call {:sourceloc} {:sourceloc_num 307} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p113$1, BV32_ADD(1bv32, v160$1), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v160$1)]);
    assume {:do_not_predicate} {:check_id "check_state_129"} {:captureState "check_state_129"} {:sourceloc} {:sourceloc_num 307} true;
    call {:check_id "check_state_129"} {:sourceloc} {:sourceloc_num 307} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p113$2, BV32_ADD(1bv32, v160$2), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v160$2)]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    v162$1 := (if p113$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v160$1)] else v162$1);
    v162$2 := (if p113$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v160$2)] else v162$2);
    call {:sourceloc} {:sourceloc_num 308} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p113$1, BV32_ADD(1bv32, v160$1), BV32_ADD(BV16_ZEXT32(v162$1), BV16_ZEXT32(v161$1))[16:0], $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v160$1)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p113$2, BV32_ADD(1bv32, v160$2));
    assume {:do_not_predicate} {:check_id "check_state_130"} {:captureState "check_state_130"} {:sourceloc} {:sourceloc_num 308} true;
    call {:check_id "check_state_130"} {:sourceloc} {:sourceloc_num 308} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p113$2, BV32_ADD(1bv32, v160$2), BV32_ADD(BV16_ZEXT32(v162$2), BV16_ZEXT32(v161$2))[16:0]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v160$1)] := (if p113$1 then BV32_ADD(BV16_ZEXT32(v162$1), BV16_ZEXT32(v161$1))[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v160$1)]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v160$2)] := (if p113$2 then BV32_ADD(BV16_ZEXT32(v162$2), BV16_ZEXT32(v161$2))[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v160$2)]);
    $offset.i10.0$1, $d.i11.0$1 := (if p111$1 then BV32_MUL($offset.i10.0$1, 2bv32) else $offset.i10.0$1), (if p111$1 then BV32_ASHR($d.i11.0$1, 1bv32) else $d.i11.0$1);
    $offset.i10.0$2, $d.i11.0$2 := (if p111$2 then BV32_MUL($offset.i10.0$2, 2bv32) else $offset.i10.0$2), (if p111$2 then BV32_ASHR($d.i11.0$2, 1bv32) else $d.i11.0$2);
    p110$1 := (if p111$1 then true else p110$1);
    p110$2 := (if p111$2 then true else p110$2);
    goto $123.backedge, $123.tail;

  $123.tail:
    assume !p110$1 && !p110$2;
    $offset.i10.1$1, $d1.i14.0$1 := $offset.i10.0$1, 2bv32;
    $offset.i10.1$2, $d1.i14.0$2 := $offset.i10.0$2, 2bv32;
    p114$1 := true;
    p114$2 := true;
    assume {:captureState "loop_entry_state_2_0"} true;
    goto __partitioned_block_$128_0;

  __partitioned_block_$128_0:
    assume {:captureState "loop_head_state_2"} true;
    assert {:tag "nowrite"} _b483 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assert {:tag "noread"} _b482 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assert {:tag "predicatedEquality"} _b481 ==> p114$1 && p114$2 ==> v169$1 == v169$2;
    assert {:tag "predicatedEquality"} _b480 ==> p114$1 && p114$2 ==> v168$1 == v168$2;
    assert {:tag "predicatedEquality"} _b479 ==> p114$1 && p114$2 ==> v167$1 == v167$2;
    assert {:tag "predicatedEquality"} _b478 ==> p114$1 && p114$2 ==> v166$1 == v166$2;
    assert {:tag "predicatedEquality"} _b477 ==> p114$1 && p114$2 ==> v165$1 == v165$2;
    assert {:tag "predicatedEquality"} _b476 ==> p114$1 && p114$2 ==> v164$1 == v164$2;
    assert {:tag "predicatedEquality"} _b475 ==> p114$1 && p114$2 ==> v163$1 == v163$2;
    assert {:tag "predicatedEquality"} _b474 ==> p114$1 && p114$2 ==> $d1.i14.0$1 == $d1.i14.0$2;
    assert {:tag "predicatedEquality"} _b473 ==> p114$1 && p114$2 ==> $offset.i10.1$1 == $offset.i10.1$2;
    assert {:tag "loopPredicateEquality"} _b472 ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> p114$1 == p114$2;
    assert {:tag "loopPredicateEquality"} _b471 ==> p114$1 == p114$2;
    assert {:tag "pow2NotZero"} _b470 ==> v164$2 != 0bv32;
    assert {:tag "pow2"} _b469 ==> v164$2 == 0bv32 || BV32_AND(v164$2, BV32_SUB(v164$2, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b468 ==> v164$1 != 0bv32;
    assert {:tag "pow2"} _b467 ==> v164$1 == 0bv32 || BV32_AND(v164$1, BV32_SUB(v164$1, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b466 ==> $d1.i14.0$2 != 0bv32;
    assert {:tag "pow2"} _b465 ==> $d1.i14.0$2 == 0bv32 || BV32_AND($d1.i14.0$2, BV32_SUB($d1.i14.0$2, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b464 ==> $d1.i14.0$1 != 0bv32;
    assert {:tag "pow2"} _b463 ==> $d1.i14.0$1 == 0bv32 || BV32_AND($d1.i14.0$1, BV32_SUB($d1.i14.0$1, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b462 ==> $offset.i10.1$2 != 0bv32;
    assert {:tag "pow2"} _b461 ==> $offset.i10.1$2 == 0bv32 || BV32_AND($offset.i10.1$2, BV32_SUB($offset.i10.1$2, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b460 ==> $offset.i10.1$1 != 0bv32;
    assert {:tag "pow2"} _b459 ==> $offset.i10.1$1 == 0bv32 || BV32_AND($offset.i10.1$1, BV32_SUB($offset.i10.1$1, 1bv32)) == 0bv32;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:do_not_predicate} {:tag "conditionsImplyingEnabledness"} {:thread 1} _b47 ==> BV32_ULT($d1.i14.0$1, BV32_SUB(v157$1, 1bv32)) ==> p114$1;
    assert {:do_not_predicate} {:tag "conditionsImplyingEnabledness"} {:thread 2} _b47 ==> BV32_ULT($d1.i14.0$2, BV32_SUB(v157$2, 1bv32)) ==> p114$2;
    assert {:tag "loopBound"} {:thread 1} p114$1 ==> _b46 ==> BV32_UGE($d1.i14.0$1, 2bv32);
    assert {:tag "loopBound"} {:thread 2} p114$2 ==> _b46 ==> BV32_UGE($d1.i14.0$2, 2bv32);
    assert {:tag "loopBound"} {:thread 1} p114$1 ==> _b45 ==> BV32_ULE($d1.i14.0$1, 2bv32);
    assert {:tag "loopBound"} {:thread 2} p114$2 ==> _b45 ==> BV32_ULE($d1.i14.0$2, 2bv32);
    assert {:tag "loopBound"} {:thread 1} p114$1 ==> _b44 ==> BV32_SGE($d1.i14.0$1, 2bv32);
    assert {:tag "loopBound"} {:thread 2} p114$2 ==> _b44 ==> BV32_SGE($d1.i14.0$2, 2bv32);
    assert {:tag "loopBound"} {:thread 1} p114$1 ==> _b43 ==> BV32_SLE($d1.i14.0$1, 2bv32);
    assert {:tag "loopBound"} {:thread 2} p114$2 ==> _b43 ==> BV32_SLE($d1.i14.0$2, 2bv32);
    assert {:tag "guardMinusInitialIsUniform"} {:thread 1} p114$1 ==> _b42 ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> BV32_SUB($d1.i14.0$1, 2bv32) == BV32_SUB($d1.i14.0$2, 2bv32);
    assert {:tag "guardMinusInitialIsUniform"} {:thread 2} p114$2 ==> _b42 ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> BV32_SUB($d1.i14.0$2, 2bv32) == BV32_SUB($d1.i14.0$1, 2bv32);
    assert {:tag "guardMinusInitialIsUniform"} {:thread 1} p114$1 ==> _b41 ==> BV32_SUB($d1.i14.0$1, 2bv32) == BV32_SUB($d1.i14.0$2, 2bv32);
    assert {:tag "guardMinusInitialIsUniform"} {:thread 2} p114$2 ==> _b41 ==> BV32_SUB($d1.i14.0$2, 2bv32) == BV32_SUB($d1.i14.0$1, 2bv32);
    assert {:block_sourceloc} {:sourceloc_num 311} p114$1 ==> true;
    v163$1 := (if p114$1 then BV32_ULT($d1.i14.0$1, BV32_SUB(v157$1, 1bv32)) else v163$1);
    v163$2 := (if p114$2 then BV32_ULT($d1.i14.0$2, BV32_SUB(v157$2, 1bv32)) else v163$2);
    p115$1 := false;
    p115$2 := false;
    p116$1 := false;
    p116$2 := false;
    p117$1 := false;
    p117$2 := false;
    p118$1 := false;
    p118$2 := false;
    p119$1 := false;
    p119$2 := false;
    p120$1 := false;
    p120$2 := false;
    p121$1 := false;
    p121$2 := false;
    p122$1 := false;
    p122$2 := false;
    p123$1 := false;
    p123$2 := false;
    p124$1 := false;
    p124$2 := false;
    p125$1 := false;
    p125$2 := false;
    p115$1 := (if p114$1 && v163$1 then v163$1 else p115$1);
    p115$2 := (if p114$2 && v163$2 then v163$2 else p115$2);
    p114$1 := (if p114$1 && !v163$1 then v163$1 else p114$1);
    p114$2 := (if p114$2 && !v163$2 then v163$2 else p114$2);
    v164$1 := (if p115$1 then BV32_LSHR($offset.i10.1$1, 1bv32) else v164$1);
    v164$2 := (if p115$2 then BV32_LSHR($offset.i10.1$2, 1bv32) else v164$2);
    goto __partitioned_block_$128_1;

  __partitioned_block_$128_1:
    call {:sourceloc_num 313} $bugle_barrier_duplicated_20(1bv1, 1bv1, p115$1, p115$2);
    v165$1 := (if p115$1 then BV32_ULT(local_id_x$1, BV32_SUB($d1.i14.0$1, 1bv32)) else v165$1);
    v165$2 := (if p115$2 then BV32_ULT(local_id_x$2, BV32_SUB($d1.i14.0$2, 1bv32)) else v165$2);
    p117$1 := (if p115$1 && v165$1 then v165$1 else p117$1);
    p117$2 := (if p115$2 && v165$2 then v165$2 else p117$2);
    v166$1 := (if p117$1 then BV32_SUB(BV32_MUL(v164$1, BV32_ADD(local_id_x$1, 1bv32)), 1bv32) else v166$1);
    v166$2 := (if p117$2 then BV32_SUB(BV32_MUL(v164$2, BV32_ADD(local_id_x$2, 1bv32)), 1bv32) else v166$2);
    v167$1 := (if p117$1 then BV32_ADD(v166$1, BV32_LSHR(v164$1, 1bv32)) else v167$1);
    v167$2 := (if p117$2 then BV32_ADD(v166$2, BV32_LSHR(v164$2, 1bv32)) else v167$2);
    call {:sourceloc} {:sourceloc_num 315} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p117$1, BV32_ADD(1bv32, v166$1), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v166$1)]);
    assume {:do_not_predicate} {:check_id "check_state_125"} {:captureState "check_state_125"} {:sourceloc} {:sourceloc_num 315} true;
    call {:check_id "check_state_125"} {:sourceloc} {:sourceloc_num 315} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p117$2, BV32_ADD(1bv32, v166$2), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v166$2)]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    v168$1 := (if p117$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v166$1)] else v168$1);
    v168$2 := (if p117$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v166$2)] else v168$2);
    call {:sourceloc} {:sourceloc_num 316} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p117$1, BV32_ADD(1bv32, v167$1), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v167$1)]);
    assume {:do_not_predicate} {:check_id "check_state_126"} {:captureState "check_state_126"} {:sourceloc} {:sourceloc_num 316} true;
    call {:check_id "check_state_126"} {:sourceloc} {:sourceloc_num 316} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p117$2, BV32_ADD(1bv32, v167$2), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v167$2)]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    v169$1 := (if p117$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v167$1)] else v169$1);
    v169$2 := (if p117$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v167$2)] else v169$2);
    call {:sourceloc} {:sourceloc_num 317} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p117$1, BV32_ADD(1bv32, v167$1), BV32_ADD(BV16_ZEXT32(v169$1), BV16_ZEXT32(v168$1))[16:0], $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v167$1)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p117$2, BV32_ADD(1bv32, v167$2));
    assume {:do_not_predicate} {:check_id "check_state_127"} {:captureState "check_state_127"} {:sourceloc} {:sourceloc_num 317} true;
    call {:check_id "check_state_127"} {:sourceloc} {:sourceloc_num 317} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p117$2, BV32_ADD(1bv32, v167$2), BV32_ADD(BV16_ZEXT32(v169$2), BV16_ZEXT32(v168$2))[16:0]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v167$1)] := (if p117$1 then BV32_ADD(BV16_ZEXT32(v169$1), BV16_ZEXT32(v168$1))[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v167$1)]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v167$2)] := (if p117$2 then BV32_ADD(BV16_ZEXT32(v169$2), BV16_ZEXT32(v168$2))[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v167$2)]);
    $offset.i10.1$1, $d1.i14.0$1 := (if p115$1 then v164$1 else $offset.i10.1$1), (if p115$1 then BV32_SHL($d1.i14.0$1, 1bv32) else $d1.i14.0$1);
    $offset.i10.1$2, $d1.i14.0$2 := (if p115$2 then v164$2 else $offset.i10.1$2), (if p115$2 then BV32_SHL($d1.i14.0$2, 1bv32) else $d1.i14.0$2);
    p114$1 := (if p115$1 then true else p114$1);
    p114$2 := (if p115$2 then true else p114$2);
    goto $128.backedge, __partitioned_block_$128.tail_0;

  __partitioned_block_$128.tail_0:
    assume !p114$1 && !p114$2;
    goto __partitioned_block_$128.tail_1;

  __partitioned_block_$128.tail_1:
    call {:sourceloc_num 320} $bugle_barrier_duplicated_9(1bv1, 1bv1);
    v170$1 := 0bv32 == local_id_x$1;
    v170$2 := 0bv32 == local_id_x$2;
    p118$1 := (if v170$1 then v170$1 else p118$1);
    p118$2 := (if v170$2 then v170$2 else p118$2);
    call {:sourceloc} {:sourceloc_num 322} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p118$1, BV32_SUB(v157$1, 1bv32), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][BV32_SUB(v157$1, 1bv32)]);
    assume {:do_not_predicate} {:check_id "check_state_121"} {:captureState "check_state_121"} {:sourceloc} {:sourceloc_num 322} true;
    call {:check_id "check_state_121"} {:sourceloc} {:sourceloc_num 322} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p118$2, BV32_SUB(v157$2, 1bv32), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_SUB(v157$2, 1bv32)]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper"} true;
    v171$1 := (if p118$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][BV32_SUB(v157$1, 1bv32)] else v171$1);
    v171$2 := (if p118$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_SUB(v157$2, 1bv32)] else v171$2);
    call {:sourceloc} {:sourceloc_num 323} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p118$1, BV32_SUB(v156$1, 1bv32), v171$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][BV32_SUB(v156$1, 1bv32)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p118$2, BV32_SUB(v156$2, 1bv32));
    assume {:do_not_predicate} {:check_id "check_state_122"} {:captureState "check_state_122"} {:sourceloc} {:sourceloc_num 323} true;
    call {:check_id "check_state_122"} {:sourceloc} {:sourceloc_num 323} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p118$2, BV32_SUB(v156$2, 1bv32), v171$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][BV32_SUB(v156$1, 1bv32)] := (if p118$1 then v171$1 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][BV32_SUB(v156$1, 1bv32)]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_SUB(v156$2, 1bv32)] := (if p118$2 then v171$2 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_SUB(v156$2, 1bv32)]);
    call {:sourceloc} {:sourceloc_num 324} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p118$1, BV32_ADD(1bv32, BV32_SUB(v157$1, 1bv32)), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, BV32_SUB(v157$1, 1bv32))]);
    assume {:do_not_predicate} {:check_id "check_state_123"} {:captureState "check_state_123"} {:sourceloc} {:sourceloc_num 324} true;
    call {:check_id "check_state_123"} {:sourceloc} {:sourceloc_num 324} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p118$2, BV32_ADD(1bv32, BV32_SUB(v157$2, 1bv32)), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, BV32_SUB(v157$2, 1bv32))]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    v172$1 := (if p118$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, BV32_SUB(v157$1, 1bv32))] else v172$1);
    v172$2 := (if p118$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, BV32_SUB(v157$2, 1bv32))] else v172$2);
    call {:sourceloc} {:sourceloc_num 325} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p118$1, BV32_ADD(1bv32, BV32_SUB(v156$1, 1bv32)), v172$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, BV32_SUB(v156$1, 1bv32))]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p118$2, BV32_ADD(1bv32, BV32_SUB(v156$2, 1bv32)));
    assume {:do_not_predicate} {:check_id "check_state_124"} {:captureState "check_state_124"} {:sourceloc} {:sourceloc_num 325} true;
    call {:check_id "check_state_124"} {:sourceloc} {:sourceloc_num 325} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p118$2, BV32_ADD(1bv32, BV32_SUB(v156$2, 1bv32)), v172$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, BV32_SUB(v156$1, 1bv32))] := (if p118$1 then v172$1 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, BV32_SUB(v156$1, 1bv32))]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, BV32_SUB(v156$2, 1bv32))] := (if p118$2 then v172$2 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, BV32_SUB(v156$2, 1bv32))]);
    goto __partitioned_block_$128.tail_2;

  __partitioned_block_$128.tail_2:
    call {:sourceloc_num 327} $bugle_barrier_duplicated_10(1bv1, 1bv1);
    assume {:do_not_predicate} {:check_id "check_state_23"} {:captureState "check_state_23"} {:sourceloc} {:sourceloc_num 328} true;
    v173$1 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][local_id_x$1];
    v173$2 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2];
    v174$1 := 1bv32 == BV16_ZEXT32(v173$1);
    v174$2 := 1bv32 == BV16_ZEXT32(v173$2);
    p120$1 := (if v174$1 then v174$1 else p120$1);
    p120$2 := (if v174$2 then v174$2 else p120$2);
    p121$1 := (if !v174$1 then !v174$1 else p121$1);
    p121$2 := (if !v174$2 then !v174$2 else p121$2);
    assume {:do_not_predicate} {:check_id "check_state_119"} {:captureState "check_state_119"} {:sourceloc} {:sourceloc_num 330} true;
    v175$1 := (if p120$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][BV32_ADD(1bv32, local_id_x$1)] else v175$1);
    v175$2 := (if p120$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, local_id_x$2)] else v175$2);
    call {:sourceloc} {:sourceloc_num 331} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p120$1, BV32_ADD(1bv32, local_id_x$1), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, local_id_x$1)]);
    assume {:do_not_predicate} {:check_id "check_state_120"} {:captureState "check_state_120"} {:sourceloc} {:sourceloc_num 331} true;
    call {:check_id "check_state_120"} {:sourceloc} {:sourceloc_num 331} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p120$2, BV32_ADD(1bv32, local_id_x$2), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, local_id_x$2)]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    v176$1 := (if p120$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, local_id_x$1)] else v176$1);
    v176$2 := (if p120$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, local_id_x$2)] else v176$2);
    $c_block_iend.0$1, $c_sum_block.0$1 := (if p120$1 then BV32_ADD(BV16_ZEXT32(v175$1), 1bv32) else $c_block_iend.0$1), (if p120$1 then BV16_ZEXT32(v176$1) else $c_sum_block.0$1);
    $c_block_iend.0$2, $c_sum_block.0$2 := (if p120$2 then BV32_ADD(BV16_ZEXT32(v175$2), 1bv32) else $c_block_iend.0$2), (if p120$2 then BV16_ZEXT32(v176$2) else $c_sum_block.0$2);
    $c_block_iend.0$1, $c_sum_block.0$1 := (if p121$1 then 0bv32 else $c_block_iend.0$1), (if p121$1 then 0bv32 else $c_sum_block.0$1);
    $c_block_iend.0$2, $c_sum_block.0$2 := (if p121$2 then 0bv32 else $c_block_iend.0$2), (if p121$2 then 0bv32 else $c_sum_block.0$2);
    assume {:do_not_predicate} {:check_id "check_state_24"} {:captureState "check_state_24"} {:sourceloc} {:sourceloc_num 333} true;
    v177$1 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][v108$1];
    v177$2 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v108$2];
    v178$1 := 1bv32 == BV16_ZEXT32(v177$1);
    v178$2 := 1bv32 == BV16_ZEXT32(v177$2);
    p122$1 := (if v178$1 then v178$1 else p122$1);
    p122$2 := (if v178$2 then v178$2 else p122$2);
    p123$1 := (if !v178$1 then !v178$1 else p123$1);
    p123$2 := (if !v178$2 then !v178$2 else p123$2);
    assume {:do_not_predicate} {:check_id "check_state_117"} {:captureState "check_state_117"} {:sourceloc} {:sourceloc_num 335} true;
    v179$1 := (if p122$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][BV32_ADD(1bv32, v108$1)] else v179$1);
    v179$2 := (if p122$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v108$2)] else v179$2);
    call {:sourceloc} {:sourceloc_num 336} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p122$1, BV32_ADD(1bv32, v108$1), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v108$1)]);
    assume {:do_not_predicate} {:check_id "check_state_118"} {:captureState "check_state_118"} {:sourceloc} {:sourceloc_num 336} true;
    call {:check_id "check_state_118"} {:sourceloc} {:sourceloc_num 336} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p122$2, BV32_ADD(1bv32, v108$2), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v108$2)]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    v180$1 := (if p122$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v108$1)] else v180$1);
    v180$2 := (if p122$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v108$2)] else v180$2);
    $c_block_iend_2.0$1, $c_sum_block_2.0$1 := (if p122$1 then BV32_ADD(BV16_ZEXT32(v179$1), 1bv32) else $c_block_iend_2.0$1), (if p122$1 then BV16_ZEXT32(v180$1) else $c_sum_block_2.0$1);
    $c_block_iend_2.0$2, $c_sum_block_2.0$2 := (if p122$2 then BV32_ADD(BV16_ZEXT32(v179$2), 1bv32) else $c_block_iend_2.0$2), (if p122$2 then BV16_ZEXT32(v180$2) else $c_sum_block_2.0$2);
    $c_block_iend_2.0$1, $c_sum_block_2.0$1 := (if p123$1 then 0bv32 else $c_block_iend_2.0$1), (if p123$1 then 0bv32 else $c_sum_block_2.0$1);
    $c_block_iend_2.0$2, $c_sum_block_2.0$2 := (if p123$2 then 0bv32 else $c_block_iend_2.0$2), (if p123$2 then 0bv32 else $c_sum_block_2.0$2);
    assume {:do_not_predicate} {:check_id "check_state_25"} {:captureState "check_state_25"} {:sourceloc} {:sourceloc_num 338} true;
    v181$1 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction[1bv1][0bv32];
    v181$2 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32];
    assume {:do_not_predicate} {:check_id "check_state_26"} {:captureState "check_state_26"} {:sourceloc} {:sourceloc_num 339} true;
    v182$1 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][local_id_x$1];
    v182$2 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2];
    call {:sourceloc} {:sourceloc_num 340} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(true, BV32_ADD(1bv32, local_id_x$1), v182$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, local_id_x$1)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(true, BV32_ADD(1bv32, local_id_x$2));
    assume {:do_not_predicate} {:check_id "check_state_27"} {:captureState "check_state_27"} {:sourceloc} {:sourceloc_num 340} true;
    call {:check_id "check_state_27"} {:sourceloc} {:sourceloc_num 340} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(true, BV32_ADD(1bv32, local_id_x$2), v182$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, local_id_x$1)] := v182$1;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, local_id_x$2)] := v182$2;
    v183$1 := BV32_ULT(v108$1, v181$1);
    v183$2 := BV32_ULT(v108$2, v181$2);
    p124$1 := (if v183$1 then v183$1 else p124$1);
    p124$2 := (if v183$2 then v183$2 else p124$2);
    assume {:do_not_predicate} {:check_id "check_state_115"} {:captureState "check_state_115"} {:sourceloc} {:sourceloc_num 342} true;
    v184$1 := (if p124$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][v108$1] else v184$1);
    v184$2 := (if p124$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v108$2] else v184$2);
    call {:sourceloc} {:sourceloc_num 343} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p124$1, BV32_ADD(1bv32, v108$1), v184$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v108$1)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p124$2, BV32_ADD(1bv32, v108$2));
    assume {:do_not_predicate} {:check_id "check_state_116"} {:captureState "check_state_116"} {:sourceloc} {:sourceloc_num 343} true;
    call {:check_id "check_state_116"} {:sourceloc} {:sourceloc_num 343} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p124$2, BV32_ADD(1bv32, v108$2), v184$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v108$1)] := (if p124$1 then v184$1 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v108$1)]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v108$2)] := (if p124$2 then v184$2 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v108$2)]);
    goto __partitioned_block_$128.tail_3;

  __partitioned_block_$128.tail_3:
    call {:sourceloc_num 345} $bugle_barrier_duplicated_11(1bv1, 1bv1);
    $offset.i17.0$1, $d.i18.0$1 := 1bv32, BV32_LSHR(v181$1, 1bv32);
    $offset.i17.0$2, $d.i18.0$2 := 1bv32, BV32_LSHR(v181$2, 1bv32);
    p126$1 := true;
    p126$2 := true;
    assume {:captureState "loop_entry_state_1_0"} true;
    goto __partitioned_block_$140_0;

  __partitioned_block_$140_0:
    assume {:captureState "loop_head_state_1"} true;
    assert {:tag "accessBreak"} _b503 ==> _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> local_id_x$1 == BV32_DIV(BV32_DIV(_WATCHED_OFFSET, $offset.i17.0$1), 2bv32);
    assert {:tag "nowrite"} _b502 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assert {:tag "noread"} _b501 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assert {:tag "predicatedEquality"} _b500 ==> p126$1 && p126$2 ==> v189$1 == v189$2;
    assert {:tag "predicatedEquality"} _b499 ==> p126$1 && p126$2 ==> v188$1 == v188$2;
    assert {:tag "predicatedEquality"} _b498 ==> p126$1 && p126$2 ==> v187$1 == v187$2;
    assert {:tag "predicatedEquality"} _b497 ==> p126$1 && p126$2 ==> v186$1 == v186$2;
    assert {:tag "predicatedEquality"} _b496 ==> p126$1 && p126$2 ==> v185$1 == v185$2;
    assert {:tag "predicatedEquality"} _b495 ==> p126$1 && p126$2 ==> $d.i18.0$1 == $d.i18.0$2;
    assert {:tag "predicatedEquality"} _b494 ==> p126$1 && p126$2 ==> $offset.i17.0$1 == $offset.i17.0$2;
    assert {:tag "loopPredicateEquality"} _b493 ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> p126$1 == p126$2;
    assert {:tag "loopPredicateEquality"} _b492 ==> p126$1 == p126$2;
    assert {:tag "pow2NotZero"} _b491 ==> $d.i18.0$2 != 0bv32;
    assert {:tag "pow2"} _b490 ==> $d.i18.0$2 == 0bv32 || BV32_AND($d.i18.0$2, BV32_SUB($d.i18.0$2, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b489 ==> $d.i18.0$1 != 0bv32;
    assert {:tag "pow2"} _b488 ==> $d.i18.0$1 == 0bv32 || BV32_AND($d.i18.0$1, BV32_SUB($d.i18.0$1, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b487 ==> $offset.i17.0$2 != 0bv32;
    assert {:tag "pow2"} _b486 ==> $offset.i17.0$2 == 0bv32 || BV32_AND($offset.i17.0$2, BV32_SUB($offset.i17.0$2, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b485 ==> $offset.i17.0$1 != 0bv32;
    assert {:tag "pow2"} _b484 ==> $offset.i17.0$1 == 0bv32 || BV32_AND($offset.i17.0$1, BV32_SUB($offset.i17.0$1, 1bv32)) == 0bv32;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:do_not_predicate} {:tag "conditionsImplyingEnabledness"} {:thread 1} _b55 ==> BV32_SGT($d.i18.0$1, 0bv32) ==> p126$1;
    assert {:do_not_predicate} {:tag "conditionsImplyingEnabledness"} {:thread 2} _b55 ==> BV32_SGT($d.i18.0$2, 0bv32) ==> p126$2;
    assert {:tag "loopBound"} {:thread 1} p126$1 ==> _b54 ==> BV32_UGE($d.i18.0$1, BV32_LSHR(v181$1, 1bv32));
    assert {:tag "loopBound"} {:thread 2} p126$2 ==> _b54 ==> BV32_UGE($d.i18.0$2, BV32_LSHR(v181$2, 1bv32));
    assert {:tag "loopBound"} {:thread 1} p126$1 ==> _b53 ==> BV32_ULE($d.i18.0$1, BV32_LSHR(v181$1, 1bv32));
    assert {:tag "loopBound"} {:thread 2} p126$2 ==> _b53 ==> BV32_ULE($d.i18.0$2, BV32_LSHR(v181$2, 1bv32));
    assert {:tag "loopBound"} {:thread 1} p126$1 ==> _b52 ==> BV32_SGE($d.i18.0$1, BV32_LSHR(v181$1, 1bv32));
    assert {:tag "loopBound"} {:thread 2} p126$2 ==> _b52 ==> BV32_SGE($d.i18.0$2, BV32_LSHR(v181$2, 1bv32));
    assert {:tag "loopBound"} {:thread 1} p126$1 ==> _b51 ==> BV32_SLE($d.i18.0$1, BV32_LSHR(v181$1, 1bv32));
    assert {:tag "loopBound"} {:thread 2} p126$2 ==> _b51 ==> BV32_SLE($d.i18.0$2, BV32_LSHR(v181$2, 1bv32));
    assert {:tag "guardMinusInitialIsUniform"} {:thread 1} p126$1 ==> _b50 ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> BV32_SUB($d.i18.0$1, BV32_LSHR(v181$1, 1bv32)) == BV32_SUB($d.i18.0$2, BV32_LSHR(v181$2, 1bv32));
    assert {:tag "guardMinusInitialIsUniform"} {:thread 2} p126$2 ==> _b50 ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> BV32_SUB($d.i18.0$2, BV32_LSHR(v181$2, 1bv32)) == BV32_SUB($d.i18.0$1, BV32_LSHR(v181$1, 1bv32));
    assert {:tag "guardMinusInitialIsUniform"} {:thread 1} p126$1 ==> _b49 ==> BV32_SUB($d.i18.0$1, BV32_LSHR(v181$1, 1bv32)) == BV32_SUB($d.i18.0$2, BV32_LSHR(v181$2, 1bv32));
    assert {:tag "guardMinusInitialIsUniform"} {:thread 2} p126$2 ==> _b49 ==> BV32_SUB($d.i18.0$2, BV32_LSHR(v181$2, 1bv32)) == BV32_SUB($d.i18.0$1, BV32_LSHR(v181$1, 1bv32));
    assert {:tag "guardNonNeg"} {:thread 1} p126$1 ==> _b48 ==> BV32_SLE(0bv32, $d.i18.0$1);
    assert {:tag "guardNonNeg"} {:thread 2} p126$2 ==> _b48 ==> BV32_SLE(0bv32, $d.i18.0$2);
    assert {:block_sourceloc} {:sourceloc_num 346} p126$1 ==> true;
    v185$1 := (if p126$1 then BV32_SGT($d.i18.0$1, 0bv32) else v185$1);
    v185$2 := (if p126$2 then BV32_SGT($d.i18.0$2, 0bv32) else v185$2);
    p127$1 := false;
    p127$2 := false;
    p128$1 := false;
    p128$2 := false;
    p129$1 := false;
    p129$2 := false;
    p127$1 := (if p126$1 && v185$1 then v185$1 else p127$1);
    p127$2 := (if p126$2 && v185$2 then v185$2 else p127$2);
    p126$1 := (if p126$1 && !v185$1 then v185$1 else p126$1);
    p126$2 := (if p126$2 && !v185$2 then v185$2 else p126$2);
    goto __partitioned_block_$140_1;

  __partitioned_block_$140_1:
    call {:sourceloc_num 348} $bugle_barrier_duplicated_19(1bv1, 1bv1, p127$1, p127$2);
    v186$1 := (if p127$1 then BV32_ULT(local_id_x$1, $d.i18.0$1) else v186$1);
    v186$2 := (if p127$2 then BV32_ULT(local_id_x$2, $d.i18.0$2) else v186$2);
    p129$1 := (if p127$1 && v186$1 then v186$1 else p129$1);
    p129$2 := (if p127$2 && v186$2 then v186$2 else p129$2);
    v187$1 := (if p129$1 then BV32_SUB(BV32_MUL($offset.i17.0$1, BV32_ADD(BV32_MUL(2bv32, local_id_x$1), 2bv32)), 1bv32) else v187$1);
    v187$2 := (if p129$2 then BV32_SUB(BV32_MUL($offset.i17.0$2, BV32_ADD(BV32_MUL(2bv32, local_id_x$2), 2bv32)), 1bv32) else v187$2);
    call {:sourceloc} {:sourceloc_num 350} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p129$1, BV32_ADD(1bv32, v187$1), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v187$1)]);
    assume {:do_not_predicate} {:check_id "check_state_112"} {:captureState "check_state_112"} {:sourceloc} {:sourceloc_num 350} true;
    call {:check_id "check_state_112"} {:sourceloc} {:sourceloc_num 350} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p129$2, BV32_ADD(1bv32, v187$2), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v187$2)]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    v188$1 := (if p129$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v187$1)] else v188$1);
    v188$2 := (if p129$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v187$2)] else v188$2);
    call {:sourceloc} {:sourceloc_num 351} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p129$1, BV32_ADD(1bv32, BV32_SUB(BV32_MUL($offset.i17.0$1, BV32_ADD(BV32_MUL(2bv32, local_id_x$1), 1bv32)), 1bv32)), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, BV32_SUB(BV32_MUL($offset.i17.0$1, BV32_ADD(BV32_MUL(2bv32, local_id_x$1), 1bv32)), 1bv32))]);
    assume {:do_not_predicate} {:check_id "check_state_113"} {:captureState "check_state_113"} {:sourceloc} {:sourceloc_num 351} true;
    call {:check_id "check_state_113"} {:sourceloc} {:sourceloc_num 351} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p129$2, BV32_ADD(1bv32, BV32_SUB(BV32_MUL($offset.i17.0$2, BV32_ADD(BV32_MUL(2bv32, local_id_x$2), 1bv32)), 1bv32)), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, BV32_SUB(BV32_MUL($offset.i17.0$2, BV32_ADD(BV32_MUL(2bv32, local_id_x$2), 1bv32)), 1bv32))]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    v189$1 := (if p129$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, BV32_SUB(BV32_MUL($offset.i17.0$1, BV32_ADD(BV32_MUL(2bv32, local_id_x$1), 1bv32)), 1bv32))] else v189$1);
    v189$2 := (if p129$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, BV32_SUB(BV32_MUL($offset.i17.0$2, BV32_ADD(BV32_MUL(2bv32, local_id_x$2), 1bv32)), 1bv32))] else v189$2);
    call {:sourceloc} {:sourceloc_num 352} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p129$1, BV32_ADD(1bv32, v187$1), BV32_ADD(BV16_ZEXT32(v188$1), BV16_ZEXT32(v189$1))[16:0], $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v187$1)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p129$2, BV32_ADD(1bv32, v187$2));
    assume {:do_not_predicate} {:check_id "check_state_114"} {:captureState "check_state_114"} {:sourceloc} {:sourceloc_num 352} true;
    call {:check_id "check_state_114"} {:sourceloc} {:sourceloc_num 352} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p129$2, BV32_ADD(1bv32, v187$2), BV32_ADD(BV16_ZEXT32(v188$2), BV16_ZEXT32(v189$2))[16:0]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v187$1)] := (if p129$1 then BV32_ADD(BV16_ZEXT32(v188$1), BV16_ZEXT32(v189$1))[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v187$1)]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v187$2)] := (if p129$2 then BV32_ADD(BV16_ZEXT32(v188$2), BV16_ZEXT32(v189$2))[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v187$2)]);
    $offset.i17.0$1, $d.i18.0$1 := (if p127$1 then BV32_SHL($offset.i17.0$1, 1bv32) else $offset.i17.0$1), (if p127$1 then BV32_ASHR($d.i18.0$1, 1bv32) else $d.i18.0$1);
    $offset.i17.0$2, $d.i18.0$2 := (if p127$2 then BV32_SHL($offset.i17.0$2, 1bv32) else $offset.i17.0$2), (if p127$2 then BV32_ASHR($d.i18.0$2, 1bv32) else $d.i18.0$2);
    p126$1 := (if p127$1 then true else p126$1);
    p126$2 := (if p127$2 then true else p126$2);
    goto $140.backedge, $140.tail;

  $140.tail:
    assume !p126$1 && !p126$2;
    $offset.i17.1$1, $d1.i21.0$1 := $offset.i17.0$1, 2bv32;
    $offset.i17.1$2, $d1.i21.0$2 := $offset.i17.0$2, 2bv32;
    p130$1 := true;
    p130$2 := true;
    assume {:captureState "loop_entry_state_0_0"} true;
    goto __partitioned_block_$145_0;

  __partitioned_block_$145_0:
    assume {:captureState "loop_head_state_0"} true;
    assert {:tag "nowrite"} _b528 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assert {:tag "noread"} _b527 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assert {:tag "predicatedEquality"} _b526 ==> p130$1 && p130$2 ==> v196$1 == v196$2;
    assert {:tag "predicatedEquality"} _b525 ==> p130$1 && p130$2 ==> v195$1 == v195$2;
    assert {:tag "predicatedEquality"} _b524 ==> p130$1 && p130$2 ==> v194$1 == v194$2;
    assert {:tag "predicatedEquality"} _b523 ==> p130$1 && p130$2 ==> v193$1 == v193$2;
    assert {:tag "predicatedEquality"} _b522 ==> p130$1 && p130$2 ==> v192$1 == v192$2;
    assert {:tag "predicatedEquality"} _b521 ==> p130$1 && p130$2 ==> v191$1 == v191$2;
    assert {:tag "predicatedEquality"} _b520 ==> p130$1 && p130$2 ==> v190$1 == v190$2;
    assert {:tag "predicatedEquality"} _b519 ==> p130$1 && p130$2 ==> $d1.i21.0$1 == $d1.i21.0$2;
    assert {:tag "predicatedEquality"} _b518 ==> p130$1 && p130$2 ==> $offset.i17.1$1 == $offset.i17.1$2;
    assert {:tag "loopPredicateEquality"} _b517 ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> p130$1 == p130$2;
    assert {:tag "loopPredicateEquality"} _b516 ==> p130$1 == p130$2;
    assert {:tag "pow2NotZero"} _b515 ==> v191$2 != 0bv32;
    assert {:tag "pow2"} _b514 ==> v191$2 == 0bv32 || BV32_AND(v191$2, BV32_SUB(v191$2, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b513 ==> v191$1 != 0bv32;
    assert {:tag "pow2"} _b512 ==> v191$1 == 0bv32 || BV32_AND(v191$1, BV32_SUB(v191$1, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b511 ==> $d1.i21.0$2 != 0bv32;
    assert {:tag "pow2"} _b510 ==> $d1.i21.0$2 == 0bv32 || BV32_AND($d1.i21.0$2, BV32_SUB($d1.i21.0$2, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b509 ==> $d1.i21.0$1 != 0bv32;
    assert {:tag "pow2"} _b508 ==> $d1.i21.0$1 == 0bv32 || BV32_AND($d1.i21.0$1, BV32_SUB($d1.i21.0$1, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b507 ==> $offset.i17.1$2 != 0bv32;
    assert {:tag "pow2"} _b506 ==> $offset.i17.1$2 == 0bv32 || BV32_AND($offset.i17.1$2, BV32_SUB($offset.i17.1$2, 1bv32)) == 0bv32;
    assert {:tag "pow2NotZero"} _b505 ==> $offset.i17.1$1 != 0bv32;
    assert {:tag "pow2"} _b504 ==> $offset.i17.1$1 == 0bv32 || BV32_AND($offset.i17.1$1, BV32_SUB($offset.i17.1$1, 1bv32)) == 0bv32;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:tag "groupSharedArraysDisjointAcrossGroups"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
    assert {:do_not_predicate} {:tag "conditionsImplyingEnabledness"} {:thread 1} _b62 ==> BV32_ULT($d1.i21.0$1, v181$1) ==> p130$1;
    assert {:do_not_predicate} {:tag "conditionsImplyingEnabledness"} {:thread 2} _b62 ==> BV32_ULT($d1.i21.0$2, v181$2) ==> p130$2;
    assert {:tag "loopBound"} {:thread 1} p130$1 ==> _b61 ==> BV32_UGE($d1.i21.0$1, 2bv32);
    assert {:tag "loopBound"} {:thread 2} p130$2 ==> _b61 ==> BV32_UGE($d1.i21.0$2, 2bv32);
    assert {:tag "loopBound"} {:thread 1} p130$1 ==> _b60 ==> BV32_ULE($d1.i21.0$1, 2bv32);
    assert {:tag "loopBound"} {:thread 2} p130$2 ==> _b60 ==> BV32_ULE($d1.i21.0$2, 2bv32);
    assert {:tag "loopBound"} {:thread 1} p130$1 ==> _b59 ==> BV32_SGE($d1.i21.0$1, 2bv32);
    assert {:tag "loopBound"} {:thread 2} p130$2 ==> _b59 ==> BV32_SGE($d1.i21.0$2, 2bv32);
    assert {:tag "loopBound"} {:thread 1} p130$1 ==> _b58 ==> BV32_SLE($d1.i21.0$1, 2bv32);
    assert {:tag "loopBound"} {:thread 2} p130$2 ==> _b58 ==> BV32_SLE($d1.i21.0$2, 2bv32);
    assert {:tag "guardMinusInitialIsUniform"} {:thread 1} p130$1 ==> _b57 ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> BV32_SUB($d1.i21.0$1, 2bv32) == BV32_SUB($d1.i21.0$2, 2bv32);
    assert {:tag "guardMinusInitialIsUniform"} {:thread 2} p130$2 ==> _b57 ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> BV32_SUB($d1.i21.0$2, 2bv32) == BV32_SUB($d1.i21.0$1, 2bv32);
    assert {:tag "guardMinusInitialIsUniform"} {:thread 1} p130$1 ==> _b56 ==> BV32_SUB($d1.i21.0$1, 2bv32) == BV32_SUB($d1.i21.0$2, 2bv32);
    assert {:tag "guardMinusInitialIsUniform"} {:thread 2} p130$2 ==> _b56 ==> BV32_SUB($d1.i21.0$2, 2bv32) == BV32_SUB($d1.i21.0$1, 2bv32);
    assert {:block_sourceloc} {:sourceloc_num 355} p130$1 ==> true;
    v190$1 := (if p130$1 then BV32_ULT($d1.i21.0$1, v181$1) else v190$1);
    v190$2 := (if p130$2 then BV32_ULT($d1.i21.0$2, v181$2) else v190$2);
    p131$1 := false;
    p131$2 := false;
    p132$1 := false;
    p132$2 := false;
    p133$1 := false;
    p133$2 := false;
    p134$1 := false;
    p134$2 := false;
    p135$1 := false;
    p135$2 := false;
    p136$1 := false;
    p136$2 := false;
    p137$1 := false;
    p137$2 := false;
    p138$1 := false;
    p138$2 := false;
    p139$1 := false;
    p139$2 := false;
    p140$1 := false;
    p140$2 := false;
    p141$1 := false;
    p141$2 := false;
    p142$1 := false;
    p142$2 := false;
    p143$1 := false;
    p143$2 := false;
    p144$1 := false;
    p144$2 := false;
    p145$1 := false;
    p145$2 := false;
    p146$1 := false;
    p146$2 := false;
    p147$1 := false;
    p147$2 := false;
    p148$1 := false;
    p148$2 := false;
    p149$1 := false;
    p149$2 := false;
    p150$1 := false;
    p150$2 := false;
    p151$1 := false;
    p151$2 := false;
    p152$1 := false;
    p152$2 := false;
    p153$1 := false;
    p153$2 := false;
    p154$1 := false;
    p154$2 := false;
    p155$1 := false;
    p155$2 := false;
    p156$1 := false;
    p156$2 := false;
    p157$1 := false;
    p157$2 := false;
    p158$1 := false;
    p158$2 := false;
    p159$1 := false;
    p159$2 := false;
    p160$1 := false;
    p160$2 := false;
    p161$1 := false;
    p161$2 := false;
    p162$1 := false;
    p162$2 := false;
    p163$1 := false;
    p163$2 := false;
    p164$1 := false;
    p164$2 := false;
    p165$1 := false;
    p165$2 := false;
    p131$1 := (if p130$1 && v190$1 then v190$1 else p131$1);
    p131$2 := (if p130$2 && v190$2 then v190$2 else p131$2);
    p130$1 := (if p130$1 && !v190$1 then v190$1 else p130$1);
    p130$2 := (if p130$2 && !v190$2 then v190$2 else p130$2);
    v191$1 := (if p131$1 then BV32_LSHR($offset.i17.1$1, 1bv32) else v191$1);
    v191$2 := (if p131$2 then BV32_LSHR($offset.i17.1$2, 1bv32) else v191$2);
    goto __partitioned_block_$145_1;

  __partitioned_block_$145_1:
    call {:sourceloc_num 357} $bugle_barrier_duplicated_18(1bv1, 1bv1, p131$1, p131$2);
    v192$1 := (if p131$1 then BV32_ULT(local_id_x$1, BV32_SUB($d1.i21.0$1, 1bv32)) else v192$1);
    v192$2 := (if p131$2 then BV32_ULT(local_id_x$2, BV32_SUB($d1.i21.0$2, 1bv32)) else v192$2);
    p133$1 := (if p131$1 && v192$1 then v192$1 else p133$1);
    p133$2 := (if p131$2 && v192$2 then v192$2 else p133$2);
    v193$1 := (if p133$1 then BV32_SUB(BV32_MUL(v191$1, BV32_ADD(local_id_x$1, 1bv32)), 1bv32) else v193$1);
    v193$2 := (if p133$2 then BV32_SUB(BV32_MUL(v191$2, BV32_ADD(local_id_x$2, 1bv32)), 1bv32) else v193$2);
    v194$1 := (if p133$1 then BV32_ADD(v193$1, BV32_LSHR(v191$1, 1bv32)) else v194$1);
    v194$2 := (if p133$2 then BV32_ADD(v193$2, BV32_LSHR(v191$2, 1bv32)) else v194$2);
    call {:sourceloc} {:sourceloc_num 359} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p133$1, BV32_ADD(1bv32, v194$1), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v194$1)]);
    assume {:do_not_predicate} {:check_id "check_state_109"} {:captureState "check_state_109"} {:sourceloc} {:sourceloc_num 359} true;
    call {:check_id "check_state_109"} {:sourceloc} {:sourceloc_num 359} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p133$2, BV32_ADD(1bv32, v194$2), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v194$2)]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    v195$1 := (if p133$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v194$1)] else v195$1);
    v195$2 := (if p133$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v194$2)] else v195$2);
    call {:sourceloc} {:sourceloc_num 360} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p133$1, BV32_ADD(1bv32, v193$1), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v193$1)]);
    assume {:do_not_predicate} {:check_id "check_state_110"} {:captureState "check_state_110"} {:sourceloc} {:sourceloc_num 360} true;
    call {:check_id "check_state_110"} {:sourceloc} {:sourceloc_num 360} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p133$2, BV32_ADD(1bv32, v193$2), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v193$2)]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    v196$1 := (if p133$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v193$1)] else v196$1);
    v196$2 := (if p133$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v193$2)] else v196$2);
    call {:sourceloc} {:sourceloc_num 361} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p133$1, BV32_ADD(1bv32, v194$1), BV32_ADD(BV16_ZEXT32(v195$1), BV16_ZEXT32(v196$1))[16:0], $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v194$1)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p133$2, BV32_ADD(1bv32, v194$2));
    assume {:do_not_predicate} {:check_id "check_state_111"} {:captureState "check_state_111"} {:sourceloc} {:sourceloc_num 361} true;
    call {:check_id "check_state_111"} {:sourceloc} {:sourceloc_num 361} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p133$2, BV32_ADD(1bv32, v194$2), BV32_ADD(BV16_ZEXT32(v195$2), BV16_ZEXT32(v196$2))[16:0]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v194$1)] := (if p133$1 then BV32_ADD(BV16_ZEXT32(v195$1), BV16_ZEXT32(v196$1))[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, v194$1)]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v194$2)] := (if p133$2 then BV32_ADD(BV16_ZEXT32(v195$2), BV16_ZEXT32(v196$2))[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, v194$2)]);
    $offset.i17.1$1, $d1.i21.0$1 := (if p131$1 then v191$1 else $offset.i17.1$1), (if p131$1 then BV32_SHL($d1.i21.0$1, 1bv32) else $d1.i21.0$1);
    $offset.i17.1$2, $d1.i21.0$2 := (if p131$2 then v191$2 else $offset.i17.1$2), (if p131$2 then BV32_SHL($d1.i21.0$2, 1bv32) else $d1.i21.0$2);
    p130$1 := (if p131$1 then true else p130$1);
    p130$2 := (if p131$2 then true else p130$2);
    goto $145.backedge, __partitioned_block_$145.tail_0;

  __partitioned_block_$145.tail_0:
    assume !p130$1 && !p130$2;
    goto __partitioned_block_$145.tail_1;

  __partitioned_block_$145.tail_1:
    call {:sourceloc_num 364} $bugle_barrier_duplicated_12(1bv1, 1bv1);
    v197$1 := 0bv32 == local_id_x$1;
    v197$2 := 0bv32 == local_id_x$2;
    p134$1 := (if v197$1 then v197$1 else p134$1);
    p134$2 := (if v197$2 then v197$2 else p134$2);
    assume {:do_not_predicate} {:check_id "check_state_96"} {:captureState "check_state_96"} {:sourceloc} {:sourceloc_num 366} true;
    v198$1 := (if p134$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[1bv1][0bv32] else v198$1);
    v198$2 := (if p134$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] else v198$2);
    assume {:do_not_predicate} {:check_id "check_state_97"} {:captureState "check_state_97"} {:sourceloc} {:sourceloc_num 367} true;
    v199$1 := (if p134$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD(1bv32, BV32_SUB(v198$1, 1bv32))] else v199$1);
    v199$2 := (if p134$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, BV32_SUB(v198$2, 1bv32))] else v199$2);
    call {:sourceloc} {:sourceloc_num 368} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult(p134$1, 0bv32, BV16_ZEXT32(v199$1), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult[1bv1][0bv32]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult(p134$2, 0bv32);
    assume {:do_not_predicate} {:check_id "check_state_98"} {:captureState "check_state_98"} {:sourceloc} {:sourceloc_num 368} true;
    call {:check_id "check_state_98"} {:sourceloc} {:sourceloc_num 368} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult(p134$2, 0bv32, BV16_ZEXT32(v199$2));
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult[1bv1][0bv32] := (if p134$1 then BV16_ZEXT32(v199$1) else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult[1bv1][0bv32]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] := (if p134$2 then BV16_ZEXT32(v199$2) else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    assume {:do_not_predicate} {:check_id "check_state_99"} {:captureState "check_state_99"} {:sourceloc} {:sourceloc_num 369} true;
    v200$1 := (if p134$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[1bv1][0bv32] else v200$1);
    v200$2 := (if p134$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] else v200$2);
    assume {:do_not_predicate} {:check_id "check_state_100"} {:captureState "check_state_100"} {:sourceloc} {:sourceloc_num 370} true;
    v201$1 := (if p134$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][BV32_ADD(1bv32, BV32_SUB(v200$1, 1bv32))] else v201$1);
    v201$2 := (if p134$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, BV32_SUB(v200$2, 1bv32))] else v201$2);
    call {:sourceloc} {:sourceloc_num 371} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda(p134$1, 0bv32, BV16_ZEXT32(v201$1), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda[1bv1][0bv32]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda(p134$2, 0bv32);
    assume {:do_not_predicate} {:check_id "check_state_101"} {:captureState "check_state_101"} {:sourceloc} {:sourceloc_num 371} true;
    call {:check_id "check_state_101"} {:sourceloc} {:sourceloc_num 371} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda(p134$2, 0bv32, BV16_ZEXT32(v201$2));
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda[1bv1][0bv32] := (if p134$1 then BV16_ZEXT32(v201$1) else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda[1bv1][0bv32]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] := (if p134$2 then BV16_ZEXT32(v201$2) else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    assume {:do_not_predicate} {:check_id "check_state_102"} {:captureState "check_state_102"} {:sourceloc} {:sourceloc_num 372} true;
    v202$1 := (if p134$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[1bv1][0bv32] else v202$1);
    v202$2 := (if p134$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] else v202$2);
    assume {:do_not_predicate} {:check_id "check_state_103"} {:captureState "check_state_103"} {:sourceloc} {:sourceloc_num 373} true;
    v203$1 := (if p134$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][BV32_ADD(1bv32, BV32_SUB(v202$1, 1bv32))] else v203$1);
    v203$2 := (if p134$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(1bv32, BV32_SUB(v202$2, 1bv32))] else v203$2);
    call {:sourceloc} {:sourceloc_num 374} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult(p134$1, 0bv32, BV16_ZEXT32(v203$1), $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult[1bv1][0bv32]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult(p134$2, 0bv32);
    assume {:do_not_predicate} {:check_id "check_state_104"} {:captureState "check_state_104"} {:sourceloc} {:sourceloc_num 374} true;
    call {:check_id "check_state_104"} {:sourceloc} {:sourceloc_num 374} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult(p134$2, 0bv32, BV16_ZEXT32(v203$2));
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult[1bv1][0bv32] := (if p134$1 then BV16_ZEXT32(v203$1) else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult[1bv1][0bv32]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] := (if p134$2 then BV16_ZEXT32(v203$2) else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    call {:sourceloc} {:sourceloc_num 375} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda(p134$1, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda[1bv1][0bv32]);
    assume {:do_not_predicate} {:check_id "check_state_105"} {:captureState "check_state_105"} {:sourceloc} {:sourceloc_num 375} true;
    call {:check_id "check_state_105"} {:sourceloc} {:sourceloc_num 375} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda(p134$2, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda"} true;
    v204$1 := (if p134$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda[1bv1][0bv32] else v204$1);
    v204$2 := (if p134$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] else v204$2);
    call {:sourceloc} {:sourceloc_num 376} _LOG_WRITE_$$g_num_one(p134$1, 0bv32, v204$1, $$g_num_one[0bv32]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_num_one(p134$2, 0bv32);
    assume {:do_not_predicate} {:check_id "check_state_106"} {:captureState "check_state_106"} {:sourceloc} {:sourceloc_num 376} true;
    call {:check_id "check_state_106"} {:sourceloc} {:sourceloc_num 376} _CHECK_WRITE_$$g_num_one(p134$2, 0bv32, v204$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$g_num_one"} true;
    $$g_num_one[0bv32] := (if p134$1 then v204$1 else $$g_num_one[0bv32]);
    $$g_num_one[0bv32] := (if p134$2 then v204$2 else $$g_num_one[0bv32]);
    call {:sourceloc} {:sourceloc_num 377} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult(p134$1, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult[1bv1][0bv32]);
    assume {:do_not_predicate} {:check_id "check_state_107"} {:captureState "check_state_107"} {:sourceloc} {:sourceloc_num 377} true;
    call {:check_id "check_state_107"} {:sourceloc} {:sourceloc_num 377} _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult(p134$2, 0bv32, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult"} true;
    v205$1 := (if p134$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult[1bv1][0bv32] else v205$1);
    v205$2 := (if p134$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] else v205$2);
    call {:sourceloc} {:sourceloc_num 378} _LOG_WRITE_$$g_num_blocks_mult(p134$1, 0bv32, v205$1, $$g_num_blocks_mult[0bv32]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_num_blocks_mult(p134$2, 0bv32);
    assume {:do_not_predicate} {:check_id "check_state_108"} {:captureState "check_state_108"} {:sourceloc} {:sourceloc_num 378} true;
    call {:check_id "check_state_108"} {:sourceloc} {:sourceloc_num 378} _CHECK_WRITE_$$g_num_blocks_mult(p134$2, 0bv32, v205$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$g_num_blocks_mult"} true;
    $$g_num_blocks_mult[0bv32] := (if p134$1 then v205$1 else $$g_num_blocks_mult[0bv32]);
    $$g_num_blocks_mult[0bv32] := (if p134$2 then v205$2 else $$g_num_blocks_mult[0bv32]);
    goto __partitioned_block_$145.tail_2;

  __partitioned_block_$145.tail_2:
    call {:sourceloc_num 380} $bugle_barrier_duplicated_13(1bv1, 1bv1);
    assume {:do_not_predicate} {:check_id "check_state_28"} {:captureState "check_state_28"} {:sourceloc} {:sourceloc_num 381} true;
    v206$1 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[1bv1][0bv32];
    v206$2 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32];
    assume {:do_not_predicate} {:check_id "check_state_29"} {:captureState "check_state_29"} {:sourceloc} {:sourceloc_num 382} true;
    v207$1 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][local_id_x$1];
    v207$2 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2];
    assume {:do_not_predicate} {:check_id "check_state_30"} {:captureState "check_state_30"} {:sourceloc} {:sourceloc_num 383} true;
    v208$1 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][local_id_x$1];
    v208$2 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2];
    v209$1 := BV32_ULT(v108$1, v206$1);
    v209$2 := BV32_ULT(v108$2, v206$2);
    p136$1 := (if v209$1 then v209$1 else p136$1);
    p136$2 := (if v209$2 then v209$2 else p136$2);
    p137$1 := (if !v209$1 then !v209$1 else p137$1);
    p137$2 := (if !v209$2 then !v209$2 else p137$2);
    assume {:do_not_predicate} {:check_id "check_state_94"} {:captureState "check_state_94"} {:sourceloc} {:sourceloc_num 385} true;
    v210$1 := (if p136$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][v108$1] else v210$1);
    v210$2 := (if p136$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v108$2] else v210$2);
    assume {:do_not_predicate} {:check_id "check_state_95"} {:captureState "check_state_95"} {:sourceloc} {:sourceloc_num 386} true;
    v211$1 := (if p136$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][v108$1] else v211$1);
    v211$2 := (if p136$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v108$2] else v211$2);
    $left_2.0$1, $right_2.0$1 := (if p136$1 then v210$1 else $left_2.0$1), (if p136$1 then v211$1 else $right_2.0$1);
    $left_2.0$2, $right_2.0$2 := (if p136$2 then v210$2 else $left_2.0$2), (if p136$2 then v211$2 else $right_2.0$2);
    havoc _HAVOC_bv32$1, _HAVOC_bv32$2;
    v259$1 := (if p137$1 then _HAVOC_bv32$1 else v259$1);
    v259$2 := (if p137$2 then _HAVOC_bv32$2 else v259$2);
    havoc _HAVOC_bv32$1, _HAVOC_bv32$2;
    v260$1 := (if p137$1 then _HAVOC_bv32$1 else v260$1);
    v260$2 := (if p137$2 then _HAVOC_bv32$2 else v260$2);
    $left_2.0$1, $right_2.0$1 := (if p137$1 then v259$1 else $left_2.0$1), (if p137$1 then v260$1 else $right_2.0$1);
    $left_2.0$2, $right_2.0$2 := (if p137$2 then v259$2 else $left_2.0$2), (if p137$2 then v260$2 else $right_2.0$2);
    goto __partitioned_block_$145.tail_3;

  __partitioned_block_$145.tail_3:
    call {:sourceloc_num 388} $bugle_barrier_duplicated_14(1bv1, 1bv1);
    v212$1 := 1bv32 == v117$1;
    v212$2 := 1bv32 == v117$2;
    p138$1 := (if v212$1 then v212$1 else p138$1);
    p138$2 := (if v212$2 then v212$2 else p138$2);
    p139$1 := (if !v212$1 then !v212$1 else p139$1);
    p139$2 := (if !v212$2 then !v212$2 else p139$2);
    assume {:do_not_predicate} {:check_id "check_state_93"} {:captureState "check_state_93"} {:sourceloc} {:sourceloc_num 390} true;
    v213$1 := (if p138$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][local_id_x$1] else v213$1);
    v213$2 := (if p138$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] else v213$2);
    $9$1 := (if p138$1 then BV16_ZEXT32(v213$1) else $9$1);
    $9$2 := (if p138$2 then BV16_ZEXT32(v213$2) else $9$2);
    assume {:do_not_predicate} {:check_id "check_state_31"} {:captureState "check_state_31"} {:sourceloc} {:sourceloc_num 392} true;
    v214$1 := (if p139$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][local_id_x$1] else v214$1);
    v214$2 := (if p139$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] else v214$2);
    assume {:do_not_predicate} {:check_id "check_state_32"} {:captureState "check_state_32"} {:sourceloc} {:sourceloc_num 393} true;
    v215$1 := (if p139$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda[1bv1][0bv32] else v215$1);
    v215$2 := (if p139$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] else v215$2);
    $9$1 := (if p139$1 then BV32_ADD(BV16_ZEXT32(v214$1), v215$1) else $9$1);
    $9$2 := (if p139$2 then BV32_ADD(BV16_ZEXT32(v214$2), v215$2) else $9$2);
    v216$1 := 0bv32 != $c_block_iend.0$1;
    v216$2 := 0bv32 != $c_block_iend.0$2;
    p140$1 := (if v216$1 then v216$1 else p140$1);
    p140$2 := (if v216$2 then v216$2 else p140$2);
    p141$1 := (if !v216$1 then !v216$1 else p141$1);
    p141$2 := (if !v216$2 then !v216$2 else p141$2);
    assume {:do_not_predicate} {:check_id "check_state_92"} {:captureState "check_state_92"} {:sourceloc} {:sourceloc_num 396} true;
    v217$1 := (if p140$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][local_id_x$1] else v217$1);
    v217$2 := (if p140$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] else v217$2);
    $ptr_blocking_w.i.0$1 := (if p140$1 then BV16_ZEXT32(v217$1) else $ptr_blocking_w.i.0$1);
    $ptr_blocking_w.i.0$2 := (if p140$2 then BV16_ZEXT32(v217$2) else $ptr_blocking_w.i.0$2);
    $ptr_blocking_w.i.0$1 := (if p141$1 then 0bv32 else $ptr_blocking_w.i.0$1);
    $ptr_blocking_w.i.0$2 := (if p141$2 then 0bv32 else $ptr_blocking_w.i.0$2);
    v218$1 := BV32_ULT(v108$1, v206$1);
    v218$2 := BV32_ULT(v108$2, v206$2);
    p142$1 := (if v218$1 then v218$1 else p142$1);
    p142$2 := (if v218$2 then v218$2 else p142$2);
    p147$1 := (if !v218$1 then !v218$1 else p147$1);
    p147$2 := (if !v218$2 then !v218$2 else p147$2);
    v219$1 := (if p142$1 then 1bv32 == $is_one_lambda_2.0$1 else v219$1);
    v219$2 := (if p142$2 then 1bv32 == $is_one_lambda_2.0$2 else v219$2);
    p143$1 := (if p142$1 && v219$1 then v219$1 else p143$1);
    p143$2 := (if p142$2 && v219$2 then v219$2 else p143$2);
    p144$1 := (if p142$1 && !v219$1 then !v219$1 else p144$1);
    p144$2 := (if p142$2 && !v219$2 then !v219$2 else p144$2);
    assume {:do_not_predicate} {:check_id "check_state_91"} {:captureState "check_state_91"} {:sourceloc} {:sourceloc_num 400} true;
    v220$1 := (if p143$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][v108$1] else v220$1);
    v220$2 := (if p143$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v108$2] else v220$2);
    $10$1 := (if p143$1 then BV16_ZEXT32(v220$1) else $10$1);
    $10$2 := (if p143$2 then BV16_ZEXT32(v220$2) else $10$2);
    assume {:do_not_predicate} {:check_id "check_state_88"} {:captureState "check_state_88"} {:sourceloc} {:sourceloc_num 402} true;
    v221$1 := (if p144$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][v108$1] else v221$1);
    v221$2 := (if p144$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v108$2] else v221$2);
    assume {:do_not_predicate} {:check_id "check_state_89"} {:captureState "check_state_89"} {:sourceloc} {:sourceloc_num 403} true;
    v222$1 := (if p144$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda[1bv1][0bv32] else v222$1);
    v222$2 := (if p144$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] else v222$2);
    $10$1 := (if p144$1 then BV32_ADD(BV16_ZEXT32(v221$1), v222$1) else $10$1);
    $10$2 := (if p144$2 then BV32_ADD(BV16_ZEXT32(v221$2), v222$2) else $10$2);
    v223$1 := (if p142$1 then 0bv32 != $c_block_iend_2.0$1 else v223$1);
    v223$2 := (if p142$2 then 0bv32 != $c_block_iend_2.0$2 else v223$2);
    p145$1 := (if p142$1 && v223$1 then v223$1 else p145$1);
    p145$2 := (if p142$2 && v223$2 then v223$2 else p145$2);
    p146$1 := (if p142$1 && !v223$1 then !v223$1 else p146$1);
    p146$2 := (if p142$2 && !v223$2 then !v223$2 else p146$2);
    assume {:do_not_predicate} {:check_id "check_state_90"} {:captureState "check_state_90"} {:sourceloc} {:sourceloc_num 406} true;
    v224$1 := (if p145$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][v108$1] else v224$1);
    v224$2 := (if p145$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v108$2] else v224$2);
    $ptr_blocking_w_2.i.0$1 := (if p145$1 then BV16_ZEXT32(v224$1) else $ptr_blocking_w_2.i.0$1);
    $ptr_blocking_w_2.i.0$2 := (if p145$2 then BV16_ZEXT32(v224$2) else $ptr_blocking_w_2.i.0$2);
    $ptr_blocking_w_2.i.0$1 := (if p146$1 then 0bv32 else $ptr_blocking_w_2.i.0$1);
    $ptr_blocking_w_2.i.0$2 := (if p146$2 then 0bv32 else $ptr_blocking_w_2.i.0$2);
    $ptr_w_2.i.0$1, $ptr_blocking_w_2.i.1$1 := (if p142$1 then $10$1 else $ptr_w_2.i.0$1), (if p142$1 then $ptr_blocking_w_2.i.0$1 else $ptr_blocking_w_2.i.1$1);
    $ptr_w_2.i.0$2, $ptr_blocking_w_2.i.1$2 := (if p142$2 then $10$2 else $ptr_w_2.i.0$2), (if p142$2 then $ptr_blocking_w_2.i.0$2 else $ptr_blocking_w_2.i.1$2);
    $ptr_w_2.i.0$1, $ptr_blocking_w_2.i.1$1 := (if p147$1 then 0bv32 else $ptr_w_2.i.0$1), (if p147$1 then 0bv32 else $ptr_blocking_w_2.i.1$1);
    $ptr_w_2.i.0$2, $ptr_blocking_w_2.i.1$2 := (if p147$2 then 0bv32 else $ptr_w_2.i.0$2), (if p147$2 then 0bv32 else $ptr_blocking_w_2.i.1$2);
    goto __partitioned_block_$145.tail_4;

  __partitioned_block_$145.tail_4:
    call {:sourceloc_num 409} $bugle_barrier_duplicated_15(1bv1, 1bv1);
    call {:sourceloc} {:sourceloc_num 410} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(true, $9$1, v207$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][$9$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(true, $9$2);
    assume {:do_not_predicate} {:check_id "check_state_33"} {:captureState "check_state_33"} {:sourceloc} {:sourceloc_num 410} true;
    call {:check_id "check_state_33"} {:sourceloc} {:sourceloc_num 410} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(true, $9$2, v207$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][$9$1] := v207$1;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][$9$2] := v207$2;
    call {:sourceloc} {:sourceloc_num 411} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(true, $9$1, v208$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][$9$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(true, $9$2);
    assume {:do_not_predicate} {:check_id "check_state_34"} {:captureState "check_state_34"} {:sourceloc} {:sourceloc_num 411} true;
    call {:check_id "check_state_34"} {:sourceloc} {:sourceloc_num 411} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(true, $9$2, v208$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][$9$1] := v208$1;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][$9$2] := v208$2;
    call {:sourceloc} {:sourceloc_num 412} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(true, $9$1, v109$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][$9$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(true, $9$2);
    assume {:do_not_predicate} {:check_id "check_state_35"} {:captureState "check_state_35"} {:sourceloc} {:sourceloc_num 412} true;
    call {:check_id "check_state_35"} {:sourceloc} {:sourceloc_num 412} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(true, $9$2, v109$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][$9$1] := v109$1;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][$9$2] := v109$2;
    call {:sourceloc} {:sourceloc_num 413} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(true, $9$1, v110$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][$9$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(true, $9$2);
    assume {:do_not_predicate} {:check_id "check_state_36"} {:captureState "check_state_36"} {:sourceloc} {:sourceloc_num 413} true;
    call {:check_id "check_state_36"} {:sourceloc} {:sourceloc_num 413} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(true, $9$2, v110$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][$9$1] := v110$1;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][$9$2] := v110$2;
    v225$1 := 0bv32 != $c_block_iend.0$1;
    v225$2 := 0bv32 != $c_block_iend.0$2;
    p148$1 := (if v225$1 then v225$1 else p148$1);
    p148$2 := (if v225$2 then v225$2 else p148$2);
    call {:sourceloc} {:sourceloc_num 415} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p148$1, BV32_ADD($ptr_blocking_w.i.0$1, 1bv32), BV32_SUB($c_block_iend.0$1, 1bv32)[16:0], $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD($ptr_blocking_w.i.0$1, 1bv32)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p148$2, BV32_ADD($ptr_blocking_w.i.0$2, 1bv32));
    assume {:do_not_predicate} {:check_id "check_state_86"} {:captureState "check_state_86"} {:sourceloc} {:sourceloc_num 415} true;
    call {:check_id "check_state_86"} {:sourceloc} {:sourceloc_num 415} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p148$2, BV32_ADD($ptr_blocking_w.i.0$2, 1bv32), BV32_SUB($c_block_iend.0$2, 1bv32)[16:0]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD($ptr_blocking_w.i.0$1, 1bv32)] := (if p148$1 then BV32_SUB($c_block_iend.0$1, 1bv32)[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD($ptr_blocking_w.i.0$1, 1bv32)]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD($ptr_blocking_w.i.0$2, 1bv32)] := (if p148$2 then BV32_SUB($c_block_iend.0$2, 1bv32)[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD($ptr_blocking_w.i.0$2, 1bv32)]);
    call {:sourceloc} {:sourceloc_num 416} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p148$1, BV32_ADD($ptr_blocking_w.i.0$1, 1bv32), $c_sum_block.0$1[16:0], $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][BV32_ADD($ptr_blocking_w.i.0$1, 1bv32)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p148$2, BV32_ADD($ptr_blocking_w.i.0$2, 1bv32));
    assume {:do_not_predicate} {:check_id "check_state_87"} {:captureState "check_state_87"} {:sourceloc} {:sourceloc_num 416} true;
    call {:check_id "check_state_87"} {:sourceloc} {:sourceloc_num 416} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p148$2, BV32_ADD($ptr_blocking_w.i.0$2, 1bv32), $c_sum_block.0$2[16:0]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][BV32_ADD($ptr_blocking_w.i.0$1, 1bv32)] := (if p148$1 then $c_sum_block.0$1[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][BV32_ADD($ptr_blocking_w.i.0$1, 1bv32)]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD($ptr_blocking_w.i.0$2, 1bv32)] := (if p148$2 then $c_sum_block.0$2[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD($ptr_blocking_w.i.0$2, 1bv32)]);
    v226$1 := BV32_ULT(v108$1, v206$1);
    v226$2 := BV32_ULT(v108$2, v206$2);
    p150$1 := (if v226$1 then v226$1 else p150$1);
    p150$2 := (if v226$2 then v226$2 else p150$2);
    call {:sourceloc} {:sourceloc_num 419} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p150$1, $ptr_w_2.i.0$1, $left_2.0$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][$ptr_w_2.i.0$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p150$2, $ptr_w_2.i.0$2);
    assume {:do_not_predicate} {:check_id "check_state_80"} {:captureState "check_state_80"} {:sourceloc} {:sourceloc_num 419} true;
    call {:check_id "check_state_80"} {:sourceloc} {:sourceloc_num 419} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(p150$2, $ptr_w_2.i.0$2, $left_2.0$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][$ptr_w_2.i.0$1] := (if p150$1 then $left_2.0$1 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][$ptr_w_2.i.0$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][$ptr_w_2.i.0$2] := (if p150$2 then $left_2.0$2 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][$ptr_w_2.i.0$2]);
    call {:sourceloc} {:sourceloc_num 420} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p150$1, $ptr_w_2.i.0$1, $right_2.0$1, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][$ptr_w_2.i.0$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p150$2, $ptr_w_2.i.0$2);
    assume {:do_not_predicate} {:check_id "check_state_81"} {:captureState "check_state_81"} {:sourceloc} {:sourceloc_num 420} true;
    call {:check_id "check_state_81"} {:sourceloc} {:sourceloc_num 420} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(p150$2, $ptr_w_2.i.0$2, $right_2.0$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][$ptr_w_2.i.0$1] := (if p150$1 then $right_2.0$1 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][$ptr_w_2.i.0$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][$ptr_w_2.i.0$2] := (if p150$2 then $right_2.0$2 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][$ptr_w_2.i.0$2]);
    call {:sourceloc} {:sourceloc_num 421} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p150$1, $ptr_w_2.i.0$1, $left_count_2.0$1[16:0], $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][$ptr_w_2.i.0$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p150$2, $ptr_w_2.i.0$2);
    assume {:do_not_predicate} {:check_id "check_state_82"} {:captureState "check_state_82"} {:sourceloc} {:sourceloc_num 421} true;
    call {:check_id "check_state_82"} {:sourceloc} {:sourceloc_num 421} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(p150$2, $ptr_w_2.i.0$2, $left_count_2.0$2[16:0]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][$ptr_w_2.i.0$1] := (if p150$1 then $left_count_2.0$1[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][$ptr_w_2.i.0$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][$ptr_w_2.i.0$2] := (if p150$2 then $left_count_2.0$2[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][$ptr_w_2.i.0$2]);
    call {:sourceloc} {:sourceloc_num 422} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p150$1, $ptr_w_2.i.0$1, $right_count_2.0$1[16:0], $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][$ptr_w_2.i.0$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p150$2, $ptr_w_2.i.0$2);
    assume {:do_not_predicate} {:check_id "check_state_83"} {:captureState "check_state_83"} {:sourceloc} {:sourceloc_num 422} true;
    call {:check_id "check_state_83"} {:sourceloc} {:sourceloc_num 422} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(p150$2, $ptr_w_2.i.0$2, $right_count_2.0$2[16:0]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][$ptr_w_2.i.0$1] := (if p150$1 then $right_count_2.0$1[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][$ptr_w_2.i.0$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][$ptr_w_2.i.0$2] := (if p150$2 then $right_count_2.0$2[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][$ptr_w_2.i.0$2]);
    v227$1 := (if p150$1 then 0bv32 != $c_block_iend_2.0$1 else v227$1);
    v227$2 := (if p150$2 then 0bv32 != $c_block_iend_2.0$2 else v227$2);
    p151$1 := (if p150$1 && v227$1 then v227$1 else p151$1);
    p151$2 := (if p150$2 && v227$2 then v227$2 else p151$2);
    call {:sourceloc} {:sourceloc_num 424} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p151$1, BV32_ADD($ptr_blocking_w_2.i.1$1, 1bv32), BV32_SUB($c_block_iend_2.0$1, 1bv32)[16:0], $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD($ptr_blocking_w_2.i.1$1, 1bv32)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p151$2, BV32_ADD($ptr_blocking_w_2.i.1$2, 1bv32));
    assume {:do_not_predicate} {:check_id "check_state_84"} {:captureState "check_state_84"} {:sourceloc} {:sourceloc_num 424} true;
    call {:check_id "check_state_84"} {:sourceloc} {:sourceloc_num 424} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p151$2, BV32_ADD($ptr_blocking_w_2.i.1$2, 1bv32), BV32_SUB($c_block_iend_2.0$2, 1bv32)[16:0]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD($ptr_blocking_w_2.i.1$1, 1bv32)] := (if p151$1 then BV32_SUB($c_block_iend_2.0$1, 1bv32)[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][BV32_ADD($ptr_blocking_w_2.i.1$1, 1bv32)]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD($ptr_blocking_w_2.i.1$2, 1bv32)] := (if p151$2 then BV32_SUB($c_block_iend_2.0$2, 1bv32)[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD($ptr_blocking_w_2.i.1$2, 1bv32)]);
    call {:sourceloc} {:sourceloc_num 425} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p151$1, BV32_ADD($ptr_blocking_w_2.i.1$1, 1bv32), $c_sum_block_2.0$1[16:0], $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][BV32_ADD($ptr_blocking_w_2.i.1$1, 1bv32)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p151$2, BV32_ADD($ptr_blocking_w_2.i.1$2, 1bv32));
    assume {:do_not_predicate} {:check_id "check_state_85"} {:captureState "check_state_85"} {:sourceloc} {:sourceloc_num 425} true;
    call {:check_id "check_state_85"} {:sourceloc} {:sourceloc_num 425} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p151$2, BV32_ADD($ptr_blocking_w_2.i.1$2, 1bv32), $c_sum_block_2.0$2[16:0]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][BV32_ADD($ptr_blocking_w_2.i.1$1, 1bv32)] := (if p151$1 then $c_sum_block_2.0$1[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][BV32_ADD($ptr_blocking_w_2.i.1$1, 1bv32)]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD($ptr_blocking_w_2.i.1$2, 1bv32)] := (if p151$2 then $c_sum_block_2.0$2[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD($ptr_blocking_w_2.i.1$2, 1bv32)]);
    goto __partitioned_block_$145.tail_5;

  __partitioned_block_$145.tail_5:
    call {:sourceloc_num 428} $bugle_barrier_duplicated_16(1bv1, 1bv1);
    v228$1 := 0bv32 == local_id_x$1;
    v228$2 := 0bv32 == local_id_x$2;
    p154$1 := (if v228$1 then v228$1 else p154$1);
    p154$2 := (if v228$2 then v228$2 else p154$2);
    assume {:do_not_predicate} {:check_id "check_state_76"} {:captureState "check_state_76"} {:sourceloc} {:sourceloc_num 430} true;
    v229$1 := (if p154$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult[1bv1][0bv32] else v229$1);
    v229$2 := (if p154$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] else v229$2);
    assume {:do_not_predicate} {:check_id "check_state_77"} {:captureState "check_state_77"} {:sourceloc} {:sourceloc_num 431} true;
    v230$1 := (if p154$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult[1bv1][0bv32] else v230$1);
    v230$2 := (if p154$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] else v230$2);
    call {:sourceloc} {:sourceloc_num 432} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p154$1, v230$1, v229$1[16:0], $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][v230$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p154$2, v230$2);
    assume {:do_not_predicate} {:check_id "check_state_78"} {:captureState "check_state_78"} {:sourceloc} {:sourceloc_num 432} true;
    call {:check_id "check_state_78"} {:sourceloc} {:sourceloc_num 432} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(p154$2, v230$2, v229$2[16:0]);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][v230$1] := (if p154$1 then v229$1[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][v230$1]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v230$2] := (if p154$2 then v229$2[16:0] else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v230$2]);
    call {:sourceloc} {:sourceloc_num 433} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p154$1, 0bv32, 0bv16, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][0bv32]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p154$2, 0bv32);
    assume {:do_not_predicate} {:check_id "check_state_79"} {:captureState "check_state_79"} {:sourceloc} {:sourceloc_num 433} true;
    call {:check_id "check_state_79"} {:sourceloc} {:sourceloc_num 433} _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(p154$2, 0bv32, 0bv16);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper"} true;
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][0bv32] := (if p154$1 then 0bv16 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][0bv32]);
    $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32] := (if p154$2 then 0bv16 else $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32]);
    goto __partitioned_block_$145.tail_6;

  __partitioned_block_$145.tail_6:
    call {:sourceloc_num 435} $bugle_barrier_duplicated_17(1bv1, 1bv1);
    assume {:do_not_predicate} {:check_id "check_state_37"} {:captureState "check_state_37"} {:sourceloc} {:sourceloc_num 436} true;
    v231$1 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[1bv1][0bv32];
    v231$2 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32];
    assume {:do_not_predicate} {:check_id "check_state_38"} {:captureState "check_state_38"} {:sourceloc} {:sourceloc_num 437} true;
    v232$1 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult[1bv1][0bv32];
    v232$2 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32];
    assume {:do_not_predicate} {:check_id "check_state_39"} {:captureState "check_state_39"} {:sourceloc} {:sourceloc_num 438} true;
    v233$1 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda[1bv1][0bv32];
    v233$2 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][0bv32];
    v234$1 := BV32_ULT(local_id_x$1, v233$1);
    v234$2 := BV32_ULT(local_id_x$2, v233$2);
    p156$1 := (if v234$1 then v234$1 else p156$1);
    p156$2 := (if v234$2 then v234$2 else p156$2);
    p157$1 := (if !v234$1 then !v234$1 else p157$1);
    p157$2 := (if !v234$2 then !v234$2 else p157$2);
    assume {:do_not_predicate} {:check_id "check_state_70"} {:captureState "check_state_70"} {:sourceloc} {:sourceloc_num 440} true;
    v235$1 := (if p156$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][local_id_x$1] else v235$1);
    v235$2 := (if p156$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] else v235$2);
    call {:sourceloc} {:sourceloc_num 441} _LOG_WRITE_$$g_left_one(p156$1, local_id_x$1, v235$1, $$g_left_one[local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_left_one(p156$2, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_71"} {:captureState "check_state_71"} {:sourceloc} {:sourceloc_num 441} true;
    call {:check_id "check_state_71"} {:sourceloc} {:sourceloc_num 441} _CHECK_WRITE_$$g_left_one(p156$2, local_id_x$2, v235$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$g_left_one"} true;
    $$g_left_one[local_id_x$1] := (if p156$1 then v235$1 else $$g_left_one[local_id_x$1]);
    $$g_left_one[local_id_x$2] := (if p156$2 then v235$2 else $$g_left_one[local_id_x$2]);
    assume {:do_not_predicate} {:check_id "check_state_72"} {:captureState "check_state_72"} {:sourceloc} {:sourceloc_num 442} true;
    v236$1 := (if p156$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][local_id_x$1] else v236$1);
    v236$2 := (if p156$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] else v236$2);
    call {:sourceloc} {:sourceloc_num 443} _LOG_WRITE_$$g_right_one(p156$1, local_id_x$1, v236$1, $$g_right_one[local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_right_one(p156$2, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_73"} {:captureState "check_state_73"} {:sourceloc} {:sourceloc_num 443} true;
    call {:check_id "check_state_73"} {:sourceloc} {:sourceloc_num 443} _CHECK_WRITE_$$g_right_one(p156$2, local_id_x$2, v236$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$g_right_one"} true;
    $$g_right_one[local_id_x$1] := (if p156$1 then v236$1 else $$g_right_one[local_id_x$1]);
    $$g_right_one[local_id_x$2] := (if p156$2 then v236$2 else $$g_right_one[local_id_x$2]);
    assume {:do_not_predicate} {:check_id "check_state_74"} {:captureState "check_state_74"} {:sourceloc} {:sourceloc_num 444} true;
    v237$1 := (if p156$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][local_id_x$1] else v237$1);
    v237$2 := (if p156$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] else v237$2);
    call {:sourceloc} {:sourceloc_num 445} _LOG_WRITE_$$g_pos_one(p156$1, local_id_x$1, BV16_ZEXT32(v237$1), $$g_pos_one[local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_pos_one(p156$2, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_75"} {:captureState "check_state_75"} {:sourceloc} {:sourceloc_num 445} true;
    call {:check_id "check_state_75"} {:sourceloc} {:sourceloc_num 445} _CHECK_WRITE_$$g_pos_one(p156$2, local_id_x$2, BV16_ZEXT32(v237$2));
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$g_pos_one"} true;
    $$g_pos_one[local_id_x$1] := (if p156$1 then BV16_ZEXT32(v237$1) else $$g_pos_one[local_id_x$1]);
    $$g_pos_one[local_id_x$2] := (if p156$2 then BV16_ZEXT32(v237$2) else $$g_pos_one[local_id_x$2]);
    assume {:do_not_predicate} {:check_id "check_state_40"} {:captureState "check_state_40"} {:sourceloc} {:sourceloc_num 447} true;
    v238$1 := (if p157$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][local_id_x$1] else v238$1);
    v238$2 := (if p157$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] else v238$2);
    call {:sourceloc} {:sourceloc_num 448} _LOG_WRITE_$$g_left_mult(p157$1, BV32_SUB(local_id_x$1, v233$1), v238$1, $$g_left_mult[BV32_SUB(local_id_x$1, v233$1)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_left_mult(p157$2, BV32_SUB(local_id_x$2, v233$2));
    assume {:do_not_predicate} {:check_id "check_state_41"} {:captureState "check_state_41"} {:sourceloc} {:sourceloc_num 448} true;
    call {:check_id "check_state_41"} {:sourceloc} {:sourceloc_num 448} _CHECK_WRITE_$$g_left_mult(p157$2, BV32_SUB(local_id_x$2, v233$2), v238$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$g_left_mult"} true;
    $$g_left_mult[BV32_SUB(local_id_x$1, v233$1)] := (if p157$1 then v238$1 else $$g_left_mult[BV32_SUB(local_id_x$1, v233$1)]);
    $$g_left_mult[BV32_SUB(local_id_x$2, v233$2)] := (if p157$2 then v238$2 else $$g_left_mult[BV32_SUB(local_id_x$2, v233$2)]);
    assume {:do_not_predicate} {:check_id "check_state_42"} {:captureState "check_state_42"} {:sourceloc} {:sourceloc_num 449} true;
    v239$1 := (if p157$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][local_id_x$1] else v239$1);
    v239$2 := (if p157$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] else v239$2);
    call {:sourceloc} {:sourceloc_num 450} _LOG_WRITE_$$g_right_mult(p157$1, BV32_SUB(local_id_x$1, v233$1), v239$1, $$g_right_mult[BV32_SUB(local_id_x$1, v233$1)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_right_mult(p157$2, BV32_SUB(local_id_x$2, v233$2));
    assume {:do_not_predicate} {:check_id "check_state_43"} {:captureState "check_state_43"} {:sourceloc} {:sourceloc_num 450} true;
    call {:check_id "check_state_43"} {:sourceloc} {:sourceloc_num 450} _CHECK_WRITE_$$g_right_mult(p157$2, BV32_SUB(local_id_x$2, v233$2), v239$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$g_right_mult"} true;
    $$g_right_mult[BV32_SUB(local_id_x$1, v233$1)] := (if p157$1 then v239$1 else $$g_right_mult[BV32_SUB(local_id_x$1, v233$1)]);
    $$g_right_mult[BV32_SUB(local_id_x$2, v233$2)] := (if p157$2 then v239$2 else $$g_right_mult[BV32_SUB(local_id_x$2, v233$2)]);
    assume {:do_not_predicate} {:check_id "check_state_44"} {:captureState "check_state_44"} {:sourceloc} {:sourceloc_num 451} true;
    v240$1 := (if p157$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][local_id_x$1] else v240$1);
    v240$2 := (if p157$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] else v240$2);
    call {:sourceloc} {:sourceloc_num 452} _LOG_WRITE_$$g_left_count_mult(p157$1, BV32_SUB(local_id_x$1, v233$1), BV16_ZEXT32(v240$1), $$g_left_count_mult[BV32_SUB(local_id_x$1, v233$1)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_left_count_mult(p157$2, BV32_SUB(local_id_x$2, v233$2));
    assume {:do_not_predicate} {:check_id "check_state_45"} {:captureState "check_state_45"} {:sourceloc} {:sourceloc_num 452} true;
    call {:check_id "check_state_45"} {:sourceloc} {:sourceloc_num 452} _CHECK_WRITE_$$g_left_count_mult(p157$2, BV32_SUB(local_id_x$2, v233$2), BV16_ZEXT32(v240$2));
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$g_left_count_mult"} true;
    $$g_left_count_mult[BV32_SUB(local_id_x$1, v233$1)] := (if p157$1 then BV16_ZEXT32(v240$1) else $$g_left_count_mult[BV32_SUB(local_id_x$1, v233$1)]);
    $$g_left_count_mult[BV32_SUB(local_id_x$2, v233$2)] := (if p157$2 then BV16_ZEXT32(v240$2) else $$g_left_count_mult[BV32_SUB(local_id_x$2, v233$2)]);
    assume {:do_not_predicate} {:check_id "check_state_46"} {:captureState "check_state_46"} {:sourceloc} {:sourceloc_num 453} true;
    v241$1 := (if p157$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][local_id_x$1] else v241$1);
    v241$2 := (if p157$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] else v241$2);
    call {:sourceloc} {:sourceloc_num 454} _LOG_WRITE_$$g_right_count_mult(p157$1, BV32_SUB(local_id_x$1, v233$1), BV16_ZEXT32(v241$1), $$g_right_count_mult[BV32_SUB(local_id_x$1, v233$1)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_right_count_mult(p157$2, BV32_SUB(local_id_x$2, v233$2));
    assume {:do_not_predicate} {:check_id "check_state_47"} {:captureState "check_state_47"} {:sourceloc} {:sourceloc_num 454} true;
    call {:check_id "check_state_47"} {:sourceloc} {:sourceloc_num 454} _CHECK_WRITE_$$g_right_count_mult(p157$2, BV32_SUB(local_id_x$2, v233$2), BV16_ZEXT32(v241$2));
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$g_right_count_mult"} true;
    $$g_right_count_mult[BV32_SUB(local_id_x$1, v233$1)] := (if p157$1 then BV16_ZEXT32(v241$1) else $$g_right_count_mult[BV32_SUB(local_id_x$1, v233$1)]);
    $$g_right_count_mult[BV32_SUB(local_id_x$2, v233$2)] := (if p157$2 then BV16_ZEXT32(v241$2) else $$g_right_count_mult[BV32_SUB(local_id_x$2, v233$2)]);
    v242$1 := BV32_ULT(v108$1, v231$1);
    v242$2 := BV32_ULT(v108$2, v231$2);
    p158$1 := (if v242$1 then v242$1 else p158$1);
    p158$2 := (if v242$2 then v242$2 else p158$2);
    v243$1 := (if p158$1 then BV32_ULT(v108$1, v233$1) else v243$1);
    v243$2 := (if p158$2 then BV32_ULT(v108$2, v233$2) else v243$2);
    p159$1 := (if p158$1 && v243$1 then v243$1 else p159$1);
    p159$2 := (if p158$2 && v243$2 then v243$2 else p159$2);
    p160$1 := (if p158$1 && !v243$1 then !v243$1 else p160$1);
    p160$2 := (if p158$2 && !v243$2 then !v243$2 else p160$2);
    assume {:do_not_predicate} {:check_id "check_state_64"} {:captureState "check_state_64"} {:sourceloc} {:sourceloc_num 458} true;
    v244$1 := (if p159$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][v108$1] else v244$1);
    v244$2 := (if p159$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v108$2] else v244$2);
    call {:sourceloc} {:sourceloc_num 459} _LOG_WRITE_$$g_left_one(p159$1, v108$1, v244$1, $$g_left_one[v108$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_left_one(p159$2, v108$2);
    assume {:do_not_predicate} {:check_id "check_state_65"} {:captureState "check_state_65"} {:sourceloc} {:sourceloc_num 459} true;
    call {:check_id "check_state_65"} {:sourceloc} {:sourceloc_num 459} _CHECK_WRITE_$$g_left_one(p159$2, v108$2, v244$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$g_left_one"} true;
    $$g_left_one[v108$1] := (if p159$1 then v244$1 else $$g_left_one[v108$1]);
    $$g_left_one[v108$2] := (if p159$2 then v244$2 else $$g_left_one[v108$2]);
    assume {:do_not_predicate} {:check_id "check_state_66"} {:captureState "check_state_66"} {:sourceloc} {:sourceloc_num 460} true;
    v245$1 := (if p159$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][v108$1] else v245$1);
    v245$2 := (if p159$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v108$2] else v245$2);
    call {:sourceloc} {:sourceloc_num 461} _LOG_WRITE_$$g_right_one(p159$1, v108$1, v245$1, $$g_right_one[v108$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_right_one(p159$2, v108$2);
    assume {:do_not_predicate} {:check_id "check_state_67"} {:captureState "check_state_67"} {:sourceloc} {:sourceloc_num 461} true;
    call {:check_id "check_state_67"} {:sourceloc} {:sourceloc_num 461} _CHECK_WRITE_$$g_right_one(p159$2, v108$2, v245$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$g_right_one"} true;
    $$g_right_one[v108$1] := (if p159$1 then v245$1 else $$g_right_one[v108$1]);
    $$g_right_one[v108$2] := (if p159$2 then v245$2 else $$g_right_one[v108$2]);
    assume {:do_not_predicate} {:check_id "check_state_68"} {:captureState "check_state_68"} {:sourceloc} {:sourceloc_num 462} true;
    v246$1 := (if p159$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][v108$1] else v246$1);
    v246$2 := (if p159$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v108$2] else v246$2);
    call {:sourceloc} {:sourceloc_num 463} _LOG_WRITE_$$g_pos_one(p159$1, v108$1, BV16_ZEXT32(v246$1), $$g_pos_one[v108$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_pos_one(p159$2, v108$2);
    assume {:do_not_predicate} {:check_id "check_state_69"} {:captureState "check_state_69"} {:sourceloc} {:sourceloc_num 463} true;
    call {:check_id "check_state_69"} {:sourceloc} {:sourceloc_num 463} _CHECK_WRITE_$$g_pos_one(p159$2, v108$2, BV16_ZEXT32(v246$2));
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$g_pos_one"} true;
    $$g_pos_one[v108$1] := (if p159$1 then BV16_ZEXT32(v246$1) else $$g_pos_one[v108$1]);
    $$g_pos_one[v108$2] := (if p159$2 then BV16_ZEXT32(v246$2) else $$g_pos_one[v108$2]);
    assume {:do_not_predicate} {:check_id "check_state_56"} {:captureState "check_state_56"} {:sourceloc} {:sourceloc_num 465} true;
    v247$1 := (if p160$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[1bv1][v108$1] else v247$1);
    v247$2 := (if p160$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v108$2] else v247$2);
    call {:sourceloc} {:sourceloc_num 466} _LOG_WRITE_$$g_left_mult(p160$1, BV32_SUB(v108$1, v233$1), v247$1, $$g_left_mult[BV32_SUB(v108$1, v233$1)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_left_mult(p160$2, BV32_SUB(v108$2, v233$2));
    assume {:do_not_predicate} {:check_id "check_state_57"} {:captureState "check_state_57"} {:sourceloc} {:sourceloc_num 466} true;
    call {:check_id "check_state_57"} {:sourceloc} {:sourceloc_num 466} _CHECK_WRITE_$$g_left_mult(p160$2, BV32_SUB(v108$2, v233$2), v247$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$g_left_mult"} true;
    $$g_left_mult[BV32_SUB(v108$1, v233$1)] := (if p160$1 then v247$1 else $$g_left_mult[BV32_SUB(v108$1, v233$1)]);
    $$g_left_mult[BV32_SUB(v108$2, v233$2)] := (if p160$2 then v247$2 else $$g_left_mult[BV32_SUB(v108$2, v233$2)]);
    assume {:do_not_predicate} {:check_id "check_state_58"} {:captureState "check_state_58"} {:sourceloc} {:sourceloc_num 467} true;
    v248$1 := (if p160$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[1bv1][v108$1] else v248$1);
    v248$2 := (if p160$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v108$2] else v248$2);
    call {:sourceloc} {:sourceloc_num 468} _LOG_WRITE_$$g_right_mult(p160$1, BV32_SUB(v108$1, v233$1), v248$1, $$g_right_mult[BV32_SUB(v108$1, v233$1)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_right_mult(p160$2, BV32_SUB(v108$2, v233$2));
    assume {:do_not_predicate} {:check_id "check_state_59"} {:captureState "check_state_59"} {:sourceloc} {:sourceloc_num 468} true;
    call {:check_id "check_state_59"} {:sourceloc} {:sourceloc_num 468} _CHECK_WRITE_$$g_right_mult(p160$2, BV32_SUB(v108$2, v233$2), v248$2);
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$g_right_mult"} true;
    $$g_right_mult[BV32_SUB(v108$1, v233$1)] := (if p160$1 then v248$1 else $$g_right_mult[BV32_SUB(v108$1, v233$1)]);
    $$g_right_mult[BV32_SUB(v108$2, v233$2)] := (if p160$2 then v248$2 else $$g_right_mult[BV32_SUB(v108$2, v233$2)]);
    assume {:do_not_predicate} {:check_id "check_state_60"} {:captureState "check_state_60"} {:sourceloc} {:sourceloc_num 469} true;
    v249$1 := (if p160$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[1bv1][v108$1] else v249$1);
    v249$2 := (if p160$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v108$2] else v249$2);
    call {:sourceloc} {:sourceloc_num 470} _LOG_WRITE_$$g_left_count_mult(p160$1, BV32_SUB(v108$1, v233$1), BV16_ZEXT32(v249$1), $$g_left_count_mult[BV32_SUB(v108$1, v233$1)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_left_count_mult(p160$2, BV32_SUB(v108$2, v233$2));
    assume {:do_not_predicate} {:check_id "check_state_61"} {:captureState "check_state_61"} {:sourceloc} {:sourceloc_num 470} true;
    call {:check_id "check_state_61"} {:sourceloc} {:sourceloc_num 470} _CHECK_WRITE_$$g_left_count_mult(p160$2, BV32_SUB(v108$2, v233$2), BV16_ZEXT32(v249$2));
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$g_left_count_mult"} true;
    $$g_left_count_mult[BV32_SUB(v108$1, v233$1)] := (if p160$1 then BV16_ZEXT32(v249$1) else $$g_left_count_mult[BV32_SUB(v108$1, v233$1)]);
    $$g_left_count_mult[BV32_SUB(v108$2, v233$2)] := (if p160$2 then BV16_ZEXT32(v249$2) else $$g_left_count_mult[BV32_SUB(v108$2, v233$2)]);
    assume {:do_not_predicate} {:check_id "check_state_62"} {:captureState "check_state_62"} {:sourceloc} {:sourceloc_num 471} true;
    v250$1 := (if p160$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[1bv1][v108$1] else v250$1);
    v250$2 := (if p160$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v108$2] else v250$2);
    call {:sourceloc} {:sourceloc_num 472} _LOG_WRITE_$$g_right_count_mult(p160$1, BV32_SUB(v108$1, v233$1), BV16_ZEXT32(v250$1), $$g_right_count_mult[BV32_SUB(v108$1, v233$1)]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_right_count_mult(p160$2, BV32_SUB(v108$2, v233$2));
    assume {:do_not_predicate} {:check_id "check_state_63"} {:captureState "check_state_63"} {:sourceloc} {:sourceloc_num 472} true;
    call {:check_id "check_state_63"} {:sourceloc} {:sourceloc_num 472} _CHECK_WRITE_$$g_right_count_mult(p160$2, BV32_SUB(v108$2, v233$2), BV16_ZEXT32(v250$2));
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$g_right_count_mult"} true;
    $$g_right_count_mult[BV32_SUB(v108$1, v233$1)] := (if p160$1 then BV16_ZEXT32(v250$1) else $$g_right_count_mult[BV32_SUB(v108$1, v233$1)]);
    $$g_right_count_mult[BV32_SUB(v108$2, v233$2)] := (if p160$2 then BV16_ZEXT32(v250$2) else $$g_right_count_mult[BV32_SUB(v108$2, v233$2)]);
    v251$1 := BV32_ULE(local_id_x$1, v232$1);
    v251$2 := BV32_ULE(local_id_x$2, v232$2);
    p162$1 := (if v251$1 then v251$1 else p162$1);
    p162$2 := (if v251$2 then v251$2 else p162$2);
    assume {:do_not_predicate} {:check_id "check_state_52"} {:captureState "check_state_52"} {:sourceloc} {:sourceloc_num 476} true;
    v252$1 := (if p162$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][local_id_x$1] else v252$1);
    v252$2 := (if p162$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] else v252$2);
    call {:sourceloc} {:sourceloc_num 477} _LOG_WRITE_$$g_blocks_mult(p162$1, local_id_x$1, BV16_ZEXT32(v252$1), $$g_blocks_mult[local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_blocks_mult(p162$2, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_53"} {:captureState "check_state_53"} {:sourceloc} {:sourceloc_num 477} true;
    call {:check_id "check_state_53"} {:sourceloc} {:sourceloc_num 477} _CHECK_WRITE_$$g_blocks_mult(p162$2, local_id_x$2, BV16_ZEXT32(v252$2));
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$g_blocks_mult"} true;
    $$g_blocks_mult[local_id_x$1] := (if p162$1 then BV16_ZEXT32(v252$1) else $$g_blocks_mult[local_id_x$1]);
    $$g_blocks_mult[local_id_x$2] := (if p162$2 then BV16_ZEXT32(v252$2) else $$g_blocks_mult[local_id_x$2]);
    assume {:do_not_predicate} {:check_id "check_state_54"} {:captureState "check_state_54"} {:sourceloc} {:sourceloc_num 478} true;
    v253$1 := (if p162$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][local_id_x$1] else v253$1);
    v253$2 := (if p162$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][local_id_x$2] else v253$2);
    call {:sourceloc} {:sourceloc_num 479} _LOG_WRITE_$$g_blocks_mult_sum(p162$1, local_id_x$1, BV16_ZEXT32(v253$1), $$g_blocks_mult_sum[local_id_x$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_blocks_mult_sum(p162$2, local_id_x$2);
    assume {:do_not_predicate} {:check_id "check_state_55"} {:captureState "check_state_55"} {:sourceloc} {:sourceloc_num 479} true;
    call {:check_id "check_state_55"} {:sourceloc} {:sourceloc_num 479} _CHECK_WRITE_$$g_blocks_mult_sum(p162$2, local_id_x$2, BV16_ZEXT32(v253$2));
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$g_blocks_mult_sum"} true;
    $$g_blocks_mult_sum[local_id_x$1] := (if p162$1 then BV16_ZEXT32(v253$1) else $$g_blocks_mult_sum[local_id_x$1]);
    $$g_blocks_mult_sum[local_id_x$2] := (if p162$2 then BV16_ZEXT32(v253$2) else $$g_blocks_mult_sum[local_id_x$2]);
    v254$1 := BV32_ULE(v108$1, v232$1);
    v254$2 := BV32_ULE(v108$2, v232$2);
    p164$1 := (if v254$1 then v254$1 else p164$1);
    p164$2 := (if v254$2 then v254$2 else p164$2);
    assume {:do_not_predicate} {:check_id "check_state_48"} {:captureState "check_state_48"} {:sourceloc} {:sourceloc_num 482} true;
    v255$1 := (if p164$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[1bv1][v108$1] else v255$1);
    v255$2 := (if p164$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v108$2] else v255$2);
    call {:sourceloc} {:sourceloc_num 483} _LOG_WRITE_$$g_blocks_mult(p164$1, v108$1, BV16_ZEXT32(v255$1), $$g_blocks_mult[v108$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_blocks_mult(p164$2, v108$2);
    assume {:do_not_predicate} {:check_id "check_state_49"} {:captureState "check_state_49"} {:sourceloc} {:sourceloc_num 483} true;
    call {:check_id "check_state_49"} {:sourceloc} {:sourceloc_num 483} _CHECK_WRITE_$$g_blocks_mult(p164$2, v108$2, BV16_ZEXT32(v255$2));
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$g_blocks_mult"} true;
    $$g_blocks_mult[v108$1] := (if p164$1 then BV16_ZEXT32(v255$1) else $$g_blocks_mult[v108$1]);
    $$g_blocks_mult[v108$2] := (if p164$2 then BV16_ZEXT32(v255$2) else $$g_blocks_mult[v108$2]);
    assume {:do_not_predicate} {:check_id "check_state_50"} {:captureState "check_state_50"} {:sourceloc} {:sourceloc_num 484} true;
    v256$1 := (if p164$1 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[1bv1][v108$1] else v256$1);
    v256$2 := (if p164$2 then $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][v108$2] else v256$2);
    call {:sourceloc} {:sourceloc_num 485} _LOG_WRITE_$$g_blocks_mult_sum(p164$1, v108$1, BV16_ZEXT32(v256$1), $$g_blocks_mult_sum[v108$1]);
    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_blocks_mult_sum(p164$2, v108$2);
    assume {:do_not_predicate} {:check_id "check_state_51"} {:captureState "check_state_51"} {:sourceloc} {:sourceloc_num 485} true;
    call {:check_id "check_state_51"} {:sourceloc} {:sourceloc_num 485} _CHECK_WRITE_$$g_blocks_mult_sum(p164$2, v108$2, BV16_ZEXT32(v256$2));
    assume {:captureState "call_return_state_0"} {:procedureName "_CHECK_WRITE_$$g_blocks_mult_sum"} true;
    $$g_blocks_mult_sum[v108$1] := (if p164$1 then BV16_ZEXT32(v256$1) else $$g_blocks_mult_sum[v108$1]);
    $$g_blocks_mult_sum[v108$2] := (if p164$2 then BV16_ZEXT32(v256$2) else $$g_blocks_mult_sum[v108$2]);
    return;

  $145.backedge:
    assume {:backedge} p130$1 || p130$2;
    assume {:captureState "loop_back_edge_state_0_0"} true;
    goto __partitioned_block_$145_0;

  $140.backedge:
    assume {:backedge} p126$1 || p126$2;
    assume {:captureState "loop_back_edge_state_1_0"} true;
    goto __partitioned_block_$140_0;

  $128.backedge:
    assume {:backedge} p114$1 || p114$2;
    assume {:captureState "loop_back_edge_state_2_0"} true;
    goto __partitioned_block_$128_0;

  $123.backedge:
    assume {:backedge} p110$1 || p110$2;
    assume {:captureState "loop_back_edge_state_3_0"} true;
    goto __partitioned_block_$123_0;

  $119.backedge:
    assume {:backedge} p106$1 || p106$2;
    assume {:captureState "loop_back_edge_state_4_0"} true;
    goto __partitioned_block_$119_0;

  $102.backedge:
    assume {:backedge} p90$1 || p90$2;
    assume {:captureState "loop_back_edge_state_5_0"} true;
    goto __partitioned_block_$102_0;

  $3.backedge:
    assume {:backedge} p2$1 || p2$2;
    assume {:captureState "loop_back_edge_state_6_0"} true;
    goto __partitioned_block_$3_0;

  $73.backedge:
    assume {:backedge} p63$1 || p63$2;
    assume {:captureState "loop_back_edge_state_7_0"} true;
    goto __partitioned_block_$73_0;

  $68.backedge:
    assume {:backedge} p59$1 || p59$2;
    assume {:captureState "loop_back_edge_state_8_0"} true;
    goto __partitioned_block_$68_0;

  $14.backedge:
    assume {:backedge} p12$1 || p12$2;
    assume {:captureState "loop_back_edge_state_9_0"} true;
    goto __partitioned_block_$14_0;

  $19.backedge:
    assume {:backedge} p18$1 || p18$2;
    assume {:captureState "loop_back_edge_state_10_0"} true;
    goto $19;
}



procedure {:source_name "__bugle_frexp_exp"} $__bugle_frexp_exp(_P$1: bool, $0$1: bv64, _P$2: bool, $0$2: bv64) returns ($ret$1: bv32, $ret$2: bv32);



procedure {:source_name "__bugle_frexp_frac"} $__bugle_frexp_frac(_P$1: bool, $0$1: bv64, _P$2: bool, $0$2: bv64) returns ($ret$1: bv64, $ret$2: bv64);



procedure {:source_name "abs"} $abs(_P$1: bool, $0$1: bv32, _P$2: bool, $0$2: bv32) returns ($ret$1: bv32, $ret$2: bv32);



procedure {:source_name "_Z6sign_ff"} $_Z6sign_ff(_P$1: bool, $0$1: bv32, _P$2: bool, $0$2: bv32) returns ($ret$1: bv32, $ret$2: bv32);



axiom (if group_size_x == 256bv32 then 1bv1 else 0bv1) != 0bv1;

axiom (if group_size_y == 1bv32 then 1bv1 else 0bv1) != 0bv1;

axiom (if group_size_z == 1bv32 then 1bv1 else 0bv1) != 0bv1;

axiom (if num_groups_x == 1bv32 then 1bv1 else 0bv1) != 0bv1;

axiom (if num_groups_y == 1bv32 then 1bv1 else 0bv1) != 0bv1;

axiom (if num_groups_z == 1bv32 then 1bv1 else 0bv1) != 0bv1;

const {:local_id_y} local_id_y$1: bv32;

const {:local_id_y} local_id_y$2: bv32;

const {:local_id_z} local_id_z$1: bv32;

const {:local_id_z} local_id_z$2: bv32;

const {:group_id_x} group_id_x$1: bv32;

const {:group_id_x} group_id_x$2: bv32;

const {:group_id_y} group_id_y$1: bv32;

const {:group_id_y} group_id_y$2: bv32;

const {:group_id_z} group_id_z$1: bv32;

const {:group_id_z} group_id_z$2: bv32;

procedure {:inline 1} {:safe_barrier} {:source_name "bugle_barrier"} {:barrier} $bugle_barrier_duplicated_0($0: bv1, $1: bv1);
  requires $0 == 1bv1;
  requires $1 == 1bv1;
  modifies $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, $$g_num_one, $$g_num_blocks_mult, $$g_left_one, $$g_right_one, $$g_pos_one, $$g_left_mult, $$g_right_mult, $$g_left_count_mult, $$g_right_count_mult, $$g_blocks_mult, $$g_blocks_mult_sum, _TRACKING;



procedure {:inline 1} {:safe_barrier} {:source_name "bugle_barrier"} {:barrier} $bugle_barrier_duplicated_1($0: bv1, $1: bv1);
  requires $0 == 1bv1;
  requires $1 == 1bv1;
  modifies $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, $$g_num_one, $$g_num_blocks_mult, $$g_left_one, $$g_right_one, $$g_pos_one, $$g_left_mult, $$g_right_mult, $$g_left_count_mult, $$g_right_count_mult, $$g_blocks_mult, $$g_blocks_mult_sum, _TRACKING;



procedure {:inline 1} {:source_name "bugle_barrier"} {:barrier} $bugle_barrier_duplicated_2($0: bv1, $1: bv1, _P$1: bool, _P$2: bool);
  requires _P$1 ==> $0 == 1bv1;
  requires _P$2 ==> $0 == 1bv1;
  requires _P$1 ==> $1 == 1bv1;
  requires _P$2 ==> $1 == 1bv1;
  requires {:barrier_divergence} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 == _P$2;
  modifies $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, $$g_num_one, $$g_num_blocks_mult, $$g_left_one, $$g_right_one, $$g_pos_one, $$g_left_mult, $$g_right_mult, $$g_left_count_mult, $$g_right_count_mult, $$g_blocks_mult, $$g_blocks_mult_sum, _TRACKING;



procedure {:inline 1} {:source_name "bugle_barrier"} {:barrier} $bugle_barrier_duplicated_3($0: bv1, $1: bv1, _P$1: bool, _P$2: bool);
  requires _P$1 ==> $0 == 1bv1;
  requires _P$2 ==> $0 == 1bv1;
  requires _P$1 ==> $1 == 1bv1;
  requires _P$2 ==> $1 == 1bv1;
  requires {:barrier_divergence} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 == _P$2;
  modifies $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, $$g_num_one, $$g_num_blocks_mult, $$g_left_one, $$g_right_one, $$g_pos_one, $$g_left_mult, $$g_right_mult, $$g_left_count_mult, $$g_right_count_mult, $$g_blocks_mult, $$g_blocks_mult_sum, _TRACKING;



procedure {:inline 1} {:source_name "bugle_barrier"} {:barrier} $bugle_barrier_duplicated_4($0: bv1, $1: bv1, _P$1: bool, _P$2: bool);
  requires _P$1 ==> $0 == 1bv1;
  requires _P$2 ==> $0 == 1bv1;
  requires _P$1 ==> $1 == 1bv1;
  requires _P$2 ==> $1 == 1bv1;
  requires {:barrier_divergence} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 == _P$2;
  modifies $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, $$g_num_one, $$g_num_blocks_mult, $$g_left_one, $$g_right_one, $$g_pos_one, $$g_left_mult, $$g_right_mult, $$g_left_count_mult, $$g_right_count_mult, $$g_blocks_mult, $$g_blocks_mult_sum, _TRACKING;



procedure {:inline 1} {:source_name "bugle_barrier"} {:barrier} $bugle_barrier_duplicated_5($0: bv1, $1: bv1, _P$1: bool, _P$2: bool);
  requires _P$1 ==> $0 == 1bv1;
  requires _P$2 ==> $0 == 1bv1;
  requires _P$1 ==> $1 == 1bv1;
  requires _P$2 ==> $1 == 1bv1;
  requires {:barrier_divergence} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 == _P$2;
  modifies $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, $$g_num_one, $$g_num_blocks_mult, $$g_left_one, $$g_right_one, $$g_pos_one, $$g_left_mult, $$g_right_mult, $$g_left_count_mult, $$g_right_count_mult, $$g_blocks_mult, $$g_blocks_mult_sum, _TRACKING;



procedure {:inline 1} {:source_name "bugle_barrier"} {:barrier} $bugle_barrier_duplicated_6($0: bv1, $1: bv1, _P$1: bool, _P$2: bool);
  requires _P$1 ==> $0 == 1bv1;
  requires _P$2 ==> $0 == 1bv1;
  requires _P$1 ==> $1 == 1bv1;
  requires _P$2 ==> $1 == 1bv1;
  requires {:barrier_divergence} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 == _P$2;
  modifies $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, $$g_num_one, $$g_num_blocks_mult, $$g_left_one, $$g_right_one, $$g_pos_one, $$g_left_mult, $$g_right_mult, $$g_left_count_mult, $$g_right_count_mult, $$g_blocks_mult, $$g_blocks_mult_sum, _TRACKING;



procedure {:inline 1} {:safe_barrier} {:source_name "bugle_barrier"} {:barrier} $bugle_barrier_duplicated_7($0: bv1, $1: bv1);
  requires $0 == 1bv1;
  requires $1 == 1bv1;
  modifies $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, $$g_num_one, $$g_num_blocks_mult, $$g_left_one, $$g_right_one, $$g_pos_one, $$g_left_mult, $$g_right_mult, $$g_left_count_mult, $$g_right_count_mult, $$g_blocks_mult, $$g_blocks_mult_sum, _TRACKING;



procedure {:inline 1} {:safe_barrier} {:source_name "bugle_barrier"} {:barrier} $bugle_barrier_duplicated_8($0: bv1, $1: bv1);
  requires $0 == 1bv1;
  requires $1 == 1bv1;
  modifies $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, $$g_num_one, $$g_num_blocks_mult, $$g_left_one, $$g_right_one, $$g_pos_one, $$g_left_mult, $$g_right_mult, $$g_left_count_mult, $$g_right_count_mult, $$g_blocks_mult, $$g_blocks_mult_sum, _TRACKING;



procedure {:inline 1} {:safe_barrier} {:source_name "bugle_barrier"} {:barrier} $bugle_barrier_duplicated_9($0: bv1, $1: bv1);
  requires $0 == 1bv1;
  requires $1 == 1bv1;
  modifies $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, $$g_num_one, $$g_num_blocks_mult, $$g_left_one, $$g_right_one, $$g_pos_one, $$g_left_mult, $$g_right_mult, $$g_left_count_mult, $$g_right_count_mult, $$g_blocks_mult, $$g_blocks_mult_sum, _TRACKING;



procedure {:inline 1} {:safe_barrier} {:source_name "bugle_barrier"} {:barrier} $bugle_barrier_duplicated_10($0: bv1, $1: bv1);
  requires $0 == 1bv1;
  requires $1 == 1bv1;
  modifies $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, $$g_num_one, $$g_num_blocks_mult, $$g_left_one, $$g_right_one, $$g_pos_one, $$g_left_mult, $$g_right_mult, $$g_left_count_mult, $$g_right_count_mult, $$g_blocks_mult, $$g_blocks_mult_sum, _TRACKING;



procedure {:inline 1} {:safe_barrier} {:source_name "bugle_barrier"} {:barrier} $bugle_barrier_duplicated_11($0: bv1, $1: bv1);
  requires $0 == 1bv1;
  requires $1 == 1bv1;
  modifies $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, $$g_num_one, $$g_num_blocks_mult, $$g_left_one, $$g_right_one, $$g_pos_one, $$g_left_mult, $$g_right_mult, $$g_left_count_mult, $$g_right_count_mult, $$g_blocks_mult, $$g_blocks_mult_sum, _TRACKING;



procedure {:inline 1} {:safe_barrier} {:source_name "bugle_barrier"} {:barrier} $bugle_barrier_duplicated_12($0: bv1, $1: bv1);
  requires $0 == 1bv1;
  requires $1 == 1bv1;
  modifies $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, $$g_num_one, $$g_num_blocks_mult, $$g_left_one, $$g_right_one, $$g_pos_one, $$g_left_mult, $$g_right_mult, $$g_left_count_mult, $$g_right_count_mult, $$g_blocks_mult, $$g_blocks_mult_sum, _TRACKING;



procedure {:inline 1} {:safe_barrier} {:source_name "bugle_barrier"} {:barrier} $bugle_barrier_duplicated_13($0: bv1, $1: bv1);
  requires $0 == 1bv1;
  requires $1 == 1bv1;
  modifies $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, $$g_num_one, $$g_num_blocks_mult, $$g_left_one, $$g_right_one, $$g_pos_one, $$g_left_mult, $$g_right_mult, $$g_left_count_mult, $$g_right_count_mult, $$g_blocks_mult, $$g_blocks_mult_sum, _TRACKING;



procedure {:inline 1} {:safe_barrier} {:source_name "bugle_barrier"} {:barrier} $bugle_barrier_duplicated_14($0: bv1, $1: bv1);
  requires $0 == 1bv1;
  requires $1 == 1bv1;
  modifies $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, $$g_num_one, $$g_num_blocks_mult, $$g_left_one, $$g_right_one, $$g_pos_one, $$g_left_mult, $$g_right_mult, $$g_left_count_mult, $$g_right_count_mult, $$g_blocks_mult, $$g_blocks_mult_sum, _TRACKING;



procedure {:inline 1} {:safe_barrier} {:source_name "bugle_barrier"} {:barrier} $bugle_barrier_duplicated_15($0: bv1, $1: bv1);
  requires $0 == 1bv1;
  requires $1 == 1bv1;
  modifies $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, $$g_num_one, $$g_num_blocks_mult, $$g_left_one, $$g_right_one, $$g_pos_one, $$g_left_mult, $$g_right_mult, $$g_left_count_mult, $$g_right_count_mult, $$g_blocks_mult, $$g_blocks_mult_sum, _TRACKING;



procedure {:inline 1} {:safe_barrier} {:source_name "bugle_barrier"} {:barrier} $bugle_barrier_duplicated_16($0: bv1, $1: bv1);
  requires $0 == 1bv1;
  requires $1 == 1bv1;
  modifies $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, $$g_num_one, $$g_num_blocks_mult, $$g_left_one, $$g_right_one, $$g_pos_one, $$g_left_mult, $$g_right_mult, $$g_left_count_mult, $$g_right_count_mult, $$g_blocks_mult, $$g_blocks_mult_sum, _TRACKING;



procedure {:inline 1} {:safe_barrier} {:source_name "bugle_barrier"} {:barrier} $bugle_barrier_duplicated_17($0: bv1, $1: bv1);
  requires $0 == 1bv1;
  requires $1 == 1bv1;
  modifies $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, $$g_num_one, $$g_num_blocks_mult, $$g_left_one, $$g_right_one, $$g_pos_one, $$g_left_mult, $$g_right_mult, $$g_left_count_mult, $$g_right_count_mult, $$g_blocks_mult, $$g_blocks_mult_sum, _TRACKING;



procedure {:inline 1} {:source_name "bugle_barrier"} {:barrier} $bugle_barrier_duplicated_18($0: bv1, $1: bv1, _P$1: bool, _P$2: bool);
  requires _P$1 ==> $0 == 1bv1;
  requires _P$2 ==> $0 == 1bv1;
  requires _P$1 ==> $1 == 1bv1;
  requires _P$2 ==> $1 == 1bv1;
  requires {:barrier_divergence} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 == _P$2;
  modifies $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, $$g_num_one, $$g_num_blocks_mult, $$g_left_one, $$g_right_one, $$g_pos_one, $$g_left_mult, $$g_right_mult, $$g_left_count_mult, $$g_right_count_mult, $$g_blocks_mult, $$g_blocks_mult_sum, _TRACKING;



procedure {:inline 1} {:source_name "bugle_barrier"} {:barrier} $bugle_barrier_duplicated_19($0: bv1, $1: bv1, _P$1: bool, _P$2: bool);
  requires _P$1 ==> $0 == 1bv1;
  requires _P$2 ==> $0 == 1bv1;
  requires _P$1 ==> $1 == 1bv1;
  requires _P$2 ==> $1 == 1bv1;
  requires {:barrier_divergence} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 == _P$2;
  modifies $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, $$g_num_one, $$g_num_blocks_mult, $$g_left_one, $$g_right_one, $$g_pos_one, $$g_left_mult, $$g_right_mult, $$g_left_count_mult, $$g_right_count_mult, $$g_blocks_mult, $$g_blocks_mult_sum, _TRACKING;



procedure {:inline 1} {:source_name "bugle_barrier"} {:barrier} $bugle_barrier_duplicated_20($0: bv1, $1: bv1, _P$1: bool, _P$2: bool);
  requires _P$1 ==> $0 == 1bv1;
  requires _P$2 ==> $0 == 1bv1;
  requires _P$1 ==> $1 == 1bv1;
  requires _P$2 ==> $1 == 1bv1;
  requires {:barrier_divergence} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 == _P$2;
  modifies $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, $$g_num_one, $$g_num_blocks_mult, $$g_left_one, $$g_right_one, $$g_pos_one, $$g_left_mult, $$g_right_mult, $$g_left_count_mult, $$g_right_count_mult, $$g_blocks_mult, $$g_blocks_mult_sum, _TRACKING;



procedure {:inline 1} {:source_name "bugle_barrier"} {:barrier} $bugle_barrier_duplicated_21($0: bv1, $1: bv1, _P$1: bool, _P$2: bool);
  requires _P$1 ==> $0 == 1bv1;
  requires _P$2 ==> $0 == 1bv1;
  requires _P$1 ==> $1 == 1bv1;
  requires _P$2 ==> $1 == 1bv1;
  requires {:barrier_divergence} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 == _P$2;
  modifies $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, $$g_num_one, $$g_num_blocks_mult, $$g_left_one, $$g_right_one, $$g_pos_one, $$g_left_mult, $$g_right_mult, $$g_left_count_mult, $$g_right_count_mult, $$g_blocks_mult, $$g_blocks_mult_sum, _TRACKING;



procedure {:inline 1} {:source_name "bugle_barrier"} {:barrier} $bugle_barrier_duplicated_22($0: bv1, $1: bv1, _P$1: bool, _P$2: bool);
  requires _P$1 ==> $0 == 1bv1;
  requires _P$2 ==> $0 == 1bv1;
  requires _P$1 ==> $1 == 1bv1;
  requires _P$2 ==> $1 == 1bv1;
  requires {:barrier_divergence} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 == _P$2;
  modifies $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, $$g_num_one, $$g_num_blocks_mult, $$g_left_one, $$g_right_one, $$g_pos_one, $$g_left_mult, $$g_right_mult, $$g_left_count_mult, $$g_right_count_mult, $$g_blocks_mult, $$g_blocks_mult_sum, _TRACKING;



procedure {:inline 1} {:source_name "bugle_barrier"} {:barrier} $bugle_barrier_duplicated_23($0: bv1, $1: bv1, _P$1: bool, _P$2: bool);
  requires _P$1 ==> $0 == 1bv1;
  requires _P$2 ==> $0 == 1bv1;
  requires _P$1 ==> $1 == 1bv1;
  requires _P$2 ==> $1 == 1bv1;
  requires {:barrier_divergence} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 == _P$2;
  modifies $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, $$g_num_one, $$g_num_blocks_mult, $$g_left_one, $$g_right_one, $$g_pos_one, $$g_left_mult, $$g_right_mult, $$g_left_count_mult, $$g_right_count_mult, $$g_blocks_mult, $$g_blocks_mult_sum, _TRACKING;



procedure {:inline 1} {:source_name "bugle_barrier"} {:barrier} $bugle_barrier_duplicated_24($0: bv1, $1: bv1, _P$1: bool, _P$2: bool);
  requires _P$1 ==> $0 == 1bv1;
  requires _P$2 ==> $0 == 1bv1;
  requires _P$1 ==> $1 == 1bv1;
  requires _P$2 ==> $1 == 1bv1;
  requires {:barrier_divergence} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 == _P$2;
  modifies $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, $$g_num_one, $$g_num_blocks_mult, $$g_left_one, $$g_right_one, $$g_pos_one, $$g_left_mult, $$g_right_mult, $$g_left_count_mult, $$g_right_count_mult, $$g_blocks_mult, $$g_blocks_mult_sum, _TRACKING;



procedure {:inline 1} {:source_name "bugle_barrier"} {:barrier} $bugle_barrier_duplicated_25($0: bv1, $1: bv1, _P$1: bool, _P$2: bool);
  requires _P$1 ==> $0 == 1bv1;
  requires _P$2 ==> $0 == 1bv1;
  requires _P$1 ==> $1 == 1bv1;
  requires _P$2 ==> $1 == 1bv1;
  requires {:barrier_divergence} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 == _P$2;
  modifies $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, $$g_num_one, $$g_num_blocks_mult, $$g_left_one, $$g_right_one, $$g_pos_one, $$g_left_mult, $$g_right_mult, $$g_left_count_mult, $$g_right_count_mult, $$g_blocks_mult, $$g_blocks_mult_sum, _TRACKING;



procedure {:inline 1} {:source_name "bugle_barrier"} {:barrier} $bugle_barrier_duplicated_26($0: bv1, $1: bv1, _P$1: bool, _P$2: bool);
  requires _P$1 ==> $0 == 1bv1;
  requires _P$2 ==> $0 == 1bv1;
  requires _P$1 ==> $1 == 1bv1;
  requires _P$2 ==> $1 == 1bv1;
  requires {:barrier_divergence} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 == _P$2;
  modifies $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, $$g_num_one, $$g_num_blocks_mult, $$g_left_one, $$g_right_one, $$g_pos_one, $$g_left_mult, $$g_right_mult, $$g_left_count_mult, $$g_right_count_mult, $$g_blocks_mult, $$g_blocks_mult_sum, _TRACKING;



procedure {:inline 1} {:source_name "bugle_barrier"} {:barrier} $bugle_barrier_duplicated_27($0: bv1, $1: bv1, _P$1: bool, _P$2: bool);
  requires _P$1 ==> $0 == 1bv1;
  requires _P$2 ==> $0 == 1bv1;
  requires _P$1 ==> $1 == 1bv1;
  requires _P$2 ==> $1 == 1bv1;
  requires {:barrier_divergence} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 == _P$2;
  modifies $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, $$g_num_one, $$g_num_blocks_mult, $$g_left_one, $$g_right_one, $$g_pos_one, $$g_left_mult, $$g_right_mult, $$g_left_count_mult, $$g_right_count_mult, $$g_blocks_mult, $$g_blocks_mult_sum, _TRACKING;



procedure {:inline 1} {:source_name "bugle_barrier"} {:barrier} $bugle_barrier_duplicated_28($0: bv1, $1: bv1, _P$1: bool, _P$2: bool);
  requires _P$1 ==> $0 == 1bv1;
  requires _P$2 ==> $0 == 1bv1;
  requires _P$1 ==> $1 == 1bv1;
  requires _P$2 ==> $1 == 1bv1;
  requires {:barrier_divergence} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 == _P$2;
  modifies $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, $$g_num_one, $$g_num_blocks_mult, $$g_left_one, $$g_right_one, $$g_pos_one, $$g_left_mult, $$g_right_mult, $$g_left_count_mult, $$g_right_count_mult, $$g_blocks_mult, $$g_blocks_mult_sum, _TRACKING;



const {:existential true} _b0: bool;

const {:existential true} _b1: bool;

const {:existential true} _b2: bool;

const {:existential true} _b3: bool;

function {:bvbuiltin "bvsle"} BV32_SLE(bv32, bv32) : bool;

const {:existential true} _b4: bool;

function {:bvbuiltin "bvsge"} BV32_SGE(bv32, bv32) : bool;

const {:existential true} _b5: bool;

const {:existential true} _b6: bool;

function {:bvbuiltin "bvuge"} BV32_UGE(bv32, bv32) : bool;

const {:existential true} _b7: bool;

const {:existential true} _b8: bool;

const {:existential true} _b9: bool;

const {:existential true} _b10: bool;

const {:existential true} _b11: bool;

const {:existential true} _b12: bool;

const {:existential true} _b13: bool;

const {:existential true} _b14: bool;

const {:existential true} _b15: bool;

const {:existential true} _b16: bool;

const {:existential true} _b17: bool;

const {:existential true} _b18: bool;

const {:existential true} _b19: bool;

const {:existential true} _b20: bool;

const {:existential true} _b21: bool;

const {:existential true} _b22: bool;

const {:existential true} _b23: bool;

const {:existential true} _b24: bool;

const {:existential true} _b25: bool;

const {:existential true} _b26: bool;

const {:existential true} _b27: bool;

const {:existential true} _b28: bool;

const {:existential true} _b29: bool;

const {:existential true} _b30: bool;

const {:existential true} _b31: bool;

const {:existential true} _b32: bool;

const {:existential true} _b33: bool;

const {:existential true} _b34: bool;

const {:existential true} _b35: bool;

const {:existential true} _b36: bool;

const {:existential true} _b37: bool;

const {:existential true} _b38: bool;

const {:existential true} _b39: bool;

const {:existential true} _b40: bool;

const {:existential true} _b41: bool;

const {:existential true} _b42: bool;

const {:existential true} _b43: bool;

const {:existential true} _b44: bool;

const {:existential true} _b45: bool;

const {:existential true} _b46: bool;

const {:existential true} _b47: bool;

const {:existential true} _b48: bool;

const {:existential true} _b49: bool;

const {:existential true} _b50: bool;

const {:existential true} _b51: bool;

const {:existential true} _b52: bool;

const {:existential true} _b53: bool;

const {:existential true} _b54: bool;

const {:existential true} _b55: bool;

const {:existential true} _b56: bool;

const {:existential true} _b57: bool;

const {:existential true} _b58: bool;

const {:existential true} _b59: bool;

const {:existential true} _b60: bool;

const {:existential true} _b61: bool;

const {:existential true} _b62: bool;

const {:existential true} _b63: bool;

const {:existential true} _b64: bool;

const {:existential true} _b65: bool;

const {:existential true} _b66: bool;

const {:existential true} _b67: bool;

const {:existential true} _b68: bool;

const {:existential true} _b69: bool;

const {:existential true} _b70: bool;

const {:existential true} _b71: bool;

const {:existential true} _b72: bool;

const {:existential true} _b73: bool;

const {:existential true} _b74: bool;

const {:existential true} _b75: bool;

const {:existential true} _b76: bool;

const {:existential true} _b77: bool;

const {:existential true} _b78: bool;

const {:existential true} _b79: bool;

const {:existential true} _b80: bool;

const {:existential true} _b81: bool;

const {:existential true} _b82: bool;

const {:existential true} _b83: bool;

const {:existential true} _b84: bool;

const {:existential true} _b85: bool;

const {:existential true} _b86: bool;

const {:existential true} _b87: bool;

const {:existential true} _b88: bool;

const {:existential true} _b89: bool;

const {:existential true} _b90: bool;

const {:existential true} _b91: bool;

const {:existential true} _b92: bool;

const {:existential true} _b93: bool;

const {:existential true} _b94: bool;

const {:existential true} _b95: bool;

const {:existential true} _b96: bool;

const {:existential true} _b97: bool;

const {:existential true} _b98: bool;

const {:existential true} _b99: bool;

const _WATCHED_VALUE_$$g_d: bv32;

procedure {:inline 1} _LOG_READ_$$g_d(_P: bool, _offset: bv32, _value: bv32);
  modifies _READ_HAS_OCCURRED_$$g_d;



implementation {:inline 1} _LOG_READ_$$g_d(_P: bool, _offset: bv32, _value: bv32)
{

  log_access_entry:
    _READ_HAS_OCCURRED_$$g_d := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_d == _value then true else _READ_HAS_OCCURRED_$$g_d);
    return;
}



procedure _CHECK_READ_$$g_d(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "g_d"} {:array "$$g_d"} {:race} {:write_read} !(_P && _WRITE_HAS_OCCURRED_$$g_d && _WATCHED_OFFSET == _offset && _WRITE_READ_BENIGN_FLAG_$$g_d);
  requires {:source_name "g_d"} {:array "$$g_d"} {:race} {:atomic_read} !(_P && _ATOMIC_HAS_OCCURRED_$$g_d && _WATCHED_OFFSET == _offset);



var _WRITE_READ_BENIGN_FLAG_$$g_d: bool;

procedure {:inline 1} _LOG_WRITE_$$g_d(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32);
  modifies _WRITE_HAS_OCCURRED_$$g_d, _WRITE_READ_BENIGN_FLAG_$$g_d;



implementation {:inline 1} _LOG_WRITE_$$g_d(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32)
{

  log_access_entry:
    _WRITE_HAS_OCCURRED_$$g_d := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_d == _value then true else _WRITE_HAS_OCCURRED_$$g_d);
    _WRITE_READ_BENIGN_FLAG_$$g_d := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_d == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$g_d);
    return;
}



procedure _CHECK_WRITE_$$g_d(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "g_d"} {:array "$$g_d"} {:race} {:write_write} !(_P && _WRITE_HAS_OCCURRED_$$g_d && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_d != _value);
  requires {:source_name "g_d"} {:array "$$g_d"} {:race} {:read_write} !(_P && _READ_HAS_OCCURRED_$$g_d && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_d != _value);
  requires {:source_name "g_d"} {:array "$$g_d"} {:race} {:atomic_write} !(_P && _ATOMIC_HAS_OCCURRED_$$g_d && _WATCHED_OFFSET == _offset);



procedure {:inline 1} _LOG_ATOMIC_$$g_d(_P: bool, _offset: bv32);
  modifies _ATOMIC_HAS_OCCURRED_$$g_d;



implementation {:inline 1} _LOG_ATOMIC_$$g_d(_P: bool, _offset: bv32)
{

  log_access_entry:
    _ATOMIC_HAS_OCCURRED_$$g_d := (if _P && _TRACKING && _WATCHED_OFFSET == _offset then true else _ATOMIC_HAS_OCCURRED_$$g_d);
    return;
}



procedure _CHECK_ATOMIC_$$g_d(_P: bool, _offset: bv32);
  requires {:source_name "g_d"} {:array "$$g_d"} {:race} {:write_atomic} !(_P && _WRITE_HAS_OCCURRED_$$g_d && _WATCHED_OFFSET == _offset);
  requires {:source_name "g_d"} {:array "$$g_d"} {:race} {:read_atomic} !(_P && _READ_HAS_OCCURRED_$$g_d && _WATCHED_OFFSET == _offset);



procedure {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_d(_P: bool, _offset: bv32);
  modifies _WRITE_READ_BENIGN_FLAG_$$g_d;



implementation {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_d(_P: bool, _offset: bv32)
{

  _UPDATE_BENIGN_FLAG:
    _WRITE_READ_BENIGN_FLAG_$$g_d := (if _P && _WRITE_HAS_OCCURRED_$$g_d && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$g_d);
    return;
}



const _WATCHED_VALUE_$$g_s: bv32;

procedure {:inline 1} _LOG_READ_$$g_s(_P: bool, _offset: bv32, _value: bv32);
  modifies _READ_HAS_OCCURRED_$$g_s;



implementation {:inline 1} _LOG_READ_$$g_s(_P: bool, _offset: bv32, _value: bv32)
{

  log_access_entry:
    _READ_HAS_OCCURRED_$$g_s := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_s == _value then true else _READ_HAS_OCCURRED_$$g_s);
    return;
}



procedure _CHECK_READ_$$g_s(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "g_s"} {:array "$$g_s"} {:race} {:write_read} !(_P && _WRITE_HAS_OCCURRED_$$g_s && _WATCHED_OFFSET == _offset && _WRITE_READ_BENIGN_FLAG_$$g_s);
  requires {:source_name "g_s"} {:array "$$g_s"} {:race} {:atomic_read} !(_P && _ATOMIC_HAS_OCCURRED_$$g_s && _WATCHED_OFFSET == _offset);



var _WRITE_READ_BENIGN_FLAG_$$g_s: bool;

procedure {:inline 1} _LOG_WRITE_$$g_s(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32);
  modifies _WRITE_HAS_OCCURRED_$$g_s, _WRITE_READ_BENIGN_FLAG_$$g_s;



implementation {:inline 1} _LOG_WRITE_$$g_s(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32)
{

  log_access_entry:
    _WRITE_HAS_OCCURRED_$$g_s := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_s == _value then true else _WRITE_HAS_OCCURRED_$$g_s);
    _WRITE_READ_BENIGN_FLAG_$$g_s := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_s == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$g_s);
    return;
}



procedure _CHECK_WRITE_$$g_s(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "g_s"} {:array "$$g_s"} {:race} {:write_write} !(_P && _WRITE_HAS_OCCURRED_$$g_s && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_s != _value);
  requires {:source_name "g_s"} {:array "$$g_s"} {:race} {:read_write} !(_P && _READ_HAS_OCCURRED_$$g_s && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_s != _value);
  requires {:source_name "g_s"} {:array "$$g_s"} {:race} {:atomic_write} !(_P && _ATOMIC_HAS_OCCURRED_$$g_s && _WATCHED_OFFSET == _offset);



procedure {:inline 1} _LOG_ATOMIC_$$g_s(_P: bool, _offset: bv32);
  modifies _ATOMIC_HAS_OCCURRED_$$g_s;



implementation {:inline 1} _LOG_ATOMIC_$$g_s(_P: bool, _offset: bv32)
{

  log_access_entry:
    _ATOMIC_HAS_OCCURRED_$$g_s := (if _P && _TRACKING && _WATCHED_OFFSET == _offset then true else _ATOMIC_HAS_OCCURRED_$$g_s);
    return;
}



procedure _CHECK_ATOMIC_$$g_s(_P: bool, _offset: bv32);
  requires {:source_name "g_s"} {:array "$$g_s"} {:race} {:write_atomic} !(_P && _WRITE_HAS_OCCURRED_$$g_s && _WATCHED_OFFSET == _offset);
  requires {:source_name "g_s"} {:array "$$g_s"} {:race} {:read_atomic} !(_P && _READ_HAS_OCCURRED_$$g_s && _WATCHED_OFFSET == _offset);



procedure {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_s(_P: bool, _offset: bv32);
  modifies _WRITE_READ_BENIGN_FLAG_$$g_s;



implementation {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_s(_P: bool, _offset: bv32)
{

  _UPDATE_BENIGN_FLAG:
    _WRITE_READ_BENIGN_FLAG_$$g_s := (if _P && _WRITE_HAS_OCCURRED_$$g_s && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$g_s);
    return;
}



const _WATCHED_VALUE_$$g_num_one: bv32;

procedure {:inline 1} _LOG_READ_$$g_num_one(_P: bool, _offset: bv32, _value: bv32);
  modifies _READ_HAS_OCCURRED_$$g_num_one;



implementation {:inline 1} _LOG_READ_$$g_num_one(_P: bool, _offset: bv32, _value: bv32)
{

  log_access_entry:
    _READ_HAS_OCCURRED_$$g_num_one := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_num_one == _value then true else _READ_HAS_OCCURRED_$$g_num_one);
    return;
}



procedure _CHECK_READ_$$g_num_one(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "g_num_one"} {:array "$$g_num_one"} {:race} {:write_read} !(_P && _WRITE_HAS_OCCURRED_$$g_num_one && _WATCHED_OFFSET == _offset && _WRITE_READ_BENIGN_FLAG_$$g_num_one);
  requires {:source_name "g_num_one"} {:array "$$g_num_one"} {:race} {:atomic_read} !(_P && _ATOMIC_HAS_OCCURRED_$$g_num_one && _WATCHED_OFFSET == _offset);



var _WRITE_READ_BENIGN_FLAG_$$g_num_one: bool;

procedure {:inline 1} _LOG_WRITE_$$g_num_one(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32);
  modifies _WRITE_HAS_OCCURRED_$$g_num_one, _WRITE_READ_BENIGN_FLAG_$$g_num_one;



implementation {:inline 1} _LOG_WRITE_$$g_num_one(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32)
{

  log_access_entry:
    _WRITE_HAS_OCCURRED_$$g_num_one := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_num_one == _value then true else _WRITE_HAS_OCCURRED_$$g_num_one);
    _WRITE_READ_BENIGN_FLAG_$$g_num_one := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_num_one == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$g_num_one);
    return;
}



procedure _CHECK_WRITE_$$g_num_one(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "g_num_one"} {:array "$$g_num_one"} {:race} {:write_write} !(_P && _WRITE_HAS_OCCURRED_$$g_num_one && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_num_one != _value);
  requires {:source_name "g_num_one"} {:array "$$g_num_one"} {:race} {:read_write} !(_P && _READ_HAS_OCCURRED_$$g_num_one && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_num_one != _value);
  requires {:source_name "g_num_one"} {:array "$$g_num_one"} {:race} {:atomic_write} !(_P && _ATOMIC_HAS_OCCURRED_$$g_num_one && _WATCHED_OFFSET == _offset);



procedure {:inline 1} _LOG_ATOMIC_$$g_num_one(_P: bool, _offset: bv32);
  modifies _ATOMIC_HAS_OCCURRED_$$g_num_one;



implementation {:inline 1} _LOG_ATOMIC_$$g_num_one(_P: bool, _offset: bv32)
{

  log_access_entry:
    _ATOMIC_HAS_OCCURRED_$$g_num_one := (if _P && _TRACKING && _WATCHED_OFFSET == _offset then true else _ATOMIC_HAS_OCCURRED_$$g_num_one);
    return;
}



procedure _CHECK_ATOMIC_$$g_num_one(_P: bool, _offset: bv32);
  requires {:source_name "g_num_one"} {:array "$$g_num_one"} {:race} {:write_atomic} !(_P && _WRITE_HAS_OCCURRED_$$g_num_one && _WATCHED_OFFSET == _offset);
  requires {:source_name "g_num_one"} {:array "$$g_num_one"} {:race} {:read_atomic} !(_P && _READ_HAS_OCCURRED_$$g_num_one && _WATCHED_OFFSET == _offset);



procedure {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_num_one(_P: bool, _offset: bv32);
  modifies _WRITE_READ_BENIGN_FLAG_$$g_num_one;



implementation {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_num_one(_P: bool, _offset: bv32)
{

  _UPDATE_BENIGN_FLAG:
    _WRITE_READ_BENIGN_FLAG_$$g_num_one := (if _P && _WRITE_HAS_OCCURRED_$$g_num_one && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$g_num_one);
    return;
}



const _WATCHED_VALUE_$$g_num_blocks_mult: bv32;

procedure {:inline 1} _LOG_READ_$$g_num_blocks_mult(_P: bool, _offset: bv32, _value: bv32);
  modifies _READ_HAS_OCCURRED_$$g_num_blocks_mult;



implementation {:inline 1} _LOG_READ_$$g_num_blocks_mult(_P: bool, _offset: bv32, _value: bv32)
{

  log_access_entry:
    _READ_HAS_OCCURRED_$$g_num_blocks_mult := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_num_blocks_mult == _value then true else _READ_HAS_OCCURRED_$$g_num_blocks_mult);
    return;
}



procedure _CHECK_READ_$$g_num_blocks_mult(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "g_num_blocks_mult"} {:array "$$g_num_blocks_mult"} {:race} {:write_read} !(_P && _WRITE_HAS_OCCURRED_$$g_num_blocks_mult && _WATCHED_OFFSET == _offset && _WRITE_READ_BENIGN_FLAG_$$g_num_blocks_mult);
  requires {:source_name "g_num_blocks_mult"} {:array "$$g_num_blocks_mult"} {:race} {:atomic_read} !(_P && _ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult && _WATCHED_OFFSET == _offset);



var _WRITE_READ_BENIGN_FLAG_$$g_num_blocks_mult: bool;

procedure {:inline 1} _LOG_WRITE_$$g_num_blocks_mult(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32);
  modifies _WRITE_HAS_OCCURRED_$$g_num_blocks_mult, _WRITE_READ_BENIGN_FLAG_$$g_num_blocks_mult;



implementation {:inline 1} _LOG_WRITE_$$g_num_blocks_mult(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32)
{

  log_access_entry:
    _WRITE_HAS_OCCURRED_$$g_num_blocks_mult := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_num_blocks_mult == _value then true else _WRITE_HAS_OCCURRED_$$g_num_blocks_mult);
    _WRITE_READ_BENIGN_FLAG_$$g_num_blocks_mult := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_num_blocks_mult == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$g_num_blocks_mult);
    return;
}



procedure _CHECK_WRITE_$$g_num_blocks_mult(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "g_num_blocks_mult"} {:array "$$g_num_blocks_mult"} {:race} {:write_write} !(_P && _WRITE_HAS_OCCURRED_$$g_num_blocks_mult && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_num_blocks_mult != _value);
  requires {:source_name "g_num_blocks_mult"} {:array "$$g_num_blocks_mult"} {:race} {:read_write} !(_P && _READ_HAS_OCCURRED_$$g_num_blocks_mult && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_num_blocks_mult != _value);
  requires {:source_name "g_num_blocks_mult"} {:array "$$g_num_blocks_mult"} {:race} {:atomic_write} !(_P && _ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult && _WATCHED_OFFSET == _offset);



procedure {:inline 1} _LOG_ATOMIC_$$g_num_blocks_mult(_P: bool, _offset: bv32);
  modifies _ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult;



implementation {:inline 1} _LOG_ATOMIC_$$g_num_blocks_mult(_P: bool, _offset: bv32)
{

  log_access_entry:
    _ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult := (if _P && _TRACKING && _WATCHED_OFFSET == _offset then true else _ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult);
    return;
}



procedure _CHECK_ATOMIC_$$g_num_blocks_mult(_P: bool, _offset: bv32);
  requires {:source_name "g_num_blocks_mult"} {:array "$$g_num_blocks_mult"} {:race} {:write_atomic} !(_P && _WRITE_HAS_OCCURRED_$$g_num_blocks_mult && _WATCHED_OFFSET == _offset);
  requires {:source_name "g_num_blocks_mult"} {:array "$$g_num_blocks_mult"} {:race} {:read_atomic} !(_P && _READ_HAS_OCCURRED_$$g_num_blocks_mult && _WATCHED_OFFSET == _offset);



procedure {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_num_blocks_mult(_P: bool, _offset: bv32);
  modifies _WRITE_READ_BENIGN_FLAG_$$g_num_blocks_mult;



implementation {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_num_blocks_mult(_P: bool, _offset: bv32)
{

  _UPDATE_BENIGN_FLAG:
    _WRITE_READ_BENIGN_FLAG_$$g_num_blocks_mult := (if _P && _WRITE_HAS_OCCURRED_$$g_num_blocks_mult && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$g_num_blocks_mult);
    return;
}



const _WATCHED_VALUE_$$g_left_one: bv32;

procedure {:inline 1} _LOG_READ_$$g_left_one(_P: bool, _offset: bv32, _value: bv32);
  modifies _READ_HAS_OCCURRED_$$g_left_one;



implementation {:inline 1} _LOG_READ_$$g_left_one(_P: bool, _offset: bv32, _value: bv32)
{

  log_access_entry:
    _READ_HAS_OCCURRED_$$g_left_one := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_left_one == _value then true else _READ_HAS_OCCURRED_$$g_left_one);
    return;
}



procedure _CHECK_READ_$$g_left_one(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "g_left_one"} {:array "$$g_left_one"} {:race} {:write_read} !(_P && _WRITE_HAS_OCCURRED_$$g_left_one && _WATCHED_OFFSET == _offset && _WRITE_READ_BENIGN_FLAG_$$g_left_one);
  requires {:source_name "g_left_one"} {:array "$$g_left_one"} {:race} {:atomic_read} !(_P && _ATOMIC_HAS_OCCURRED_$$g_left_one && _WATCHED_OFFSET == _offset);



var _WRITE_READ_BENIGN_FLAG_$$g_left_one: bool;

procedure {:inline 1} _LOG_WRITE_$$g_left_one(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32);
  modifies _WRITE_HAS_OCCURRED_$$g_left_one, _WRITE_READ_BENIGN_FLAG_$$g_left_one;



implementation {:inline 1} _LOG_WRITE_$$g_left_one(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32)
{

  log_access_entry:
    _WRITE_HAS_OCCURRED_$$g_left_one := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_left_one == _value then true else _WRITE_HAS_OCCURRED_$$g_left_one);
    _WRITE_READ_BENIGN_FLAG_$$g_left_one := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_left_one == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$g_left_one);
    return;
}



procedure _CHECK_WRITE_$$g_left_one(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "g_left_one"} {:array "$$g_left_one"} {:race} {:write_write} !(_P && _WRITE_HAS_OCCURRED_$$g_left_one && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_left_one != _value);
  requires {:source_name "g_left_one"} {:array "$$g_left_one"} {:race} {:read_write} !(_P && _READ_HAS_OCCURRED_$$g_left_one && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_left_one != _value);
  requires {:source_name "g_left_one"} {:array "$$g_left_one"} {:race} {:atomic_write} !(_P && _ATOMIC_HAS_OCCURRED_$$g_left_one && _WATCHED_OFFSET == _offset);



procedure {:inline 1} _LOG_ATOMIC_$$g_left_one(_P: bool, _offset: bv32);
  modifies _ATOMIC_HAS_OCCURRED_$$g_left_one;



implementation {:inline 1} _LOG_ATOMIC_$$g_left_one(_P: bool, _offset: bv32)
{

  log_access_entry:
    _ATOMIC_HAS_OCCURRED_$$g_left_one := (if _P && _TRACKING && _WATCHED_OFFSET == _offset then true else _ATOMIC_HAS_OCCURRED_$$g_left_one);
    return;
}



procedure _CHECK_ATOMIC_$$g_left_one(_P: bool, _offset: bv32);
  requires {:source_name "g_left_one"} {:array "$$g_left_one"} {:race} {:write_atomic} !(_P && _WRITE_HAS_OCCURRED_$$g_left_one && _WATCHED_OFFSET == _offset);
  requires {:source_name "g_left_one"} {:array "$$g_left_one"} {:race} {:read_atomic} !(_P && _READ_HAS_OCCURRED_$$g_left_one && _WATCHED_OFFSET == _offset);



procedure {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_left_one(_P: bool, _offset: bv32);
  modifies _WRITE_READ_BENIGN_FLAG_$$g_left_one;



implementation {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_left_one(_P: bool, _offset: bv32)
{

  _UPDATE_BENIGN_FLAG:
    _WRITE_READ_BENIGN_FLAG_$$g_left_one := (if _P && _WRITE_HAS_OCCURRED_$$g_left_one && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$g_left_one);
    return;
}



const _WATCHED_VALUE_$$g_right_one: bv32;

procedure {:inline 1} _LOG_READ_$$g_right_one(_P: bool, _offset: bv32, _value: bv32);
  modifies _READ_HAS_OCCURRED_$$g_right_one;



implementation {:inline 1} _LOG_READ_$$g_right_one(_P: bool, _offset: bv32, _value: bv32)
{

  log_access_entry:
    _READ_HAS_OCCURRED_$$g_right_one := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_right_one == _value then true else _READ_HAS_OCCURRED_$$g_right_one);
    return;
}



procedure _CHECK_READ_$$g_right_one(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "g_right_one"} {:array "$$g_right_one"} {:race} {:write_read} !(_P && _WRITE_HAS_OCCURRED_$$g_right_one && _WATCHED_OFFSET == _offset && _WRITE_READ_BENIGN_FLAG_$$g_right_one);
  requires {:source_name "g_right_one"} {:array "$$g_right_one"} {:race} {:atomic_read} !(_P && _ATOMIC_HAS_OCCURRED_$$g_right_one && _WATCHED_OFFSET == _offset);



var _WRITE_READ_BENIGN_FLAG_$$g_right_one: bool;

procedure {:inline 1} _LOG_WRITE_$$g_right_one(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32);
  modifies _WRITE_HAS_OCCURRED_$$g_right_one, _WRITE_READ_BENIGN_FLAG_$$g_right_one;



implementation {:inline 1} _LOG_WRITE_$$g_right_one(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32)
{

  log_access_entry:
    _WRITE_HAS_OCCURRED_$$g_right_one := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_right_one == _value then true else _WRITE_HAS_OCCURRED_$$g_right_one);
    _WRITE_READ_BENIGN_FLAG_$$g_right_one := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_right_one == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$g_right_one);
    return;
}



procedure _CHECK_WRITE_$$g_right_one(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "g_right_one"} {:array "$$g_right_one"} {:race} {:write_write} !(_P && _WRITE_HAS_OCCURRED_$$g_right_one && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_right_one != _value);
  requires {:source_name "g_right_one"} {:array "$$g_right_one"} {:race} {:read_write} !(_P && _READ_HAS_OCCURRED_$$g_right_one && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_right_one != _value);
  requires {:source_name "g_right_one"} {:array "$$g_right_one"} {:race} {:atomic_write} !(_P && _ATOMIC_HAS_OCCURRED_$$g_right_one && _WATCHED_OFFSET == _offset);



procedure {:inline 1} _LOG_ATOMIC_$$g_right_one(_P: bool, _offset: bv32);
  modifies _ATOMIC_HAS_OCCURRED_$$g_right_one;



implementation {:inline 1} _LOG_ATOMIC_$$g_right_one(_P: bool, _offset: bv32)
{

  log_access_entry:
    _ATOMIC_HAS_OCCURRED_$$g_right_one := (if _P && _TRACKING && _WATCHED_OFFSET == _offset then true else _ATOMIC_HAS_OCCURRED_$$g_right_one);
    return;
}



procedure _CHECK_ATOMIC_$$g_right_one(_P: bool, _offset: bv32);
  requires {:source_name "g_right_one"} {:array "$$g_right_one"} {:race} {:write_atomic} !(_P && _WRITE_HAS_OCCURRED_$$g_right_one && _WATCHED_OFFSET == _offset);
  requires {:source_name "g_right_one"} {:array "$$g_right_one"} {:race} {:read_atomic} !(_P && _READ_HAS_OCCURRED_$$g_right_one && _WATCHED_OFFSET == _offset);



procedure {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_right_one(_P: bool, _offset: bv32);
  modifies _WRITE_READ_BENIGN_FLAG_$$g_right_one;



implementation {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_right_one(_P: bool, _offset: bv32)
{

  _UPDATE_BENIGN_FLAG:
    _WRITE_READ_BENIGN_FLAG_$$g_right_one := (if _P && _WRITE_HAS_OCCURRED_$$g_right_one && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$g_right_one);
    return;
}



const _WATCHED_VALUE_$$g_pos_one: bv32;

procedure {:inline 1} _LOG_READ_$$g_pos_one(_P: bool, _offset: bv32, _value: bv32);
  modifies _READ_HAS_OCCURRED_$$g_pos_one;



implementation {:inline 1} _LOG_READ_$$g_pos_one(_P: bool, _offset: bv32, _value: bv32)
{

  log_access_entry:
    _READ_HAS_OCCURRED_$$g_pos_one := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_pos_one == _value then true else _READ_HAS_OCCURRED_$$g_pos_one);
    return;
}



procedure _CHECK_READ_$$g_pos_one(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "g_pos_one"} {:array "$$g_pos_one"} {:race} {:write_read} !(_P && _WRITE_HAS_OCCURRED_$$g_pos_one && _WATCHED_OFFSET == _offset && _WRITE_READ_BENIGN_FLAG_$$g_pos_one);
  requires {:source_name "g_pos_one"} {:array "$$g_pos_one"} {:race} {:atomic_read} !(_P && _ATOMIC_HAS_OCCURRED_$$g_pos_one && _WATCHED_OFFSET == _offset);



var _WRITE_READ_BENIGN_FLAG_$$g_pos_one: bool;

procedure {:inline 1} _LOG_WRITE_$$g_pos_one(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32);
  modifies _WRITE_HAS_OCCURRED_$$g_pos_one, _WRITE_READ_BENIGN_FLAG_$$g_pos_one;



implementation {:inline 1} _LOG_WRITE_$$g_pos_one(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32)
{

  log_access_entry:
    _WRITE_HAS_OCCURRED_$$g_pos_one := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_pos_one == _value then true else _WRITE_HAS_OCCURRED_$$g_pos_one);
    _WRITE_READ_BENIGN_FLAG_$$g_pos_one := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_pos_one == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$g_pos_one);
    return;
}



procedure _CHECK_WRITE_$$g_pos_one(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "g_pos_one"} {:array "$$g_pos_one"} {:race} {:write_write} !(_P && _WRITE_HAS_OCCURRED_$$g_pos_one && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_pos_one != _value);
  requires {:source_name "g_pos_one"} {:array "$$g_pos_one"} {:race} {:read_write} !(_P && _READ_HAS_OCCURRED_$$g_pos_one && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_pos_one != _value);
  requires {:source_name "g_pos_one"} {:array "$$g_pos_one"} {:race} {:atomic_write} !(_P && _ATOMIC_HAS_OCCURRED_$$g_pos_one && _WATCHED_OFFSET == _offset);



procedure {:inline 1} _LOG_ATOMIC_$$g_pos_one(_P: bool, _offset: bv32);
  modifies _ATOMIC_HAS_OCCURRED_$$g_pos_one;



implementation {:inline 1} _LOG_ATOMIC_$$g_pos_one(_P: bool, _offset: bv32)
{

  log_access_entry:
    _ATOMIC_HAS_OCCURRED_$$g_pos_one := (if _P && _TRACKING && _WATCHED_OFFSET == _offset then true else _ATOMIC_HAS_OCCURRED_$$g_pos_one);
    return;
}



procedure _CHECK_ATOMIC_$$g_pos_one(_P: bool, _offset: bv32);
  requires {:source_name "g_pos_one"} {:array "$$g_pos_one"} {:race} {:write_atomic} !(_P && _WRITE_HAS_OCCURRED_$$g_pos_one && _WATCHED_OFFSET == _offset);
  requires {:source_name "g_pos_one"} {:array "$$g_pos_one"} {:race} {:read_atomic} !(_P && _READ_HAS_OCCURRED_$$g_pos_one && _WATCHED_OFFSET == _offset);



procedure {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_pos_one(_P: bool, _offset: bv32);
  modifies _WRITE_READ_BENIGN_FLAG_$$g_pos_one;



implementation {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_pos_one(_P: bool, _offset: bv32)
{

  _UPDATE_BENIGN_FLAG:
    _WRITE_READ_BENIGN_FLAG_$$g_pos_one := (if _P && _WRITE_HAS_OCCURRED_$$g_pos_one && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$g_pos_one);
    return;
}



const _WATCHED_VALUE_$$g_left_mult: bv32;

procedure {:inline 1} _LOG_READ_$$g_left_mult(_P: bool, _offset: bv32, _value: bv32);
  modifies _READ_HAS_OCCURRED_$$g_left_mult;



implementation {:inline 1} _LOG_READ_$$g_left_mult(_P: bool, _offset: bv32, _value: bv32)
{

  log_access_entry:
    _READ_HAS_OCCURRED_$$g_left_mult := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_left_mult == _value then true else _READ_HAS_OCCURRED_$$g_left_mult);
    return;
}



procedure _CHECK_READ_$$g_left_mult(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "g_left_mult"} {:array "$$g_left_mult"} {:race} {:write_read} !(_P && _WRITE_HAS_OCCURRED_$$g_left_mult && _WATCHED_OFFSET == _offset && _WRITE_READ_BENIGN_FLAG_$$g_left_mult);
  requires {:source_name "g_left_mult"} {:array "$$g_left_mult"} {:race} {:atomic_read} !(_P && _ATOMIC_HAS_OCCURRED_$$g_left_mult && _WATCHED_OFFSET == _offset);



var _WRITE_READ_BENIGN_FLAG_$$g_left_mult: bool;

procedure {:inline 1} _LOG_WRITE_$$g_left_mult(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32);
  modifies _WRITE_HAS_OCCURRED_$$g_left_mult, _WRITE_READ_BENIGN_FLAG_$$g_left_mult;



implementation {:inline 1} _LOG_WRITE_$$g_left_mult(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32)
{

  log_access_entry:
    _WRITE_HAS_OCCURRED_$$g_left_mult := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_left_mult == _value then true else _WRITE_HAS_OCCURRED_$$g_left_mult);
    _WRITE_READ_BENIGN_FLAG_$$g_left_mult := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_left_mult == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$g_left_mult);
    return;
}



procedure _CHECK_WRITE_$$g_left_mult(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "g_left_mult"} {:array "$$g_left_mult"} {:race} {:write_write} !(_P && _WRITE_HAS_OCCURRED_$$g_left_mult && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_left_mult != _value);
  requires {:source_name "g_left_mult"} {:array "$$g_left_mult"} {:race} {:read_write} !(_P && _READ_HAS_OCCURRED_$$g_left_mult && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_left_mult != _value);
  requires {:source_name "g_left_mult"} {:array "$$g_left_mult"} {:race} {:atomic_write} !(_P && _ATOMIC_HAS_OCCURRED_$$g_left_mult && _WATCHED_OFFSET == _offset);



procedure {:inline 1} _LOG_ATOMIC_$$g_left_mult(_P: bool, _offset: bv32);
  modifies _ATOMIC_HAS_OCCURRED_$$g_left_mult;



implementation {:inline 1} _LOG_ATOMIC_$$g_left_mult(_P: bool, _offset: bv32)
{

  log_access_entry:
    _ATOMIC_HAS_OCCURRED_$$g_left_mult := (if _P && _TRACKING && _WATCHED_OFFSET == _offset then true else _ATOMIC_HAS_OCCURRED_$$g_left_mult);
    return;
}



procedure _CHECK_ATOMIC_$$g_left_mult(_P: bool, _offset: bv32);
  requires {:source_name "g_left_mult"} {:array "$$g_left_mult"} {:race} {:write_atomic} !(_P && _WRITE_HAS_OCCURRED_$$g_left_mult && _WATCHED_OFFSET == _offset);
  requires {:source_name "g_left_mult"} {:array "$$g_left_mult"} {:race} {:read_atomic} !(_P && _READ_HAS_OCCURRED_$$g_left_mult && _WATCHED_OFFSET == _offset);



procedure {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_left_mult(_P: bool, _offset: bv32);
  modifies _WRITE_READ_BENIGN_FLAG_$$g_left_mult;



implementation {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_left_mult(_P: bool, _offset: bv32)
{

  _UPDATE_BENIGN_FLAG:
    _WRITE_READ_BENIGN_FLAG_$$g_left_mult := (if _P && _WRITE_HAS_OCCURRED_$$g_left_mult && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$g_left_mult);
    return;
}



const _WATCHED_VALUE_$$g_right_mult: bv32;

procedure {:inline 1} _LOG_READ_$$g_right_mult(_P: bool, _offset: bv32, _value: bv32);
  modifies _READ_HAS_OCCURRED_$$g_right_mult;



implementation {:inline 1} _LOG_READ_$$g_right_mult(_P: bool, _offset: bv32, _value: bv32)
{

  log_access_entry:
    _READ_HAS_OCCURRED_$$g_right_mult := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_right_mult == _value then true else _READ_HAS_OCCURRED_$$g_right_mult);
    return;
}



procedure _CHECK_READ_$$g_right_mult(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "g_right_mult"} {:array "$$g_right_mult"} {:race} {:write_read} !(_P && _WRITE_HAS_OCCURRED_$$g_right_mult && _WATCHED_OFFSET == _offset && _WRITE_READ_BENIGN_FLAG_$$g_right_mult);
  requires {:source_name "g_right_mult"} {:array "$$g_right_mult"} {:race} {:atomic_read} !(_P && _ATOMIC_HAS_OCCURRED_$$g_right_mult && _WATCHED_OFFSET == _offset);



var _WRITE_READ_BENIGN_FLAG_$$g_right_mult: bool;

procedure {:inline 1} _LOG_WRITE_$$g_right_mult(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32);
  modifies _WRITE_HAS_OCCURRED_$$g_right_mult, _WRITE_READ_BENIGN_FLAG_$$g_right_mult;



implementation {:inline 1} _LOG_WRITE_$$g_right_mult(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32)
{

  log_access_entry:
    _WRITE_HAS_OCCURRED_$$g_right_mult := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_right_mult == _value then true else _WRITE_HAS_OCCURRED_$$g_right_mult);
    _WRITE_READ_BENIGN_FLAG_$$g_right_mult := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_right_mult == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$g_right_mult);
    return;
}



procedure _CHECK_WRITE_$$g_right_mult(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "g_right_mult"} {:array "$$g_right_mult"} {:race} {:write_write} !(_P && _WRITE_HAS_OCCURRED_$$g_right_mult && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_right_mult != _value);
  requires {:source_name "g_right_mult"} {:array "$$g_right_mult"} {:race} {:read_write} !(_P && _READ_HAS_OCCURRED_$$g_right_mult && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_right_mult != _value);
  requires {:source_name "g_right_mult"} {:array "$$g_right_mult"} {:race} {:atomic_write} !(_P && _ATOMIC_HAS_OCCURRED_$$g_right_mult && _WATCHED_OFFSET == _offset);



procedure {:inline 1} _LOG_ATOMIC_$$g_right_mult(_P: bool, _offset: bv32);
  modifies _ATOMIC_HAS_OCCURRED_$$g_right_mult;



implementation {:inline 1} _LOG_ATOMIC_$$g_right_mult(_P: bool, _offset: bv32)
{

  log_access_entry:
    _ATOMIC_HAS_OCCURRED_$$g_right_mult := (if _P && _TRACKING && _WATCHED_OFFSET == _offset then true else _ATOMIC_HAS_OCCURRED_$$g_right_mult);
    return;
}



procedure _CHECK_ATOMIC_$$g_right_mult(_P: bool, _offset: bv32);
  requires {:source_name "g_right_mult"} {:array "$$g_right_mult"} {:race} {:write_atomic} !(_P && _WRITE_HAS_OCCURRED_$$g_right_mult && _WATCHED_OFFSET == _offset);
  requires {:source_name "g_right_mult"} {:array "$$g_right_mult"} {:race} {:read_atomic} !(_P && _READ_HAS_OCCURRED_$$g_right_mult && _WATCHED_OFFSET == _offset);



procedure {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_right_mult(_P: bool, _offset: bv32);
  modifies _WRITE_READ_BENIGN_FLAG_$$g_right_mult;



implementation {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_right_mult(_P: bool, _offset: bv32)
{

  _UPDATE_BENIGN_FLAG:
    _WRITE_READ_BENIGN_FLAG_$$g_right_mult := (if _P && _WRITE_HAS_OCCURRED_$$g_right_mult && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$g_right_mult);
    return;
}



const _WATCHED_VALUE_$$g_left_count_mult: bv32;

procedure {:inline 1} _LOG_READ_$$g_left_count_mult(_P: bool, _offset: bv32, _value: bv32);
  modifies _READ_HAS_OCCURRED_$$g_left_count_mult;



implementation {:inline 1} _LOG_READ_$$g_left_count_mult(_P: bool, _offset: bv32, _value: bv32)
{

  log_access_entry:
    _READ_HAS_OCCURRED_$$g_left_count_mult := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_left_count_mult == _value then true else _READ_HAS_OCCURRED_$$g_left_count_mult);
    return;
}



procedure _CHECK_READ_$$g_left_count_mult(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "g_left_count_mult"} {:array "$$g_left_count_mult"} {:race} {:write_read} !(_P && _WRITE_HAS_OCCURRED_$$g_left_count_mult && _WATCHED_OFFSET == _offset && _WRITE_READ_BENIGN_FLAG_$$g_left_count_mult);
  requires {:source_name "g_left_count_mult"} {:array "$$g_left_count_mult"} {:race} {:atomic_read} !(_P && _ATOMIC_HAS_OCCURRED_$$g_left_count_mult && _WATCHED_OFFSET == _offset);



var _WRITE_READ_BENIGN_FLAG_$$g_left_count_mult: bool;

procedure {:inline 1} _LOG_WRITE_$$g_left_count_mult(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32);
  modifies _WRITE_HAS_OCCURRED_$$g_left_count_mult, _WRITE_READ_BENIGN_FLAG_$$g_left_count_mult;



implementation {:inline 1} _LOG_WRITE_$$g_left_count_mult(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32)
{

  log_access_entry:
    _WRITE_HAS_OCCURRED_$$g_left_count_mult := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_left_count_mult == _value then true else _WRITE_HAS_OCCURRED_$$g_left_count_mult);
    _WRITE_READ_BENIGN_FLAG_$$g_left_count_mult := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_left_count_mult == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$g_left_count_mult);
    return;
}



procedure _CHECK_WRITE_$$g_left_count_mult(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "g_left_count_mult"} {:array "$$g_left_count_mult"} {:race} {:write_write} !(_P && _WRITE_HAS_OCCURRED_$$g_left_count_mult && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_left_count_mult != _value);
  requires {:source_name "g_left_count_mult"} {:array "$$g_left_count_mult"} {:race} {:read_write} !(_P && _READ_HAS_OCCURRED_$$g_left_count_mult && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_left_count_mult != _value);
  requires {:source_name "g_left_count_mult"} {:array "$$g_left_count_mult"} {:race} {:atomic_write} !(_P && _ATOMIC_HAS_OCCURRED_$$g_left_count_mult && _WATCHED_OFFSET == _offset);



procedure {:inline 1} _LOG_ATOMIC_$$g_left_count_mult(_P: bool, _offset: bv32);
  modifies _ATOMIC_HAS_OCCURRED_$$g_left_count_mult;



implementation {:inline 1} _LOG_ATOMIC_$$g_left_count_mult(_P: bool, _offset: bv32)
{

  log_access_entry:
    _ATOMIC_HAS_OCCURRED_$$g_left_count_mult := (if _P && _TRACKING && _WATCHED_OFFSET == _offset then true else _ATOMIC_HAS_OCCURRED_$$g_left_count_mult);
    return;
}



procedure _CHECK_ATOMIC_$$g_left_count_mult(_P: bool, _offset: bv32);
  requires {:source_name "g_left_count_mult"} {:array "$$g_left_count_mult"} {:race} {:write_atomic} !(_P && _WRITE_HAS_OCCURRED_$$g_left_count_mult && _WATCHED_OFFSET == _offset);
  requires {:source_name "g_left_count_mult"} {:array "$$g_left_count_mult"} {:race} {:read_atomic} !(_P && _READ_HAS_OCCURRED_$$g_left_count_mult && _WATCHED_OFFSET == _offset);



procedure {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_left_count_mult(_P: bool, _offset: bv32);
  modifies _WRITE_READ_BENIGN_FLAG_$$g_left_count_mult;



implementation {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_left_count_mult(_P: bool, _offset: bv32)
{

  _UPDATE_BENIGN_FLAG:
    _WRITE_READ_BENIGN_FLAG_$$g_left_count_mult := (if _P && _WRITE_HAS_OCCURRED_$$g_left_count_mult && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$g_left_count_mult);
    return;
}



const _WATCHED_VALUE_$$g_right_count_mult: bv32;

procedure {:inline 1} _LOG_READ_$$g_right_count_mult(_P: bool, _offset: bv32, _value: bv32);
  modifies _READ_HAS_OCCURRED_$$g_right_count_mult;



implementation {:inline 1} _LOG_READ_$$g_right_count_mult(_P: bool, _offset: bv32, _value: bv32)
{

  log_access_entry:
    _READ_HAS_OCCURRED_$$g_right_count_mult := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_right_count_mult == _value then true else _READ_HAS_OCCURRED_$$g_right_count_mult);
    return;
}



procedure _CHECK_READ_$$g_right_count_mult(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "g_right_count_mult"} {:array "$$g_right_count_mult"} {:race} {:write_read} !(_P && _WRITE_HAS_OCCURRED_$$g_right_count_mult && _WATCHED_OFFSET == _offset && _WRITE_READ_BENIGN_FLAG_$$g_right_count_mult);
  requires {:source_name "g_right_count_mult"} {:array "$$g_right_count_mult"} {:race} {:atomic_read} !(_P && _ATOMIC_HAS_OCCURRED_$$g_right_count_mult && _WATCHED_OFFSET == _offset);



var _WRITE_READ_BENIGN_FLAG_$$g_right_count_mult: bool;

procedure {:inline 1} _LOG_WRITE_$$g_right_count_mult(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32);
  modifies _WRITE_HAS_OCCURRED_$$g_right_count_mult, _WRITE_READ_BENIGN_FLAG_$$g_right_count_mult;



implementation {:inline 1} _LOG_WRITE_$$g_right_count_mult(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32)
{

  log_access_entry:
    _WRITE_HAS_OCCURRED_$$g_right_count_mult := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_right_count_mult == _value then true else _WRITE_HAS_OCCURRED_$$g_right_count_mult);
    _WRITE_READ_BENIGN_FLAG_$$g_right_count_mult := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_right_count_mult == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$g_right_count_mult);
    return;
}



procedure _CHECK_WRITE_$$g_right_count_mult(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "g_right_count_mult"} {:array "$$g_right_count_mult"} {:race} {:write_write} !(_P && _WRITE_HAS_OCCURRED_$$g_right_count_mult && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_right_count_mult != _value);
  requires {:source_name "g_right_count_mult"} {:array "$$g_right_count_mult"} {:race} {:read_write} !(_P && _READ_HAS_OCCURRED_$$g_right_count_mult && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_right_count_mult != _value);
  requires {:source_name "g_right_count_mult"} {:array "$$g_right_count_mult"} {:race} {:atomic_write} !(_P && _ATOMIC_HAS_OCCURRED_$$g_right_count_mult && _WATCHED_OFFSET == _offset);



procedure {:inline 1} _LOG_ATOMIC_$$g_right_count_mult(_P: bool, _offset: bv32);
  modifies _ATOMIC_HAS_OCCURRED_$$g_right_count_mult;



implementation {:inline 1} _LOG_ATOMIC_$$g_right_count_mult(_P: bool, _offset: bv32)
{

  log_access_entry:
    _ATOMIC_HAS_OCCURRED_$$g_right_count_mult := (if _P && _TRACKING && _WATCHED_OFFSET == _offset then true else _ATOMIC_HAS_OCCURRED_$$g_right_count_mult);
    return;
}



procedure _CHECK_ATOMIC_$$g_right_count_mult(_P: bool, _offset: bv32);
  requires {:source_name "g_right_count_mult"} {:array "$$g_right_count_mult"} {:race} {:write_atomic} !(_P && _WRITE_HAS_OCCURRED_$$g_right_count_mult && _WATCHED_OFFSET == _offset);
  requires {:source_name "g_right_count_mult"} {:array "$$g_right_count_mult"} {:race} {:read_atomic} !(_P && _READ_HAS_OCCURRED_$$g_right_count_mult && _WATCHED_OFFSET == _offset);



procedure {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_right_count_mult(_P: bool, _offset: bv32);
  modifies _WRITE_READ_BENIGN_FLAG_$$g_right_count_mult;



implementation {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_right_count_mult(_P: bool, _offset: bv32)
{

  _UPDATE_BENIGN_FLAG:
    _WRITE_READ_BENIGN_FLAG_$$g_right_count_mult := (if _P && _WRITE_HAS_OCCURRED_$$g_right_count_mult && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$g_right_count_mult);
    return;
}



const _WATCHED_VALUE_$$g_blocks_mult: bv32;

procedure {:inline 1} _LOG_READ_$$g_blocks_mult(_P: bool, _offset: bv32, _value: bv32);
  modifies _READ_HAS_OCCURRED_$$g_blocks_mult;



implementation {:inline 1} _LOG_READ_$$g_blocks_mult(_P: bool, _offset: bv32, _value: bv32)
{

  log_access_entry:
    _READ_HAS_OCCURRED_$$g_blocks_mult := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_blocks_mult == _value then true else _READ_HAS_OCCURRED_$$g_blocks_mult);
    return;
}



procedure _CHECK_READ_$$g_blocks_mult(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "g_blocks_mult"} {:array "$$g_blocks_mult"} {:race} {:write_read} !(_P && _WRITE_HAS_OCCURRED_$$g_blocks_mult && _WATCHED_OFFSET == _offset && _WRITE_READ_BENIGN_FLAG_$$g_blocks_mult);
  requires {:source_name "g_blocks_mult"} {:array "$$g_blocks_mult"} {:race} {:atomic_read} !(_P && _ATOMIC_HAS_OCCURRED_$$g_blocks_mult && _WATCHED_OFFSET == _offset);



var _WRITE_READ_BENIGN_FLAG_$$g_blocks_mult: bool;

procedure {:inline 1} _LOG_WRITE_$$g_blocks_mult(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32);
  modifies _WRITE_HAS_OCCURRED_$$g_blocks_mult, _WRITE_READ_BENIGN_FLAG_$$g_blocks_mult;



implementation {:inline 1} _LOG_WRITE_$$g_blocks_mult(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32)
{

  log_access_entry:
    _WRITE_HAS_OCCURRED_$$g_blocks_mult := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_blocks_mult == _value then true else _WRITE_HAS_OCCURRED_$$g_blocks_mult);
    _WRITE_READ_BENIGN_FLAG_$$g_blocks_mult := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_blocks_mult == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$g_blocks_mult);
    return;
}



procedure _CHECK_WRITE_$$g_blocks_mult(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "g_blocks_mult"} {:array "$$g_blocks_mult"} {:race} {:write_write} !(_P && _WRITE_HAS_OCCURRED_$$g_blocks_mult && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_blocks_mult != _value);
  requires {:source_name "g_blocks_mult"} {:array "$$g_blocks_mult"} {:race} {:read_write} !(_P && _READ_HAS_OCCURRED_$$g_blocks_mult && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_blocks_mult != _value);
  requires {:source_name "g_blocks_mult"} {:array "$$g_blocks_mult"} {:race} {:atomic_write} !(_P && _ATOMIC_HAS_OCCURRED_$$g_blocks_mult && _WATCHED_OFFSET == _offset);



procedure {:inline 1} _LOG_ATOMIC_$$g_blocks_mult(_P: bool, _offset: bv32);
  modifies _ATOMIC_HAS_OCCURRED_$$g_blocks_mult;



implementation {:inline 1} _LOG_ATOMIC_$$g_blocks_mult(_P: bool, _offset: bv32)
{

  log_access_entry:
    _ATOMIC_HAS_OCCURRED_$$g_blocks_mult := (if _P && _TRACKING && _WATCHED_OFFSET == _offset then true else _ATOMIC_HAS_OCCURRED_$$g_blocks_mult);
    return;
}



procedure _CHECK_ATOMIC_$$g_blocks_mult(_P: bool, _offset: bv32);
  requires {:source_name "g_blocks_mult"} {:array "$$g_blocks_mult"} {:race} {:write_atomic} !(_P && _WRITE_HAS_OCCURRED_$$g_blocks_mult && _WATCHED_OFFSET == _offset);
  requires {:source_name "g_blocks_mult"} {:array "$$g_blocks_mult"} {:race} {:read_atomic} !(_P && _READ_HAS_OCCURRED_$$g_blocks_mult && _WATCHED_OFFSET == _offset);



procedure {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_blocks_mult(_P: bool, _offset: bv32);
  modifies _WRITE_READ_BENIGN_FLAG_$$g_blocks_mult;



implementation {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_blocks_mult(_P: bool, _offset: bv32)
{

  _UPDATE_BENIGN_FLAG:
    _WRITE_READ_BENIGN_FLAG_$$g_blocks_mult := (if _P && _WRITE_HAS_OCCURRED_$$g_blocks_mult && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$g_blocks_mult);
    return;
}



const _WATCHED_VALUE_$$g_blocks_mult_sum: bv32;

procedure {:inline 1} _LOG_READ_$$g_blocks_mult_sum(_P: bool, _offset: bv32, _value: bv32);
  modifies _READ_HAS_OCCURRED_$$g_blocks_mult_sum;



implementation {:inline 1} _LOG_READ_$$g_blocks_mult_sum(_P: bool, _offset: bv32, _value: bv32)
{

  log_access_entry:
    _READ_HAS_OCCURRED_$$g_blocks_mult_sum := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_blocks_mult_sum == _value then true else _READ_HAS_OCCURRED_$$g_blocks_mult_sum);
    return;
}



procedure _CHECK_READ_$$g_blocks_mult_sum(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "g_blocks_mult_sum"} {:array "$$g_blocks_mult_sum"} {:race} {:write_read} !(_P && _WRITE_HAS_OCCURRED_$$g_blocks_mult_sum && _WATCHED_OFFSET == _offset && _WRITE_READ_BENIGN_FLAG_$$g_blocks_mult_sum);
  requires {:source_name "g_blocks_mult_sum"} {:array "$$g_blocks_mult_sum"} {:race} {:atomic_read} !(_P && _ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum && _WATCHED_OFFSET == _offset);



var _WRITE_READ_BENIGN_FLAG_$$g_blocks_mult_sum: bool;

procedure {:inline 1} _LOG_WRITE_$$g_blocks_mult_sum(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32);
  modifies _WRITE_HAS_OCCURRED_$$g_blocks_mult_sum, _WRITE_READ_BENIGN_FLAG_$$g_blocks_mult_sum;



implementation {:inline 1} _LOG_WRITE_$$g_blocks_mult_sum(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32)
{

  log_access_entry:
    _WRITE_HAS_OCCURRED_$$g_blocks_mult_sum := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_blocks_mult_sum == _value then true else _WRITE_HAS_OCCURRED_$$g_blocks_mult_sum);
    _WRITE_READ_BENIGN_FLAG_$$g_blocks_mult_sum := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_blocks_mult_sum == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$g_blocks_mult_sum);
    return;
}



procedure _CHECK_WRITE_$$g_blocks_mult_sum(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "g_blocks_mult_sum"} {:array "$$g_blocks_mult_sum"} {:race} {:write_write} !(_P && _WRITE_HAS_OCCURRED_$$g_blocks_mult_sum && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_blocks_mult_sum != _value);
  requires {:source_name "g_blocks_mult_sum"} {:array "$$g_blocks_mult_sum"} {:race} {:read_write} !(_P && _READ_HAS_OCCURRED_$$g_blocks_mult_sum && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$g_blocks_mult_sum != _value);
  requires {:source_name "g_blocks_mult_sum"} {:array "$$g_blocks_mult_sum"} {:race} {:atomic_write} !(_P && _ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum && _WATCHED_OFFSET == _offset);



procedure {:inline 1} _LOG_ATOMIC_$$g_blocks_mult_sum(_P: bool, _offset: bv32);
  modifies _ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum;



implementation {:inline 1} _LOG_ATOMIC_$$g_blocks_mult_sum(_P: bool, _offset: bv32)
{

  log_access_entry:
    _ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum := (if _P && _TRACKING && _WATCHED_OFFSET == _offset then true else _ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum);
    return;
}



procedure _CHECK_ATOMIC_$$g_blocks_mult_sum(_P: bool, _offset: bv32);
  requires {:source_name "g_blocks_mult_sum"} {:array "$$g_blocks_mult_sum"} {:race} {:write_atomic} !(_P && _WRITE_HAS_OCCURRED_$$g_blocks_mult_sum && _WATCHED_OFFSET == _offset);
  requires {:source_name "g_blocks_mult_sum"} {:array "$$g_blocks_mult_sum"} {:race} {:read_atomic} !(_P && _READ_HAS_OCCURRED_$$g_blocks_mult_sum && _WATCHED_OFFSET == _offset);



procedure {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_blocks_mult_sum(_P: bool, _offset: bv32);
  modifies _WRITE_READ_BENIGN_FLAG_$$g_blocks_mult_sum;



implementation {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$g_blocks_mult_sum(_P: bool, _offset: bv32)
{

  _UPDATE_BENIGN_FLAG:
    _WRITE_READ_BENIGN_FLAG_$$g_blocks_mult_sum := (if _P && _WRITE_HAS_OCCURRED_$$g_blocks_mult_sum && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$g_blocks_mult_sum);
    return;
}



const _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list: bv16;

procedure {:inline 1} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(_P: bool, _offset: bv32, _value: bv16);
  modifies _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;



implementation {:inline 1} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(_P: bool, _offset: bv32, _value: bv16)
{

  log_access_entry:
    _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list == _value then true else _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list);
    return;
}



procedure _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(_P: bool, _offset: bv32, _value: bv16);
  requires {:source_name "s_compaction_list"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} {:race} {:write_read} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list && _WATCHED_OFFSET == _offset && _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "s_compaction_list"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} {:race} {:atomic_read} !(_P && _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



var _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list: bool;

procedure {:inline 1} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(_P: bool, _offset: bv32, _value: bv16, _value_old: bv16);
  modifies _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;



implementation {:inline 1} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(_P: bool, _offset: bv32, _value: bv16, _value_old: bv16)
{

  log_access_entry:
    _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list == _value then true else _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list);
    _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list);
    return;
}



procedure _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(_P: bool, _offset: bv32, _value: bv16);
  requires {:source_name "s_compaction_list"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} {:race} {:write_write} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list != _value && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "s_compaction_list"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} {:race} {:read_write} !(_P && _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list != _value && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "s_compaction_list"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} {:race} {:atomic_write} !(_P && _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



procedure {:inline 1} _LOG_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(_P: bool, _offset: bv32);
  modifies _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;



implementation {:inline 1} _LOG_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(_P: bool, _offset: bv32)
{

  log_access_entry:
    _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset then true else _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list);
    return;
}



procedure _CHECK_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(_P: bool, _offset: bv32);
  requires {:source_name "s_compaction_list"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} {:race} {:write_atomic} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "s_compaction_list"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} {:race} {:read_atomic} !(_P && _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



procedure {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(_P: bool, _offset: bv32);
  modifies _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;



implementation {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list(_P: bool, _offset: bv32)
{

  _UPDATE_BENIGN_FLAG:
    _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list := (if _P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list);
    return;
}



const _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left: bv32;

procedure {:inline 1} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(_P: bool, _offset: bv32, _value: bv32);
  modifies _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;



implementation {:inline 1} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(_P: bool, _offset: bv32, _value: bv32)
{

  log_access_entry:
    _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left == _value then true else _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left);
    return;
}



procedure _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "s_left"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left"} {:race} {:write_read} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left && _WATCHED_OFFSET == _offset && _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "s_left"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left"} {:race} {:atomic_read} !(_P && _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



var _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left: bool;

procedure {:inline 1} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32);
  modifies _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;



implementation {:inline 1} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32)
{

  log_access_entry:
    _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left == _value then true else _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left);
    _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left);
    return;
}



procedure _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "s_left"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left"} {:race} {:write_write} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left != _value && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "s_left"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left"} {:race} {:read_write} !(_P && _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left != _value && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "s_left"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left"} {:race} {:atomic_write} !(_P && _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



procedure {:inline 1} _LOG_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(_P: bool, _offset: bv32);
  modifies _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;



implementation {:inline 1} _LOG_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(_P: bool, _offset: bv32)
{

  log_access_entry:
    _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset then true else _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left);
    return;
}



procedure _CHECK_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(_P: bool, _offset: bv32);
  requires {:source_name "s_left"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left"} {:race} {:write_atomic} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "s_left"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left"} {:race} {:read_atomic} !(_P && _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



procedure {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(_P: bool, _offset: bv32);
  modifies _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;



implementation {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left(_P: bool, _offset: bv32)
{

  _UPDATE_BENIGN_FLAG:
    _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left := (if _P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left);
    return;
}



const _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right: bv32;

procedure {:inline 1} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(_P: bool, _offset: bv32, _value: bv32);
  modifies _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;



implementation {:inline 1} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(_P: bool, _offset: bv32, _value: bv32)
{

  log_access_entry:
    _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right == _value then true else _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right);
    return;
}



procedure _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "s_right"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right"} {:race} {:write_read} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right && _WATCHED_OFFSET == _offset && _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "s_right"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right"} {:race} {:atomic_read} !(_P && _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



var _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right: bool;

procedure {:inline 1} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32);
  modifies _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;



implementation {:inline 1} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32)
{

  log_access_entry:
    _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right == _value then true else _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right);
    _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right);
    return;
}



procedure _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "s_right"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right"} {:race} {:write_write} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right != _value && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "s_right"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right"} {:race} {:read_write} !(_P && _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right != _value && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "s_right"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right"} {:race} {:atomic_write} !(_P && _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



procedure {:inline 1} _LOG_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(_P: bool, _offset: bv32);
  modifies _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;



implementation {:inline 1} _LOG_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(_P: bool, _offset: bv32)
{

  log_access_entry:
    _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset then true else _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right);
    return;
}



procedure _CHECK_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(_P: bool, _offset: bv32);
  requires {:source_name "s_right"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right"} {:race} {:write_atomic} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "s_right"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right"} {:race} {:read_atomic} !(_P && _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



procedure {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(_P: bool, _offset: bv32);
  modifies _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;



implementation {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right(_P: bool, _offset: bv32)
{

  _UPDATE_BENIGN_FLAG:
    _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right := (if _P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right);
    return;
}



const _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count: bv16;

procedure {:inline 1} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(_P: bool, _offset: bv32, _value: bv16);
  modifies _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;



implementation {:inline 1} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(_P: bool, _offset: bv32, _value: bv16)
{

  log_access_entry:
    _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count == _value then true else _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count);
    return;
}



procedure _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(_P: bool, _offset: bv32, _value: bv16);
  requires {:source_name "s_left_count"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count"} {:race} {:write_read} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count && _WATCHED_OFFSET == _offset && _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "s_left_count"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count"} {:race} {:atomic_read} !(_P && _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



var _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count: bool;

procedure {:inline 1} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(_P: bool, _offset: bv32, _value: bv16, _value_old: bv16);
  modifies _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;



implementation {:inline 1} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(_P: bool, _offset: bv32, _value: bv16, _value_old: bv16)
{

  log_access_entry:
    _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count == _value then true else _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count);
    _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count);
    return;
}



procedure _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(_P: bool, _offset: bv32, _value: bv16);
  requires {:source_name "s_left_count"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count"} {:race} {:write_write} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count != _value && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "s_left_count"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count"} {:race} {:read_write} !(_P && _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count != _value && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "s_left_count"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count"} {:race} {:atomic_write} !(_P && _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



procedure {:inline 1} _LOG_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(_P: bool, _offset: bv32);
  modifies _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;



implementation {:inline 1} _LOG_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(_P: bool, _offset: bv32)
{

  log_access_entry:
    _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset then true else _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count);
    return;
}



procedure _CHECK_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(_P: bool, _offset: bv32);
  requires {:source_name "s_left_count"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count"} {:race} {:write_atomic} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "s_left_count"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count"} {:race} {:read_atomic} !(_P && _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



procedure {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(_P: bool, _offset: bv32);
  modifies _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;



implementation {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count(_P: bool, _offset: bv32)
{

  _UPDATE_BENIGN_FLAG:
    _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count := (if _P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count);
    return;
}



const _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count: bv16;

procedure {:inline 1} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(_P: bool, _offset: bv32, _value: bv16);
  modifies _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;



implementation {:inline 1} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(_P: bool, _offset: bv32, _value: bv16)
{

  log_access_entry:
    _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count == _value then true else _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count);
    return;
}



procedure _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(_P: bool, _offset: bv32, _value: bv16);
  requires {:source_name "s_right_count"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count"} {:race} {:write_read} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count && _WATCHED_OFFSET == _offset && _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "s_right_count"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count"} {:race} {:atomic_read} !(_P && _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



var _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count: bool;

procedure {:inline 1} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(_P: bool, _offset: bv32, _value: bv16, _value_old: bv16);
  modifies _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;



implementation {:inline 1} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(_P: bool, _offset: bv32, _value: bv16, _value_old: bv16)
{

  log_access_entry:
    _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count == _value then true else _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count);
    _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count);
    return;
}



procedure _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(_P: bool, _offset: bv32, _value: bv16);
  requires {:source_name "s_right_count"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count"} {:race} {:write_write} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count != _value && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "s_right_count"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count"} {:race} {:read_write} !(_P && _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count != _value && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "s_right_count"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count"} {:race} {:atomic_write} !(_P && _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



procedure {:inline 1} _LOG_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(_P: bool, _offset: bv32);
  modifies _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;



implementation {:inline 1} _LOG_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(_P: bool, _offset: bv32)
{

  log_access_entry:
    _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset then true else _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count);
    return;
}



procedure _CHECK_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(_P: bool, _offset: bv32);
  requires {:source_name "s_right_count"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count"} {:race} {:write_atomic} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "s_right_count"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count"} {:race} {:read_atomic} !(_P && _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



procedure {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(_P: bool, _offset: bv32);
  modifies _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;



implementation {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count(_P: bool, _offset: bv32)
{

  _UPDATE_BENIGN_FLAG:
    _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count := (if _P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count);
    return;
}



const _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk: bv32;

procedure {:inline 1} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk(_P: bool, _offset: bv32, _value: bv32);
  modifies _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;



implementation {:inline 1} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk(_P: bool, _offset: bv32, _value: bv32)
{

  log_access_entry:
    _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk == _value then true else _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk);
    return;
}



procedure _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "compact_second_chunk"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk"} {:race} {:write_read} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk && _WATCHED_OFFSET == _offset && _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "compact_second_chunk"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk"} {:race} {:atomic_read} !(_P && _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



var _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk: bool;

procedure {:inline 1} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32);
  modifies _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;



implementation {:inline 1} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32)
{

  log_access_entry:
    _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk == _value then true else _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk);
    _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk);
    return;
}



procedure _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "compact_second_chunk"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk"} {:race} {:write_write} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk != _value && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "compact_second_chunk"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk"} {:race} {:read_write} !(_P && _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk != _value && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "compact_second_chunk"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk"} {:race} {:atomic_write} !(_P && _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



procedure {:inline 1} _LOG_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk(_P: bool, _offset: bv32);
  modifies _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;



implementation {:inline 1} _LOG_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk(_P: bool, _offset: bv32)
{

  log_access_entry:
    _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset then true else _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk);
    return;
}



procedure _CHECK_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk(_P: bool, _offset: bv32);
  requires {:source_name "compact_second_chunk"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk"} {:race} {:write_atomic} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "compact_second_chunk"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk"} {:race} {:read_atomic} !(_P && _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



procedure {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk(_P: bool, _offset: bv32);
  modifies _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;



implementation {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk(_P: bool, _offset: bv32)
{

  _UPDATE_BENIGN_FLAG:
    _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk := (if _P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk);
    return;
}



const _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active: bv32;

procedure {:inline 1} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active(_P: bool, _offset: bv32, _value: bv32);
  modifies _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;



implementation {:inline 1} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active(_P: bool, _offset: bv32, _value: bv32)
{

  log_access_entry:
    _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active == _value then true else _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active);
    return;
}



procedure _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "num_threads_active"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active"} {:race} {:write_read} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active && _WATCHED_OFFSET == _offset && _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "num_threads_active"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active"} {:race} {:atomic_read} !(_P && _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



var _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active: bool;

procedure {:inline 1} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32);
  modifies _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;



implementation {:inline 1} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32)
{

  log_access_entry:
    _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active == _value then true else _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active);
    _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active);
    return;
}



procedure _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "num_threads_active"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active"} {:race} {:write_write} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active != _value && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "num_threads_active"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active"} {:race} {:read_write} !(_P && _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active != _value && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "num_threads_active"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active"} {:race} {:atomic_write} !(_P && _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



procedure {:inline 1} _LOG_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active(_P: bool, _offset: bv32);
  modifies _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;



implementation {:inline 1} _LOG_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active(_P: bool, _offset: bv32)
{

  log_access_entry:
    _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset then true else _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active);
    return;
}



procedure _CHECK_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active(_P: bool, _offset: bv32);
  requires {:source_name "num_threads_active"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active"} {:race} {:write_atomic} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "num_threads_active"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active"} {:race} {:read_atomic} !(_P && _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



procedure {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active(_P: bool, _offset: bv32);
  modifies _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;



implementation {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active(_P: bool, _offset: bv32)
{

  _UPDATE_BENIGN_FLAG:
    _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active := (if _P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active);
    return;
}



const _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction: bv32;

procedure {:inline 1} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction(_P: bool, _offset: bv32, _value: bv32);
  modifies _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;



implementation {:inline 1} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction(_P: bool, _offset: bv32, _value: bv32)
{

  log_access_entry:
    _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction == _value then true else _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction);
    return;
}



procedure _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "num_threads_compaction"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction"} {:race} {:write_read} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction && _WATCHED_OFFSET == _offset && _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "num_threads_compaction"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction"} {:race} {:atomic_read} !(_P && _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



var _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction: bool;

procedure {:inline 1} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32);
  modifies _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;



implementation {:inline 1} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32)
{

  log_access_entry:
    _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction == _value then true else _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction);
    _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction);
    return;
}



procedure _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "num_threads_compaction"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction"} {:race} {:write_write} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction != _value && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "num_threads_compaction"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction"} {:race} {:read_write} !(_P && _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction != _value && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "num_threads_compaction"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction"} {:race} {:atomic_write} !(_P && _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



procedure {:inline 1} _LOG_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction(_P: bool, _offset: bv32);
  modifies _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;



implementation {:inline 1} _LOG_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction(_P: bool, _offset: bv32)
{

  log_access_entry:
    _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset then true else _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction);
    return;
}



procedure _CHECK_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction(_P: bool, _offset: bv32);
  requires {:source_name "num_threads_compaction"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction"} {:race} {:write_atomic} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "num_threads_compaction"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction"} {:race} {:read_atomic} !(_P && _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



procedure {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction(_P: bool, _offset: bv32);
  modifies _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;



implementation {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction(_P: bool, _offset: bv32)
{

  _UPDATE_BENIGN_FLAG:
    _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction := (if _P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction);
    return;
}



const _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged: bv32;

procedure {:inline 1} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged(_P: bool, _offset: bv32, _value: bv32);
  modifies _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;



implementation {:inline 1} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged(_P: bool, _offset: bv32, _value: bv32)
{

  log_access_entry:
    _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged == _value then true else _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged);
    return;
}



procedure _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "all_threads_converged"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged"} {:race} {:write_read} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged && _WATCHED_OFFSET == _offset && _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "all_threads_converged"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged"} {:race} {:atomic_read} !(_P && _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



var _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged: bool;

procedure {:inline 1} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32);
  modifies _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;



implementation {:inline 1} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32)
{

  log_access_entry:
    _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged == _value then true else _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged);
    _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged);
    return;
}



procedure _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "all_threads_converged"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged"} {:race} {:write_write} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged != _value && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "all_threads_converged"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged"} {:race} {:read_write} !(_P && _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged != _value && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "all_threads_converged"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged"} {:race} {:atomic_write} !(_P && _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



procedure {:inline 1} _LOG_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged(_P: bool, _offset: bv32);
  modifies _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;



implementation {:inline 1} _LOG_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged(_P: bool, _offset: bv32)
{

  log_access_entry:
    _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset then true else _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged);
    return;
}



procedure _CHECK_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged(_P: bool, _offset: bv32);
  requires {:source_name "all_threads_converged"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged"} {:race} {:write_atomic} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "all_threads_converged"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged"} {:race} {:read_atomic} !(_P && _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



procedure {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged(_P: bool, _offset: bv32);
  modifies _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;



implementation {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged(_P: bool, _offset: bv32)
{

  _UPDATE_BENIGN_FLAG:
    _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged := (if _P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged);
    return;
}



const _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper: bv16;

procedure {:inline 1} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(_P: bool, _offset: bv32, _value: bv16);
  modifies _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;



implementation {:inline 1} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(_P: bool, _offset: bv32, _value: bv16)
{

  log_access_entry:
    _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper == _value then true else _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper);
    return;
}



procedure _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(_P: bool, _offset: bv32, _value: bv16);
  requires {:source_name "s_cl_helper"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper"} {:race} {:write_read} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper && _WATCHED_OFFSET == _offset && _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "s_cl_helper"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper"} {:race} {:atomic_read} !(_P && _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



var _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper: bool;

procedure {:inline 1} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(_P: bool, _offset: bv32, _value: bv16, _value_old: bv16);
  modifies _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;



implementation {:inline 1} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(_P: bool, _offset: bv32, _value: bv16, _value_old: bv16)
{

  log_access_entry:
    _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper == _value then true else _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper);
    _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper);
    return;
}



procedure _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(_P: bool, _offset: bv32, _value: bv16);
  requires {:source_name "s_cl_helper"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper"} {:race} {:write_write} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper != _value && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "s_cl_helper"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper"} {:race} {:read_write} !(_P && _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper != _value && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "s_cl_helper"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper"} {:race} {:atomic_write} !(_P && _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



procedure {:inline 1} _LOG_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(_P: bool, _offset: bv32);
  modifies _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;



implementation {:inline 1} _LOG_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(_P: bool, _offset: bv32)
{

  log_access_entry:
    _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset then true else _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper);
    return;
}



procedure _CHECK_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(_P: bool, _offset: bv32);
  requires {:source_name "s_cl_helper"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper"} {:race} {:write_atomic} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "s_cl_helper"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper"} {:race} {:read_atomic} !(_P && _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



procedure {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(_P: bool, _offset: bv32);
  modifies _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;



implementation {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper(_P: bool, _offset: bv32)
{

  _UPDATE_BENIGN_FLAG:
    _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper := (if _P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper);
    return;
}



const _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult: bv32;

procedure {:inline 1} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult(_P: bool, _offset: bv32, _value: bv32);
  modifies _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;



implementation {:inline 1} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult(_P: bool, _offset: bv32, _value: bv32)
{

  log_access_entry:
    _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult == _value then true else _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult);
    return;
}



procedure _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "num_blocks_mult"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult"} {:race} {:write_read} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult && _WATCHED_OFFSET == _offset && _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "num_blocks_mult"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult"} {:race} {:atomic_read} !(_P && _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



var _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult: bool;

procedure {:inline 1} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32);
  modifies _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;



implementation {:inline 1} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32)
{

  log_access_entry:
    _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult == _value then true else _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult);
    _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult);
    return;
}



procedure _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "num_blocks_mult"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult"} {:race} {:write_write} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult != _value && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "num_blocks_mult"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult"} {:race} {:read_write} !(_P && _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult != _value && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "num_blocks_mult"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult"} {:race} {:atomic_write} !(_P && _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



procedure {:inline 1} _LOG_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult(_P: bool, _offset: bv32);
  modifies _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;



implementation {:inline 1} _LOG_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult(_P: bool, _offset: bv32)
{

  log_access_entry:
    _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset then true else _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult);
    return;
}



procedure _CHECK_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult(_P: bool, _offset: bv32);
  requires {:source_name "num_blocks_mult"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult"} {:race} {:write_atomic} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "num_blocks_mult"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult"} {:race} {:read_atomic} !(_P && _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



procedure {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult(_P: bool, _offset: bv32);
  modifies _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;



implementation {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult(_P: bool, _offset: bv32)
{

  _UPDATE_BENIGN_FLAG:
    _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult := (if _P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult);
    return;
}



const _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda: bv32;

procedure {:inline 1} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda(_P: bool, _offset: bv32, _value: bv32);
  modifies _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;



implementation {:inline 1} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda(_P: bool, _offset: bv32, _value: bv32)
{

  log_access_entry:
    _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda == _value then true else _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda);
    return;
}



procedure _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "offset_mult_lambda"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda"} {:race} {:write_read} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda && _WATCHED_OFFSET == _offset && _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "offset_mult_lambda"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda"} {:race} {:atomic_read} !(_P && _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



var _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda: bool;

procedure {:inline 1} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32);
  modifies _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;



implementation {:inline 1} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32)
{

  log_access_entry:
    _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda == _value then true else _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda);
    _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda);
    return;
}



procedure _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "offset_mult_lambda"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda"} {:race} {:write_write} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda != _value && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "offset_mult_lambda"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda"} {:race} {:read_write} !(_P && _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda != _value && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "offset_mult_lambda"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda"} {:race} {:atomic_write} !(_P && _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



procedure {:inline 1} _LOG_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda(_P: bool, _offset: bv32);
  modifies _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;



implementation {:inline 1} _LOG_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda(_P: bool, _offset: bv32)
{

  log_access_entry:
    _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset then true else _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda);
    return;
}



procedure _CHECK_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda(_P: bool, _offset: bv32);
  requires {:source_name "offset_mult_lambda"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda"} {:race} {:write_atomic} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "offset_mult_lambda"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda"} {:race} {:read_atomic} !(_P && _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



procedure {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda(_P: bool, _offset: bv32);
  modifies _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;



implementation {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda(_P: bool, _offset: bv32)
{

  _UPDATE_BENIGN_FLAG:
    _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda := (if _P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda);
    return;
}



const _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult: bv32;

procedure {:inline 1} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult(_P: bool, _offset: bv32, _value: bv32);
  modifies _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;



implementation {:inline 1} _LOG_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult(_P: bool, _offset: bv32, _value: bv32)
{

  log_access_entry:
    _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult == _value then true else _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult);
    return;
}



procedure _CHECK_READ_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "num_mult"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult"} {:race} {:write_read} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult && _WATCHED_OFFSET == _offset && _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "num_mult"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult"} {:race} {:atomic_read} !(_P && _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



var _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult: bool;

procedure {:inline 1} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32);
  modifies _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult, _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;



implementation {:inline 1} _LOG_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult(_P: bool, _offset: bv32, _value: bv32, _value_old: bv32)
{

  log_access_entry:
    _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult == _value then true else _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult);
    _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult);
    return;
}



procedure _CHECK_WRITE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult(_P: bool, _offset: bv32, _value: bv32);
  requires {:source_name "num_mult"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult"} {:race} {:write_write} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult != _value && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "num_mult"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult"} {:race} {:read_write} !(_P && _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult != _value && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "num_mult"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult"} {:race} {:atomic_write} !(_P && _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



procedure {:inline 1} _LOG_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult(_P: bool, _offset: bv32);
  modifies _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;



implementation {:inline 1} _LOG_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult(_P: bool, _offset: bv32)
{

  log_access_entry:
    _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset then true else _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult);
    return;
}



procedure _CHECK_ATOMIC_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult(_P: bool, _offset: bv32);
  requires {:source_name "num_mult"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult"} {:race} {:write_atomic} !(_P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
  requires {:source_name "num_mult"} {:array "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult"} {:race} {:read_atomic} !(_P && _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult && _WATCHED_OFFSET == _offset && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);



procedure {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult(_P: bool, _offset: bv32);
  modifies _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;



implementation {:inline 1} _UPDATE_WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult(_P: bool, _offset: bv32)
{

  _UPDATE_BENIGN_FLAG:
    _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult := (if _P && _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult);
    return;
}



var _TRACKING: bool;

implementation {:inline 1} $bugle_barrier_duplicated_0($0: bv1, $1: bv1)
{

  __BarrierImpl:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} true;
    goto anon0;

  anon0:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon1;

  anon1:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon2;

  anon2:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon3;

  anon3:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon4;

  anon4:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon5;

  anon5:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon6;

  anon6:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon7;

  anon7:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon8;

  anon8:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon9;

  anon9:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon10;

  anon10:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon11;

  anon11:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon12;

  anon12:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon13;

  anon13:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} !($0 != 0bv1 || $0 != 0bv1);
    goto anon27;

  anon27:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_one;
    goto anon28;

  anon28:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult;
    goto anon29;

  anon29:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_one;
    goto anon30;

  anon30:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_one;
    goto anon31;

  anon31:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_pos_one;
    goto anon32;

  anon32:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_mult;
    goto anon33;

  anon33:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_mult;
    goto anon34;

  anon34:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_count_mult;
    goto anon35;

  anon35:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_count_mult;
    goto anon36;

  anon36:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult;
    goto anon37;

  anon37:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum;
    goto anon38;

  anon38:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} !(group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && ($1 != 0bv1 || $1 != 0bv1));
    goto anon50;

  anon50:
    havoc _TRACKING;
    return;

  anon53_Then:
    assume {:partition} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && ($1 != 0bv1 || $1 != 0bv1);
    havoc $$g_num_one;
    goto anon40;

  anon40:
    havoc $$g_num_blocks_mult;
    goto anon41;

  anon41:
    havoc $$g_left_one;
    goto anon42;

  anon42:
    havoc $$g_right_one;
    goto anon43;

  anon43:
    havoc $$g_pos_one;
    goto anon44;

  anon44:
    havoc $$g_left_mult;
    goto anon45;

  anon45:
    havoc $$g_right_mult;
    goto anon46;

  anon46:
    havoc $$g_left_count_mult;
    goto anon47;

  anon47:
    havoc $$g_right_count_mult;
    goto anon48;

  anon48:
    havoc $$g_blocks_mult;
    goto anon49;

  anon49:
    havoc $$g_blocks_mult_sum;
    goto anon50;

  anon52_Then:
    assume {:partition} $0 != 0bv1 || $0 != 0bv1;
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon15;

  anon15:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon16;

  anon16:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon17;

  anon17:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon18;

  anon18:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon19;

  anon19:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon20;

  anon20:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon21;

  anon21:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon22;

  anon22:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon23;

  anon23:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon24;

  anon24:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon25;

  anon25:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon26;

  anon26:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon27;

  anon51_Then:
    assume {:partition} false;
    goto __Disabled;

  __Disabled:
    return;
}



implementation {:inline 1} $bugle_barrier_duplicated_1($0: bv1, $1: bv1)
{

  __BarrierImpl:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} true;
    goto anon0;

  anon0:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon1;

  anon1:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon2;

  anon2:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon3;

  anon3:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon4;

  anon4:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon5;

  anon5:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon6;

  anon6:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon7;

  anon7:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon8;

  anon8:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon9;

  anon9:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon10;

  anon10:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon11;

  anon11:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon12;

  anon12:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon13;

  anon13:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} !($0 != 0bv1 || $0 != 0bv1);
    goto anon27;

  anon27:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_one;
    goto anon28;

  anon28:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult;
    goto anon29;

  anon29:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_one;
    goto anon30;

  anon30:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_one;
    goto anon31;

  anon31:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_pos_one;
    goto anon32;

  anon32:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_mult;
    goto anon33;

  anon33:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_mult;
    goto anon34;

  anon34:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_count_mult;
    goto anon35;

  anon35:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_count_mult;
    goto anon36;

  anon36:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult;
    goto anon37;

  anon37:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum;
    goto anon38;

  anon38:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} !(group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && ($1 != 0bv1 || $1 != 0bv1));
    goto anon50;

  anon50:
    havoc _TRACKING;
    return;

  anon53_Then:
    assume {:partition} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && ($1 != 0bv1 || $1 != 0bv1);
    havoc $$g_num_one;
    goto anon40;

  anon40:
    havoc $$g_num_blocks_mult;
    goto anon41;

  anon41:
    havoc $$g_left_one;
    goto anon42;

  anon42:
    havoc $$g_right_one;
    goto anon43;

  anon43:
    havoc $$g_pos_one;
    goto anon44;

  anon44:
    havoc $$g_left_mult;
    goto anon45;

  anon45:
    havoc $$g_right_mult;
    goto anon46;

  anon46:
    havoc $$g_left_count_mult;
    goto anon47;

  anon47:
    havoc $$g_right_count_mult;
    goto anon48;

  anon48:
    havoc $$g_blocks_mult;
    goto anon49;

  anon49:
    havoc $$g_blocks_mult_sum;
    goto anon50;

  anon52_Then:
    assume {:partition} $0 != 0bv1 || $0 != 0bv1;
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon15;

  anon15:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon16;

  anon16:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon17;

  anon17:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon18;

  anon18:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon19;

  anon19:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon20;

  anon20:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon21;

  anon21:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon22;

  anon22:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon23;

  anon23:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon24;

  anon24:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon25;

  anon25:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon26;

  anon26:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon27;

  anon51_Then:
    assume {:partition} false;
    goto __Disabled;

  __Disabled:
    return;
}



implementation {:inline 1} $bugle_barrier_duplicated_2($0: bv1, $1: bv1, _P$1: bool, _P$2: bool)
{

  __BarrierImpl:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} !((!_P$1 && !_P$2) || (group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && (!_P$1 || !_P$2)));
    goto anon0;

  anon0:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon1;

  anon1:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon2;

  anon2:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon3;

  anon3:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon4;

  anon4:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon5;

  anon5:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon6;

  anon6:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon7;

  anon7:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon8;

  anon8:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon9;

  anon9:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon10;

  anon10:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon11;

  anon11:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon12;

  anon12:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon13;

  anon13:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} !((_P$1 && $0 != 0bv1) || (_P$2 && $0 != 0bv1));
    goto anon27;

  anon27:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_one;
    goto anon28;

  anon28:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult;
    goto anon29;

  anon29:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_one;
    goto anon30;

  anon30:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_one;
    goto anon31;

  anon31:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_pos_one;
    goto anon32;

  anon32:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_mult;
    goto anon33;

  anon33:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_mult;
    goto anon34;

  anon34:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_count_mult;
    goto anon35;

  anon35:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_count_mult;
    goto anon36;

  anon36:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult;
    goto anon37;

  anon37:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum;
    goto anon38;

  anon38:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} !(group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _P$1 && _P$2 && ($1 != 0bv1 || $1 != 0bv1));
    goto anon50;

  anon50:
    havoc _TRACKING;
    return;

  anon53_Then:
    assume {:partition} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _P$1 && _P$2 && ($1 != 0bv1 || $1 != 0bv1);
    havoc $$g_num_one;
    goto anon40;

  anon40:
    havoc $$g_num_blocks_mult;
    goto anon41;

  anon41:
    havoc $$g_left_one;
    goto anon42;

  anon42:
    havoc $$g_right_one;
    goto anon43;

  anon43:
    havoc $$g_pos_one;
    goto anon44;

  anon44:
    havoc $$g_left_mult;
    goto anon45;

  anon45:
    havoc $$g_right_mult;
    goto anon46;

  anon46:
    havoc $$g_left_count_mult;
    goto anon47;

  anon47:
    havoc $$g_right_count_mult;
    goto anon48;

  anon48:
    havoc $$g_blocks_mult;
    goto anon49;

  anon49:
    havoc $$g_blocks_mult_sum;
    goto anon50;

  anon52_Then:
    assume {:partition} (_P$1 && $0 != 0bv1) || (_P$2 && $0 != 0bv1);
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon15;

  anon15:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon16;

  anon16:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon17;

  anon17:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon18;

  anon18:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon19;

  anon19:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon20;

  anon20:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon21;

  anon21:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon22;

  anon22:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon23;

  anon23:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon24;

  anon24:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon25;

  anon25:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon26;

  anon26:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon27;

  anon51_Then:
    assume {:partition} (!_P$1 && !_P$2) || (group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && (!_P$1 || !_P$2));
    goto __Disabled;

  __Disabled:
    return;
}



implementation {:inline 1} $bugle_barrier_duplicated_3($0: bv1, $1: bv1, _P$1: bool, _P$2: bool)
{

  __BarrierImpl:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} !((!_P$1 && !_P$2) || (group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && (!_P$1 || !_P$2)));
    goto anon0;

  anon0:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon1;

  anon1:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon2;

  anon2:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon3;

  anon3:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon4;

  anon4:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon5;

  anon5:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon6;

  anon6:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon7;

  anon7:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon8;

  anon8:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon9;

  anon9:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon10;

  anon10:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon11;

  anon11:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon12;

  anon12:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon13;

  anon13:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} !((_P$1 && $0 != 0bv1) || (_P$2 && $0 != 0bv1));
    goto anon27;

  anon27:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_one;
    goto anon28;

  anon28:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult;
    goto anon29;

  anon29:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_one;
    goto anon30;

  anon30:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_one;
    goto anon31;

  anon31:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_pos_one;
    goto anon32;

  anon32:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_mult;
    goto anon33;

  anon33:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_mult;
    goto anon34;

  anon34:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_count_mult;
    goto anon35;

  anon35:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_count_mult;
    goto anon36;

  anon36:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult;
    goto anon37;

  anon37:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum;
    goto anon38;

  anon38:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} !(group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _P$1 && _P$2 && ($1 != 0bv1 || $1 != 0bv1));
    goto anon50;

  anon50:
    havoc _TRACKING;
    return;

  anon53_Then:
    assume {:partition} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _P$1 && _P$2 && ($1 != 0bv1 || $1 != 0bv1);
    havoc $$g_num_one;
    goto anon40;

  anon40:
    havoc $$g_num_blocks_mult;
    goto anon41;

  anon41:
    havoc $$g_left_one;
    goto anon42;

  anon42:
    havoc $$g_right_one;
    goto anon43;

  anon43:
    havoc $$g_pos_one;
    goto anon44;

  anon44:
    havoc $$g_left_mult;
    goto anon45;

  anon45:
    havoc $$g_right_mult;
    goto anon46;

  anon46:
    havoc $$g_left_count_mult;
    goto anon47;

  anon47:
    havoc $$g_right_count_mult;
    goto anon48;

  anon48:
    havoc $$g_blocks_mult;
    goto anon49;

  anon49:
    havoc $$g_blocks_mult_sum;
    goto anon50;

  anon52_Then:
    assume {:partition} (_P$1 && $0 != 0bv1) || (_P$2 && $0 != 0bv1);
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon15;

  anon15:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon16;

  anon16:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon17;

  anon17:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon18;

  anon18:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon19;

  anon19:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon20;

  anon20:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon21;

  anon21:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon22;

  anon22:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon23;

  anon23:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon24;

  anon24:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon25;

  anon25:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon26;

  anon26:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon27;

  anon51_Then:
    assume {:partition} (!_P$1 && !_P$2) || (group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && (!_P$1 || !_P$2));
    goto __Disabled;

  __Disabled:
    return;
}



implementation {:inline 1} $bugle_barrier_duplicated_4($0: bv1, $1: bv1, _P$1: bool, _P$2: bool)
{

  __BarrierImpl:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} !((!_P$1 && !_P$2) || (group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && (!_P$1 || !_P$2)));
    goto anon0;

  anon0:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon1;

  anon1:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon2;

  anon2:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon3;

  anon3:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon4;

  anon4:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon5;

  anon5:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon6;

  anon6:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon7;

  anon7:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon8;

  anon8:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon9;

  anon9:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon10;

  anon10:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon11;

  anon11:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon12;

  anon12:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon13;

  anon13:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} !((_P$1 && $0 != 0bv1) || (_P$2 && $0 != 0bv1));
    goto anon27;

  anon27:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_one;
    goto anon28;

  anon28:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult;
    goto anon29;

  anon29:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_one;
    goto anon30;

  anon30:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_one;
    goto anon31;

  anon31:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_pos_one;
    goto anon32;

  anon32:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_mult;
    goto anon33;

  anon33:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_mult;
    goto anon34;

  anon34:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_count_mult;
    goto anon35;

  anon35:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_count_mult;
    goto anon36;

  anon36:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult;
    goto anon37;

  anon37:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum;
    goto anon38;

  anon38:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} !(group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _P$1 && _P$2 && ($1 != 0bv1 || $1 != 0bv1));
    goto anon50;

  anon50:
    havoc _TRACKING;
    return;

  anon53_Then:
    assume {:partition} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _P$1 && _P$2 && ($1 != 0bv1 || $1 != 0bv1);
    havoc $$g_num_one;
    goto anon40;

  anon40:
    havoc $$g_num_blocks_mult;
    goto anon41;

  anon41:
    havoc $$g_left_one;
    goto anon42;

  anon42:
    havoc $$g_right_one;
    goto anon43;

  anon43:
    havoc $$g_pos_one;
    goto anon44;

  anon44:
    havoc $$g_left_mult;
    goto anon45;

  anon45:
    havoc $$g_right_mult;
    goto anon46;

  anon46:
    havoc $$g_left_count_mult;
    goto anon47;

  anon47:
    havoc $$g_right_count_mult;
    goto anon48;

  anon48:
    havoc $$g_blocks_mult;
    goto anon49;

  anon49:
    havoc $$g_blocks_mult_sum;
    goto anon50;

  anon52_Then:
    assume {:partition} (_P$1 && $0 != 0bv1) || (_P$2 && $0 != 0bv1);
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon15;

  anon15:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon16;

  anon16:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon17;

  anon17:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon18;

  anon18:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon19;

  anon19:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon20;

  anon20:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon21;

  anon21:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon22;

  anon22:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon23;

  anon23:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon24;

  anon24:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon25;

  anon25:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon26;

  anon26:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon27;

  anon51_Then:
    assume {:partition} (!_P$1 && !_P$2) || (group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && (!_P$1 || !_P$2));
    goto __Disabled;

  __Disabled:
    return;
}



implementation {:inline 1} $bugle_barrier_duplicated_5($0: bv1, $1: bv1, _P$1: bool, _P$2: bool)
{

  __BarrierImpl:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} !((!_P$1 && !_P$2) || (group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && (!_P$1 || !_P$2)));
    goto anon0;

  anon0:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon1;

  anon1:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon2;

  anon2:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon3;

  anon3:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon4;

  anon4:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon5;

  anon5:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon6;

  anon6:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon7;

  anon7:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon8;

  anon8:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon9;

  anon9:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon10;

  anon10:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon11;

  anon11:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon12;

  anon12:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon13;

  anon13:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} !((_P$1 && $0 != 0bv1) || (_P$2 && $0 != 0bv1));
    goto anon27;

  anon27:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_one;
    goto anon28;

  anon28:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult;
    goto anon29;

  anon29:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_one;
    goto anon30;

  anon30:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_one;
    goto anon31;

  anon31:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_pos_one;
    goto anon32;

  anon32:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_mult;
    goto anon33;

  anon33:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_mult;
    goto anon34;

  anon34:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_count_mult;
    goto anon35;

  anon35:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_count_mult;
    goto anon36;

  anon36:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult;
    goto anon37;

  anon37:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum;
    goto anon38;

  anon38:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} !(group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _P$1 && _P$2 && ($1 != 0bv1 || $1 != 0bv1));
    goto anon50;

  anon50:
    havoc _TRACKING;
    return;

  anon53_Then:
    assume {:partition} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _P$1 && _P$2 && ($1 != 0bv1 || $1 != 0bv1);
    havoc $$g_num_one;
    goto anon40;

  anon40:
    havoc $$g_num_blocks_mult;
    goto anon41;

  anon41:
    havoc $$g_left_one;
    goto anon42;

  anon42:
    havoc $$g_right_one;
    goto anon43;

  anon43:
    havoc $$g_pos_one;
    goto anon44;

  anon44:
    havoc $$g_left_mult;
    goto anon45;

  anon45:
    havoc $$g_right_mult;
    goto anon46;

  anon46:
    havoc $$g_left_count_mult;
    goto anon47;

  anon47:
    havoc $$g_right_count_mult;
    goto anon48;

  anon48:
    havoc $$g_blocks_mult;
    goto anon49;

  anon49:
    havoc $$g_blocks_mult_sum;
    goto anon50;

  anon52_Then:
    assume {:partition} (_P$1 && $0 != 0bv1) || (_P$2 && $0 != 0bv1);
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon15;

  anon15:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon16;

  anon16:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon17;

  anon17:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon18;

  anon18:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon19;

  anon19:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon20;

  anon20:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon21;

  anon21:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon22;

  anon22:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon23;

  anon23:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon24;

  anon24:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon25;

  anon25:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon26;

  anon26:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon27;

  anon51_Then:
    assume {:partition} (!_P$1 && !_P$2) || (group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && (!_P$1 || !_P$2));
    goto __Disabled;

  __Disabled:
    return;
}



implementation {:inline 1} $bugle_barrier_duplicated_6($0: bv1, $1: bv1, _P$1: bool, _P$2: bool)
{

  __BarrierImpl:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} !((!_P$1 && !_P$2) || (group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && (!_P$1 || !_P$2)));
    goto anon0;

  anon0:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon1;

  anon1:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon2;

  anon2:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon3;

  anon3:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon4;

  anon4:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon5;

  anon5:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon6;

  anon6:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon7;

  anon7:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon8;

  anon8:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon9;

  anon9:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon10;

  anon10:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon11;

  anon11:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon12;

  anon12:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon13;

  anon13:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} !((_P$1 && $0 != 0bv1) || (_P$2 && $0 != 0bv1));
    goto anon27;

  anon27:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_one;
    goto anon28;

  anon28:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult;
    goto anon29;

  anon29:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_one;
    goto anon30;

  anon30:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_one;
    goto anon31;

  anon31:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_pos_one;
    goto anon32;

  anon32:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_mult;
    goto anon33;

  anon33:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_mult;
    goto anon34;

  anon34:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_count_mult;
    goto anon35;

  anon35:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_count_mult;
    goto anon36;

  anon36:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult;
    goto anon37;

  anon37:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum;
    goto anon38;

  anon38:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} !(group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _P$1 && _P$2 && ($1 != 0bv1 || $1 != 0bv1));
    goto anon50;

  anon50:
    havoc _TRACKING;
    return;

  anon53_Then:
    assume {:partition} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _P$1 && _P$2 && ($1 != 0bv1 || $1 != 0bv1);
    havoc $$g_num_one;
    goto anon40;

  anon40:
    havoc $$g_num_blocks_mult;
    goto anon41;

  anon41:
    havoc $$g_left_one;
    goto anon42;

  anon42:
    havoc $$g_right_one;
    goto anon43;

  anon43:
    havoc $$g_pos_one;
    goto anon44;

  anon44:
    havoc $$g_left_mult;
    goto anon45;

  anon45:
    havoc $$g_right_mult;
    goto anon46;

  anon46:
    havoc $$g_left_count_mult;
    goto anon47;

  anon47:
    havoc $$g_right_count_mult;
    goto anon48;

  anon48:
    havoc $$g_blocks_mult;
    goto anon49;

  anon49:
    havoc $$g_blocks_mult_sum;
    goto anon50;

  anon52_Then:
    assume {:partition} (_P$1 && $0 != 0bv1) || (_P$2 && $0 != 0bv1);
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon15;

  anon15:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon16;

  anon16:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon17;

  anon17:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon18;

  anon18:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon19;

  anon19:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon20;

  anon20:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon21;

  anon21:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon22;

  anon22:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon23;

  anon23:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon24;

  anon24:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon25;

  anon25:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon26;

  anon26:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon27;

  anon51_Then:
    assume {:partition} (!_P$1 && !_P$2) || (group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && (!_P$1 || !_P$2));
    goto __Disabled;

  __Disabled:
    return;
}



implementation {:inline 1} $bugle_barrier_duplicated_7($0: bv1, $1: bv1)
{

  __BarrierImpl:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} true;
    goto anon0;

  anon0:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon1;

  anon1:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon2;

  anon2:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon3;

  anon3:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon4;

  anon4:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon5;

  anon5:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon6;

  anon6:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon7;

  anon7:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon8;

  anon8:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon9;

  anon9:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon10;

  anon10:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon11;

  anon11:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon12;

  anon12:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon13;

  anon13:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} !($0 != 0bv1 || $0 != 0bv1);
    goto anon27;

  anon27:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_one;
    goto anon28;

  anon28:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult;
    goto anon29;

  anon29:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_one;
    goto anon30;

  anon30:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_one;
    goto anon31;

  anon31:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_pos_one;
    goto anon32;

  anon32:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_mult;
    goto anon33;

  anon33:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_mult;
    goto anon34;

  anon34:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_count_mult;
    goto anon35;

  anon35:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_count_mult;
    goto anon36;

  anon36:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult;
    goto anon37;

  anon37:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum;
    goto anon38;

  anon38:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} !(group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && ($1 != 0bv1 || $1 != 0bv1));
    goto anon50;

  anon50:
    havoc _TRACKING;
    return;

  anon53_Then:
    assume {:partition} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && ($1 != 0bv1 || $1 != 0bv1);
    havoc $$g_num_one;
    goto anon40;

  anon40:
    havoc $$g_num_blocks_mult;
    goto anon41;

  anon41:
    havoc $$g_left_one;
    goto anon42;

  anon42:
    havoc $$g_right_one;
    goto anon43;

  anon43:
    havoc $$g_pos_one;
    goto anon44;

  anon44:
    havoc $$g_left_mult;
    goto anon45;

  anon45:
    havoc $$g_right_mult;
    goto anon46;

  anon46:
    havoc $$g_left_count_mult;
    goto anon47;

  anon47:
    havoc $$g_right_count_mult;
    goto anon48;

  anon48:
    havoc $$g_blocks_mult;
    goto anon49;

  anon49:
    havoc $$g_blocks_mult_sum;
    goto anon50;

  anon52_Then:
    assume {:partition} $0 != 0bv1 || $0 != 0bv1;
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon15;

  anon15:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon16;

  anon16:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon17;

  anon17:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon18;

  anon18:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon19;

  anon19:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon20;

  anon20:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon21;

  anon21:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon22;

  anon22:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon23;

  anon23:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon24;

  anon24:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon25;

  anon25:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon26;

  anon26:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon27;

  anon51_Then:
    assume {:partition} false;
    goto __Disabled;

  __Disabled:
    return;
}



implementation {:inline 1} $bugle_barrier_duplicated_8($0: bv1, $1: bv1)
{

  __BarrierImpl:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} true;
    goto anon0;

  anon0:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon1;

  anon1:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon2;

  anon2:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon3;

  anon3:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon4;

  anon4:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon5;

  anon5:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon6;

  anon6:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon7;

  anon7:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon8;

  anon8:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon9;

  anon9:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon10;

  anon10:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon11;

  anon11:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon12;

  anon12:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon13;

  anon13:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} !($0 != 0bv1 || $0 != 0bv1);
    goto anon27;

  anon27:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_one;
    goto anon28;

  anon28:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult;
    goto anon29;

  anon29:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_one;
    goto anon30;

  anon30:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_one;
    goto anon31;

  anon31:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_pos_one;
    goto anon32;

  anon32:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_mult;
    goto anon33;

  anon33:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_mult;
    goto anon34;

  anon34:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_count_mult;
    goto anon35;

  anon35:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_count_mult;
    goto anon36;

  anon36:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult;
    goto anon37;

  anon37:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum;
    goto anon38;

  anon38:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} !(group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && ($1 != 0bv1 || $1 != 0bv1));
    goto anon50;

  anon50:
    havoc _TRACKING;
    return;

  anon53_Then:
    assume {:partition} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && ($1 != 0bv1 || $1 != 0bv1);
    havoc $$g_num_one;
    goto anon40;

  anon40:
    havoc $$g_num_blocks_mult;
    goto anon41;

  anon41:
    havoc $$g_left_one;
    goto anon42;

  anon42:
    havoc $$g_right_one;
    goto anon43;

  anon43:
    havoc $$g_pos_one;
    goto anon44;

  anon44:
    havoc $$g_left_mult;
    goto anon45;

  anon45:
    havoc $$g_right_mult;
    goto anon46;

  anon46:
    havoc $$g_left_count_mult;
    goto anon47;

  anon47:
    havoc $$g_right_count_mult;
    goto anon48;

  anon48:
    havoc $$g_blocks_mult;
    goto anon49;

  anon49:
    havoc $$g_blocks_mult_sum;
    goto anon50;

  anon52_Then:
    assume {:partition} $0 != 0bv1 || $0 != 0bv1;
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon15;

  anon15:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon16;

  anon16:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon17;

  anon17:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon18;

  anon18:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon19;

  anon19:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon20;

  anon20:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon21;

  anon21:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon22;

  anon22:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon23;

  anon23:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon24;

  anon24:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon25;

  anon25:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon26;

  anon26:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon27;

  anon51_Then:
    assume {:partition} false;
    goto __Disabled;

  __Disabled:
    return;
}



implementation {:inline 1} $bugle_barrier_duplicated_9($0: bv1, $1: bv1)
{

  __BarrierImpl:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} true;
    goto anon0;

  anon0:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon1;

  anon1:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon2;

  anon2:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon3;

  anon3:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon4;

  anon4:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon5;

  anon5:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon6;

  anon6:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon7;

  anon7:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon8;

  anon8:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon9;

  anon9:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon10;

  anon10:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon11;

  anon11:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon12;

  anon12:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon13;

  anon13:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} !($0 != 0bv1 || $0 != 0bv1);
    goto anon27;

  anon27:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_one;
    goto anon28;

  anon28:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult;
    goto anon29;

  anon29:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_one;
    goto anon30;

  anon30:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_one;
    goto anon31;

  anon31:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_pos_one;
    goto anon32;

  anon32:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_mult;
    goto anon33;

  anon33:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_mult;
    goto anon34;

  anon34:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_count_mult;
    goto anon35;

  anon35:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_count_mult;
    goto anon36;

  anon36:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult;
    goto anon37;

  anon37:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum;
    goto anon38;

  anon38:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} !(group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && ($1 != 0bv1 || $1 != 0bv1));
    goto anon50;

  anon50:
    havoc _TRACKING;
    return;

  anon53_Then:
    assume {:partition} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && ($1 != 0bv1 || $1 != 0bv1);
    havoc $$g_num_one;
    goto anon40;

  anon40:
    havoc $$g_num_blocks_mult;
    goto anon41;

  anon41:
    havoc $$g_left_one;
    goto anon42;

  anon42:
    havoc $$g_right_one;
    goto anon43;

  anon43:
    havoc $$g_pos_one;
    goto anon44;

  anon44:
    havoc $$g_left_mult;
    goto anon45;

  anon45:
    havoc $$g_right_mult;
    goto anon46;

  anon46:
    havoc $$g_left_count_mult;
    goto anon47;

  anon47:
    havoc $$g_right_count_mult;
    goto anon48;

  anon48:
    havoc $$g_blocks_mult;
    goto anon49;

  anon49:
    havoc $$g_blocks_mult_sum;
    goto anon50;

  anon52_Then:
    assume {:partition} $0 != 0bv1 || $0 != 0bv1;
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon15;

  anon15:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon16;

  anon16:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon17;

  anon17:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon18;

  anon18:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon19;

  anon19:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon20;

  anon20:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon21;

  anon21:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon22;

  anon22:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon23;

  anon23:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon24;

  anon24:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon25;

  anon25:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon26;

  anon26:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon27;

  anon51_Then:
    assume {:partition} false;
    goto __Disabled;

  __Disabled:
    return;
}



implementation {:inline 1} $bugle_barrier_duplicated_10($0: bv1, $1: bv1)
{

  __BarrierImpl:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} true;
    goto anon0;

  anon0:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon1;

  anon1:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon2;

  anon2:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon3;

  anon3:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon4;

  anon4:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon5;

  anon5:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon6;

  anon6:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon7;

  anon7:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon8;

  anon8:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon9;

  anon9:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon10;

  anon10:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon11;

  anon11:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon12;

  anon12:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon13;

  anon13:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} !($0 != 0bv1 || $0 != 0bv1);
    goto anon27;

  anon27:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_one;
    goto anon28;

  anon28:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult;
    goto anon29;

  anon29:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_one;
    goto anon30;

  anon30:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_one;
    goto anon31;

  anon31:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_pos_one;
    goto anon32;

  anon32:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_mult;
    goto anon33;

  anon33:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_mult;
    goto anon34;

  anon34:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_count_mult;
    goto anon35;

  anon35:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_count_mult;
    goto anon36;

  anon36:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult;
    goto anon37;

  anon37:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum;
    goto anon38;

  anon38:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} !(group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && ($1 != 0bv1 || $1 != 0bv1));
    goto anon50;

  anon50:
    havoc _TRACKING;
    return;

  anon53_Then:
    assume {:partition} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && ($1 != 0bv1 || $1 != 0bv1);
    havoc $$g_num_one;
    goto anon40;

  anon40:
    havoc $$g_num_blocks_mult;
    goto anon41;

  anon41:
    havoc $$g_left_one;
    goto anon42;

  anon42:
    havoc $$g_right_one;
    goto anon43;

  anon43:
    havoc $$g_pos_one;
    goto anon44;

  anon44:
    havoc $$g_left_mult;
    goto anon45;

  anon45:
    havoc $$g_right_mult;
    goto anon46;

  anon46:
    havoc $$g_left_count_mult;
    goto anon47;

  anon47:
    havoc $$g_right_count_mult;
    goto anon48;

  anon48:
    havoc $$g_blocks_mult;
    goto anon49;

  anon49:
    havoc $$g_blocks_mult_sum;
    goto anon50;

  anon52_Then:
    assume {:partition} $0 != 0bv1 || $0 != 0bv1;
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon15;

  anon15:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon16;

  anon16:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon17;

  anon17:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon18;

  anon18:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon19;

  anon19:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon20;

  anon20:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon21;

  anon21:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon22;

  anon22:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon23;

  anon23:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon24;

  anon24:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon25;

  anon25:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon26;

  anon26:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon27;

  anon51_Then:
    assume {:partition} false;
    goto __Disabled;

  __Disabled:
    return;
}



implementation {:inline 1} $bugle_barrier_duplicated_11($0: bv1, $1: bv1)
{

  __BarrierImpl:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} true;
    goto anon0;

  anon0:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon1;

  anon1:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon2;

  anon2:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon3;

  anon3:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon4;

  anon4:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon5;

  anon5:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon6;

  anon6:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon7;

  anon7:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon8;

  anon8:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon9;

  anon9:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon10;

  anon10:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon11;

  anon11:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon12;

  anon12:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon13;

  anon13:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} !($0 != 0bv1 || $0 != 0bv1);
    goto anon27;

  anon27:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_one;
    goto anon28;

  anon28:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult;
    goto anon29;

  anon29:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_one;
    goto anon30;

  anon30:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_one;
    goto anon31;

  anon31:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_pos_one;
    goto anon32;

  anon32:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_mult;
    goto anon33;

  anon33:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_mult;
    goto anon34;

  anon34:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_count_mult;
    goto anon35;

  anon35:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_count_mult;
    goto anon36;

  anon36:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult;
    goto anon37;

  anon37:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum;
    goto anon38;

  anon38:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} !(group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && ($1 != 0bv1 || $1 != 0bv1));
    goto anon50;

  anon50:
    havoc _TRACKING;
    return;

  anon53_Then:
    assume {:partition} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && ($1 != 0bv1 || $1 != 0bv1);
    havoc $$g_num_one;
    goto anon40;

  anon40:
    havoc $$g_num_blocks_mult;
    goto anon41;

  anon41:
    havoc $$g_left_one;
    goto anon42;

  anon42:
    havoc $$g_right_one;
    goto anon43;

  anon43:
    havoc $$g_pos_one;
    goto anon44;

  anon44:
    havoc $$g_left_mult;
    goto anon45;

  anon45:
    havoc $$g_right_mult;
    goto anon46;

  anon46:
    havoc $$g_left_count_mult;
    goto anon47;

  anon47:
    havoc $$g_right_count_mult;
    goto anon48;

  anon48:
    havoc $$g_blocks_mult;
    goto anon49;

  anon49:
    havoc $$g_blocks_mult_sum;
    goto anon50;

  anon52_Then:
    assume {:partition} $0 != 0bv1 || $0 != 0bv1;
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon15;

  anon15:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon16;

  anon16:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon17;

  anon17:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon18;

  anon18:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon19;

  anon19:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon20;

  anon20:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon21;

  anon21:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon22;

  anon22:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon23;

  anon23:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon24;

  anon24:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon25;

  anon25:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon26;

  anon26:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon27;

  anon51_Then:
    assume {:partition} false;
    goto __Disabled;

  __Disabled:
    return;
}



implementation {:inline 1} $bugle_barrier_duplicated_12($0: bv1, $1: bv1)
{

  __BarrierImpl:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} true;
    goto anon0;

  anon0:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon1;

  anon1:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon2;

  anon2:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon3;

  anon3:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon4;

  anon4:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon5;

  anon5:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon6;

  anon6:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon7;

  anon7:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon8;

  anon8:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon9;

  anon9:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon10;

  anon10:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon11;

  anon11:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon12;

  anon12:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon13;

  anon13:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} !($0 != 0bv1 || $0 != 0bv1);
    goto anon27;

  anon27:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_one;
    goto anon28;

  anon28:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult;
    goto anon29;

  anon29:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_one;
    goto anon30;

  anon30:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_one;
    goto anon31;

  anon31:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_pos_one;
    goto anon32;

  anon32:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_mult;
    goto anon33;

  anon33:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_mult;
    goto anon34;

  anon34:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_count_mult;
    goto anon35;

  anon35:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_count_mult;
    goto anon36;

  anon36:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult;
    goto anon37;

  anon37:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum;
    goto anon38;

  anon38:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} !(group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && ($1 != 0bv1 || $1 != 0bv1));
    goto anon50;

  anon50:
    havoc _TRACKING;
    return;

  anon53_Then:
    assume {:partition} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && ($1 != 0bv1 || $1 != 0bv1);
    havoc $$g_num_one;
    goto anon40;

  anon40:
    havoc $$g_num_blocks_mult;
    goto anon41;

  anon41:
    havoc $$g_left_one;
    goto anon42;

  anon42:
    havoc $$g_right_one;
    goto anon43;

  anon43:
    havoc $$g_pos_one;
    goto anon44;

  anon44:
    havoc $$g_left_mult;
    goto anon45;

  anon45:
    havoc $$g_right_mult;
    goto anon46;

  anon46:
    havoc $$g_left_count_mult;
    goto anon47;

  anon47:
    havoc $$g_right_count_mult;
    goto anon48;

  anon48:
    havoc $$g_blocks_mult;
    goto anon49;

  anon49:
    havoc $$g_blocks_mult_sum;
    goto anon50;

  anon52_Then:
    assume {:partition} $0 != 0bv1 || $0 != 0bv1;
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon15;

  anon15:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon16;

  anon16:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon17;

  anon17:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon18;

  anon18:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon19;

  anon19:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon20;

  anon20:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon21;

  anon21:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon22;

  anon22:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon23;

  anon23:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon24;

  anon24:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon25;

  anon25:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon26;

  anon26:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon27;

  anon51_Then:
    assume {:partition} false;
    goto __Disabled;

  __Disabled:
    return;
}



implementation {:inline 1} $bugle_barrier_duplicated_13($0: bv1, $1: bv1)
{

  __BarrierImpl:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} true;
    goto anon0;

  anon0:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon1;

  anon1:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon2;

  anon2:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon3;

  anon3:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon4;

  anon4:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon5;

  anon5:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon6;

  anon6:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon7;

  anon7:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon8;

  anon8:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon9;

  anon9:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon10;

  anon10:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon11;

  anon11:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon12;

  anon12:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon13;

  anon13:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} !($0 != 0bv1 || $0 != 0bv1);
    goto anon27;

  anon27:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_one;
    goto anon28;

  anon28:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult;
    goto anon29;

  anon29:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_one;
    goto anon30;

  anon30:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_one;
    goto anon31;

  anon31:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_pos_one;
    goto anon32;

  anon32:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_mult;
    goto anon33;

  anon33:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_mult;
    goto anon34;

  anon34:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_count_mult;
    goto anon35;

  anon35:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_count_mult;
    goto anon36;

  anon36:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult;
    goto anon37;

  anon37:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum;
    goto anon38;

  anon38:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} !(group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && ($1 != 0bv1 || $1 != 0bv1));
    goto anon50;

  anon50:
    havoc _TRACKING;
    return;

  anon53_Then:
    assume {:partition} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && ($1 != 0bv1 || $1 != 0bv1);
    havoc $$g_num_one;
    goto anon40;

  anon40:
    havoc $$g_num_blocks_mult;
    goto anon41;

  anon41:
    havoc $$g_left_one;
    goto anon42;

  anon42:
    havoc $$g_right_one;
    goto anon43;

  anon43:
    havoc $$g_pos_one;
    goto anon44;

  anon44:
    havoc $$g_left_mult;
    goto anon45;

  anon45:
    havoc $$g_right_mult;
    goto anon46;

  anon46:
    havoc $$g_left_count_mult;
    goto anon47;

  anon47:
    havoc $$g_right_count_mult;
    goto anon48;

  anon48:
    havoc $$g_blocks_mult;
    goto anon49;

  anon49:
    havoc $$g_blocks_mult_sum;
    goto anon50;

  anon52_Then:
    assume {:partition} $0 != 0bv1 || $0 != 0bv1;
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon15;

  anon15:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon16;

  anon16:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon17;

  anon17:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon18;

  anon18:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon19;

  anon19:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon20;

  anon20:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon21;

  anon21:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon22;

  anon22:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon23;

  anon23:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon24;

  anon24:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon25;

  anon25:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon26;

  anon26:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon27;

  anon51_Then:
    assume {:partition} false;
    goto __Disabled;

  __Disabled:
    return;
}



implementation {:inline 1} $bugle_barrier_duplicated_14($0: bv1, $1: bv1)
{

  __BarrierImpl:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} true;
    goto anon0;

  anon0:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon1;

  anon1:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon2;

  anon2:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon3;

  anon3:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon4;

  anon4:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon5;

  anon5:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon6;

  anon6:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon7;

  anon7:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon8;

  anon8:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon9;

  anon9:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon10;

  anon10:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon11;

  anon11:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon12;

  anon12:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon13;

  anon13:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} !($0 != 0bv1 || $0 != 0bv1);
    goto anon27;

  anon27:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_one;
    goto anon28;

  anon28:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult;
    goto anon29;

  anon29:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_one;
    goto anon30;

  anon30:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_one;
    goto anon31;

  anon31:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_pos_one;
    goto anon32;

  anon32:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_mult;
    goto anon33;

  anon33:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_mult;
    goto anon34;

  anon34:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_count_mult;
    goto anon35;

  anon35:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_count_mult;
    goto anon36;

  anon36:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult;
    goto anon37;

  anon37:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum;
    goto anon38;

  anon38:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} !(group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && ($1 != 0bv1 || $1 != 0bv1));
    goto anon50;

  anon50:
    havoc _TRACKING;
    return;

  anon53_Then:
    assume {:partition} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && ($1 != 0bv1 || $1 != 0bv1);
    havoc $$g_num_one;
    goto anon40;

  anon40:
    havoc $$g_num_blocks_mult;
    goto anon41;

  anon41:
    havoc $$g_left_one;
    goto anon42;

  anon42:
    havoc $$g_right_one;
    goto anon43;

  anon43:
    havoc $$g_pos_one;
    goto anon44;

  anon44:
    havoc $$g_left_mult;
    goto anon45;

  anon45:
    havoc $$g_right_mult;
    goto anon46;

  anon46:
    havoc $$g_left_count_mult;
    goto anon47;

  anon47:
    havoc $$g_right_count_mult;
    goto anon48;

  anon48:
    havoc $$g_blocks_mult;
    goto anon49;

  anon49:
    havoc $$g_blocks_mult_sum;
    goto anon50;

  anon52_Then:
    assume {:partition} $0 != 0bv1 || $0 != 0bv1;
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon15;

  anon15:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon16;

  anon16:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon17;

  anon17:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon18;

  anon18:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon19;

  anon19:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon20;

  anon20:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon21;

  anon21:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon22;

  anon22:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon23;

  anon23:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon24;

  anon24:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon25;

  anon25:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon26;

  anon26:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon27;

  anon51_Then:
    assume {:partition} false;
    goto __Disabled;

  __Disabled:
    return;
}



implementation {:inline 1} $bugle_barrier_duplicated_15($0: bv1, $1: bv1)
{

  __BarrierImpl:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} true;
    goto anon0;

  anon0:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon1;

  anon1:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon2;

  anon2:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon3;

  anon3:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon4;

  anon4:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon5;

  anon5:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon6;

  anon6:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon7;

  anon7:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon8;

  anon8:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon9;

  anon9:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon10;

  anon10:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon11;

  anon11:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon12;

  anon12:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon13;

  anon13:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} !($0 != 0bv1 || $0 != 0bv1);
    goto anon27;

  anon27:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_one;
    goto anon28;

  anon28:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult;
    goto anon29;

  anon29:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_one;
    goto anon30;

  anon30:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_one;
    goto anon31;

  anon31:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_pos_one;
    goto anon32;

  anon32:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_mult;
    goto anon33;

  anon33:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_mult;
    goto anon34;

  anon34:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_count_mult;
    goto anon35;

  anon35:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_count_mult;
    goto anon36;

  anon36:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult;
    goto anon37;

  anon37:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum;
    goto anon38;

  anon38:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} !(group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && ($1 != 0bv1 || $1 != 0bv1));
    goto anon50;

  anon50:
    havoc _TRACKING;
    return;

  anon53_Then:
    assume {:partition} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && ($1 != 0bv1 || $1 != 0bv1);
    havoc $$g_num_one;
    goto anon40;

  anon40:
    havoc $$g_num_blocks_mult;
    goto anon41;

  anon41:
    havoc $$g_left_one;
    goto anon42;

  anon42:
    havoc $$g_right_one;
    goto anon43;

  anon43:
    havoc $$g_pos_one;
    goto anon44;

  anon44:
    havoc $$g_left_mult;
    goto anon45;

  anon45:
    havoc $$g_right_mult;
    goto anon46;

  anon46:
    havoc $$g_left_count_mult;
    goto anon47;

  anon47:
    havoc $$g_right_count_mult;
    goto anon48;

  anon48:
    havoc $$g_blocks_mult;
    goto anon49;

  anon49:
    havoc $$g_blocks_mult_sum;
    goto anon50;

  anon52_Then:
    assume {:partition} $0 != 0bv1 || $0 != 0bv1;
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon15;

  anon15:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon16;

  anon16:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon17;

  anon17:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon18;

  anon18:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon19;

  anon19:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon20;

  anon20:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon21;

  anon21:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon22;

  anon22:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon23;

  anon23:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon24;

  anon24:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon25;

  anon25:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon26;

  anon26:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon27;

  anon51_Then:
    assume {:partition} false;
    goto __Disabled;

  __Disabled:
    return;
}



implementation {:inline 1} $bugle_barrier_duplicated_16($0: bv1, $1: bv1)
{

  __BarrierImpl:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} true;
    goto anon0;

  anon0:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon1;

  anon1:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon2;

  anon2:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon3;

  anon3:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon4;

  anon4:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon5;

  anon5:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon6;

  anon6:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon7;

  anon7:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon8;

  anon8:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon9;

  anon9:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon10;

  anon10:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon11;

  anon11:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon12;

  anon12:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon13;

  anon13:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} !($0 != 0bv1 || $0 != 0bv1);
    goto anon27;

  anon27:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_one;
    goto anon28;

  anon28:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult;
    goto anon29;

  anon29:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_one;
    goto anon30;

  anon30:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_one;
    goto anon31;

  anon31:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_pos_one;
    goto anon32;

  anon32:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_mult;
    goto anon33;

  anon33:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_mult;
    goto anon34;

  anon34:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_count_mult;
    goto anon35;

  anon35:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_count_mult;
    goto anon36;

  anon36:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult;
    goto anon37;

  anon37:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum;
    goto anon38;

  anon38:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} !(group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && ($1 != 0bv1 || $1 != 0bv1));
    goto anon50;

  anon50:
    havoc _TRACKING;
    return;

  anon53_Then:
    assume {:partition} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && ($1 != 0bv1 || $1 != 0bv1);
    havoc $$g_num_one;
    goto anon40;

  anon40:
    havoc $$g_num_blocks_mult;
    goto anon41;

  anon41:
    havoc $$g_left_one;
    goto anon42;

  anon42:
    havoc $$g_right_one;
    goto anon43;

  anon43:
    havoc $$g_pos_one;
    goto anon44;

  anon44:
    havoc $$g_left_mult;
    goto anon45;

  anon45:
    havoc $$g_right_mult;
    goto anon46;

  anon46:
    havoc $$g_left_count_mult;
    goto anon47;

  anon47:
    havoc $$g_right_count_mult;
    goto anon48;

  anon48:
    havoc $$g_blocks_mult;
    goto anon49;

  anon49:
    havoc $$g_blocks_mult_sum;
    goto anon50;

  anon52_Then:
    assume {:partition} $0 != 0bv1 || $0 != 0bv1;
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon15;

  anon15:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon16;

  anon16:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon17;

  anon17:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon18;

  anon18:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon19;

  anon19:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon20;

  anon20:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon21;

  anon21:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon22;

  anon22:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon23;

  anon23:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon24;

  anon24:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon25;

  anon25:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon26;

  anon26:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon27;

  anon51_Then:
    assume {:partition} false;
    goto __Disabled;

  __Disabled:
    return;
}



implementation {:inline 1} $bugle_barrier_duplicated_17($0: bv1, $1: bv1)
{

  __BarrierImpl:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} true;
    goto anon0;

  anon0:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon1;

  anon1:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon2;

  anon2:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon3;

  anon3:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon4;

  anon4:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon5;

  anon5:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon6;

  anon6:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon7;

  anon7:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon8;

  anon8:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon9;

  anon9:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon10;

  anon10:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon11;

  anon11:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon12;

  anon12:
    assume $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon13;

  anon13:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} !($0 != 0bv1 || $0 != 0bv1);
    goto anon27;

  anon27:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_one;
    goto anon28;

  anon28:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult;
    goto anon29;

  anon29:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_one;
    goto anon30;

  anon30:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_one;
    goto anon31;

  anon31:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_pos_one;
    goto anon32;

  anon32:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_mult;
    goto anon33;

  anon33:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_mult;
    goto anon34;

  anon34:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_count_mult;
    goto anon35;

  anon35:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_count_mult;
    goto anon36;

  anon36:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult;
    goto anon37;

  anon37:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum;
    goto anon38;

  anon38:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} !(group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && ($1 != 0bv1 || $1 != 0bv1));
    goto anon50;

  anon50:
    havoc _TRACKING;
    return;

  anon53_Then:
    assume {:partition} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && ($1 != 0bv1 || $1 != 0bv1);
    havoc $$g_num_one;
    goto anon40;

  anon40:
    havoc $$g_num_blocks_mult;
    goto anon41;

  anon41:
    havoc $$g_left_one;
    goto anon42;

  anon42:
    havoc $$g_right_one;
    goto anon43;

  anon43:
    havoc $$g_pos_one;
    goto anon44;

  anon44:
    havoc $$g_left_mult;
    goto anon45;

  anon45:
    havoc $$g_right_mult;
    goto anon46;

  anon46:
    havoc $$g_left_count_mult;
    goto anon47;

  anon47:
    havoc $$g_right_count_mult;
    goto anon48;

  anon48:
    havoc $$g_blocks_mult;
    goto anon49;

  anon49:
    havoc $$g_blocks_mult_sum;
    goto anon50;

  anon52_Then:
    assume {:partition} $0 != 0bv1 || $0 != 0bv1;
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon15;

  anon15:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon16;

  anon16:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon17;

  anon17:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon18;

  anon18:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon19;

  anon19:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon20;

  anon20:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon21;

  anon21:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon22;

  anon22:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon23;

  anon23:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon24;

  anon24:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon25;

  anon25:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon26;

  anon26:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon27;

  anon51_Then:
    assume {:partition} false;
    goto __Disabled;

  __Disabled:
    return;
}



implementation {:inline 1} $bugle_barrier_duplicated_18($0: bv1, $1: bv1, _P$1: bool, _P$2: bool)
{

  __BarrierImpl:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} !((!_P$1 && !_P$2) || (group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && (!_P$1 || !_P$2)));
    goto anon0;

  anon0:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon1;

  anon1:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon2;

  anon2:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon3;

  anon3:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon4;

  anon4:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon5;

  anon5:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon6;

  anon6:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon7;

  anon7:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon8;

  anon8:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon9;

  anon9:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon10;

  anon10:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon11;

  anon11:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon12;

  anon12:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon13;

  anon13:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} !((_P$1 && $0 != 0bv1) || (_P$2 && $0 != 0bv1));
    goto anon27;

  anon27:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_one;
    goto anon28;

  anon28:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult;
    goto anon29;

  anon29:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_one;
    goto anon30;

  anon30:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_one;
    goto anon31;

  anon31:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_pos_one;
    goto anon32;

  anon32:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_mult;
    goto anon33;

  anon33:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_mult;
    goto anon34;

  anon34:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_count_mult;
    goto anon35;

  anon35:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_count_mult;
    goto anon36;

  anon36:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult;
    goto anon37;

  anon37:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum;
    goto anon38;

  anon38:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} !(group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _P$1 && _P$2 && ($1 != 0bv1 || $1 != 0bv1));
    goto anon50;

  anon50:
    havoc _TRACKING;
    return;

  anon53_Then:
    assume {:partition} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _P$1 && _P$2 && ($1 != 0bv1 || $1 != 0bv1);
    havoc $$g_num_one;
    goto anon40;

  anon40:
    havoc $$g_num_blocks_mult;
    goto anon41;

  anon41:
    havoc $$g_left_one;
    goto anon42;

  anon42:
    havoc $$g_right_one;
    goto anon43;

  anon43:
    havoc $$g_pos_one;
    goto anon44;

  anon44:
    havoc $$g_left_mult;
    goto anon45;

  anon45:
    havoc $$g_right_mult;
    goto anon46;

  anon46:
    havoc $$g_left_count_mult;
    goto anon47;

  anon47:
    havoc $$g_right_count_mult;
    goto anon48;

  anon48:
    havoc $$g_blocks_mult;
    goto anon49;

  anon49:
    havoc $$g_blocks_mult_sum;
    goto anon50;

  anon52_Then:
    assume {:partition} (_P$1 && $0 != 0bv1) || (_P$2 && $0 != 0bv1);
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon15;

  anon15:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon16;

  anon16:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon17;

  anon17:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon18;

  anon18:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon19;

  anon19:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon20;

  anon20:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon21;

  anon21:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon22;

  anon22:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon23;

  anon23:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon24;

  anon24:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon25;

  anon25:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon26;

  anon26:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon27;

  anon51_Then:
    assume {:partition} (!_P$1 && !_P$2) || (group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && (!_P$1 || !_P$2));
    goto __Disabled;

  __Disabled:
    return;
}



implementation {:inline 1} $bugle_barrier_duplicated_19($0: bv1, $1: bv1, _P$1: bool, _P$2: bool)
{

  __BarrierImpl:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} !((!_P$1 && !_P$2) || (group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && (!_P$1 || !_P$2)));
    goto anon0;

  anon0:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon1;

  anon1:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon2;

  anon2:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon3;

  anon3:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon4;

  anon4:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon5;

  anon5:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon6;

  anon6:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon7;

  anon7:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon8;

  anon8:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon9;

  anon9:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon10;

  anon10:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon11;

  anon11:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon12;

  anon12:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon13;

  anon13:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} !((_P$1 && $0 != 0bv1) || (_P$2 && $0 != 0bv1));
    goto anon27;

  anon27:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_one;
    goto anon28;

  anon28:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult;
    goto anon29;

  anon29:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_one;
    goto anon30;

  anon30:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_one;
    goto anon31;

  anon31:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_pos_one;
    goto anon32;

  anon32:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_mult;
    goto anon33;

  anon33:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_mult;
    goto anon34;

  anon34:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_count_mult;
    goto anon35;

  anon35:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_count_mult;
    goto anon36;

  anon36:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult;
    goto anon37;

  anon37:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum;
    goto anon38;

  anon38:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} !(group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _P$1 && _P$2 && ($1 != 0bv1 || $1 != 0bv1));
    goto anon50;

  anon50:
    havoc _TRACKING;
    return;

  anon53_Then:
    assume {:partition} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _P$1 && _P$2 && ($1 != 0bv1 || $1 != 0bv1);
    havoc $$g_num_one;
    goto anon40;

  anon40:
    havoc $$g_num_blocks_mult;
    goto anon41;

  anon41:
    havoc $$g_left_one;
    goto anon42;

  anon42:
    havoc $$g_right_one;
    goto anon43;

  anon43:
    havoc $$g_pos_one;
    goto anon44;

  anon44:
    havoc $$g_left_mult;
    goto anon45;

  anon45:
    havoc $$g_right_mult;
    goto anon46;

  anon46:
    havoc $$g_left_count_mult;
    goto anon47;

  anon47:
    havoc $$g_right_count_mult;
    goto anon48;

  anon48:
    havoc $$g_blocks_mult;
    goto anon49;

  anon49:
    havoc $$g_blocks_mult_sum;
    goto anon50;

  anon52_Then:
    assume {:partition} (_P$1 && $0 != 0bv1) || (_P$2 && $0 != 0bv1);
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon15;

  anon15:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon16;

  anon16:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon17;

  anon17:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon18;

  anon18:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon19;

  anon19:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon20;

  anon20:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon21;

  anon21:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon22;

  anon22:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon23;

  anon23:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon24;

  anon24:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon25;

  anon25:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon26;

  anon26:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon27;

  anon51_Then:
    assume {:partition} (!_P$1 && !_P$2) || (group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && (!_P$1 || !_P$2));
    goto __Disabled;

  __Disabled:
    return;
}



implementation {:inline 1} $bugle_barrier_duplicated_20($0: bv1, $1: bv1, _P$1: bool, _P$2: bool)
{

  __BarrierImpl:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} !((!_P$1 && !_P$2) || (group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && (!_P$1 || !_P$2)));
    goto anon0;

  anon0:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon1;

  anon1:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon2;

  anon2:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon3;

  anon3:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon4;

  anon4:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon5;

  anon5:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon6;

  anon6:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon7;

  anon7:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon8;

  anon8:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon9;

  anon9:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon10;

  anon10:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon11;

  anon11:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon12;

  anon12:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon13;

  anon13:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} !((_P$1 && $0 != 0bv1) || (_P$2 && $0 != 0bv1));
    goto anon27;

  anon27:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_one;
    goto anon28;

  anon28:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult;
    goto anon29;

  anon29:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_one;
    goto anon30;

  anon30:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_one;
    goto anon31;

  anon31:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_pos_one;
    goto anon32;

  anon32:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_mult;
    goto anon33;

  anon33:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_mult;
    goto anon34;

  anon34:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_count_mult;
    goto anon35;

  anon35:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_count_mult;
    goto anon36;

  anon36:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult;
    goto anon37;

  anon37:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum;
    goto anon38;

  anon38:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} !(group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _P$1 && _P$2 && ($1 != 0bv1 || $1 != 0bv1));
    goto anon50;

  anon50:
    havoc _TRACKING;
    return;

  anon53_Then:
    assume {:partition} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _P$1 && _P$2 && ($1 != 0bv1 || $1 != 0bv1);
    havoc $$g_num_one;
    goto anon40;

  anon40:
    havoc $$g_num_blocks_mult;
    goto anon41;

  anon41:
    havoc $$g_left_one;
    goto anon42;

  anon42:
    havoc $$g_right_one;
    goto anon43;

  anon43:
    havoc $$g_pos_one;
    goto anon44;

  anon44:
    havoc $$g_left_mult;
    goto anon45;

  anon45:
    havoc $$g_right_mult;
    goto anon46;

  anon46:
    havoc $$g_left_count_mult;
    goto anon47;

  anon47:
    havoc $$g_right_count_mult;
    goto anon48;

  anon48:
    havoc $$g_blocks_mult;
    goto anon49;

  anon49:
    havoc $$g_blocks_mult_sum;
    goto anon50;

  anon52_Then:
    assume {:partition} (_P$1 && $0 != 0bv1) || (_P$2 && $0 != 0bv1);
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon15;

  anon15:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon16;

  anon16:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon17;

  anon17:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon18;

  anon18:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon19;

  anon19:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon20;

  anon20:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon21;

  anon21:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon22;

  anon22:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon23;

  anon23:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon24;

  anon24:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon25;

  anon25:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon26;

  anon26:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon27;

  anon51_Then:
    assume {:partition} (!_P$1 && !_P$2) || (group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && (!_P$1 || !_P$2));
    goto __Disabled;

  __Disabled:
    return;
}



implementation {:inline 1} $bugle_barrier_duplicated_21($0: bv1, $1: bv1, _P$1: bool, _P$2: bool)
{

  __BarrierImpl:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} !((!_P$1 && !_P$2) || (group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && (!_P$1 || !_P$2)));
    goto anon0;

  anon0:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon1;

  anon1:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon2;

  anon2:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon3;

  anon3:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon4;

  anon4:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon5;

  anon5:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon6;

  anon6:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon7;

  anon7:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon8;

  anon8:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon9;

  anon9:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon10;

  anon10:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon11;

  anon11:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon12;

  anon12:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon13;

  anon13:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} !((_P$1 && $0 != 0bv1) || (_P$2 && $0 != 0bv1));
    goto anon27;

  anon27:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_one;
    goto anon28;

  anon28:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult;
    goto anon29;

  anon29:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_one;
    goto anon30;

  anon30:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_one;
    goto anon31;

  anon31:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_pos_one;
    goto anon32;

  anon32:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_mult;
    goto anon33;

  anon33:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_mult;
    goto anon34;

  anon34:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_count_mult;
    goto anon35;

  anon35:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_count_mult;
    goto anon36;

  anon36:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult;
    goto anon37;

  anon37:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum;
    goto anon38;

  anon38:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} !(group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _P$1 && _P$2 && ($1 != 0bv1 || $1 != 0bv1));
    goto anon50;

  anon50:
    havoc _TRACKING;
    return;

  anon53_Then:
    assume {:partition} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _P$1 && _P$2 && ($1 != 0bv1 || $1 != 0bv1);
    havoc $$g_num_one;
    goto anon40;

  anon40:
    havoc $$g_num_blocks_mult;
    goto anon41;

  anon41:
    havoc $$g_left_one;
    goto anon42;

  anon42:
    havoc $$g_right_one;
    goto anon43;

  anon43:
    havoc $$g_pos_one;
    goto anon44;

  anon44:
    havoc $$g_left_mult;
    goto anon45;

  anon45:
    havoc $$g_right_mult;
    goto anon46;

  anon46:
    havoc $$g_left_count_mult;
    goto anon47;

  anon47:
    havoc $$g_right_count_mult;
    goto anon48;

  anon48:
    havoc $$g_blocks_mult;
    goto anon49;

  anon49:
    havoc $$g_blocks_mult_sum;
    goto anon50;

  anon52_Then:
    assume {:partition} (_P$1 && $0 != 0bv1) || (_P$2 && $0 != 0bv1);
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon15;

  anon15:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon16;

  anon16:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon17;

  anon17:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon18;

  anon18:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon19;

  anon19:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon20;

  anon20:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon21;

  anon21:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon22;

  anon22:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon23;

  anon23:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon24;

  anon24:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon25;

  anon25:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon26;

  anon26:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon27;

  anon51_Then:
    assume {:partition} (!_P$1 && !_P$2) || (group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && (!_P$1 || !_P$2));
    goto __Disabled;

  __Disabled:
    return;
}



implementation {:inline 1} $bugle_barrier_duplicated_22($0: bv1, $1: bv1, _P$1: bool, _P$2: bool)
{

  __BarrierImpl:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} !((!_P$1 && !_P$2) || (group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && (!_P$1 || !_P$2)));
    goto anon0;

  anon0:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon1;

  anon1:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon2;

  anon2:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon3;

  anon3:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon4;

  anon4:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon5;

  anon5:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon6;

  anon6:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon7;

  anon7:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon8;

  anon8:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon9;

  anon9:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon10;

  anon10:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon11;

  anon11:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon12;

  anon12:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon13;

  anon13:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} !((_P$1 && $0 != 0bv1) || (_P$2 && $0 != 0bv1));
    goto anon27;

  anon27:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_one;
    goto anon28;

  anon28:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult;
    goto anon29;

  anon29:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_one;
    goto anon30;

  anon30:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_one;
    goto anon31;

  anon31:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_pos_one;
    goto anon32;

  anon32:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_mult;
    goto anon33;

  anon33:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_mult;
    goto anon34;

  anon34:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_count_mult;
    goto anon35;

  anon35:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_count_mult;
    goto anon36;

  anon36:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult;
    goto anon37;

  anon37:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum;
    goto anon38;

  anon38:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} !(group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _P$1 && _P$2 && ($1 != 0bv1 || $1 != 0bv1));
    goto anon50;

  anon50:
    havoc _TRACKING;
    return;

  anon53_Then:
    assume {:partition} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _P$1 && _P$2 && ($1 != 0bv1 || $1 != 0bv1);
    havoc $$g_num_one;
    goto anon40;

  anon40:
    havoc $$g_num_blocks_mult;
    goto anon41;

  anon41:
    havoc $$g_left_one;
    goto anon42;

  anon42:
    havoc $$g_right_one;
    goto anon43;

  anon43:
    havoc $$g_pos_one;
    goto anon44;

  anon44:
    havoc $$g_left_mult;
    goto anon45;

  anon45:
    havoc $$g_right_mult;
    goto anon46;

  anon46:
    havoc $$g_left_count_mult;
    goto anon47;

  anon47:
    havoc $$g_right_count_mult;
    goto anon48;

  anon48:
    havoc $$g_blocks_mult;
    goto anon49;

  anon49:
    havoc $$g_blocks_mult_sum;
    goto anon50;

  anon52_Then:
    assume {:partition} (_P$1 && $0 != 0bv1) || (_P$2 && $0 != 0bv1);
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon15;

  anon15:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon16;

  anon16:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon17;

  anon17:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon18;

  anon18:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon19;

  anon19:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon20;

  anon20:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon21;

  anon21:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon22;

  anon22:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon23;

  anon23:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon24;

  anon24:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon25;

  anon25:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon26;

  anon26:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon27;

  anon51_Then:
    assume {:partition} (!_P$1 && !_P$2) || (group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && (!_P$1 || !_P$2));
    goto __Disabled;

  __Disabled:
    return;
}



implementation {:inline 1} $bugle_barrier_duplicated_23($0: bv1, $1: bv1, _P$1: bool, _P$2: bool)
{

  __BarrierImpl:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} !((!_P$1 && !_P$2) || (group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && (!_P$1 || !_P$2)));
    goto anon0;

  anon0:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon1;

  anon1:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon2;

  anon2:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon3;

  anon3:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon4;

  anon4:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon5;

  anon5:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon6;

  anon6:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon7;

  anon7:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon8;

  anon8:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon9;

  anon9:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon10;

  anon10:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon11;

  anon11:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon12;

  anon12:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon13;

  anon13:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} !((_P$1 && $0 != 0bv1) || (_P$2 && $0 != 0bv1));
    goto anon27;

  anon27:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_one;
    goto anon28;

  anon28:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult;
    goto anon29;

  anon29:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_one;
    goto anon30;

  anon30:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_one;
    goto anon31;

  anon31:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_pos_one;
    goto anon32;

  anon32:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_mult;
    goto anon33;

  anon33:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_mult;
    goto anon34;

  anon34:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_count_mult;
    goto anon35;

  anon35:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_count_mult;
    goto anon36;

  anon36:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult;
    goto anon37;

  anon37:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum;
    goto anon38;

  anon38:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} !(group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _P$1 && _P$2 && ($1 != 0bv1 || $1 != 0bv1));
    goto anon50;

  anon50:
    havoc _TRACKING;
    return;

  anon53_Then:
    assume {:partition} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _P$1 && _P$2 && ($1 != 0bv1 || $1 != 0bv1);
    havoc $$g_num_one;
    goto anon40;

  anon40:
    havoc $$g_num_blocks_mult;
    goto anon41;

  anon41:
    havoc $$g_left_one;
    goto anon42;

  anon42:
    havoc $$g_right_one;
    goto anon43;

  anon43:
    havoc $$g_pos_one;
    goto anon44;

  anon44:
    havoc $$g_left_mult;
    goto anon45;

  anon45:
    havoc $$g_right_mult;
    goto anon46;

  anon46:
    havoc $$g_left_count_mult;
    goto anon47;

  anon47:
    havoc $$g_right_count_mult;
    goto anon48;

  anon48:
    havoc $$g_blocks_mult;
    goto anon49;

  anon49:
    havoc $$g_blocks_mult_sum;
    goto anon50;

  anon52_Then:
    assume {:partition} (_P$1 && $0 != 0bv1) || (_P$2 && $0 != 0bv1);
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon15;

  anon15:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon16;

  anon16:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon17;

  anon17:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon18;

  anon18:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon19;

  anon19:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon20;

  anon20:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon21;

  anon21:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon22;

  anon22:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon23;

  anon23:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon24;

  anon24:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon25;

  anon25:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon26;

  anon26:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon27;

  anon51_Then:
    assume {:partition} (!_P$1 && !_P$2) || (group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && (!_P$1 || !_P$2));
    goto __Disabled;

  __Disabled:
    return;
}



implementation {:inline 1} $bugle_barrier_duplicated_24($0: bv1, $1: bv1, _P$1: bool, _P$2: bool)
{

  __BarrierImpl:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} !((!_P$1 && !_P$2) || (group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && (!_P$1 || !_P$2)));
    goto anon0;

  anon0:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon1;

  anon1:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon2;

  anon2:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon3;

  anon3:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon4;

  anon4:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon5;

  anon5:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon6;

  anon6:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon7;

  anon7:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon8;

  anon8:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon9;

  anon9:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon10;

  anon10:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon11;

  anon11:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon12;

  anon12:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon13;

  anon13:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} !((_P$1 && $0 != 0bv1) || (_P$2 && $0 != 0bv1));
    goto anon27;

  anon27:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_one;
    goto anon28;

  anon28:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult;
    goto anon29;

  anon29:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_one;
    goto anon30;

  anon30:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_one;
    goto anon31;

  anon31:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_pos_one;
    goto anon32;

  anon32:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_mult;
    goto anon33;

  anon33:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_mult;
    goto anon34;

  anon34:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_count_mult;
    goto anon35;

  anon35:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_count_mult;
    goto anon36;

  anon36:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult;
    goto anon37;

  anon37:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum;
    goto anon38;

  anon38:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} !(group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _P$1 && _P$2 && ($1 != 0bv1 || $1 != 0bv1));
    goto anon50;

  anon50:
    havoc _TRACKING;
    return;

  anon53_Then:
    assume {:partition} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _P$1 && _P$2 && ($1 != 0bv1 || $1 != 0bv1);
    havoc $$g_num_one;
    goto anon40;

  anon40:
    havoc $$g_num_blocks_mult;
    goto anon41;

  anon41:
    havoc $$g_left_one;
    goto anon42;

  anon42:
    havoc $$g_right_one;
    goto anon43;

  anon43:
    havoc $$g_pos_one;
    goto anon44;

  anon44:
    havoc $$g_left_mult;
    goto anon45;

  anon45:
    havoc $$g_right_mult;
    goto anon46;

  anon46:
    havoc $$g_left_count_mult;
    goto anon47;

  anon47:
    havoc $$g_right_count_mult;
    goto anon48;

  anon48:
    havoc $$g_blocks_mult;
    goto anon49;

  anon49:
    havoc $$g_blocks_mult_sum;
    goto anon50;

  anon52_Then:
    assume {:partition} (_P$1 && $0 != 0bv1) || (_P$2 && $0 != 0bv1);
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon15;

  anon15:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon16;

  anon16:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon17;

  anon17:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon18;

  anon18:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon19;

  anon19:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon20;

  anon20:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon21;

  anon21:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon22;

  anon22:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon23;

  anon23:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon24;

  anon24:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon25;

  anon25:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon26;

  anon26:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon27;

  anon51_Then:
    assume {:partition} (!_P$1 && !_P$2) || (group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && (!_P$1 || !_P$2));
    goto __Disabled;

  __Disabled:
    return;
}



implementation {:inline 1} $bugle_barrier_duplicated_25($0: bv1, $1: bv1, _P$1: bool, _P$2: bool)
{

  __BarrierImpl:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} !((!_P$1 && !_P$2) || (group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && (!_P$1 || !_P$2)));
    goto anon0;

  anon0:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon1;

  anon1:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon2;

  anon2:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon3;

  anon3:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon4;

  anon4:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon5;

  anon5:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon6;

  anon6:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon7;

  anon7:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon8;

  anon8:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon9;

  anon9:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon10;

  anon10:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon11;

  anon11:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon12;

  anon12:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon13;

  anon13:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} !((_P$1 && $0 != 0bv1) || (_P$2 && $0 != 0bv1));
    goto anon27;

  anon27:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_one;
    goto anon28;

  anon28:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult;
    goto anon29;

  anon29:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_one;
    goto anon30;

  anon30:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_one;
    goto anon31;

  anon31:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_pos_one;
    goto anon32;

  anon32:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_mult;
    goto anon33;

  anon33:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_mult;
    goto anon34;

  anon34:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_count_mult;
    goto anon35;

  anon35:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_count_mult;
    goto anon36;

  anon36:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult;
    goto anon37;

  anon37:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum;
    goto anon38;

  anon38:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} !(group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _P$1 && _P$2 && ($1 != 0bv1 || $1 != 0bv1));
    goto anon50;

  anon50:
    havoc _TRACKING;
    return;

  anon53_Then:
    assume {:partition} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _P$1 && _P$2 && ($1 != 0bv1 || $1 != 0bv1);
    havoc $$g_num_one;
    goto anon40;

  anon40:
    havoc $$g_num_blocks_mult;
    goto anon41;

  anon41:
    havoc $$g_left_one;
    goto anon42;

  anon42:
    havoc $$g_right_one;
    goto anon43;

  anon43:
    havoc $$g_pos_one;
    goto anon44;

  anon44:
    havoc $$g_left_mult;
    goto anon45;

  anon45:
    havoc $$g_right_mult;
    goto anon46;

  anon46:
    havoc $$g_left_count_mult;
    goto anon47;

  anon47:
    havoc $$g_right_count_mult;
    goto anon48;

  anon48:
    havoc $$g_blocks_mult;
    goto anon49;

  anon49:
    havoc $$g_blocks_mult_sum;
    goto anon50;

  anon52_Then:
    assume {:partition} (_P$1 && $0 != 0bv1) || (_P$2 && $0 != 0bv1);
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon15;

  anon15:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon16;

  anon16:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon17;

  anon17:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon18;

  anon18:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon19;

  anon19:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon20;

  anon20:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon21;

  anon21:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon22;

  anon22:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon23;

  anon23:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon24;

  anon24:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon25;

  anon25:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon26;

  anon26:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon27;

  anon51_Then:
    assume {:partition} (!_P$1 && !_P$2) || (group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && (!_P$1 || !_P$2));
    goto __Disabled;

  __Disabled:
    return;
}



implementation {:inline 1} $bugle_barrier_duplicated_26($0: bv1, $1: bv1, _P$1: bool, _P$2: bool)
{

  __BarrierImpl:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} !((!_P$1 && !_P$2) || (group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && (!_P$1 || !_P$2)));
    goto anon0;

  anon0:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon1;

  anon1:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon2;

  anon2:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon3;

  anon3:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon4;

  anon4:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon5;

  anon5:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon6;

  anon6:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon7;

  anon7:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon8;

  anon8:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon9;

  anon9:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon10;

  anon10:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon11;

  anon11:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon12;

  anon12:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon13;

  anon13:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} !((_P$1 && $0 != 0bv1) || (_P$2 && $0 != 0bv1));
    goto anon27;

  anon27:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_one;
    goto anon28;

  anon28:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult;
    goto anon29;

  anon29:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_one;
    goto anon30;

  anon30:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_one;
    goto anon31;

  anon31:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_pos_one;
    goto anon32;

  anon32:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_mult;
    goto anon33;

  anon33:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_mult;
    goto anon34;

  anon34:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_count_mult;
    goto anon35;

  anon35:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_count_mult;
    goto anon36;

  anon36:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult;
    goto anon37;

  anon37:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum;
    goto anon38;

  anon38:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} !(group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _P$1 && _P$2 && ($1 != 0bv1 || $1 != 0bv1));
    goto anon50;

  anon50:
    havoc _TRACKING;
    return;

  anon53_Then:
    assume {:partition} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _P$1 && _P$2 && ($1 != 0bv1 || $1 != 0bv1);
    havoc $$g_num_one;
    goto anon40;

  anon40:
    havoc $$g_num_blocks_mult;
    goto anon41;

  anon41:
    havoc $$g_left_one;
    goto anon42;

  anon42:
    havoc $$g_right_one;
    goto anon43;

  anon43:
    havoc $$g_pos_one;
    goto anon44;

  anon44:
    havoc $$g_left_mult;
    goto anon45;

  anon45:
    havoc $$g_right_mult;
    goto anon46;

  anon46:
    havoc $$g_left_count_mult;
    goto anon47;

  anon47:
    havoc $$g_right_count_mult;
    goto anon48;

  anon48:
    havoc $$g_blocks_mult;
    goto anon49;

  anon49:
    havoc $$g_blocks_mult_sum;
    goto anon50;

  anon52_Then:
    assume {:partition} (_P$1 && $0 != 0bv1) || (_P$2 && $0 != 0bv1);
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon15;

  anon15:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon16;

  anon16:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon17;

  anon17:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon18;

  anon18:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon19;

  anon19:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon20;

  anon20:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon21;

  anon21:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon22;

  anon22:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon23;

  anon23:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon24;

  anon24:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon25;

  anon25:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon26;

  anon26:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon27;

  anon51_Then:
    assume {:partition} (!_P$1 && !_P$2) || (group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && (!_P$1 || !_P$2));
    goto __Disabled;

  __Disabled:
    return;
}



implementation {:inline 1} $bugle_barrier_duplicated_27($0: bv1, $1: bv1, _P$1: bool, _P$2: bool)
{

  __BarrierImpl:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} !((!_P$1 && !_P$2) || (group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && (!_P$1 || !_P$2)));
    goto anon0;

  anon0:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon1;

  anon1:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon2;

  anon2:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon3;

  anon3:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon4;

  anon4:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon5;

  anon5:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon6;

  anon6:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon7;

  anon7:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon8;

  anon8:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon9;

  anon9:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon10;

  anon10:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon11;

  anon11:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon12;

  anon12:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon13;

  anon13:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} !((_P$1 && $0 != 0bv1) || (_P$2 && $0 != 0bv1));
    goto anon27;

  anon27:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_one;
    goto anon28;

  anon28:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult;
    goto anon29;

  anon29:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_one;
    goto anon30;

  anon30:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_one;
    goto anon31;

  anon31:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_pos_one;
    goto anon32;

  anon32:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_mult;
    goto anon33;

  anon33:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_mult;
    goto anon34;

  anon34:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_count_mult;
    goto anon35;

  anon35:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_count_mult;
    goto anon36;

  anon36:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult;
    goto anon37;

  anon37:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum;
    goto anon38;

  anon38:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} !(group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _P$1 && _P$2 && ($1 != 0bv1 || $1 != 0bv1));
    goto anon50;

  anon50:
    havoc _TRACKING;
    return;

  anon53_Then:
    assume {:partition} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _P$1 && _P$2 && ($1 != 0bv1 || $1 != 0bv1);
    havoc $$g_num_one;
    goto anon40;

  anon40:
    havoc $$g_num_blocks_mult;
    goto anon41;

  anon41:
    havoc $$g_left_one;
    goto anon42;

  anon42:
    havoc $$g_right_one;
    goto anon43;

  anon43:
    havoc $$g_pos_one;
    goto anon44;

  anon44:
    havoc $$g_left_mult;
    goto anon45;

  anon45:
    havoc $$g_right_mult;
    goto anon46;

  anon46:
    havoc $$g_left_count_mult;
    goto anon47;

  anon47:
    havoc $$g_right_count_mult;
    goto anon48;

  anon48:
    havoc $$g_blocks_mult;
    goto anon49;

  anon49:
    havoc $$g_blocks_mult_sum;
    goto anon50;

  anon52_Then:
    assume {:partition} (_P$1 && $0 != 0bv1) || (_P$2 && $0 != 0bv1);
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon15;

  anon15:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon16;

  anon16:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon17;

  anon17:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon18;

  anon18:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon19;

  anon19:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon20;

  anon20:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon21;

  anon21:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon22;

  anon22:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon23;

  anon23:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon24;

  anon24:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon25;

  anon25:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon26;

  anon26:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon27;

  anon51_Then:
    assume {:partition} (!_P$1 && !_P$2) || (group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && (!_P$1 || !_P$2));
    goto __Disabled;

  __Disabled:
    return;
}



implementation {:inline 1} $bugle_barrier_duplicated_28($0: bv1, $1: bv1, _P$1: bool, _P$2: bool)
{

  __BarrierImpl:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} !((!_P$1 && !_P$2) || (group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && (!_P$1 || !_P$2)));
    goto anon0;

  anon0:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon1;

  anon1:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon2;

  anon2:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon3;

  anon3:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon4;

  anon4:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon5;

  anon5:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon6;

  anon6:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon7;

  anon7:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon8;

  anon8:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon9;

  anon9:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon10;

  anon10:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon11;

  anon11:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon12;

  anon12:
    assume _P$1 && $0 != 0bv1 ==> !_READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume _P$1 && $0 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    assume _P$1 && $0 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon13;

  anon13:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} !((_P$1 && $0 != 0bv1) || (_P$2 && $0 != 0bv1));
    goto anon27;

  anon27:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_one;
    goto anon28;

  anon28:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_num_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult;
    goto anon29;

  anon29:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_one;
    goto anon30;

  anon30:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_one;
    goto anon31;

  anon31:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_pos_one;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_pos_one;
    goto anon32;

  anon32:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_mult;
    goto anon33;

  anon33:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_mult;
    goto anon34;

  anon34:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_left_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_left_count_mult;
    goto anon35;

  anon35:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_right_count_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_right_count_mult;
    goto anon36;

  anon36:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult;
    goto anon37;

  anon37:
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_READ_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_WRITE_HAS_OCCURRED_$$g_blocks_mult_sum;
    assume group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> _P$1 && $1 != 0bv1 ==> !_ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum;
    goto anon38;

  anon38:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} !(group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _P$1 && _P$2 && ($1 != 0bv1 || $1 != 0bv1));
    goto anon50;

  anon50:
    havoc _TRACKING;
    return;

  anon53_Then:
    assume {:partition} group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _P$1 && _P$2 && ($1 != 0bv1 || $1 != 0bv1);
    havoc $$g_num_one;
    goto anon40;

  anon40:
    havoc $$g_num_blocks_mult;
    goto anon41;

  anon41:
    havoc $$g_left_one;
    goto anon42;

  anon42:
    havoc $$g_right_one;
    goto anon43;

  anon43:
    havoc $$g_pos_one;
    goto anon44;

  anon44:
    havoc $$g_left_mult;
    goto anon45;

  anon45:
    havoc $$g_right_mult;
    goto anon46;

  anon46:
    havoc $$g_left_count_mult;
    goto anon47;

  anon47:
    havoc $$g_right_count_mult;
    goto anon48;

  anon48:
    havoc $$g_blocks_mult;
    goto anon49;

  anon49:
    havoc $$g_blocks_mult_sum;
    goto anon50;

  anon52_Then:
    assume {:partition} (_P$1 && $0 != 0bv1) || (_P$2 && $0 != 0bv1);
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list;
    goto anon15;

  anon15:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left;
    goto anon16;

  anon16:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right;
    goto anon17;

  anon17:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count;
    goto anon18;

  anon18:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count;
    goto anon19;

  anon19:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk;
    goto anon20;

  anon20:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active;
    goto anon21;

  anon21:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction;
    goto anon22;

  anon22:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged;
    goto anon23;

  anon23:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper;
    goto anon24;

  anon24:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult;
    goto anon25;

  anon25:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda;
    goto anon26;

  anon26:
    havoc $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult;
    goto anon27;

  anon51_Then:
    assume {:partition} (!_P$1 && !_P$2) || (group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && (!_P$1 || !_P$2));
    goto __Disabled;

  __Disabled:
    return;
}



function {:bvbuiltin "bvslt"} BV32_SLT(bv32, bv32) : bool;

const {:existential true} _b100: bool;

const {:existential true} _b101: bool;

const {:existential true} _b102: bool;

const {:existential true} _b103: bool;

const {:existential true} _b104: bool;

const {:existential true} _b105: bool;

const {:existential true} _b106: bool;

const {:existential true} _b107: bool;

const {:existential true} _b108: bool;

const {:existential true} _b109: bool;

const {:existential true} _b110: bool;

const {:existential true} _b111: bool;

const {:existential true} _b112: bool;

const {:existential true} _b113: bool;

const {:existential true} _b114: bool;

const {:existential true} _b115: bool;

const {:existential true} _b116: bool;

const {:existential true} _b117: bool;

const {:existential true} _b118: bool;

const {:existential true} _b119: bool;

const {:existential true} _b120: bool;

const {:existential true} _b121: bool;

const {:existential true} _b122: bool;

const {:existential true} _b123: bool;

const {:existential true} _b124: bool;

const {:existential true} _b125: bool;

const {:existential true} _b126: bool;

const {:existential true} _b127: bool;

const {:existential true} _b128: bool;

const {:existential true} _b129: bool;

const {:existential true} _b130: bool;

const {:existential true} _b131: bool;

const {:existential true} _b132: bool;

const {:existential true} _b133: bool;

const {:existential true} _b134: bool;

const {:existential true} _b135: bool;

const {:existential true} _b136: bool;

const {:existential true} _b137: bool;

const {:existential true} _b138: bool;

const {:existential true} _b139: bool;

const {:existential true} _b140: bool;

const {:existential true} _b141: bool;

const {:existential true} _b142: bool;

const {:existential true} _b143: bool;

const {:existential true} _b144: bool;

const {:existential true} _b145: bool;

const {:existential true} _b146: bool;

const {:existential true} _b147: bool;

const {:existential true} _b148: bool;

const {:existential true} _b149: bool;

const {:existential true} _b150: bool;

const {:existential true} _b151: bool;

const {:existential true} _b152: bool;

const {:existential true} _b153: bool;

const {:existential true} _b154: bool;

const {:existential true} _b155: bool;

const {:existential true} _b156: bool;

const {:existential true} _b157: bool;

const {:existential true} _b158: bool;

const {:existential true} _b159: bool;

const {:existential true} _b160: bool;

const {:existential true} _b161: bool;

const {:existential true} _b162: bool;

const {:existential true} _b163: bool;

const {:existential true} _b164: bool;

const {:existential true} _b165: bool;

const {:existential true} _b166: bool;

const {:existential true} _b167: bool;

const {:existential true} _b168: bool;

const {:existential true} _b169: bool;

const {:existential true} _b170: bool;

const {:existential true} _b171: bool;

const {:existential true} _b172: bool;

const {:existential true} _b173: bool;

const {:existential true} _b174: bool;

const {:existential true} _b175: bool;

const {:existential true} _b176: bool;

const {:existential true} _b177: bool;

const {:existential true} _b178: bool;

const {:existential true} _b179: bool;

const {:existential true} _b180: bool;

const {:existential true} _b181: bool;

const {:existential true} _b182: bool;

const {:existential true} _b183: bool;

const {:existential true} _b184: bool;

const {:existential true} _b185: bool;

const {:existential true} _b186: bool;

const {:existential true} _b187: bool;

const {:existential true} _b188: bool;

const {:existential true} _b189: bool;

const {:existential true} _b190: bool;

const {:existential true} _b191: bool;

const {:existential true} _b192: bool;

const {:existential true} _b193: bool;

const {:existential true} _b194: bool;

const {:existential true} _b195: bool;

const {:existential true} _b196: bool;

const {:existential true} _b197: bool;

const {:existential true} _b198: bool;

const {:existential true} _b199: bool;

const {:existential true} _b200: bool;

const {:existential true} _b201: bool;

const {:existential true} _b202: bool;

const {:existential true} _b203: bool;

const {:existential true} _b204: bool;

const {:existential true} _b205: bool;

const {:existential true} _b206: bool;

const {:existential true} _b207: bool;

const {:existential true} _b208: bool;

const {:existential true} _b209: bool;

const {:existential true} _b210: bool;

const {:existential true} _b211: bool;

const {:existential true} _b212: bool;

const {:existential true} _b213: bool;

const {:existential true} _b214: bool;

const {:existential true} _b215: bool;

const {:existential true} _b216: bool;

const {:existential true} _b217: bool;

const {:existential true} _b218: bool;

const {:existential true} _b219: bool;

const {:existential true} _b220: bool;

const {:existential true} _b221: bool;

const {:existential true} _b222: bool;

const {:existential true} _b223: bool;

const {:existential true} _b224: bool;

const {:existential true} _b225: bool;

const {:existential true} _b226: bool;

const {:existential true} _b227: bool;

const {:existential true} _b228: bool;

const {:existential true} _b229: bool;

const {:existential true} _b230: bool;

const {:existential true} _b231: bool;

const {:existential true} _b232: bool;

const {:existential true} _b233: bool;

const {:existential true} _b234: bool;

const {:existential true} _b235: bool;

const {:existential true} _b236: bool;

const {:existential true} _b237: bool;

const {:existential true} _b238: bool;

const {:existential true} _b239: bool;

const {:existential true} _b240: bool;

const {:existential true} _b241: bool;

const {:existential true} _b242: bool;

const {:existential true} _b243: bool;

const {:existential true} _b244: bool;

const {:existential true} _b245: bool;

const {:existential true} _b246: bool;

const {:existential true} _b247: bool;

const {:existential true} _b248: bool;

const {:existential true} _b249: bool;

const {:existential true} _b250: bool;

const {:existential true} _b251: bool;

const {:existential true} _b252: bool;

const {:existential true} _b253: bool;

const {:existential true} _b254: bool;

const {:existential true} _b255: bool;

const {:existential true} _b256: bool;

const {:existential true} _b257: bool;

const {:existential true} _b258: bool;

const {:existential true} _b259: bool;

const {:existential true} _b260: bool;

const {:existential true} _b261: bool;

const {:existential true} _b262: bool;

const {:existential true} _b263: bool;

const {:existential true} _b264: bool;

const {:existential true} _b265: bool;

const {:existential true} _b266: bool;

const {:existential true} _b267: bool;

const {:existential true} _b268: bool;

const {:existential true} _b269: bool;

const {:existential true} _b270: bool;

const {:existential true} _b271: bool;

const {:existential true} _b272: bool;

const {:existential true} _b273: bool;

const {:existential true} _b274: bool;

const {:existential true} _b275: bool;

const {:existential true} _b276: bool;

const {:existential true} _b277: bool;

const {:existential true} _b278: bool;

const {:existential true} _b279: bool;

const {:existential true} _b280: bool;

const {:existential true} _b281: bool;

const {:existential true} _b282: bool;

const {:existential true} _b283: bool;

const {:existential true} _b284: bool;

const {:existential true} _b285: bool;

const {:existential true} _b286: bool;

const {:existential true} _b287: bool;

const {:existential true} _b288: bool;

const {:existential true} _b289: bool;

const {:existential true} _b290: bool;

const {:existential true} _b291: bool;

const {:existential true} _b292: bool;

const {:existential true} _b293: bool;

const {:existential true} _b294: bool;

const {:existential true} _b295: bool;

const {:existential true} _b296: bool;

const {:existential true} _b297: bool;

const {:existential true} _b298: bool;

const {:existential true} _b299: bool;

const {:existential true} _b300: bool;

const {:existential true} _b301: bool;

const {:existential true} _b302: bool;

const {:existential true} _b303: bool;

const {:existential true} _b304: bool;

const {:existential true} _b305: bool;

const {:existential true} _b306: bool;

const {:existential true} _b307: bool;

const {:existential true} _b308: bool;

const {:existential true} _b309: bool;

const {:existential true} _b310: bool;

const {:existential true} _b311: bool;

const {:existential true} _b312: bool;

const {:existential true} _b313: bool;

const {:existential true} _b314: bool;

const {:existential true} _b315: bool;

const {:existential true} _b316: bool;

const {:existential true} _b317: bool;

const {:existential true} _b318: bool;

const {:existential true} _b319: bool;

const {:existential true} _b320: bool;

const {:existential true} _b321: bool;

const {:existential true} _b322: bool;

const {:existential true} _b323: bool;

const {:existential true} _b324: bool;

const {:existential true} _b325: bool;

const {:existential true} _b326: bool;

const {:existential true} _b327: bool;

const {:existential true} _b328: bool;

const {:existential true} _b329: bool;

const {:existential true} _b330: bool;

const {:existential true} _b331: bool;

const {:existential true} _b332: bool;

const {:existential true} _b333: bool;

const {:existential true} _b334: bool;

const {:existential true} _b335: bool;

const {:existential true} _b336: bool;

const {:existential true} _b337: bool;

function {:bvbuiltin "bvsdiv"} BV32_DIV(bv32, bv32) : bv32;

const {:existential true} _b338: bool;

const {:existential true} _b339: bool;

const {:existential true} _b340: bool;

const {:existential true} _b341: bool;

const {:existential true} _b342: bool;

const {:existential true} _b343: bool;

const {:existential true} _b344: bool;

const {:existential true} _b345: bool;

const {:existential true} _b346: bool;

const {:existential true} _b347: bool;

const {:existential true} _b348: bool;

const {:existential true} _b349: bool;

const {:existential true} _b350: bool;

const {:existential true} _b351: bool;

const {:existential true} _b352: bool;

const {:existential true} _b353: bool;

const {:existential true} _b354: bool;

const {:existential true} _b355: bool;

const {:existential true} _b356: bool;

const {:existential true} _b357: bool;

const {:existential true} _b358: bool;

const {:existential true} _b359: bool;

const {:existential true} _b360: bool;

const {:existential true} _b361: bool;

const {:existential true} _b362: bool;

const {:existential true} _b363: bool;

const {:existential true} _b364: bool;

const {:existential true} _b365: bool;

const {:existential true} _b366: bool;

const {:existential true} _b367: bool;

const {:existential true} _b368: bool;

const {:existential true} _b369: bool;

const {:existential true} _b370: bool;

const {:existential true} _b371: bool;

const {:existential true} _b372: bool;

const {:existential true} _b373: bool;

const {:existential true} _b374: bool;

const {:existential true} _b375: bool;

const {:existential true} _b376: bool;

const {:existential true} _b377: bool;

const {:existential true} _b378: bool;

const {:existential true} _b379: bool;

const {:existential true} _b380: bool;

const {:existential true} _b381: bool;

const {:existential true} _b382: bool;

const {:existential true} _b383: bool;

const {:existential true} _b384: bool;

const {:existential true} _b385: bool;

const {:existential true} _b386: bool;

const {:existential true} _b387: bool;

const {:existential true} _b388: bool;

const {:existential true} _b389: bool;

const {:existential true} _b390: bool;

const {:existential true} _b391: bool;

const {:existential true} _b392: bool;

const {:existential true} _b393: bool;

const {:existential true} _b394: bool;

const {:existential true} _b395: bool;

const {:existential true} _b396: bool;

const {:existential true} _b397: bool;

const {:existential true} _b398: bool;

const {:existential true} _b399: bool;

const {:existential true} _b400: bool;

const {:existential true} _b401: bool;

const {:existential true} _b402: bool;

const {:existential true} _b403: bool;

const {:existential true} _b404: bool;

const {:existential true} _b405: bool;

const {:existential true} _b406: bool;

const {:existential true} _b407: bool;

const {:existential true} _b408: bool;

const {:existential true} _b409: bool;

const {:existential true} _b410: bool;

const {:existential true} _b411: bool;

const {:existential true} _b412: bool;

const {:existential true} _b413: bool;

const {:existential true} _b414: bool;

const {:existential true} _b415: bool;

const {:existential true} _b416: bool;

const {:existential true} _b417: bool;

const {:existential true} _b418: bool;

const {:existential true} _b419: bool;

const {:existential true} _b420: bool;

const {:existential true} _b421: bool;

const {:existential true} _b422: bool;

const {:existential true} _b423: bool;

const {:existential true} _b424: bool;

const {:existential true} _b425: bool;

const {:existential true} _b426: bool;

const {:existential true} _b427: bool;

const {:existential true} _b428: bool;

const {:existential true} _b429: bool;

const {:existential true} _b430: bool;

const {:existential true} _b431: bool;

const {:existential true} _b432: bool;

const {:existential true} _b433: bool;

const {:existential true} _b434: bool;

const {:existential true} _b435: bool;

const {:existential true} _b436: bool;

const {:existential true} _b437: bool;

const {:existential true} _b438: bool;

const {:existential true} _b439: bool;

const {:existential true} _b440: bool;

const {:existential true} _b441: bool;

const {:existential true} _b442: bool;

const {:existential true} _b443: bool;

const {:existential true} _b444: bool;

const {:existential true} _b445: bool;

const {:existential true} _b446: bool;

const {:existential true} _b447: bool;

const {:existential true} _b448: bool;

const {:existential true} _b449: bool;

const {:existential true} _b450: bool;

const {:existential true} _b451: bool;

const {:existential true} _b452: bool;

const {:existential true} _b453: bool;

const {:existential true} _b454: bool;

const {:existential true} _b455: bool;

const {:existential true} _b456: bool;

const {:existential true} _b457: bool;

const {:existential true} _b458: bool;

const {:existential true} _b459: bool;

const {:existential true} _b460: bool;

const {:existential true} _b461: bool;

const {:existential true} _b462: bool;

const {:existential true} _b463: bool;

const {:existential true} _b464: bool;

const {:existential true} _b465: bool;

const {:existential true} _b466: bool;

const {:existential true} _b467: bool;

const {:existential true} _b468: bool;

const {:existential true} _b469: bool;

const {:existential true} _b470: bool;

const {:existential true} _b471: bool;

const {:existential true} _b472: bool;

const {:existential true} _b473: bool;

const {:existential true} _b474: bool;

const {:existential true} _b475: bool;

const {:existential true} _b476: bool;

const {:existential true} _b477: bool;

const {:existential true} _b478: bool;

const {:existential true} _b479: bool;

const {:existential true} _b480: bool;

const {:existential true} _b481: bool;

const {:existential true} _b482: bool;

const {:existential true} _b483: bool;

const {:existential true} _b484: bool;

const {:existential true} _b485: bool;

const {:existential true} _b486: bool;

const {:existential true} _b487: bool;

const {:existential true} _b488: bool;

const {:existential true} _b489: bool;

const {:existential true} _b490: bool;

const {:existential true} _b491: bool;

const {:existential true} _b492: bool;

const {:existential true} _b493: bool;

const {:existential true} _b494: bool;

const {:existential true} _b495: bool;

const {:existential true} _b496: bool;

const {:existential true} _b497: bool;

const {:existential true} _b498: bool;

const {:existential true} _b499: bool;

const {:existential true} _b500: bool;

const {:existential true} _b501: bool;

const {:existential true} _b502: bool;

const {:existential true} _b503: bool;

const {:existential true} _b504: bool;

const {:existential true} _b505: bool;

const {:existential true} _b506: bool;

const {:existential true} _b507: bool;

const {:existential true} _b508: bool;

const {:existential true} _b509: bool;

const {:existential true} _b510: bool;

const {:existential true} _b511: bool;

const {:existential true} _b512: bool;

const {:existential true} _b513: bool;

const {:existential true} _b514: bool;

const {:existential true} _b515: bool;

const {:existential true} _b516: bool;

const {:existential true} _b517: bool;

const {:existential true} _b518: bool;

const {:existential true} _b519: bool;

const {:existential true} _b520: bool;

const {:existential true} _b521: bool;

const {:existential true} _b522: bool;

const {:existential true} _b523: bool;

const {:existential true} _b524: bool;

const {:existential true} _b525: bool;

const {:existential true} _b526: bool;

const {:existential true} _b527: bool;

const {:existential true} _b528: bool;
