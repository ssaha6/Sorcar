type _SIZE_T_TYPE = bv32;

procedure _ATOMIC_OP32(x : [bv32]bv32, y : bv32) returns (z : bv32, A : [bv32]bv32);
procedure _ATOMIC_OP16(x : [bv32]bv16, y : bv32) returns (z : bv16, A : [bv32]bv16);
var {:source_name "g_d"} {:global} $$g_d : [bv32]bv32;
axiom {:array_info "$$g_d"} {:global} {:elem_width 32} {:source_name "g_d"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$g_d : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$g_d : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$g_d : bool;

var {:source_name "g_s"} {:global} $$g_s : [bv32]bv32;
axiom {:array_info "$$g_s"} {:global} {:elem_width 32} {:source_name "g_s"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$g_s : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$g_s : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$g_s : bool;

var {:source_name "g_num_one"} {:global} $$g_num_one : [bv32]bv32;
axiom {:array_info "$$g_num_one"} {:global} {:elem_width 32} {:source_name "g_num_one"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$g_num_one : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$g_num_one : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$g_num_one : bool;

var {:source_name "g_num_blocks_mult"} {:global} $$g_num_blocks_mult : [bv32]bv32;
axiom {:array_info "$$g_num_blocks_mult"} {:global} {:elem_width 32} {:source_name "g_num_blocks_mult"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$g_num_blocks_mult : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$g_num_blocks_mult : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$g_num_blocks_mult : bool;

var {:source_name "g_left_one"} {:global} $$g_left_one : [bv32]bv32;
axiom {:array_info "$$g_left_one"} {:global} {:elem_width 32} {:source_name "g_left_one"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$g_left_one : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$g_left_one : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$g_left_one : bool;

var {:source_name "g_right_one"} {:global} $$g_right_one : [bv32]bv32;
axiom {:array_info "$$g_right_one"} {:global} {:elem_width 32} {:source_name "g_right_one"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$g_right_one : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$g_right_one : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$g_right_one : bool;

var {:source_name "g_pos_one"} {:global} $$g_pos_one : [bv32]bv32;
axiom {:array_info "$$g_pos_one"} {:global} {:elem_width 32} {:source_name "g_pos_one"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$g_pos_one : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$g_pos_one : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$g_pos_one : bool;

var {:source_name "g_left_mult"} {:global} $$g_left_mult : [bv32]bv32;
axiom {:array_info "$$g_left_mult"} {:global} {:elem_width 32} {:source_name "g_left_mult"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$g_left_mult : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$g_left_mult : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$g_left_mult : bool;

var {:source_name "g_right_mult"} {:global} $$g_right_mult : [bv32]bv32;
axiom {:array_info "$$g_right_mult"} {:global} {:elem_width 32} {:source_name "g_right_mult"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$g_right_mult : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$g_right_mult : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$g_right_mult : bool;

var {:source_name "g_left_count_mult"} {:global} $$g_left_count_mult : [bv32]bv32;
axiom {:array_info "$$g_left_count_mult"} {:global} {:elem_width 32} {:source_name "g_left_count_mult"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$g_left_count_mult : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$g_left_count_mult : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$g_left_count_mult : bool;

var {:source_name "g_right_count_mult"} {:global} $$g_right_count_mult : [bv32]bv32;
axiom {:array_info "$$g_right_count_mult"} {:global} {:elem_width 32} {:source_name "g_right_count_mult"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$g_right_count_mult : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$g_right_count_mult : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$g_right_count_mult : bool;

var {:source_name "g_blocks_mult"} {:global} $$g_blocks_mult : [bv32]bv32;
axiom {:array_info "$$g_blocks_mult"} {:global} {:elem_width 32} {:source_name "g_blocks_mult"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$g_blocks_mult : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$g_blocks_mult : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$g_blocks_mult : bool;

var {:source_name "g_blocks_mult_sum"} {:global} $$g_blocks_mult_sum : [bv32]bv32;
axiom {:array_info "$$g_blocks_mult_sum"} {:global} {:elem_width 32} {:source_name "g_blocks_mult_sum"} {:source_elem_width 32} {:source_dimensions "*"} true;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$g_blocks_mult_sum : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$g_blocks_mult_sum : bool;
var {:race_checking} {:global} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$g_blocks_mult_sum : bool;

var {:source_name "s_compaction_list"} {:group_shared} $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list : [bv32]bv16;
axiom {:array_info "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list"} {:group_shared} {:elem_width 16} {:source_name "s_compaction_list"} {:source_elem_width 16} {:source_dimensions "513"} true;
var {:race_checking} {:group_shared} {:elem_width 16} {:source_elem_width 16} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list : bool;
var {:race_checking} {:group_shared} {:elem_width 16} {:source_elem_width 16} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list : bool;
var {:race_checking} {:group_shared} {:elem_width 16} {:source_elem_width 16} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list : bool;

var {:source_name "s_left"} {:group_shared} $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left : [bv32]bv32;
axiom {:array_info "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left"} {:group_shared} {:elem_width 32} {:source_name "s_left"} {:source_elem_width 32} {:source_dimensions "513"} true;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left : bool;

var {:source_name "s_right"} {:group_shared} $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right : [bv32]bv32;
axiom {:array_info "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right"} {:group_shared} {:elem_width 32} {:source_name "s_right"} {:source_elem_width 32} {:source_dimensions "513"} true;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right : bool;

var {:source_name "s_left_count"} {:group_shared} $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count : [bv32]bv16;
axiom {:array_info "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count"} {:group_shared} {:elem_width 16} {:source_name "s_left_count"} {:source_elem_width 16} {:source_dimensions "513"} true;
var {:race_checking} {:group_shared} {:elem_width 16} {:source_elem_width 16} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count : bool;
var {:race_checking} {:group_shared} {:elem_width 16} {:source_elem_width 16} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count : bool;
var {:race_checking} {:group_shared} {:elem_width 16} {:source_elem_width 16} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count : bool;

var {:source_name "s_right_count"} {:group_shared} $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count : [bv32]bv16;
axiom {:array_info "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count"} {:group_shared} {:elem_width 16} {:source_name "s_right_count"} {:source_elem_width 16} {:source_dimensions "513"} true;
var {:race_checking} {:group_shared} {:elem_width 16} {:source_elem_width 16} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count : bool;
var {:race_checking} {:group_shared} {:elem_width 16} {:source_elem_width 16} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count : bool;
var {:race_checking} {:group_shared} {:elem_width 16} {:source_elem_width 16} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count : bool;

var {:source_name "compact_second_chunk"} {:group_shared} $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk : [bv32]bv32;
axiom {:array_info "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk"} {:group_shared} {:elem_width 32} {:source_name "compact_second_chunk"} {:source_elem_width 32} {:source_dimensions "1"} true;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk : bool;

var {:source_name "num_threads_active"} {:group_shared} $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active : [bv32]bv32;
axiom {:array_info "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active"} {:group_shared} {:elem_width 32} {:source_name "num_threads_active"} {:source_elem_width 32} {:source_dimensions "1"} true;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active : bool;

var {:source_name "num_threads_compaction"} {:group_shared} $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction : [bv32]bv32;
axiom {:array_info "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction"} {:group_shared} {:elem_width 32} {:source_name "num_threads_compaction"} {:source_elem_width 32} {:source_dimensions "1"} true;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction : bool;

var {:source_name "all_threads_converged"} {:group_shared} $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged : [bv32]bv32;
axiom {:array_info "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged"} {:group_shared} {:elem_width 32} {:source_name "all_threads_converged"} {:source_elem_width 32} {:source_dimensions "1"} true;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged : bool;

var {:source_name "s_cl_helper"} {:group_shared} $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper : [bv32]bv16;
axiom {:array_info "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper"} {:group_shared} {:elem_width 16} {:source_name "s_cl_helper"} {:source_elem_width 16} {:source_dimensions "513"} true;
var {:race_checking} {:group_shared} {:elem_width 16} {:source_elem_width 16} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper : bool;
var {:race_checking} {:group_shared} {:elem_width 16} {:source_elem_width 16} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper : bool;
var {:race_checking} {:group_shared} {:elem_width 16} {:source_elem_width 16} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper : bool;

var {:source_name "num_blocks_mult"} {:group_shared} $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult : [bv32]bv32;
axiom {:array_info "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult"} {:group_shared} {:elem_width 32} {:source_name "num_blocks_mult"} {:source_elem_width 32} {:source_dimensions "1"} true;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult : bool;

var {:source_name "offset_mult_lambda"} {:group_shared} $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda : [bv32]bv32;
axiom {:array_info "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda"} {:group_shared} {:elem_width 32} {:source_name "offset_mult_lambda"} {:source_elem_width 32} {:source_dimensions "1"} true;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda : bool;

var {:source_name "num_mult"} {:group_shared} $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult : [bv32]bv32;
axiom {:array_info "$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult"} {:group_shared} {:elem_width 32} {:source_name "num_mult"} {:source_elem_width 32} {:source_dimensions "1"} true;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _READ_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _WRITE_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult : bool;
var {:race_checking} {:group_shared} {:elem_width 32} {:source_elem_width 32} {:source_dimensions "*"} _ATOMIC_HAS_OCCURRED_$$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult : bool;

const _WATCHED_OFFSET : bv32;
const {:group_size_x} group_size_x : bv32;
const {:group_size_y} group_size_y : bv32;
const {:group_size_z} group_size_z : bv32;
const {:local_id_x} local_id_x : bv32;
const {:num_groups_x} num_groups_x : bv32;
const {:num_groups_y} num_groups_y : bv32;
const {:num_groups_z} num_groups_z : bv32;
function FADD32(bv32, bv32) : bv32;
function FDIV32(bv32, bv32) : bv32;
function FEQ64(bv64, bv64) : bool;
function FLT32(bv32, bv32) : bool;
function FLT64(bv64, bv64) : bool;
function FMUL32(bv32, bv32) : bv32;
function FP32_CONV64(bv32) : bv64;
function FSUB32(bv32, bv32) : bv32;
function FUNO32(bv32, bv32) : bool;
function SI32_TO_FP32(bv32) : bv32;
function {:bvbuiltin "bvadd"} BV32_ADD(bv32, bv32) : bv32;
function {:bvbuiltin "bvand"} BV32_AND(bv32, bv32) : bv32;
function {:bvbuiltin "bvashr"} BV32_ASHR(bv32, bv32) : bv32;
function {:bvbuiltin "bvlshr"} BV32_LSHR(bv32, bv32) : bv32;
function {:bvbuiltin "bvmul"} BV32_MUL(bv32, bv32) : bv32;
function {:bvbuiltin "bvsgt"} BV32_SGT(bv32, bv32) : bool;
function {:bvbuiltin "bvshl"} BV32_SHL(bv32, bv32) : bv32;
function {:bvbuiltin "bvsub"} BV32_SUB(bv32, bv32) : bv32;
function {:bvbuiltin "bvugt"} BV32_UGT(bv32, bv32) : bool;
function {:bvbuiltin "bvule"} BV32_ULE(bv32, bv32) : bool;
function {:bvbuiltin "bvult"} BV32_ULT(bv32, bv32) : bool;
function {:bvbuiltin "bvxor"} BV1_XOR(bv1, bv1) : bv1;
function {:bvbuiltin "zero_extend 15"} BV1_ZEXT16(bv1) : bv16;
function {:bvbuiltin "zero_extend 16"} BV16_ZEXT32(bv16) : bv32;
function {:bvbuiltin "zero_extend 31"} BV1_ZEXT32(bv1) : bv32;
procedure {:source_name "bisectKernelLarge"} {:kernel} $_Z17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_($n:bv32, $lg:bv32, $ug:bv32, $lg_eig_count:bv32, $ug_eig_count:bv32, $epsilon:bv32)
{
  var $is_active_second.0:bv32;
  var $mid.0:bv32;
  var $right_count.0:bv32;
  var $left_count.0:bv32;
  var $right.0:bv32;
  var $left.0:bv32;
  var $mid.2:bv32;
  var $right_count.1:bv32;
  var $left_count.1:bv32;
  var $right.1:bv32;
  var $left.1:bv32;
  var $mid.i.i.0:bv32;
  var $mid.1:bv32;
  var $delta.i.0:bv32;
  var $count.i.0:bv32;
  var $rem.i.0:bv32;
  var $i.i.0:bv32;
  var $delta.i.2:bv32;
  var $count.i.2:bv32;
  var $delta.i.1:bv32;
  var $count.i.1:bv32;
  var $k.i.0:bv32;
  var $cond.i:bv32;
  var $is_active_second.3:bv32;
  var $cond.i.i:bv32;
  var $cond12.i.i:bv64;
  var $mid.i.i.i.0:bv32;
  var $is_active_second.1:bv32;
  var $cond.i.39.i:bv32;
  var $cond12.i.48.i:bv64;
  var $mid.i.i.14.i.0:bv32;
  var $cond.i.96.i:bv32;
  var $cond12.i.105.i:bv64;
  var $mid.i.i.71.i.0:bv32;
  var $is_active_second.2:bv32;
  var $offset.i.0:bv32;
  var $d.i.0:bv32;
  var $offset.i.1:bv32;
  var $d13.i.0:bv32;
  var $retval.i.0:bv32;
  var $right_count_2.0:bv32;
  var $left_count_2.0:bv32;
  var $cond:bv32;
  var $cond79:bv32;
  var $is_one_lambda_2.0:bv32;
  var $offset.i.212.0:bv32;
  var $d.i.213.0:bv32;
  var $offset.i.212.1:bv32;
  var $d62.i.0:bv32;
  var $offset.i.249.0:bv32;
  var $d.i.250.0:bv32;
  var $offset.i.249.1:bv32;
  var $d13.i.253.0:bv32;
  var $c_block_iend.0:bv32;
  var $c_sum_block.0:bv32;
  var $c_block_iend_2.0:bv32;
  var $c_sum_block_2.0:bv32;
  var $offset.i.289.0:bv32;
  var $d.i.290.0:bv32;
  var $offset.i.289.1:bv32;
  var $d20.i.0:bv32;
  var $left_2.0:bv32;
  var $right_2.0:bv32;
  var $cond.i.350:bv32;
  var $ptr_blocking_w.i.0:bv32;
  var $ptr_w_2.i.0:bv32;
  var $ptr_blocking_w_2.i.1:bv32;
  var $cond24.i:bv32;
  var $ptr_blocking_w_2.i.0:bv32;
  var v0:bool;
  var v1:bv32;
  var v3:bv32;
  var v4:bv32;
  var v7:bv16;
  var v11:bv32;
  var v5:bv16;
  var v14:bv32;
  var v10:bv32;
  var v16:bv32;
  var v19:bv32;
  var v20:bv32;
  var v38:bv32;
  var v39:bv32;
  var v26:bv32;
  var v24:bv32;
  var v25:bv32;
  var v28:bv32;
  var v31:bv32;
  var v37:bv32;
  var v41:bv32;
  var v48:bv32;
  var v42:bv32;
  var v47:bv32;
  var v61:bv32;
  var v62:bv32;
  var v56:bv32;
  var v52:bv32;
  var v53:bv32;
  var v55:bv32;
  var v51:bv32;
  var v32:bv16;
  var v33:bv16;
  var v29:bool;
  var v30:bool;
  var v8:bv32;
  var v2:bool;
  var v6:bv32;
  var v13:bool;
  var v12:bool;
  var v9:bool;
  var v17:bool;
  var v15:bool;
  var v18:bool;
  var v23:bool;
  var v21:bool;
  var v22:bool;
  var v27:bv32;
  var v63:bool;
  var v54:bool;
  var v57:bv32;
  var v60:bool;
  var v59:bool;
  var v58:bv64;
  var v67:bool;
  var v70:bv32;
  var v72:bool;
  var v73:bool;
  var v76:bool;
  var v71:bv64;
  var v34:bv16;
  var v35:bool;
  var v36:bool;
  var v40:bool;
  var v45:bool;
  var v43:bv32;
  var v49:bool;
  var v44:bv64;
  var v46:bool;
  var v50:bool;
  var v132:bv16;
  var v133:bv16;
  var v126:bv32;
  var v125:bv32;
  var v131:bv16;
  var v137:bv16;
  var v141:bv16;
  var v134:bv16;
  var v139:bv16;
  var v143:bv16;
  var v135:bv16;
  var v154:bv16;
  var v144:bv16;
  var v152:bv16;
  var v153:bv16;
  var v162:bv16;
  var v161:bv16;
  var v156:bv32;
  var v157:bv32;
  var v155:bv16;
  var v175:bv16;
  var v169:bv16;
  var v176:bv16;
  var v168:bv16;
  var v171:bv16;
  var v173:bv16;
  var v172:bv16;
  var v68:bv32;
  var v66:bv32;
  var v69:bv32;
  var v75:bv32;
  var v64:bv32;
  var v74:bv32;
  var v65:bv32;
  var v79:bv32;
  var v83:bv16;
  var v77:bv32;
  var v84:bv16;
  var v90:bv16;
  var v91:bv16;
  var v92:bv32;
  var v95:bv16;
  var v100:bv32;
  var v106:bv32;
  var v101:bv32;
  var v104:bv32;
  var v99:bv16;
  var v109:bv16;
  var v98:bv32;
  var v105:bv64;
  var v111:bv32;
  var v113:bv16;
  var v110:bv16;
  var v114:bv16;
  var v119:bv32;
  var v258:bv32;
  var v257:bv32;
  var v80:bool;
  var v78:bool;
  var v81:bool;
  var v85:bool;
  var v82:bv32;
  var v88:bv32;
  var v87:bool;
  var v89:bv32;
  var v86:bv32;
  var v93:bool;
  var v96:bv32;
  var v94:bool;
  var v97:bool;
  var v102:bool;
  var v103:bv64;
  var v118:bool;
  var v117:bv32;
  var v123:bool;
  var v120:bool;
  var v121:bv32;
  var v122:bv32;
  var v124:bool;
  var v130:bv32;
  var v129:bv32;
  var v127:bool;
  var v128:bool;
  var v107:bool;
  var v108:bv32;
  var v112:bool;
  var v116:bv32;
  var v115:bool;
  var v158:bool;
  var v159:bool;
  var v160:bv32;
  var v167:bv32;
  var v163:bool;
  var v165:bool;
  var v166:bv32;
  var v164:bv32;
  var v170:bool;
  var v174:bool;
  var v178:bool;
  var v186:bool;
  var v183:bool;
  var v185:bool;
  var v187:bv32;
  var v190:bool;
  var v193:bv32;
  var v194:bv32;
  var v192:bool;
  var v191:bv32;
  var v136:bool;
  var v140:bool;
  var v138:bool;
  var v145:bv32;
  var v142:bool;
  var v146:bool;
  var v147:bool;
  var v148:bv32;
  var v149:bool;
  var v151:bv32;
  var v150:bv32;
  var v224:bv16;
  var v221:bv16;
  var v222:bv32;
  var v233:bv32;
  var v230:bv32;
  var v238:bv32;
  var v235:bv32;
  var v237:bv16;
  var v232:bv32;
  var v236:bv32;
  var v231:bv32;
  var v229:bv32;
  var v241:bv16;
  var v246:bv16;
  var v244:bv32;
  var v247:bv32;
  var v249:bv16;
  var v250:bv16;
  var v248:bv32;
  var v239:bv32;
  var v245:bv32;
  var v240:bv16;
  var v253:bv16;
  var v252:bv16;
  var v256:bv16;
  var v255:bv16;
  var v179:bv16;
  var v181:bv32;
  var v177:bv16;
  var v184:bv16;
  var v182:bv16;
  var v180:bv16;
  var v188:bv16;
  var v195:bv16;
  var v189:bv16;
  var v196:bv16;
  var v200:bv32;
  var v202:bv32;
  var v199:bv16;
  var v204:bv32;
  var v198:bv32;
  var v205:bv32;
  var v201:bv16;
  var v203:bv16;
  var v215:bv32;
  var v207:bv32;
  var v206:bv32;
  var v208:bv32;
  var v210:bv32;
  var v211:bv32;
  var v213:bv16;
  var v214:bv16;
  var v220:bv16;
  var v217:bv16;
  var v260:bv32;
  var v259:bv32;
  var v197:bool;
  var v209:bool;
  var v212:bool;
  var v216:bool;
  var v223:bool;
  var v219:bool;
  var v218:bool;
  var v225:bool;
  var v226:bool;
  var v227:bool;
  var v234:bool;
  var v228:bool;
  var v242:bool;
  var v243:bool;
  var v251:bool;
  var v254:bool;
$entry:
  assert {:block_sourceloc} {:sourceloc_num 0} true;
  assert {:sourceloc} {:sourceloc_num 1} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[local_id_x] := 0bv16;
  assert {:sourceloc} {:sourceloc_num 2} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[local_id_x] := 0bv32;
  assert {:sourceloc} {:sourceloc_num 3} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[local_id_x] := 0bv32;
  assert {:sourceloc} {:sourceloc_num 4} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[local_id_x] := 0bv16;
  assert {:sourceloc} {:sourceloc_num 5} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[local_id_x] := 0bv16;
  call {:sourceloc_num 6} $bugle_barrier(1bv1, 1bv1);
  v0 := 0bv32 == local_id_x;
  goto $truebb, $falsebb;
$if.then:
  assert {:block_sourceloc} {:sourceloc_num 7} true;
  assert {:sourceloc} {:sourceloc_num 8} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[0bv32] := $lg;
  assert {:sourceloc} {:sourceloc_num 9} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[0bv32] := $ug;
  assert {:sourceloc} {:sourceloc_num 10} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[0bv32] := $lg_eig_count[16:0];
  assert {:sourceloc} {:sourceloc_num 11} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[0bv32] := $ug_eig_count[16:0];
  assert {:sourceloc} {:sourceloc_num 12} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk[0bv32] := 0bv32;
  assert {:sourceloc} {:sourceloc_num 13} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[0bv32] := 1bv32;
  assert {:sourceloc} {:sourceloc_num 14} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction[0bv32] := 1bv32;
  assert {:sourceloc} {:sourceloc_num 15} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged[0bv32] := 1bv32;
  goto $if.end;
$if.end:
  assert {:block_sourceloc} {:sourceloc_num 16} true;
  call {:sourceloc_num 17} $bugle_barrier(1bv1, 1bv1);
  $is_active_second.0, $mid.0, $right_count.0, $left_count.0, $right.0, $left.0 := 0bv32, 0bv32, 0bv32, 0bv32, 0bv32, 0bv32;
  goto $while.body;
$while.body:
  assert {:block_sourceloc} {:sourceloc_num 18} true;
  assert {:sourceloc} {:sourceloc_num 19} true;
  v1 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[0bv32];
  v2 := BV32_ULT(local_id_x, v1);
  goto $truebb0, $falsebb0;
$if.then.i:
  assert {:block_sourceloc} {:sourceloc_num 20} true;
  assert {:sourceloc} {:sourceloc_num 21} true;
  v3 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[local_id_x];
  assert {:sourceloc} {:sourceloc_num 22} true;
  v4 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[local_id_x];
  assert {:sourceloc} {:sourceloc_num 23} true;
  v5 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[local_id_x];
  v6 := BV16_ZEXT32(v5);
  assert {:sourceloc} {:sourceloc_num 24} true;
  v7 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[local_id_x];
  v8 := BV16_ZEXT32(v7);
  v9 := (FLT32(v4, v3) || FLT32(v3, v4)) || FUNO32(v3, v4);
  goto $truebb1, $falsebb1;
$if.then.6.i:
  assert {:block_sourceloc} {:sourceloc_num 25} true;
  call {:sourceloc_num 26}   v10 := $_Z6sign_ff(v3);
  call {:sourceloc_num 27}   v11 := $_Z6sign_ff(v4);
  v12 := v10 == v11;
  goto $truebb2, $falsebb2;
$if.then.i.i:
  assert {:block_sourceloc} {:sourceloc_num 28} true;
  $mid.i.i.0 := FADD32(v3, FMUL32(FSUB32(v4, v3), 1056964608bv32));
  goto $_ZL15computeMidpointff.exit.i;
$if.else.i.i:
  assert {:block_sourceloc} {:sourceloc_num 29} true;
  $mid.i.i.0 := FMUL32(FADD32(v3, v4), 1056964608bv32);
  goto $_ZL15computeMidpointff.exit.i;
$_ZL15computeMidpointff.exit.i:
  assert {:block_sourceloc} {:sourceloc_num 30} true;
  assert {:sourceloc} {:sourceloc_num 31} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged[0bv32] := 0bv32;
  $mid.1 := $mid.i.i.0;
  goto $if.end.9.i;
$if.else.i:
  assert {:block_sourceloc} {:sourceloc_num 32} true;
  v13 := BV32_UGT(BV32_SUB(v8, v6), 1bv32);
  goto $truebb3, $falsebb3;
$if.then.8.i:
  assert {:block_sourceloc} {:sourceloc_num 33} true;
  assert {:sourceloc} {:sourceloc_num 34} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged[0bv32] := 0bv32;
  goto $if.end.i;
$if.end.i:
  assert {:block_sourceloc} {:sourceloc_num 35} true;
  $mid.1 := $mid.0;
  goto $if.end.9.i;
$if.end.9.i:
  assert {:block_sourceloc} {:sourceloc_num 36} true;
  $mid.2, $right_count.1, $left_count.1, $right.1, $left.1 := $mid.1, v8, v6, v4, v3;
  goto $_ZL23subdivideActiveIntervalItEvjPfS0_PT_S2_jRfS3_RjS4_S3_S4_.exit;
$_ZL23subdivideActiveIntervalItEvjPfS0_PT_S2_jRfS3_RjS4_S3_S4_.exit:
  assert {:block_sourceloc} {:sourceloc_num 37} true;
  call {:sourceloc_num 38} $bugle_barrier(1bv1, 1bv1);
  assert {:sourceloc} {:sourceloc_num 39} true;
  v14 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged[0bv32];
  v15 := 1bv32 == v14;
  goto $truebb4, $falsebb4;
$if.then.7:
  assert {:block_sourceloc} {:sourceloc_num 40} true;
  goto $while.end;
$if.end.8:
  assert {:block_sourceloc} {:sourceloc_num 41} true;
  assert {:sourceloc} {:sourceloc_num 42} true;
  v16 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[0bv32];
  $delta.i.0, $count.i.0, $rem.i.0, $i.i.0 := 1065353216bv32, 0bv32, $n, 0bv32;
  goto $for.cond.i;
$for.cond.i:
  assert {:block_sourceloc} {:sourceloc_num 43} true;
  v17 := BV32_ULT($i.i.0, $n);
  goto $truebb5, $falsebb5;
$for.body.i:
  assert {:block_sourceloc} {:sourceloc_num 44} true;
  call {:sourceloc_num 45} $bugle_barrier(1bv1, 1bv1);
  v18 := BV32_ULT(BV32_ADD($i.i.0, local_id_x), $n);
  goto $truebb6, $falsebb6;
$if.then.i.132:
  assert {:block_sourceloc} {:sourceloc_num 46} true;
  assert {:sourceloc} {:sourceloc_num 47} true;
  v19 := $$g_d[BV32_ADD($i.i.0, local_id_x)];
  assert {:sourceloc} {:sourceloc_num 48} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[local_id_x] := v19;
  assert {:sourceloc} {:sourceloc_num 49} true;
  v20 := $$g_s[BV32_ADD(BV32_ADD($i.i.0, local_id_x), 4294967295bv32)];
  assert {:sourceloc} {:sourceloc_num 50} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[local_id_x] := v20;
  goto $if.end.i.134;
$if.end.i.134:
  assert {:block_sourceloc} {:sourceloc_num 51} true;
  call {:sourceloc_num 52} $bugle_barrier(1bv1, 1bv1);
  v21 := BV32_ULT(local_id_x, v16);
  goto $truebb7, $falsebb7;
$if.then.8.i.135:
  assert {:block_sourceloc} {:sourceloc_num 53} true;
  $delta.i.1, $count.i.1, $k.i.0 := $delta.i.0, $count.i.0, 0bv32;
  goto $for.cond.9.i;
$for.cond.9.i:
  assert {:block_sourceloc} {:sourceloc_num 54} true;
  v22 := BV32_ULT($rem.i.0, group_size_x);
  goto $truebb8, $falsebb8;
$cond.true.i:
  assert {:block_sourceloc} {:sourceloc_num 55} true;
  $cond.i := $rem.i.0;
  goto $cond.end.i;
$cond.false.i:
  assert {:block_sourceloc} {:sourceloc_num 56} true;
  $cond.i := group_size_x;
  goto $cond.end.i;
$cond.end.i:
  assert {:block_sourceloc} {:sourceloc_num 57} true;
  v23 := BV32_ULT($k.i.0, $cond.i);
  goto $truebb9, $falsebb9;
$for.body.12.i:
  assert {:block_sourceloc} {:sourceloc_num 58} true;
  assert {:sourceloc} {:sourceloc_num 59} true;
  v24 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[$k.i.0];
  assert {:sourceloc} {:sourceloc_num 60} true;
  v25 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[$k.i.0];
  assert {:sourceloc} {:sourceloc_num 61} true;
  v26 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[$k.i.0];
  v27 := FSUB32(FSUB32(v24, $mid.2), FDIV32(FMUL32(v25, v26), $delta.i.1));
  $delta.i.1, $count.i.1, $k.i.0 := v27, BV32_ADD($count.i.1, (if FLT32(v27, 0bv32) then 1bv32 else 0bv32)), BV32_ADD($k.i.0, 1bv32);
  goto $for.cond.9.i;
$for.end.i:
  assert {:block_sourceloc} {:sourceloc_num 62} true;
  $delta.i.2, $count.i.2 := $delta.i.1, $count.i.1;
  goto $if.end.20.i;
$if.end.20.i:
  assert {:block_sourceloc} {:sourceloc_num 63} true;
  $delta.i.0, $count.i.0, $rem.i.0, $i.i.0 := $delta.i.2, $count.i.2, BV32_SUB($rem.i.0, group_size_x), BV32_ADD($i.i.0, group_size_x);
  goto $for.cond.i;
$_ZL31computeNumSmallerEigenvalsLargePfS_jfjjS_S_j.exit:
  assert {:block_sourceloc} {:sourceloc_num 64} true;
  call {:sourceloc_num 65} $bugle_barrier(1bv1, 1bv1);
  assert {:sourceloc} {:sourceloc_num 66} true;
  v28 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[0bv32];
  v29 := BV32_ULT(local_id_x, v28);
  goto $truebb10, $falsebb10;
$if.then.12:
  assert {:block_sourceloc} {:sourceloc_num 67} true;
  v30 := (FLT32($right.1, $left.1) || FLT32($left.1, $right.1)) || FUNO32($left.1, $right.1);
  goto $truebb11, $falsebb11;
$if.then.14:
  assert {:block_sourceloc} {:sourceloc_num 68} true;
  assert {:sourceloc} {:sourceloc_num 69} true;
  v31 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[0bv32];
  v32 := $left_count.1[16:0];
  v33 := $count.i.0[16:0];
  v34 := $right_count.1[16:0];
  v35 := BV16_ZEXT32(v32) != BV16_ZEXT32(v33);
  goto $truebb12, $falsebb12;
$land.lhs.true.i:
  assert {:block_sourceloc} {:sourceloc_num 70} true;
  v36 := BV16_ZEXT32(v33) != BV16_ZEXT32(v34);
  goto $truebb13, $falsebb13;
$if.then.i.154:
  assert {:block_sourceloc} {:sourceloc_num 71} true;
  assert {:sourceloc} {:sourceloc_num 72} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[local_id_x] := v32;
  assert {:sourceloc} {:sourceloc_num 73} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[local_id_x] := v33;
  call {:sourceloc_num 74}   v37 := $abs(FSUB32($mid.2, $left.1));
  call {:sourceloc_num 75}   v38 := $abs($left.1);
  call {:sourceloc_num 76}   v39 := $abs($mid.2);
  v40 := FLT32(v38, v39);
  goto $truebb14, $falsebb14;
$cond.true.i.i:
  assert {:block_sourceloc} {:sourceloc_num 77} true;
  call {:sourceloc_num 78}   v41 := $abs($mid.2);
  $cond.i.i := v41;
  goto $cond.end.i.i;
$cond.false.i.i:
  assert {:block_sourceloc} {:sourceloc_num 79} true;
  call {:sourceloc_num 80}   v42 := $abs($left.1);
  $cond.i.i := v42;
  goto $cond.end.i.i;
$cond.end.i.i:
  assert {:block_sourceloc} {:sourceloc_num 81} true;
  v43 := FMUL32($cond.i.i, $epsilon);
  v44 := FP32_CONV64(v37);
  v45 := FLT64(4063729574967324274bv64, FP32_CONV64(v43));
  goto $truebb15, $falsebb15;
$cond.true.8.i.i:
  assert {:block_sourceloc} {:sourceloc_num 82} true;
  $cond12.i.i := FP32_CONV64(v43);
  goto $cond.end.11.i.i;
$cond.false.10.i.i:
  assert {:block_sourceloc} {:sourceloc_num 83} true;
  $cond12.i.i := 4063729574967324274bv64;
  goto $cond.end.11.i.i;
$cond.end.11.i.i:
  assert {:block_sourceloc} {:sourceloc_num 84} true;
  v46 := FEQ64(v44, $cond12.i.i) || FLT64(v44, $cond12.i.i);
  goto $truebb16, $falsebb16;
$if.then.i.i.156:
  assert {:block_sourceloc} {:sourceloc_num 85} true;
  call {:sourceloc_num 86}   v47 := $_Z6sign_ff($left.1);
  call {:sourceloc_num 87}   v48 := $_Z6sign_ff($mid.2);
  v49 := v47 == v48;
  goto $truebb17, $falsebb17;
$if.then.i.i.i:
  assert {:block_sourceloc} {:sourceloc_num 88} true;
  $mid.i.i.i.0 := FADD32($left.1, FMUL32(FSUB32($mid.2, $left.1), 1056964608bv32));
  goto $_ZL15computeMidpointff.exit.i.i;
$if.else.i.i.i:
  assert {:block_sourceloc} {:sourceloc_num 89} true;
  $mid.i.i.i.0 := FMUL32(FADD32($left.1, $mid.2), 1056964608bv32);
  goto $_ZL15computeMidpointff.exit.i.i;
$_ZL15computeMidpointff.exit.i.i:
  assert {:block_sourceloc} {:sourceloc_num 90} true;
  assert {:sourceloc} {:sourceloc_num 91} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[local_id_x] := $mid.i.i.i.0;
  assert {:sourceloc} {:sourceloc_num 92} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[local_id_x] := $mid.i.i.i.0;
  goto $_ZL13storeIntervalIttEvjPfS0_PT0_S2_ffT_S3_f.exit.i;
$if.else.i.i.157:
  assert {:block_sourceloc} {:sourceloc_num 93} true;
  assert {:sourceloc} {:sourceloc_num 94} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[local_id_x] := $left.1;
  assert {:sourceloc} {:sourceloc_num 95} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[local_id_x] := $mid.2;
  goto $_ZL13storeIntervalIttEvjPfS0_PT0_S2_ffT_S3_f.exit.i;
$_ZL13storeIntervalIttEvjPfS0_PT0_S2_ffT_S3_f.exit.i:
  assert {:block_sourceloc} {:sourceloc_num 96} true;
  assert {:sourceloc} {:sourceloc_num 97} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, local_id_x)] := 1bv16;
  assert {:sourceloc} {:sourceloc_num 98} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk[0bv32] := 1bv32;
  $is_active_second.1 := 1bv32;
  goto $_ZL27storeNonEmptyIntervalsLargejjPfS_PtS0_ffftttfRjS0_S1_.exit;
$if.else.i.159:
  assert {:block_sourceloc} {:sourceloc_num 99} true;
  assert {:sourceloc} {:sourceloc_num 100} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, local_id_x)] := 0bv16;
  v50 := BV16_ZEXT32(v32) != BV16_ZEXT32(v33);
  goto $truebb18, $falsebb18;
$if.then.9.i:
  assert {:block_sourceloc} {:sourceloc_num 101} true;
  assert {:sourceloc} {:sourceloc_num 102} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[local_id_x] := v32;
  assert {:sourceloc} {:sourceloc_num 103} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[local_id_x] := v33;
  call {:sourceloc_num 104}   v51 := $abs(FSUB32($mid.2, $left.1));
  call {:sourceloc_num 105}   v52 := $abs($left.1);
  call {:sourceloc_num 106}   v53 := $abs($mid.2);
  v54 := FLT32(v52, v53);
  goto $truebb19, $falsebb19;
$cond.true.i.36.i:
  assert {:block_sourceloc} {:sourceloc_num 107} true;
  call {:sourceloc_num 108}   v55 := $abs($mid.2);
  $cond.i.39.i := v55;
  goto $cond.end.i.44.i;
$cond.false.i.38.i:
  assert {:block_sourceloc} {:sourceloc_num 109} true;
  call {:sourceloc_num 110}   v56 := $abs($left.1);
  $cond.i.39.i := v56;
  goto $cond.end.i.44.i;
$cond.end.i.44.i:
  assert {:block_sourceloc} {:sourceloc_num 111} true;
  v57 := FMUL32($cond.i.39.i, $epsilon);
  v58 := FP32_CONV64(v51);
  v59 := FLT64(4063729574967324274bv64, FP32_CONV64(v57));
  goto $truebb20, $falsebb20;
$cond.true.8.i.46.i:
  assert {:block_sourceloc} {:sourceloc_num 112} true;
  $cond12.i.48.i := FP32_CONV64(v57);
  goto $cond.end.11.i.50.i;
$cond.false.10.i.47.i:
  assert {:block_sourceloc} {:sourceloc_num 113} true;
  $cond12.i.48.i := 4063729574967324274bv64;
  goto $cond.end.11.i.50.i;
$cond.end.11.i.50.i:
  assert {:block_sourceloc} {:sourceloc_num 114} true;
  v60 := FEQ64(v58, $cond12.i.48.i) || FLT64(v58, $cond12.i.48.i);
  goto $truebb21, $falsebb21;
$if.then.i.54.i:
  assert {:block_sourceloc} {:sourceloc_num 115} true;
  call {:sourceloc_num 116}   v61 := $_Z6sign_ff($left.1);
  call {:sourceloc_num 117}   v62 := $_Z6sign_ff($mid.2);
  v63 := v61 == v62;
  goto $truebb22, $falsebb22;
$if.then.i.i.58.i:
  assert {:block_sourceloc} {:sourceloc_num 118} true;
  $mid.i.i.14.i.0 := FADD32($left.1, FMUL32(FSUB32($mid.2, $left.1), 1056964608bv32));
  goto $_ZL15computeMidpointff.exit.i.64.i;
$if.else.i.i.61.i:
  assert {:block_sourceloc} {:sourceloc_num 119} true;
  $mid.i.i.14.i.0 := FMUL32(FADD32($left.1, $mid.2), 1056964608bv32);
  goto $_ZL15computeMidpointff.exit.i.64.i;
$_ZL15computeMidpointff.exit.i.64.i:
  assert {:block_sourceloc} {:sourceloc_num 120} true;
  assert {:sourceloc} {:sourceloc_num 121} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[local_id_x] := $mid.i.i.14.i.0;
  assert {:sourceloc} {:sourceloc_num 122} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[local_id_x] := $mid.i.i.14.i.0;
  goto $_ZL13storeIntervalIttEvjPfS0_PT0_S2_ffT_S3_f.exit68.i;
$if.else.i.67.i:
  assert {:block_sourceloc} {:sourceloc_num 123} true;
  assert {:sourceloc} {:sourceloc_num 124} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[local_id_x] := $left.1;
  assert {:sourceloc} {:sourceloc_num 125} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[local_id_x] := $mid.2;
  goto $_ZL13storeIntervalIttEvjPfS0_PT0_S2_ffT_S3_f.exit68.i;
$_ZL13storeIntervalIttEvjPfS0_PT0_S2_ffT_S3_f.exit68.i:
  assert {:block_sourceloc} {:sourceloc_num 126} true;
  goto $if.end.i.160;
$if.else.10.i:
  assert {:block_sourceloc} {:sourceloc_num 127} true;
  assert {:sourceloc} {:sourceloc_num 128} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[local_id_x] := v33;
  assert {:sourceloc} {:sourceloc_num 129} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[local_id_x] := v34;
  call {:sourceloc_num 130}   v64 := $abs(FSUB32($right.1, $mid.2));
  call {:sourceloc_num 131}   v65 := $abs($mid.2);
  call {:sourceloc_num 132}   v66 := $abs($right.1);
  v67 := FLT32(v65, v66);
  goto $truebb23, $falsebb23;
$cond.true.i.93.i:
  assert {:block_sourceloc} {:sourceloc_num 133} true;
  call {:sourceloc_num 134}   v68 := $abs($right.1);
  $cond.i.96.i := v68;
  goto $cond.end.i.101.i;
$cond.false.i.95.i:
  assert {:block_sourceloc} {:sourceloc_num 135} true;
  call {:sourceloc_num 136}   v69 := $abs($mid.2);
  $cond.i.96.i := v69;
  goto $cond.end.i.101.i;
$cond.end.i.101.i:
  assert {:block_sourceloc} {:sourceloc_num 137} true;
  v70 := FMUL32($cond.i.96.i, $epsilon);
  v71 := FP32_CONV64(v64);
  v72 := FLT64(4063729574967324274bv64, FP32_CONV64(v70));
  goto $truebb24, $falsebb24;
$cond.true.8.i.103.i:
  assert {:block_sourceloc} {:sourceloc_num 138} true;
  $cond12.i.105.i := FP32_CONV64(v70);
  goto $cond.end.11.i.107.i;
$cond.false.10.i.104.i:
  assert {:block_sourceloc} {:sourceloc_num 139} true;
  $cond12.i.105.i := 4063729574967324274bv64;
  goto $cond.end.11.i.107.i;
$cond.end.11.i.107.i:
  assert {:block_sourceloc} {:sourceloc_num 140} true;
  v73 := FEQ64(v71, $cond12.i.105.i) || FLT64(v71, $cond12.i.105.i);
  goto $truebb25, $falsebb25;
$if.then.i.111.i:
  assert {:block_sourceloc} {:sourceloc_num 141} true;
  call {:sourceloc_num 142}   v74 := $_Z6sign_ff($mid.2);
  call {:sourceloc_num 143}   v75 := $_Z6sign_ff($right.1);
  v76 := v74 == v75;
  goto $truebb26, $falsebb26;
$if.then.i.i.115.i:
  assert {:block_sourceloc} {:sourceloc_num 144} true;
  $mid.i.i.71.i.0 := FADD32($mid.2, FMUL32(FSUB32($right.1, $mid.2), 1056964608bv32));
  goto $_ZL15computeMidpointff.exit.i.121.i;
$if.else.i.i.118.i:
  assert {:block_sourceloc} {:sourceloc_num 145} true;
  $mid.i.i.71.i.0 := FMUL32(FADD32($mid.2, $right.1), 1056964608bv32);
  goto $_ZL15computeMidpointff.exit.i.121.i;
$_ZL15computeMidpointff.exit.i.121.i:
  assert {:block_sourceloc} {:sourceloc_num 146} true;
  assert {:sourceloc} {:sourceloc_num 147} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[local_id_x] := $mid.i.i.71.i.0;
  assert {:sourceloc} {:sourceloc_num 148} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[local_id_x] := $mid.i.i.71.i.0;
  goto $_ZL13storeIntervalIttEvjPfS0_PT0_S2_ffT_S3_f.exit125.i;
$if.else.i.124.i:
  assert {:block_sourceloc} {:sourceloc_num 149} true;
  assert {:sourceloc} {:sourceloc_num 150} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[local_id_x] := $mid.2;
  assert {:sourceloc} {:sourceloc_num 151} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[local_id_x] := $right.1;
  goto $_ZL13storeIntervalIttEvjPfS0_PT0_S2_ffT_S3_f.exit125.i;
$_ZL13storeIntervalIttEvjPfS0_PT0_S2_ffT_S3_f.exit125.i:
  assert {:block_sourceloc} {:sourceloc_num 152} true;
  goto $if.end.i.160;
$if.end.i.160:
  assert {:block_sourceloc} {:sourceloc_num 153} true;
  $is_active_second.1 := 0bv32;
  goto $_ZL27storeNonEmptyIntervalsLargejjPfS_PtS0_ffftttfRjS0_S1_.exit;
$_ZL27storeNonEmptyIntervalsLargejjPfS_PtS0_ffftttfRjS0_S1_.exit:
  assert {:block_sourceloc} {:sourceloc_num 154} true;
  $is_active_second.2 := $is_active_second.1;
  goto $if.end.24;
$if.else:
  assert {:block_sourceloc} {:sourceloc_num 155} true;
  assert {:sourceloc} {:sourceloc_num 156} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[local_id_x] := $left.1;
  assert {:sourceloc} {:sourceloc_num 157} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[local_id_x] := $left.1;
  assert {:sourceloc} {:sourceloc_num 158} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[local_id_x] := $left_count.1[16:0];
  assert {:sourceloc} {:sourceloc_num 159} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[local_id_x] := $right_count.1[16:0];
  $is_active_second.2 := 0bv32;
  goto $if.end.24;
$if.end.24:
  assert {:block_sourceloc} {:sourceloc_num 160} true;
  $is_active_second.3 := $is_active_second.2;
  goto $if.end.25;
$if.end.25:
  assert {:block_sourceloc} {:sourceloc_num 161} true;
  call {:sourceloc_num 162} $bugle_barrier(1bv1, 1bv1);
  assert {:sourceloc} {:sourceloc_num 163} true;
  v77 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk[0bv32];
  v78 := BV32_UGT(v77, 0bv32);
  goto $truebb27, $falsebb27;
$if.then.27:
  assert {:block_sourceloc} {:sourceloc_num 164} true;
  assert {:sourceloc} {:sourceloc_num 165} true;
  v79 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction[0bv32];
  $offset.i.0, $d.i.0 := 1bv32, BV32_LSHR(v79, 1bv32);
  goto $for.cond.i.162;
$for.cond.i.162:
  assert {:block_sourceloc} {:sourceloc_num 166} true;
  v80 := BV32_SGT($d.i.0, 0bv32);
  goto $truebb28, $falsebb28;
$for.body.i.164:
  assert {:block_sourceloc} {:sourceloc_num 167} true;
  call {:sourceloc_num 168} $bugle_barrier(1bv1, 1bv1);
  v81 := BV32_ULT(local_id_x, $d.i.0);
  goto $truebb29, $falsebb29;
$if.then.i.170:
  assert {:block_sourceloc} {:sourceloc_num 169} true;
  v82 := BV32_SUB(BV32_MUL($offset.i.0, BV32_ADD(BV32_MUL(2bv32, local_id_x), 2bv32)), 1bv32);
  assert {:sourceloc} {:sourceloc_num 170} true;
  v83 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, v82)];
  assert {:sourceloc} {:sourceloc_num 171} true;
  v84 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, BV32_SUB(BV32_MUL($offset.i.0, BV32_ADD(BV32_MUL(2bv32, local_id_x), 1bv32)), 1bv32))];
  assert {:sourceloc} {:sourceloc_num 172} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, v82)] := BV32_ADD(BV16_ZEXT32(v83), BV16_ZEXT32(v84))[16:0];
  goto $if.end.i.171;
$if.end.i.171:
  assert {:block_sourceloc} {:sourceloc_num 173} true;
  $offset.i.0, $d.i.0 := BV32_SHL($offset.i.0, 1bv32), BV32_ASHR($d.i.0, 1bv32);
  goto $for.cond.i.162;
$for.end.i.172:
  assert {:block_sourceloc} {:sourceloc_num 174} true;
  $offset.i.1, $d13.i.0 := $offset.i.0, 2bv32;
  goto $for.cond.14.i;
$for.cond.14.i:
  assert {:block_sourceloc} {:sourceloc_num 175} true;
  v85 := BV32_ULT($d13.i.0, v79);
  goto $truebb30, $falsebb30;
$for.body.16.i:
  assert {:block_sourceloc} {:sourceloc_num 176} true;
  v86 := BV32_LSHR($offset.i.1, 1bv32);
  call {:sourceloc_num 177} $bugle_barrier(1bv1, 1bv1);
  v87 := BV32_ULT(local_id_x, BV32_SUB($d13.i.0, 1bv32));
  goto $truebb31, $falsebb31;
$if.then.20.i:
  assert {:block_sourceloc} {:sourceloc_num 178} true;
  v88 := BV32_SUB(BV32_MUL(v86, BV32_ADD(local_id_x, 1bv32)), 1bv32);
  v89 := BV32_ADD(v88, BV32_LSHR(v86, 1bv32));
  assert {:sourceloc} {:sourceloc_num 179} true;
  v90 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, v89)];
  assert {:sourceloc} {:sourceloc_num 180} true;
  v91 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, v88)];
  assert {:sourceloc} {:sourceloc_num 181} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, v89)] := BV32_ADD(BV16_ZEXT32(v90), BV16_ZEXT32(v91))[16:0];
  goto $if.end.35.i;
$if.end.35.i:
  assert {:block_sourceloc} {:sourceloc_num 182} true;
  $offset.i.1, $d13.i.0 := v86, BV32_SHL($d13.i.0, 1bv32);
  goto $for.cond.14.i;
$_ZL23createIndicesCompactionItEvPT_j.exit:
  assert {:block_sourceloc} {:sourceloc_num 183} true;
  call {:sourceloc_num 184} $bugle_barrier(1bv1, 1bv1);
  assert {:sourceloc} {:sourceloc_num 185} true;
  v92 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[0bv32];
  v93 := BV32_ULT(local_id_x, v92);
  goto $truebb32, $falsebb32;
$land.lhs.true.i.187:
  assert {:block_sourceloc} {:sourceloc_num 186} true;
  v94 := 1bv32 == $is_active_second.3;
  goto $truebb33, $falsebb33;
$if.then.i.197:
  assert {:block_sourceloc} {:sourceloc_num 187} true;
  assert {:sourceloc} {:sourceloc_num 188} true;
  v95 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[local_id_x];
  v96 := BV32_ADD(v92, BV16_ZEXT32(v95));
  assert {:sourceloc} {:sourceloc_num 189} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[v96] := $mid.2;
  assert {:sourceloc} {:sourceloc_num 190} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[v96] := $right.1;
  assert {:sourceloc} {:sourceloc_num 191} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[v96] := $count.i.0[16:0];
  assert {:sourceloc} {:sourceloc_num 192} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[v96] := $right_count.1[16:0];
  goto $_ZL16compactIntervalsItEvPfS0_PT_S2_ffjjS2_jj.exit;
$_ZL16compactIntervalsItEvPfS0_PT_S2_ffjjS2_jj.exit:
  assert {:block_sourceloc} {:sourceloc_num 193} true;
  goto $if.end.28;
$if.end.28:
  assert {:block_sourceloc} {:sourceloc_num 194} true;
  call {:sourceloc_num 195} $bugle_barrier(1bv1, 1bv1);
  v97 := 0bv32 == local_id_x;
  goto $truebb34, $falsebb34;
$if.then.30:
  assert {:block_sourceloc} {:sourceloc_num 196} true;
  assert {:sourceloc} {:sourceloc_num 197} true;
  v98 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[0bv32];
  assert {:sourceloc} {:sourceloc_num 198} true;
  v99 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[v98];
  assert {:sourceloc} {:sourceloc_num 199} true;
  v100 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[0bv32];
  assert {:sourceloc} {:sourceloc_num 200} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[0bv32] := BV32_ADD(v100, BV16_ZEXT32(v99));
  assert {:sourceloc} {:sourceloc_num 201} true;
  v101 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[0bv32];
  v102 := 0bv32 == BV32_AND(v101, BV32_SUB(v101, 1bv32));
  goto $truebb35, $falsebb35;
$if.then.i.202:
  assert {:block_sourceloc} {:sourceloc_num 202} true;
  $retval.i.0 := v101;
  goto $_ZL8ceilPow2i.exit;
$if.end.i.208:
  assert {:block_sourceloc} {:sourceloc_num 203} true;
  v103 := FP32_CONV64(SI32_TO_FP32(v101));
  call {:sourceloc_num 204}   v104 := $__bugle_frexp_exp(v103);
  call {:sourceloc_num 205}   v105 := $__bugle_frexp_frac(v103);
  $retval.i.0 := BV32_SHL(1bv32, v104);
  goto $_ZL8ceilPow2i.exit;
$_ZL8ceilPow2i.exit:
  assert {:block_sourceloc} {:sourceloc_num 206} true;
  assert {:sourceloc} {:sourceloc_num 207} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction[0bv32] := $retval.i.0;
  assert {:sourceloc} {:sourceloc_num 208} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E20compact_second_chunk[0bv32] := 0bv32;
  assert {:sourceloc} {:sourceloc_num 209} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E21all_threads_converged[0bv32] := 1bv32;
  goto $if.end.34;
$if.end.34:
  assert {:block_sourceloc} {:sourceloc_num 210} true;
  call {:sourceloc_num 211} $bugle_barrier(1bv1, 1bv1);
  assert {:sourceloc} {:sourceloc_num 212} true;
  v106 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction[0bv32];
  v107 := BV32_UGT(v106, group_size_x);
  goto $truebb36, $falsebb36;
$if.then.36:
  assert {:block_sourceloc} {:sourceloc_num 213} true;
  goto $while.end;
$if.end.37:
  assert {:block_sourceloc} {:sourceloc_num 214} true;
  $is_active_second.0, $mid.0, $right_count.0, $left_count.0, $right.0, $left.0 := $is_active_second.3, $mid.2, $right_count.1, $left_count.1, $right.1, $left.1;
  goto $while.body;
$while.end:
  assert {:block_sourceloc} {:sourceloc_num 215} true;
  call {:sourceloc_num 216} $bugle_barrier(1bv1, 1bv1);
  v108 := BV32_ADD(local_id_x, group_size_x);
  assert {:sourceloc} {:sourceloc_num 217} true;
  v109 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[local_id_x];
  assert {:sourceloc} {:sourceloc_num 218} true;
  v110 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[local_id_x];
  assert {:sourceloc} {:sourceloc_num 219} true;
  v111 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[0bv32];
  v112 := BV32_ULT(v108, v111);
  goto $truebb37, $falsebb37;
$if.then.44:
  assert {:block_sourceloc} {:sourceloc_num 220} true;
  assert {:sourceloc} {:sourceloc_num 221} true;
  v113 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[v108];
  assert {:sourceloc} {:sourceloc_num 222} true;
  v114 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[v108];
  $right_count_2.0, $left_count_2.0 := BV16_ZEXT32(v114), BV16_ZEXT32(v113);
  goto $if.end.49;
$if.end.49:
  assert {:block_sourceloc} {:sourceloc_num 223} true;
  v115 := 0bv32 == local_id_x;
  goto $truebb38, $falsebb38;
$if.then.51:
  assert {:block_sourceloc} {:sourceloc_num 224} true;
  assert {:sourceloc} {:sourceloc_num 225} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[0bv32] := 0bv16;
  assert {:sourceloc} {:sourceloc_num 226} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[0bv32] := 0bv16;
  goto $if.end.52;
$if.end.52:
  assert {:block_sourceloc} {:sourceloc_num 227} true;
  call {:sourceloc_num 228} $bugle_barrier(1bv1, 1bv1);
  v116 := BV32_SUB(BV16_ZEXT32(v110), BV16_ZEXT32(v109));
  v117 := BV1_ZEXT32((if 1bv32 == v116 then 1bv1 else 0bv1));
  assert {:sourceloc} {:sourceloc_num 229} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[BV32_ADD(1bv32, local_id_x)] := v117[16:0];
  assert {:sourceloc} {:sourceloc_num 230} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[BV32_ADD(1bv32, local_id_x)] := BV1_ZEXT16(BV1_XOR((if v117 != 0bv32 then 1bv1 else 0bv1), 1bv1));
  v118 := 1bv32 == v117;
  goto $truebb39, $falsebb39;
$cond.true:
  assert {:block_sourceloc} {:sourceloc_num 231} true;
  $cond := 0bv32;
  goto $cond.end;
$cond.false:
  assert {:block_sourceloc} {:sourceloc_num 232} true;
  $cond := v116;
  goto $cond.end;
$cond.end:
  assert {:block_sourceloc} {:sourceloc_num 233} true;
  assert {:sourceloc} {:sourceloc_num 234} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, local_id_x)] := $cond[16:0];
  assert {:sourceloc} {:sourceloc_num 235} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[local_id_x] := 0bv16;
  assert {:sourceloc} {:sourceloc_num 236} true;
  v119 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[0bv32];
  v120 := BV32_ULT(v108, v119);
  goto $truebb40, $falsebb40;
$if.then.64:
  assert {:block_sourceloc} {:sourceloc_num 237} true;
  v121 := BV32_SUB($right_count_2.0, $left_count_2.0);
  v122 := BV1_ZEXT32((if 1bv32 == v121 then 1bv1 else 0bv1));
  assert {:sourceloc} {:sourceloc_num 238} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[BV32_ADD(1bv32, v108)] := v122[16:0];
  assert {:sourceloc} {:sourceloc_num 239} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[BV32_ADD(1bv32, v108)] := BV1_ZEXT16(BV1_XOR((if v122 != 0bv32 then 1bv1 else 0bv1), 1bv1));
  v123 := 1bv32 == v122;
  goto $truebb41, $falsebb41;
$cond.true.76:
  assert {:block_sourceloc} {:sourceloc_num 240} true;
  $cond79 := 0bv32;
  goto $cond.end.78;
$cond.false.77:
  assert {:block_sourceloc} {:sourceloc_num 241} true;
  $cond79 := v121;
  goto $cond.end.78;
$cond.end.78:
  assert {:block_sourceloc} {:sourceloc_num 242} true;
  assert {:sourceloc} {:sourceloc_num 243} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, v108)] := $cond79[16:0];
  assert {:sourceloc} {:sourceloc_num 244} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[v108] := 0bv16;
  $is_one_lambda_2.0 := v122;
  goto $if.end.89;
$if.else.83:
  assert {:block_sourceloc} {:sourceloc_num 245} true;
  v124 := BV32_ULT(v108, 513bv32);
  goto $truebb42, $falsebb42;
$if.then.85:
  assert {:block_sourceloc} {:sourceloc_num 246} true;
  assert {:sourceloc} {:sourceloc_num 247} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, v108)] := 0bv16;
  assert {:sourceloc} {:sourceloc_num 248} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[v108] := 0bv16;
  goto $if.end.88;
$if.end.88:
  assert {:block_sourceloc} true;
  $is_one_lambda_2.0 := 0bv32;
  goto $if.end.89;
$if.end.89:
  assert {:block_sourceloc} {:sourceloc_num 249} true;
  assert {:sourceloc} {:sourceloc_num 250} true;
  v125 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[0bv32];
  assert {:sourceloc} {:sourceloc_num 251} true;
  v126 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction[0bv32];
  $offset.i.212.0, $d.i.213.0 := 1bv32, BV32_LSHR(v126, 1bv32);
  goto $for.cond.i.218;
$for.cond.i.218:
  assert {:block_sourceloc} {:sourceloc_num 252} true;
  v127 := BV32_SGT($d.i.213.0, 0bv32);
  goto $truebb43, $falsebb43;
$for.body.i.220:
  assert {:block_sourceloc} {:sourceloc_num 253} true;
  call {:sourceloc_num 254} $bugle_barrier(1bv1, 1bv1);
  v128 := BV32_ULT(local_id_x, $d.i.213.0);
  goto $truebb44, $falsebb44;
$if.then.i.237:
  assert {:block_sourceloc} {:sourceloc_num 255} true;
  v129 := BV32_MUL($offset.i.212.0, BV32_ADD(BV32_MUL(2bv32, local_id_x), 1bv32));
  v130 := BV32_SUB(BV32_MUL($offset.i.212.0, BV32_ADD(BV32_MUL(2bv32, local_id_x), 2bv32)), 1bv32);
  assert {:sourceloc} {:sourceloc_num 256} true;
  v131 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[BV32_ADD(1bv32, v130)];
  assert {:sourceloc} {:sourceloc_num 257} true;
  v132 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[BV32_ADD(1bv32, BV32_SUB(v129, 1bv32))];
  assert {:sourceloc} {:sourceloc_num 258} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[BV32_ADD(1bv32, v130)] := BV32_ADD(BV16_ZEXT32(v131), BV16_ZEXT32(v132))[16:0];
  assert {:sourceloc} {:sourceloc_num 259} true;
  v133 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[BV32_ADD(1bv32, v130)];
  assert {:sourceloc} {:sourceloc_num 260} true;
  v134 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[BV32_ADD(1bv32, BV32_SUB(v129, 1bv32))];
  assert {:sourceloc} {:sourceloc_num 261} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[BV32_ADD(1bv32, v130)] := BV32_ADD(BV16_ZEXT32(v133), BV16_ZEXT32(v134))[16:0];
  assert {:sourceloc} {:sourceloc_num 262} true;
  v135 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[BV32_SUB(v129, 1bv32)];
  v136 := BV16_ZEXT32(v135) != 1bv32;
  goto $truebb45, $falsebb45;
$lor.lhs.false.i:
  assert {:block_sourceloc} {:sourceloc_num 263} true;
  assert {:sourceloc} {:sourceloc_num 264} true;
  v137 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[v130];
  v138 := BV16_ZEXT32(v137) != 1bv32;
  goto $truebb46, $falsebb46;
$if.then.27.i:
  assert {:block_sourceloc} {:sourceloc_num 265} true;
  assert {:sourceloc} {:sourceloc_num 266} true;
  v139 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[BV32_SUB(v129, 1bv32)];
  v140 := BV16_ZEXT32(v139) == 1bv32;
  goto $truebb47, $falsebb47;
$if.then.32.i:
  assert {:block_sourceloc} {:sourceloc_num 267} true;
  assert {:sourceloc} {:sourceloc_num 268} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[v130] := 1bv16;
  goto $if.end.58.i;
$if.else.i.239:
  assert {:block_sourceloc} {:sourceloc_num 269} true;
  assert {:sourceloc} {:sourceloc_num 270} true;
  v141 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[v130];
  v142 := BV16_ZEXT32(v141) == 1bv32;
  goto $truebb48, $falsebb48;
$if.then.37.i:
  assert {:block_sourceloc} {:sourceloc_num 271} true;
  assert {:sourceloc} {:sourceloc_num 272} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[BV32_SUB(v129, 1bv32)] := 1bv16;
  goto $if.end.57.i;
$if.else.40.i:
  assert {:block_sourceloc} {:sourceloc_num 273} true;
  assert {:sourceloc} {:sourceloc_num 274} true;
  v143 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, v130)];
  assert {:sourceloc} {:sourceloc_num 275} true;
  v144 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, BV32_SUB(v129, 1bv32))];
  v145 := BV32_ADD(BV16_ZEXT32(v143), BV16_ZEXT32(v144));
  v146 := BV32_UGT(v145, 256bv32);
  goto $truebb49, $falsebb49;
$if.then.48.i:
  assert {:block_sourceloc} {:sourceloc_num 276} true;
  assert {:sourceloc} {:sourceloc_num 277} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[BV32_SUB(v129, 1bv32)] := 1bv16;
  assert {:sourceloc} {:sourceloc_num 278} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[v130] := 1bv16;
  goto $if.end.i.240;
$if.else.52.i:
  assert {:block_sourceloc} {:sourceloc_num 279} true;
  assert {:sourceloc} {:sourceloc_num 280} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, v130)] := v145[16:0];
  assert {:sourceloc} {:sourceloc_num 281} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, BV32_SUB(v129, 1bv32))] := 0bv16;
  goto $if.end.i.240;
$if.end.i.240:
  assert {:block_sourceloc} {:sourceloc_num 282} true;
  goto $if.end.57.i;
$if.end.57.i:
  assert {:block_sourceloc} {:sourceloc_num 283} true;
  goto $if.end.58.i;
$if.end.58.i:
  assert {:block_sourceloc} {:sourceloc_num 284} true;
  goto $if.end.59.i;
$if.end.59.i:
  assert {:block_sourceloc} {:sourceloc_num 285} true;
  goto $if.end.60.i;
$if.end.60.i:
  assert {:block_sourceloc} {:sourceloc_num 286} true;
  $offset.i.212.0, $d.i.213.0 := BV32_SHL($offset.i.212.0, 1bv32), BV32_ASHR($d.i.213.0, 1bv32);
  goto $for.cond.i.218;
$for.end.i.242:
  assert {:block_sourceloc} {:sourceloc_num 287} true;
  $offset.i.212.1, $d62.i.0 := $offset.i.212.0, 2bv32;
  goto $for.cond.63.i;
$for.cond.63.i:
  assert {:block_sourceloc} {:sourceloc_num 288} true;
  v147 := BV32_ULT($d62.i.0, v126);
  goto $truebb50, $falsebb50;
$for.body.65.i:
  assert {:block_sourceloc} {:sourceloc_num 289} true;
  v148 := BV32_LSHR($offset.i.212.1, 1bv32);
  call {:sourceloc_num 290} $bugle_barrier(1bv1, 1bv1);
  v149 := BV32_ULT(local_id_x, BV32_SUB($d62.i.0, 1bv32));
  goto $truebb51, $falsebb51;
$if.then.69.i:
  assert {:block_sourceloc} {:sourceloc_num 291} true;
  v150 := BV32_SUB(BV32_MUL(v148, BV32_ADD(local_id_x, 1bv32)), 1bv32);
  v151 := BV32_ADD(v150, BV32_LSHR(v148, 1bv32));
  assert {:sourceloc} {:sourceloc_num 292} true;
  v152 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[BV32_ADD(1bv32, v151)];
  assert {:sourceloc} {:sourceloc_num 293} true;
  v153 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[BV32_ADD(1bv32, v150)];
  assert {:sourceloc} {:sourceloc_num 294} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[BV32_ADD(1bv32, v151)] := BV32_ADD(BV16_ZEXT32(v152), BV16_ZEXT32(v153))[16:0];
  assert {:sourceloc} {:sourceloc_num 295} true;
  v154 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[BV32_ADD(1bv32, v151)];
  assert {:sourceloc} {:sourceloc_num 296} true;
  v155 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[BV32_ADD(1bv32, v150)];
  assert {:sourceloc} {:sourceloc_num 297} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[BV32_ADD(1bv32, v151)] := BV32_ADD(BV16_ZEXT32(v154), BV16_ZEXT32(v155))[16:0];
  goto $if.end.91.i;
$if.end.91.i:
  assert {:block_sourceloc} {:sourceloc_num 298} true;
  $offset.i.212.1, $d62.i.0 := v148, BV32_SHL($d62.i.0, 1bv32);
  goto $for.cond.63.i;
$_ZL11scanInitialjjjjPtS_S_S_.exit:
  assert {:block_sourceloc} {:sourceloc_num 299} true;
  assert {:sourceloc} {:sourceloc_num 300} true;
  v156 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[0bv32];
  assert {:sourceloc} {:sourceloc_num 301} true;
  v157 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction[0bv32];
  $offset.i.249.0, $d.i.250.0 := 1bv32, BV32_LSHR(v157, 1bv32);
  goto $for.cond.i.256;
$for.cond.i.256:
  assert {:block_sourceloc} {:sourceloc_num 302} true;
  v158 := BV32_SGT($d.i.250.0, 0bv32);
  goto $truebb52, $falsebb52;
$for.body.i.258:
  assert {:block_sourceloc} {:sourceloc_num 303} true;
  call {:sourceloc_num 304} $bugle_barrier(1bv1, 1bv1);
  v159 := BV32_ULT(local_id_x, $d.i.250.0);
  goto $truebb53, $falsebb53;
$if.then.i.273:
  assert {:block_sourceloc} {:sourceloc_num 305} true;
  v160 := BV32_SUB(BV32_MUL($offset.i.249.0, BV32_ADD(BV32_MUL(2bv32, local_id_x), 2bv32)), 1bv32);
  assert {:sourceloc} {:sourceloc_num 306} true;
  v161 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, BV32_SUB(BV32_MUL($offset.i.249.0, BV32_ADD(BV32_MUL(2bv32, local_id_x), 1bv32)), 1bv32))];
  assert {:sourceloc} {:sourceloc_num 307} true;
  v162 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, v160)];
  assert {:sourceloc} {:sourceloc_num 308} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, v160)] := BV32_ADD(BV16_ZEXT32(v162), BV16_ZEXT32(v161))[16:0];
  goto $if.end.i.274;
$if.end.i.274:
  assert {:block_sourceloc} {:sourceloc_num 309} true;
  $offset.i.249.0, $d.i.250.0 := BV32_MUL($offset.i.249.0, 2bv32), BV32_ASHR($d.i.250.0, 1bv32);
  goto $for.cond.i.256;
$for.end.i.276:
  assert {:block_sourceloc} {:sourceloc_num 310} true;
  $offset.i.249.1, $d13.i.253.0 := $offset.i.249.0, 2bv32;
  goto $for.cond.14.i.277;
$for.cond.14.i.277:
  assert {:block_sourceloc} {:sourceloc_num 311} true;
  v163 := BV32_ULT($d13.i.253.0, BV32_SUB(v157, 1bv32));
  goto $truebb54, $falsebb54;
$for.body.17.i:
  assert {:block_sourceloc} {:sourceloc_num 312} true;
  v164 := BV32_LSHR($offset.i.249.1, 1bv32);
  call {:sourceloc_num 313} $bugle_barrier(1bv1, 1bv1);
  v165 := BV32_ULT(local_id_x, BV32_SUB($d13.i.253.0, 1bv32));
  goto $truebb55, $falsebb55;
$if.then.21.i:
  assert {:block_sourceloc} {:sourceloc_num 314} true;
  v166 := BV32_SUB(BV32_MUL(v164, BV32_ADD(local_id_x, 1bv32)), 1bv32);
  v167 := BV32_ADD(v166, BV32_LSHR(v164, 1bv32));
  assert {:sourceloc} {:sourceloc_num 315} true;
  v168 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, v166)];
  assert {:sourceloc} {:sourceloc_num 316} true;
  v169 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, v167)];
  assert {:sourceloc} {:sourceloc_num 317} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, v167)] := BV32_ADD(BV16_ZEXT32(v169), BV16_ZEXT32(v168))[16:0];
  goto $if.end.35.i.281;
$if.end.35.i.281:
  assert {:block_sourceloc} {:sourceloc_num 318} true;
  $offset.i.249.1, $d13.i.253.0 := v164, BV32_SHL($d13.i.253.0, 1bv32);
  goto $for.cond.14.i.277;
$for.end.37.i:
  assert {:block_sourceloc} {:sourceloc_num 319} true;
  call {:sourceloc_num 320} $bugle_barrier(1bv1, 1bv1);
  v170 := 0bv32 == local_id_x;
  goto $truebb56, $falsebb56;
$if.then.39.i:
  assert {:block_sourceloc} {:sourceloc_num 321} true;
  assert {:sourceloc} {:sourceloc_num 322} true;
  v171 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[BV32_SUB(v157, 1bv32)];
  assert {:sourceloc} {:sourceloc_num 323} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[BV32_SUB(v156, 1bv32)] := v171;
  assert {:sourceloc} {:sourceloc_num 324} true;
  v172 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, BV32_SUB(v157, 1bv32))];
  assert {:sourceloc} {:sourceloc_num 325} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, BV32_SUB(v156, 1bv32))] := v172;
  goto $_ZL13scanSumBlocksjjjjPtS_.exit;
$_ZL13scanSumBlocksjjjjPtS_.exit:
  assert {:block_sourceloc} {:sourceloc_num 326} true;
  call {:sourceloc_num 327} $bugle_barrier(1bv1, 1bv1);
  assert {:sourceloc} {:sourceloc_num 328} true;
  v173 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[local_id_x];
  v174 := 1bv32 == BV16_ZEXT32(v173);
  goto $truebb57, $falsebb57;
$if.then.93:
  assert {:block_sourceloc} {:sourceloc_num 329} true;
  assert {:sourceloc} {:sourceloc_num 330} true;
  v175 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[BV32_ADD(1bv32, local_id_x)];
  assert {:sourceloc} {:sourceloc_num 331} true;
  v176 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, local_id_x)];
  $c_block_iend.0, $c_sum_block.0 := BV32_ADD(BV16_ZEXT32(v175), 1bv32), BV16_ZEXT32(v176);
  goto $if.end.99;
$if.end.99:
  assert {:block_sourceloc} {:sourceloc_num 332} true;
  assert {:sourceloc} {:sourceloc_num 333} true;
  v177 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[v108];
  v178 := 1bv32 == BV16_ZEXT32(v177);
  goto $truebb58, $falsebb58;
$if.then.103:
  assert {:block_sourceloc} {:sourceloc_num 334} true;
  assert {:sourceloc} {:sourceloc_num 335} true;
  v179 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[BV32_ADD(1bv32, v108)];
  assert {:sourceloc} {:sourceloc_num 336} true;
  v180 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, v108)];
  $c_block_iend_2.0, $c_sum_block_2.0 := BV32_ADD(BV16_ZEXT32(v179), 1bv32), BV16_ZEXT32(v180);
  goto $if.end.109;
$if.end.109:
  assert {:block_sourceloc} {:sourceloc_num 337} true;
  assert {:sourceloc} {:sourceloc_num 338} true;
  v181 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E22num_threads_compaction[0bv32];
  assert {:sourceloc} {:sourceloc_num 339} true;
  v182 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[local_id_x];
  assert {:sourceloc} {:sourceloc_num 340} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, local_id_x)] := v182;
  v183 := BV32_ULT(v108, v181);
  goto $truebb59, $falsebb59;
$if.then.i.298:
  assert {:block_sourceloc} {:sourceloc_num 341} true;
  assert {:sourceloc} {:sourceloc_num 342} true;
  v184 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[v108];
  assert {:sourceloc} {:sourceloc_num 343} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, v108)] := v184;
  goto $if.end.i.300;
$if.end.i.300:
  assert {:block_sourceloc} {:sourceloc_num 344} true;
  call {:sourceloc_num 345} $bugle_barrier(1bv1, 1bv1);
  $offset.i.289.0, $d.i.290.0 := 1bv32, BV32_LSHR(v181, 1bv32);
  goto $for.cond.i.302;
$for.cond.i.302:
  assert {:block_sourceloc} {:sourceloc_num 346} true;
  v185 := BV32_SGT($d.i.290.0, 0bv32);
  goto $truebb60, $falsebb60;
$for.body.i.304:
  assert {:block_sourceloc} {:sourceloc_num 347} true;
  call {:sourceloc_num 348} $bugle_barrier(1bv1, 1bv1);
  v186 := BV32_ULT(local_id_x, $d.i.290.0);
  goto $truebb61, $falsebb61;
$if.then.6.i.313:
  assert {:block_sourceloc} {:sourceloc_num 349} true;
  v187 := BV32_SUB(BV32_MUL($offset.i.289.0, BV32_ADD(BV32_MUL(2bv32, local_id_x), 2bv32)), 1bv32);
  assert {:sourceloc} {:sourceloc_num 350} true;
  v188 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, v187)];
  assert {:sourceloc} {:sourceloc_num 351} true;
  v189 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, BV32_SUB(BV32_MUL($offset.i.289.0, BV32_ADD(BV32_MUL(2bv32, local_id_x), 1bv32)), 1bv32))];
  assert {:sourceloc} {:sourceloc_num 352} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, v187)] := BV32_ADD(BV16_ZEXT32(v188), BV16_ZEXT32(v189))[16:0];
  goto $if.end.18.i;
$if.end.18.i:
  assert {:block_sourceloc} {:sourceloc_num 353} true;
  $offset.i.289.0, $d.i.290.0 := BV32_SHL($offset.i.289.0, 1bv32), BV32_ASHR($d.i.290.0, 1bv32);
  goto $for.cond.i.302;
$for.end.i.315:
  assert {:block_sourceloc} {:sourceloc_num 354} true;
  $offset.i.289.1, $d20.i.0 := $offset.i.289.0, 2bv32;
  goto $for.cond.21.i;
$for.cond.21.i:
  assert {:block_sourceloc} {:sourceloc_num 355} true;
  v190 := BV32_ULT($d20.i.0, v181);
  goto $truebb62, $falsebb62;
$for.body.23.i:
  assert {:block_sourceloc} {:sourceloc_num 356} true;
  v191 := BV32_LSHR($offset.i.289.1, 1bv32);
  call {:sourceloc_num 357} $bugle_barrier(1bv1, 1bv1);
  v192 := BV32_ULT(local_id_x, BV32_SUB($d20.i.0, 1bv32));
  goto $truebb63, $falsebb63;
$if.then.27.i.319:
  assert {:block_sourceloc} {:sourceloc_num 358} true;
  v193 := BV32_SUB(BV32_MUL(v191, BV32_ADD(local_id_x, 1bv32)), 1bv32);
  v194 := BV32_ADD(v193, BV32_LSHR(v191, 1bv32));
  assert {:sourceloc} {:sourceloc_num 359} true;
  v195 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, v194)];
  assert {:sourceloc} {:sourceloc_num 360} true;
  v196 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, v193)];
  assert {:sourceloc} {:sourceloc_num 361} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, v194)] := BV32_ADD(BV16_ZEXT32(v195), BV16_ZEXT32(v196))[16:0];
  goto $if.end.42.i;
$if.end.42.i:
  assert {:block_sourceloc} {:sourceloc_num 362} true;
  $offset.i.289.1, $d20.i.0 := v191, BV32_SHL($d20.i.0, 1bv32);
  goto $for.cond.21.i;
$_ZL29scanCompactBlocksStartAddressjjjPtS_.exit:
  assert {:block_sourceloc} {:sourceloc_num 363} true;
  call {:sourceloc_num 364} $bugle_barrier(1bv1, 1bv1);
  v197 := 0bv32 == local_id_x;
  goto $truebb64, $falsebb64;
$if.then.111:
  assert {:block_sourceloc} {:sourceloc_num 365} true;
  assert {:sourceloc} {:sourceloc_num 366} true;
  v198 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[0bv32];
  assert {:sourceloc} {:sourceloc_num 367} true;
  v199 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD(1bv32, BV32_SUB(v198, 1bv32))];
  assert {:sourceloc} {:sourceloc_num 368} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult[0bv32] := BV16_ZEXT32(v199);
  assert {:sourceloc} {:sourceloc_num 369} true;
  v200 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[0bv32];
  assert {:sourceloc} {:sourceloc_num 370} true;
  v201 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[BV32_ADD(1bv32, BV32_SUB(v200, 1bv32))];
  assert {:sourceloc} {:sourceloc_num 371} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda[0bv32] := BV16_ZEXT32(v201);
  assert {:sourceloc} {:sourceloc_num 372} true;
  v202 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[0bv32];
  assert {:sourceloc} {:sourceloc_num 373} true;
  v203 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[BV32_ADD(1bv32, BV32_SUB(v202, 1bv32))];
  assert {:sourceloc} {:sourceloc_num 374} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult[0bv32] := BV16_ZEXT32(v203);
  assert {:sourceloc} {:sourceloc_num 375} true;
  v204 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda[0bv32];
  assert {:sourceloc} {:sourceloc_num 376} true;
  $$g_num_one[0bv32] := v204;
  assert {:sourceloc} {:sourceloc_num 377} true;
  v205 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult[0bv32];
  assert {:sourceloc} {:sourceloc_num 378} true;
  $$g_num_blocks_mult[0bv32] := v205;
  goto $if.end.121;
$if.end.121:
  assert {:block_sourceloc} {:sourceloc_num 379} true;
  call {:sourceloc_num 380} $bugle_barrier(1bv1, 1bv1);
  assert {:sourceloc} {:sourceloc_num 381} true;
  v206 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[0bv32];
  assert {:sourceloc} {:sourceloc_num 382} true;
  v207 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[local_id_x];
  assert {:sourceloc} {:sourceloc_num 383} true;
  v208 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[local_id_x];
  v209 := BV32_ULT(v108, v206);
  goto $truebb65, $falsebb65;
$if.then.i.340:
  assert {:block_sourceloc} {:sourceloc_num 384} true;
  assert {:sourceloc} {:sourceloc_num 385} true;
  v210 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[v108];
  assert {:sourceloc} {:sourceloc_num 386} true;
  v211 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[v108];
  $left_2.0, $right_2.0 := v210, v211;
  goto $if.end.i.342;
$if.end.i.342:
  assert {:block_sourceloc} {:sourceloc_num 387} true;
  call {:sourceloc_num 388} $bugle_barrier(1bv1, 1bv1);
  v212 := 1bv32 == v117;
  goto $truebb66, $falsebb66;
$cond.true.i.345:
  assert {:block_sourceloc} {:sourceloc_num 389} true;
  assert {:sourceloc} {:sourceloc_num 390} true;
  v213 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[local_id_x];
  $cond.i.350 := BV16_ZEXT32(v213);
  goto $cond.end.i.352;
$cond.false.i.349:
  assert {:block_sourceloc} {:sourceloc_num 391} true;
  assert {:sourceloc} {:sourceloc_num 392} true;
  v214 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[local_id_x];
  assert {:sourceloc} {:sourceloc_num 393} true;
  v215 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda[0bv32];
  $cond.i.350 := BV32_ADD(BV16_ZEXT32(v214), v215);
  goto $cond.end.i.352;
$cond.end.i.352:
  assert {:block_sourceloc} {:sourceloc_num 394} true;
  v216 := 0bv32 != $c_block_iend.0;
  goto $truebb67, $falsebb67;
$if.then.9.i.353:
  assert {:block_sourceloc} {:sourceloc_num 395} true;
  assert {:sourceloc} {:sourceloc_num 396} true;
  v217 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[local_id_x];
  $ptr_blocking_w.i.0 := BV16_ZEXT32(v217);
  goto $if.end.12.i;
$if.end.12.i:
  assert {:block_sourceloc} {:sourceloc_num 397} true;
  v218 := BV32_ULT(v108, v206);
  goto $truebb68, $falsebb68;
$if.then.14.i:
  assert {:block_sourceloc} {:sourceloc_num 398} true;
  v219 := 1bv32 == $is_one_lambda_2.0;
  goto $truebb69, $falsebb69;
$cond.true.16.i:
  assert {:block_sourceloc} {:sourceloc_num 399} true;
  assert {:sourceloc} {:sourceloc_num 400} true;
  v220 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[v108];
  $cond24.i := BV16_ZEXT32(v220);
  goto $cond.end.23.i;
$cond.false.19.i:
  assert {:block_sourceloc} {:sourceloc_num 401} true;
  assert {:sourceloc} {:sourceloc_num 402} true;
  v221 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[v108];
  assert {:sourceloc} {:sourceloc_num 403} true;
  v222 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda[0bv32];
  $cond24.i := BV32_ADD(BV16_ZEXT32(v221), v222);
  goto $cond.end.23.i;
$cond.end.23.i:
  assert {:block_sourceloc} {:sourceloc_num 404} true;
  v223 := 0bv32 != $c_block_iend_2.0;
  goto $truebb70, $falsebb70;
$if.then.26.i:
  assert {:block_sourceloc} {:sourceloc_num 405} true;
  assert {:sourceloc} {:sourceloc_num 406} true;
  v224 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[v108];
  $ptr_blocking_w_2.i.0 := BV16_ZEXT32(v224);
  goto $if.end.29.i;
$if.end.29.i:
  assert {:block_sourceloc} {:sourceloc_num 407} true;
  $ptr_w_2.i.0, $ptr_blocking_w_2.i.1 := $cond24.i, $ptr_blocking_w_2.i.0;
  goto $if.end.30.i;
$if.end.30.i:
  assert {:block_sourceloc} {:sourceloc_num 408} true;
  call {:sourceloc_num 409} $bugle_barrier(1bv1, 1bv1);
  assert {:sourceloc} {:sourceloc_num 410} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[$cond.i.350] := v207;
  assert {:sourceloc} {:sourceloc_num 411} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[$cond.i.350] := v208;
  assert {:sourceloc} {:sourceloc_num 412} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[$cond.i.350] := v109;
  assert {:sourceloc} {:sourceloc_num 413} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[$cond.i.350] := v110;
  v225 := 0bv32 != $c_block_iend.0;
  goto $truebb71, $falsebb71;
$if.then.38.i:
  assert {:block_sourceloc} {:sourceloc_num 414} true;
  assert {:sourceloc} {:sourceloc_num 415} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD($ptr_blocking_w.i.0, 1bv32)] := BV32_SUB($c_block_iend.0, 1bv32)[16:0];
  assert {:sourceloc} {:sourceloc_num 416} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[BV32_ADD($ptr_blocking_w.i.0, 1bv32)] := $c_sum_block.0[16:0];
  goto $if.end.45.i;
$if.end.45.i:
  assert {:block_sourceloc} {:sourceloc_num 417} true;
  v226 := BV32_ULT(v108, v206);
  goto $truebb72, $falsebb72;
$if.then.47.i:
  assert {:block_sourceloc} {:sourceloc_num 418} true;
  assert {:sourceloc} {:sourceloc_num 419} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[$ptr_w_2.i.0] := $left_2.0;
  assert {:sourceloc} {:sourceloc_num 420} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[$ptr_w_2.i.0] := $right_2.0;
  assert {:sourceloc} {:sourceloc_num 421} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[$ptr_w_2.i.0] := $left_count_2.0[16:0];
  assert {:sourceloc} {:sourceloc_num 422} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[$ptr_w_2.i.0] := $right_count_2.0[16:0];
  v227 := 0bv32 != $c_block_iend_2.0;
  goto $truebb73, $falsebb73;
$if.then.55.i:
  assert {:block_sourceloc} {:sourceloc_num 423} true;
  assert {:sourceloc} {:sourceloc_num 424} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[BV32_ADD($ptr_blocking_w_2.i.1, 1bv32)] := BV32_SUB($c_block_iend_2.0, 1bv32)[16:0];
  assert {:sourceloc} {:sourceloc_num 425} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[BV32_ADD($ptr_blocking_w_2.i.1, 1bv32)] := $c_sum_block_2.0[16:0];
  goto $if.end.63.i;
$if.end.63.i:
  assert {:block_sourceloc} {:sourceloc_num 426} true;
  goto $_ZL19compactStreamsFinaljjjRjPfS0_PtS1_S1_S1_S1_S1_jjRfS2_S2_S2_S_S_S_S_jjjj.exit;
$_ZL19compactStreamsFinaljjjRjPfS0_PtS1_S1_S1_S1_S1_jjRfS2_S2_S2_S_S_S_S_jjjj.exit:
  assert {:block_sourceloc} {:sourceloc_num 427} true;
  call {:sourceloc_num 428} $bugle_barrier(1bv1, 1bv1);
  v228 := 0bv32 == local_id_x;
  goto $truebb74, $falsebb74;
$if.then.125:
  assert {:block_sourceloc} {:sourceloc_num 429} true;
  assert {:sourceloc} {:sourceloc_num 430} true;
  v229 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E8num_mult[0bv32];
  assert {:sourceloc} {:sourceloc_num 431} true;
  v230 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult[0bv32];
  assert {:sourceloc} {:sourceloc_num 432} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[v230] := v229[16:0];
  assert {:sourceloc} {:sourceloc_num 433} true;
  $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[0bv32] := 0bv16;
  goto $if.end.128;
$if.end.128:
  assert {:block_sourceloc} {:sourceloc_num 434} true;
  call {:sourceloc_num 435} $bugle_barrier(1bv1, 1bv1);
  assert {:sourceloc} {:sourceloc_num 436} true;
  v231 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18num_threads_active[0bv32];
  assert {:sourceloc} {:sourceloc_num 437} true;
  v232 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E15num_blocks_mult[0bv32];
  assert {:sourceloc} {:sourceloc_num 438} true;
  v233 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E18offset_mult_lambda[0bv32];
  v234 := BV32_ULT(local_id_x, v233);
  goto $truebb75, $falsebb75;
$if.then.i.384:
  assert {:block_sourceloc} {:sourceloc_num 439} true;
  assert {:sourceloc} {:sourceloc_num 440} true;
  v235 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[local_id_x];
  assert {:sourceloc} {:sourceloc_num 441} true;
  $$g_left_one[local_id_x] := v235;
  assert {:sourceloc} {:sourceloc_num 442} true;
  v236 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[local_id_x];
  assert {:sourceloc} {:sourceloc_num 443} true;
  $$g_right_one[local_id_x] := v236;
  assert {:sourceloc} {:sourceloc_num 444} true;
  v237 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[local_id_x];
  assert {:sourceloc} {:sourceloc_num 445} true;
  $$g_pos_one[local_id_x] := BV16_ZEXT32(v237);
  goto $if.end.i.395;
$if.else.i.393:
  assert {:block_sourceloc} {:sourceloc_num 446} true;
  assert {:sourceloc} {:sourceloc_num 447} true;
  v238 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[local_id_x];
  assert {:sourceloc} {:sourceloc_num 448} true;
  $$g_left_mult[BV32_SUB(local_id_x, v233)] := v238;
  assert {:sourceloc} {:sourceloc_num 449} true;
  v239 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[local_id_x];
  assert {:sourceloc} {:sourceloc_num 450} true;
  $$g_right_mult[BV32_SUB(local_id_x, v233)] := v239;
  assert {:sourceloc} {:sourceloc_num 451} true;
  v240 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[local_id_x];
  assert {:sourceloc} {:sourceloc_num 452} true;
  $$g_left_count_mult[BV32_SUB(local_id_x, v233)] := BV16_ZEXT32(v240);
  assert {:sourceloc} {:sourceloc_num 453} true;
  v241 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[local_id_x];
  assert {:sourceloc} {:sourceloc_num 454} true;
  $$g_right_count_mult[BV32_SUB(local_id_x, v233)] := BV16_ZEXT32(v241);
  goto $if.end.i.395;
$if.end.i.395:
  assert {:block_sourceloc} {:sourceloc_num 455} true;
  v242 := BV32_ULT(v108, v231);
  goto $truebb76, $falsebb76;
$if.then.20.i.396:
  assert {:block_sourceloc} {:sourceloc_num 456} true;
  v243 := BV32_ULT(v108, v233);
  goto $truebb77, $falsebb77;
$if.then.22.i:
  assert {:block_sourceloc} {:sourceloc_num 457} true;
  assert {:sourceloc} {:sourceloc_num 458} true;
  v244 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[v108];
  assert {:sourceloc} {:sourceloc_num 459} true;
  $$g_left_one[v108] := v244;
  assert {:sourceloc} {:sourceloc_num 460} true;
  v245 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[v108];
  assert {:sourceloc} {:sourceloc_num 461} true;
  $$g_right_one[v108] := v245;
  assert {:sourceloc} {:sourceloc_num 462} true;
  v246 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[v108];
  assert {:sourceloc} {:sourceloc_num 463} true;
  $$g_pos_one[v108] := BV16_ZEXT32(v246);
  goto $if.end.45.i.411;
$if.else.30.i:
  assert {:block_sourceloc} {:sourceloc_num 464} true;
  assert {:sourceloc} {:sourceloc_num 465} true;
  v247 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E6s_left[v108];
  assert {:sourceloc} {:sourceloc_num 466} true;
  $$g_left_mult[BV32_SUB(v108, v233)] := v247;
  assert {:sourceloc} {:sourceloc_num 467} true;
  v248 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E7s_right[v108];
  assert {:sourceloc} {:sourceloc_num 468} true;
  $$g_right_mult[BV32_SUB(v108, v233)] := v248;
  assert {:sourceloc} {:sourceloc_num 469} true;
  v249 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E12s_left_count[v108];
  assert {:sourceloc} {:sourceloc_num 470} true;
  $$g_left_count_mult[BV32_SUB(v108, v233)] := BV16_ZEXT32(v249);
  assert {:sourceloc} {:sourceloc_num 471} true;
  v250 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E13s_right_count[v108];
  assert {:sourceloc} {:sourceloc_num 472} true;
  $$g_right_count_mult[BV32_SUB(v108, v233)] := BV16_ZEXT32(v250);
  goto $if.end.45.i.411;
$if.end.45.i.411:
  assert {:block_sourceloc} {:sourceloc_num 473} true;
  goto $if.end.46.i;
$if.end.46.i:
  assert {:block_sourceloc} {:sourceloc_num 474} true;
  v251 := BV32_ULE(local_id_x, v232);
  goto $truebb78, $falsebb78;
$if.then.48.i.418:
  assert {:block_sourceloc} {:sourceloc_num 475} true;
  assert {:sourceloc} {:sourceloc_num 476} true;
  v252 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[local_id_x];
  assert {:sourceloc} {:sourceloc_num 477} true;
  $$g_blocks_mult[local_id_x] := BV16_ZEXT32(v252);
  assert {:sourceloc} {:sourceloc_num 478} true;
  v253 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[local_id_x];
  assert {:sourceloc} {:sourceloc_num 479} true;
  $$g_blocks_mult_sum[local_id_x] := BV16_ZEXT32(v253);
  goto $if.end.55.i;
$if.end.55.i:
  assert {:block_sourceloc} {:sourceloc_num 480} true;
  v254 := BV32_ULE(v108, v232);
  goto $truebb79, $falsebb79;
$if.then.57.i:
  assert {:block_sourceloc} {:sourceloc_num 481} true;
  assert {:sourceloc} {:sourceloc_num 482} true;
  v255 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E17s_compaction_list[v108];
  assert {:sourceloc} {:sourceloc_num 483} true;
  $$g_blocks_mult[v108] := BV16_ZEXT32(v255);
  assert {:sourceloc} {:sourceloc_num 484} true;
  v256 := $$_ZZ17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_E11s_cl_helper[v108];
  assert {:sourceloc} {:sourceloc_num 485} true;
  $$g_blocks_mult_sum[v108] := BV16_ZEXT32(v256);
  goto $_ZL11writeToGmemjjjjPfS_PjS_S_S0_S0_S_S_PtS1_S0_S0_S1_S1_j.exit;
$_ZL11writeToGmemjjjjPfS_PjS_S_S0_S0_S_S_PtS1_S0_S0_S1_S1_j.exit:
  assert {:block_sourceloc} {:sourceloc_num 486} true;
  return;
$truebb:
  assume {:partition} v0;
  assert {:block_sourceloc} {:sourceloc_num 487} true;
  goto $if.then;
$falsebb:
  assume {:partition} !v0;
  assert {:block_sourceloc} {:sourceloc_num 488} true;
  goto $if.end;
$truebb0:
  assume {:partition} v2;
  assert {:block_sourceloc} {:sourceloc_num 489} true;
  goto $if.then.i;
$falsebb0:
  assume {:partition} !v2;
  assert {:block_sourceloc} {:sourceloc_num 490} true;
  $mid.2, $right_count.1, $left_count.1, $right.1, $left.1 := $mid.0, $right_count.0, $left_count.0, $right.0, $left.0;
  goto $_ZL23subdivideActiveIntervalItEvjPfS0_PT_S2_jRfS3_RjS4_S3_S4_.exit;
$truebb1:
  assume {:partition} v9;
  assert {:block_sourceloc} {:sourceloc_num 491} true;
  goto $if.then.6.i;
$falsebb1:
  assume {:partition} !v9;
  assert {:block_sourceloc} {:sourceloc_num 492} true;
  goto $if.else.i;
$truebb2:
  assume {:partition} v12;
  assert {:block_sourceloc} {:sourceloc_num 493} true;
  goto $if.then.i.i;
$falsebb2:
  assume {:partition} !v12;
  assert {:block_sourceloc} {:sourceloc_num 494} true;
  goto $if.else.i.i;
$truebb3:
  assume {:partition} v13;
  assert {:block_sourceloc} {:sourceloc_num 495} true;
  goto $if.then.8.i;
$falsebb3:
  assume {:partition} !v13;
  assert {:block_sourceloc} {:sourceloc_num 496} true;
  goto $if.end.i;
$truebb4:
  assume {:partition} v15;
  assert {:block_sourceloc} {:sourceloc_num 497} true;
  goto $if.then.7;
$falsebb4:
  assume {:partition} !v15;
  assert {:block_sourceloc} {:sourceloc_num 498} true;
  goto $if.end.8;
$truebb5:
  assume {:partition} v17;
  assert {:block_sourceloc} {:sourceloc_num 499} true;
  goto $for.body.i;
$falsebb5:
  assume {:partition} !v17;
  assert {:block_sourceloc} {:sourceloc_num 500} true;
  goto $_ZL31computeNumSmallerEigenvalsLargePfS_jfjjS_S_j.exit;
$truebb6:
  assume {:partition} v18;
  assert {:block_sourceloc} {:sourceloc_num 501} true;
  goto $if.then.i.132;
$falsebb6:
  assume {:partition} !v18;
  assert {:block_sourceloc} {:sourceloc_num 502} true;
  goto $if.end.i.134;
$truebb7:
  assume {:partition} v21;
  assert {:block_sourceloc} {:sourceloc_num 503} true;
  goto $if.then.8.i.135;
$falsebb7:
  assume {:partition} !v21;
  assert {:block_sourceloc} {:sourceloc_num 504} true;
  $delta.i.2, $count.i.2 := $delta.i.0, $count.i.0;
  goto $if.end.20.i;
$truebb8:
  assume {:partition} v22;
  assert {:block_sourceloc} {:sourceloc_num 505} true;
  goto $cond.true.i;
$falsebb8:
  assume {:partition} !v22;
  assert {:block_sourceloc} {:sourceloc_num 506} true;
  goto $cond.false.i;
$truebb9:
  assume {:partition} v23;
  assert {:block_sourceloc} {:sourceloc_num 507} true;
  goto $for.body.12.i;
$falsebb9:
  assume {:partition} !v23;
  assert {:block_sourceloc} {:sourceloc_num 508} true;
  goto $for.end.i;
$truebb10:
  assume {:partition} v29;
  assert {:block_sourceloc} {:sourceloc_num 509} true;
  goto $if.then.12;
$falsebb10:
  assume {:partition} !v29;
  assert {:block_sourceloc} {:sourceloc_num 510} true;
  $is_active_second.3 := $is_active_second.0;
  goto $if.end.25;
$truebb11:
  assume {:partition} v30;
  assert {:block_sourceloc} {:sourceloc_num 511} true;
  goto $if.then.14;
$falsebb11:
  assume {:partition} !v30;
  assert {:block_sourceloc} {:sourceloc_num 512} true;
  goto $if.else;
$truebb12:
  assume {:partition} v35;
  assert {:block_sourceloc} {:sourceloc_num 513} true;
  goto $land.lhs.true.i;
$falsebb12:
  assume {:partition} !v35;
  assert {:block_sourceloc} {:sourceloc_num 514} true;
  goto $if.else.i.159;
$truebb13:
  assume {:partition} v36;
  assert {:block_sourceloc} {:sourceloc_num 515} true;
  goto $if.then.i.154;
$falsebb13:
  assume {:partition} !v36;
  assert {:block_sourceloc} {:sourceloc_num 516} true;
  goto $if.else.i.159;
$truebb14:
  assume {:partition} v40;
  assert {:block_sourceloc} {:sourceloc_num 517} true;
  goto $cond.true.i.i;
$falsebb14:
  assume {:partition} !v40;
  assert {:block_sourceloc} {:sourceloc_num 518} true;
  goto $cond.false.i.i;
$truebb15:
  assume {:partition} v45;
  assert {:block_sourceloc} {:sourceloc_num 519} true;
  goto $cond.true.8.i.i;
$falsebb15:
  assume {:partition} !v45;
  assert {:block_sourceloc} {:sourceloc_num 520} true;
  goto $cond.false.10.i.i;
$truebb16:
  assume {:partition} v46;
  assert {:block_sourceloc} {:sourceloc_num 521} true;
  goto $if.then.i.i.156;
$falsebb16:
  assume {:partition} !v46;
  assert {:block_sourceloc} {:sourceloc_num 522} true;
  goto $if.else.i.i.157;
$truebb17:
  assume {:partition} v49;
  assert {:block_sourceloc} {:sourceloc_num 523} true;
  goto $if.then.i.i.i;
$falsebb17:
  assume {:partition} !v49;
  assert {:block_sourceloc} {:sourceloc_num 524} true;
  goto $if.else.i.i.i;
$truebb18:
  assume {:partition} v50;
  assert {:block_sourceloc} {:sourceloc_num 525} true;
  goto $if.then.9.i;
$falsebb18:
  assume {:partition} !v50;
  assert {:block_sourceloc} {:sourceloc_num 526} true;
  goto $if.else.10.i;
$truebb19:
  assume {:partition} v54;
  assert {:block_sourceloc} {:sourceloc_num 527} true;
  goto $cond.true.i.36.i;
$falsebb19:
  assume {:partition} !v54;
  assert {:block_sourceloc} {:sourceloc_num 528} true;
  goto $cond.false.i.38.i;
$truebb20:
  assume {:partition} v59;
  assert {:block_sourceloc} {:sourceloc_num 529} true;
  goto $cond.true.8.i.46.i;
$falsebb20:
  assume {:partition} !v59;
  assert {:block_sourceloc} {:sourceloc_num 530} true;
  goto $cond.false.10.i.47.i;
$truebb21:
  assume {:partition} v60;
  assert {:block_sourceloc} {:sourceloc_num 531} true;
  goto $if.then.i.54.i;
$falsebb21:
  assume {:partition} !v60;
  assert {:block_sourceloc} {:sourceloc_num 532} true;
  goto $if.else.i.67.i;
$truebb22:
  assume {:partition} v63;
  assert {:block_sourceloc} {:sourceloc_num 533} true;
  goto $if.then.i.i.58.i;
$falsebb22:
  assume {:partition} !v63;
  assert {:block_sourceloc} {:sourceloc_num 534} true;
  goto $if.else.i.i.61.i;
$truebb23:
  assume {:partition} v67;
  assert {:block_sourceloc} {:sourceloc_num 535} true;
  goto $cond.true.i.93.i;
$falsebb23:
  assume {:partition} !v67;
  assert {:block_sourceloc} {:sourceloc_num 536} true;
  goto $cond.false.i.95.i;
$truebb24:
  assume {:partition} v72;
  assert {:block_sourceloc} {:sourceloc_num 537} true;
  goto $cond.true.8.i.103.i;
$falsebb24:
  assume {:partition} !v72;
  assert {:block_sourceloc} {:sourceloc_num 538} true;
  goto $cond.false.10.i.104.i;
$truebb25:
  assume {:partition} v73;
  assert {:block_sourceloc} {:sourceloc_num 539} true;
  goto $if.then.i.111.i;
$falsebb25:
  assume {:partition} !v73;
  assert {:block_sourceloc} {:sourceloc_num 540} true;
  goto $if.else.i.124.i;
$truebb26:
  assume {:partition} v76;
  assert {:block_sourceloc} {:sourceloc_num 541} true;
  goto $if.then.i.i.115.i;
$falsebb26:
  assume {:partition} !v76;
  assert {:block_sourceloc} {:sourceloc_num 542} true;
  goto $if.else.i.i.118.i;
$truebb27:
  assume {:partition} v78;
  assert {:block_sourceloc} {:sourceloc_num 543} true;
  goto $if.then.27;
$falsebb27:
  assume {:partition} !v78;
  assert {:block_sourceloc} {:sourceloc_num 544} true;
  goto $if.end.28;
$truebb28:
  assume {:partition} v80;
  assert {:block_sourceloc} {:sourceloc_num 545} true;
  goto $for.body.i.164;
$falsebb28:
  assume {:partition} !v80;
  assert {:block_sourceloc} {:sourceloc_num 546} true;
  goto $for.end.i.172;
$truebb29:
  assume {:partition} v81;
  assert {:block_sourceloc} {:sourceloc_num 547} true;
  goto $if.then.i.170;
$falsebb29:
  assume {:partition} !v81;
  assert {:block_sourceloc} {:sourceloc_num 548} true;
  goto $if.end.i.171;
$truebb30:
  assume {:partition} v85;
  assert {:block_sourceloc} {:sourceloc_num 549} true;
  goto $for.body.16.i;
$falsebb30:
  assume {:partition} !v85;
  assert {:block_sourceloc} {:sourceloc_num 550} true;
  goto $_ZL23createIndicesCompactionItEvPT_j.exit;
$truebb31:
  assume {:partition} v87;
  assert {:block_sourceloc} {:sourceloc_num 551} true;
  goto $if.then.20.i;
$falsebb31:
  assume {:partition} !v87;
  assert {:block_sourceloc} {:sourceloc_num 552} true;
  goto $if.end.35.i;
$truebb32:
  assume {:partition} v93;
  assert {:block_sourceloc} {:sourceloc_num 553} true;
  goto $land.lhs.true.i.187;
$falsebb32:
  assume {:partition} !v93;
  assert {:block_sourceloc} {:sourceloc_num 554} true;
  goto $_ZL16compactIntervalsItEvPfS0_PT_S2_ffjjS2_jj.exit;
$truebb33:
  assume {:partition} v94;
  assert {:block_sourceloc} {:sourceloc_num 555} true;
  goto $if.then.i.197;
$falsebb33:
  assume {:partition} !v94;
  assert {:block_sourceloc} {:sourceloc_num 556} true;
  goto $_ZL16compactIntervalsItEvPfS0_PT_S2_ffjjS2_jj.exit;
$truebb34:
  assume {:partition} v97;
  assert {:block_sourceloc} {:sourceloc_num 557} true;
  goto $if.then.30;
$falsebb34:
  assume {:partition} !v97;
  assert {:block_sourceloc} {:sourceloc_num 558} true;
  goto $if.end.34;
$truebb35:
  assume {:partition} v102;
  assert {:block_sourceloc} {:sourceloc_num 559} true;
  goto $if.then.i.202;
$falsebb35:
  assume {:partition} !v102;
  assert {:block_sourceloc} {:sourceloc_num 560} true;
  goto $if.end.i.208;
$truebb36:
  assume {:partition} v107;
  assert {:block_sourceloc} {:sourceloc_num 561} true;
  goto $if.then.36;
$falsebb36:
  assume {:partition} !v107;
  assert {:block_sourceloc} {:sourceloc_num 562} true;
  goto $if.end.37;
$truebb37:
  assume {:partition} v112;
  assert {:block_sourceloc} {:sourceloc_num 563} true;
  goto $if.then.44;
$falsebb37:
  assume {:partition} !v112;
  assert {:block_sourceloc} {:sourceloc_num 564} true;
  havoc v257;
  havoc v258;
  $right_count_2.0, $left_count_2.0 := v257, v258;
  goto $if.end.49;
$truebb38:
  assume {:partition} v115;
  assert {:block_sourceloc} {:sourceloc_num 565} true;
  goto $if.then.51;
$falsebb38:
  assume {:partition} !v115;
  assert {:block_sourceloc} {:sourceloc_num 566} true;
  goto $if.end.52;
$truebb39:
  assume {:partition} v118;
  assert {:block_sourceloc} {:sourceloc_num 567} true;
  goto $cond.true;
$falsebb39:
  assume {:partition} !v118;
  assert {:block_sourceloc} {:sourceloc_num 568} true;
  goto $cond.false;
$truebb40:
  assume {:partition} v120;
  assert {:block_sourceloc} {:sourceloc_num 569} true;
  goto $if.then.64;
$falsebb40:
  assume {:partition} !v120;
  assert {:block_sourceloc} {:sourceloc_num 570} true;
  goto $if.else.83;
$truebb41:
  assume {:partition} v123;
  assert {:block_sourceloc} {:sourceloc_num 571} true;
  goto $cond.true.76;
$falsebb41:
  assume {:partition} !v123;
  assert {:block_sourceloc} {:sourceloc_num 572} true;
  goto $cond.false.77;
$truebb42:
  assume {:partition} v124;
  assert {:block_sourceloc} {:sourceloc_num 573} true;
  goto $if.then.85;
$falsebb42:
  assume {:partition} !v124;
  assert {:block_sourceloc} {:sourceloc_num 574} true;
  goto $if.end.88;
$truebb43:
  assume {:partition} v127;
  assert {:block_sourceloc} {:sourceloc_num 575} true;
  goto $for.body.i.220;
$falsebb43:
  assume {:partition} !v127;
  assert {:block_sourceloc} {:sourceloc_num 576} true;
  goto $for.end.i.242;
$truebb44:
  assume {:partition} v128;
  assert {:block_sourceloc} {:sourceloc_num 577} true;
  goto $if.then.i.237;
$falsebb44:
  assume {:partition} !v128;
  assert {:block_sourceloc} {:sourceloc_num 578} true;
  goto $if.end.60.i;
$truebb45:
  assume {:partition} v136;
  assert {:block_sourceloc} {:sourceloc_num 579} true;
  goto $if.then.27.i;
$falsebb45:
  assume {:partition} !v136;
  assert {:block_sourceloc} {:sourceloc_num 580} true;
  goto $lor.lhs.false.i;
$truebb46:
  assume {:partition} v138;
  assert {:block_sourceloc} {:sourceloc_num 581} true;
  goto $if.then.27.i;
$falsebb46:
  assume {:partition} !v138;
  assert {:block_sourceloc} {:sourceloc_num 582} true;
  goto $if.end.59.i;
$truebb47:
  assume {:partition} v140;
  assert {:block_sourceloc} {:sourceloc_num 583} true;
  goto $if.then.32.i;
$falsebb47:
  assume {:partition} !v140;
  assert {:block_sourceloc} {:sourceloc_num 584} true;
  goto $if.else.i.239;
$truebb48:
  assume {:partition} v142;
  assert {:block_sourceloc} {:sourceloc_num 585} true;
  goto $if.then.37.i;
$falsebb48:
  assume {:partition} !v142;
  assert {:block_sourceloc} {:sourceloc_num 586} true;
  goto $if.else.40.i;
$truebb49:
  assume {:partition} v146;
  assert {:block_sourceloc} {:sourceloc_num 587} true;
  goto $if.then.48.i;
$falsebb49:
  assume {:partition} !v146;
  assert {:block_sourceloc} {:sourceloc_num 588} true;
  goto $if.else.52.i;
$truebb50:
  assume {:partition} v147;
  assert {:block_sourceloc} {:sourceloc_num 589} true;
  goto $for.body.65.i;
$falsebb50:
  assume {:partition} !v147;
  assert {:block_sourceloc} {:sourceloc_num 590} true;
  goto $_ZL11scanInitialjjjjPtS_S_S_.exit;
$truebb51:
  assume {:partition} v149;
  assert {:block_sourceloc} {:sourceloc_num 591} true;
  goto $if.then.69.i;
$falsebb51:
  assume {:partition} !v149;
  assert {:block_sourceloc} {:sourceloc_num 592} true;
  goto $if.end.91.i;
$truebb52:
  assume {:partition} v158;
  assert {:block_sourceloc} {:sourceloc_num 593} true;
  goto $for.body.i.258;
$falsebb52:
  assume {:partition} !v158;
  assert {:block_sourceloc} {:sourceloc_num 594} true;
  goto $for.end.i.276;
$truebb53:
  assume {:partition} v159;
  assert {:block_sourceloc} {:sourceloc_num 595} true;
  goto $if.then.i.273;
$falsebb53:
  assume {:partition} !v159;
  assert {:block_sourceloc} {:sourceloc_num 596} true;
  goto $if.end.i.274;
$truebb54:
  assume {:partition} v163;
  assert {:block_sourceloc} {:sourceloc_num 597} true;
  goto $for.body.17.i;
$falsebb54:
  assume {:partition} !v163;
  assert {:block_sourceloc} {:sourceloc_num 598} true;
  goto $for.end.37.i;
$truebb55:
  assume {:partition} v165;
  assert {:block_sourceloc} {:sourceloc_num 599} true;
  goto $if.then.21.i;
$falsebb55:
  assume {:partition} !v165;
  assert {:block_sourceloc} {:sourceloc_num 600} true;
  goto $if.end.35.i.281;
$truebb56:
  assume {:partition} v170;
  assert {:block_sourceloc} {:sourceloc_num 601} true;
  goto $if.then.39.i;
$falsebb56:
  assume {:partition} !v170;
  assert {:block_sourceloc} {:sourceloc_num 602} true;
  goto $_ZL13scanSumBlocksjjjjPtS_.exit;
$truebb57:
  assume {:partition} v174;
  assert {:block_sourceloc} {:sourceloc_num 603} true;
  goto $if.then.93;
$falsebb57:
  assume {:partition} !v174;
  assert {:block_sourceloc} {:sourceloc_num 604} true;
  $c_block_iend.0, $c_sum_block.0 := 0bv32, 0bv32;
  goto $if.end.99;
$truebb58:
  assume {:partition} v178;
  assert {:block_sourceloc} {:sourceloc_num 605} true;
  goto $if.then.103;
$falsebb58:
  assume {:partition} !v178;
  assert {:block_sourceloc} {:sourceloc_num 606} true;
  $c_block_iend_2.0, $c_sum_block_2.0 := 0bv32, 0bv32;
  goto $if.end.109;
$truebb59:
  assume {:partition} v183;
  assert {:block_sourceloc} {:sourceloc_num 607} true;
  goto $if.then.i.298;
$falsebb59:
  assume {:partition} !v183;
  assert {:block_sourceloc} {:sourceloc_num 608} true;
  goto $if.end.i.300;
$truebb60:
  assume {:partition} v185;
  assert {:block_sourceloc} {:sourceloc_num 609} true;
  goto $for.body.i.304;
$falsebb60:
  assume {:partition} !v185;
  assert {:block_sourceloc} {:sourceloc_num 610} true;
  goto $for.end.i.315;
$truebb61:
  assume {:partition} v186;
  assert {:block_sourceloc} {:sourceloc_num 611} true;
  goto $if.then.6.i.313;
$falsebb61:
  assume {:partition} !v186;
  assert {:block_sourceloc} {:sourceloc_num 612} true;
  goto $if.end.18.i;
$truebb62:
  assume {:partition} v190;
  assert {:block_sourceloc} {:sourceloc_num 613} true;
  goto $for.body.23.i;
$falsebb62:
  assume {:partition} !v190;
  assert {:block_sourceloc} {:sourceloc_num 614} true;
  goto $_ZL29scanCompactBlocksStartAddressjjjPtS_.exit;
$truebb63:
  assume {:partition} v192;
  assert {:block_sourceloc} {:sourceloc_num 615} true;
  goto $if.then.27.i.319;
$falsebb63:
  assume {:partition} !v192;
  assert {:block_sourceloc} {:sourceloc_num 616} true;
  goto $if.end.42.i;
$truebb64:
  assume {:partition} v197;
  assert {:block_sourceloc} {:sourceloc_num 617} true;
  goto $if.then.111;
$falsebb64:
  assume {:partition} !v197;
  assert {:block_sourceloc} {:sourceloc_num 618} true;
  goto $if.end.121;
$truebb65:
  assume {:partition} v209;
  assert {:block_sourceloc} {:sourceloc_num 619} true;
  goto $if.then.i.340;
$falsebb65:
  assume {:partition} !v209;
  assert {:block_sourceloc} {:sourceloc_num 620} true;
  havoc v259;
  havoc v260;
  $left_2.0, $right_2.0 := v259, v260;
  goto $if.end.i.342;
$truebb66:
  assume {:partition} v212;
  assert {:block_sourceloc} {:sourceloc_num 621} true;
  goto $cond.true.i.345;
$falsebb66:
  assume {:partition} !v212;
  assert {:block_sourceloc} {:sourceloc_num 622} true;
  goto $cond.false.i.349;
$truebb67:
  assume {:partition} v216;
  assert {:block_sourceloc} {:sourceloc_num 623} true;
  goto $if.then.9.i.353;
$falsebb67:
  assume {:partition} !v216;
  assert {:block_sourceloc} {:sourceloc_num 624} true;
  $ptr_blocking_w.i.0 := 0bv32;
  goto $if.end.12.i;
$truebb68:
  assume {:partition} v218;
  assert {:block_sourceloc} {:sourceloc_num 625} true;
  goto $if.then.14.i;
$falsebb68:
  assume {:partition} !v218;
  assert {:block_sourceloc} {:sourceloc_num 626} true;
  $ptr_w_2.i.0, $ptr_blocking_w_2.i.1 := 0bv32, 0bv32;
  goto $if.end.30.i;
$truebb69:
  assume {:partition} v219;
  assert {:block_sourceloc} {:sourceloc_num 627} true;
  goto $cond.true.16.i;
$falsebb69:
  assume {:partition} !v219;
  assert {:block_sourceloc} {:sourceloc_num 628} true;
  goto $cond.false.19.i;
$truebb70:
  assume {:partition} v223;
  assert {:block_sourceloc} {:sourceloc_num 629} true;
  goto $if.then.26.i;
$falsebb70:
  assume {:partition} !v223;
  assert {:block_sourceloc} {:sourceloc_num 630} true;
  $ptr_blocking_w_2.i.0 := 0bv32;
  goto $if.end.29.i;
$truebb71:
  assume {:partition} v225;
  assert {:block_sourceloc} {:sourceloc_num 631} true;
  goto $if.then.38.i;
$falsebb71:
  assume {:partition} !v225;
  assert {:block_sourceloc} {:sourceloc_num 632} true;
  goto $if.end.45.i;
$truebb72:
  assume {:partition} v226;
  assert {:block_sourceloc} {:sourceloc_num 633} true;
  goto $if.then.47.i;
$falsebb72:
  assume {:partition} !v226;
  assert {:block_sourceloc} {:sourceloc_num 634} true;
  goto $_ZL19compactStreamsFinaljjjRjPfS0_PtS1_S1_S1_S1_S1_jjRfS2_S2_S2_S_S_S_S_jjjj.exit;
$truebb73:
  assume {:partition} v227;
  assert {:block_sourceloc} {:sourceloc_num 635} true;
  goto $if.then.55.i;
$falsebb73:
  assume {:partition} !v227;
  assert {:block_sourceloc} {:sourceloc_num 636} true;
  goto $if.end.63.i;
$truebb74:
  assume {:partition} v228;
  assert {:block_sourceloc} {:sourceloc_num 637} true;
  goto $if.then.125;
$falsebb74:
  assume {:partition} !v228;
  assert {:block_sourceloc} {:sourceloc_num 638} true;
  goto $if.end.128;
$truebb75:
  assume {:partition} v234;
  assert {:block_sourceloc} {:sourceloc_num 639} true;
  goto $if.then.i.384;
$falsebb75:
  assume {:partition} !v234;
  assert {:block_sourceloc} {:sourceloc_num 640} true;
  goto $if.else.i.393;
$truebb76:
  assume {:partition} v242;
  assert {:block_sourceloc} {:sourceloc_num 641} true;
  goto $if.then.20.i.396;
$falsebb76:
  assume {:partition} !v242;
  assert {:block_sourceloc} {:sourceloc_num 642} true;
  goto $if.end.46.i;
$truebb77:
  assume {:partition} v243;
  assert {:block_sourceloc} {:sourceloc_num 643} true;
  goto $if.then.22.i;
$falsebb77:
  assume {:partition} !v243;
  assert {:block_sourceloc} {:sourceloc_num 644} true;
  goto $if.else.30.i;
$truebb78:
  assume {:partition} v251;
  assert {:block_sourceloc} {:sourceloc_num 645} true;
  goto $if.then.48.i.418;
$falsebb78:
  assume {:partition} !v251;
  assert {:block_sourceloc} {:sourceloc_num 646} true;
  goto $if.end.55.i;
$truebb79:
  assume {:partition} v254;
  assert {:block_sourceloc} {:sourceloc_num 647} true;
  goto $if.then.57.i;
$falsebb79:
  assume {:partition} !v254;
  assert {:block_sourceloc} {:sourceloc_num 648} true;
  goto $_ZL11writeToGmemjjjjPfS_PjS_S_S0_S0_S_S_PtS1_S0_S0_S1_S1_j.exit;
}
procedure {:source_name "bugle_barrier"} {:barrier} $bugle_barrier($0:bv1, $1:bv1);
procedure {:source_name "__bugle_frexp_exp"} $__bugle_frexp_exp($0:bv64) returns ($ret:bv32);
procedure {:source_name "__bugle_frexp_frac"} $__bugle_frexp_frac($0:bv64) returns ($ret:bv64);
procedure {:source_name "abs"} $abs($0:bv32) returns ($ret:bv32);
procedure {:source_name "_Z6sign_ff"} $_Z6sign_ff($0:bv32) returns ($ret:bv32);
axiom (if group_size_x == 256bv32 then 1bv1 else 0bv1) != 0bv1;
axiom (if group_size_y == 1bv32 then 1bv1 else 0bv1) != 0bv1;
axiom (if group_size_z == 1bv32 then 1bv1 else 0bv1) != 0bv1;
axiom (if num_groups_x == 1bv32 then 1bv1 else 0bv1) != 0bv1;
axiom (if num_groups_y == 1bv32 then 1bv1 else 0bv1) != 0bv1;
axiom (if num_groups_z == 1bv32 then 1bv1 else 0bv1) != 0bv1;
